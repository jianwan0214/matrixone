// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const S3OPTION = 57521
const SQL_SMALL_RESULT = 57522
const SQL_BIG_RESULT = 57523
const SQL_BUFFER_RESULT = 57524
const LOW_PRIORITY = 57525
const HIGH_PRIORITY = 57526
const DELAYED = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const RETURNS = 57534
const SCHEMA = 57535
const TABLE = 57536
const INDEX = 57537
const VIEW = 57538
const TO = 57539
const IGNORE = 57540
const IF = 57541
const PRIMARY = 57542
const COLUMN = 57543
const CONSTRAINT = 57544
const SPATIAL = 57545
const FULLTEXT = 57546
const FOREIGN = 57547
const KEY_BLOCK_SIZE = 57548
const SHOW = 57549
const DESCRIBE = 57550
const EXPLAIN = 57551
const DATE = 57552
const ESCAPE = 57553
const REPAIR = 57554
const OPTIMIZE = 57555
const TRUNCATE = 57556
const MAXVALUE = 57557
const PARTITION = 57558
const REORGANIZE = 57559
const LESS = 57560
const THAN = 57561
const PROCEDURE = 57562
const TRIGGER = 57563
const STATUS = 57564
const VARIABLES = 57565
const ROLE = 57566
const PROXY = 57567
const AVG_ROW_LENGTH = 57568
const STORAGE = 57569
const DISK = 57570
const MEMORY = 57571
const CHECKSUM = 57572
const COMPRESSION = 57573
const DATA = 57574
const DIRECTORY = 57575
const DELAY_KEY_WRITE = 57576
const ENCRYPTION = 57577
const ENGINE = 57578
const MAX_ROWS = 57579
const MIN_ROWS = 57580
const PACK_KEYS = 57581
const ROW_FORMAT = 57582
const STATS_AUTO_RECALC = 57583
const STATS_PERSISTENT = 57584
const STATS_SAMPLE_PAGES = 57585
const DYNAMIC = 57586
const COMPRESSED = 57587
const REDUNDANT = 57588
const COMPACT = 57589
const FIXED = 57590
const COLUMN_FORMAT = 57591
const AUTO_RANDOM = 57592
const RESTRICT = 57593
const CASCADE = 57594
const ACTION = 57595
const PARTIAL = 57596
const SIMPLE = 57597
const CHECK = 57598
const ENFORCED = 57599
const RANGE = 57600
const LIST = 57601
const ALGORITHM = 57602
const LINEAR = 57603
const PARTITIONS = 57604
const SUBPARTITION = 57605
const SUBPARTITIONS = 57606
const CLUSTER = 57607
const TYPE = 57608
const ANY = 57609
const SOME = 57610
const EXTERNAL = 57611
const LOCALFILE = 57612
const URL = 57613
const PREPARE = 57614
const DEALLOCATE = 57615
const RESET = 57616
const EXTENSION = 57617
const PROPERTIES = 57618
const PARSER = 57619
const VISIBLE = 57620
const INVISIBLE = 57621
const BTREE = 57622
const HASH = 57623
const RTREE = 57624
const BSI = 57625
const ZONEMAP = 57626
const LEADING = 57627
const BOTH = 57628
const TRAILING = 57629
const UNKNOWN = 57630
const EXPIRE = 57631
const ACCOUNT = 57632
const ACCOUNTS = 57633
const UNLOCK = 57634
const DAY = 57635
const NEVER = 57636
const PUMP = 57637
const SECOND = 57638
const ASCII = 57639
const COALESCE = 57640
const COLLATION = 57641
const HOUR = 57642
const MICROSECOND = 57643
const MINUTE = 57644
const MONTH = 57645
const QUARTER = 57646
const REPEAT = 57647
const REVERSE = 57648
const ROW_COUNT = 57649
const WEEK = 57650
const REVOKE = 57651
const FUNCTION = 57652
const PRIVILEGES = 57653
const TABLESPACE = 57654
const EXECUTE = 57655
const SUPER = 57656
const GRANT = 57657
const OPTION = 57658
const REFERENCES = 57659
const REPLICATION = 57660
const SLAVE = 57661
const CLIENT = 57662
const USAGE = 57663
const RELOAD = 57664
const FILE = 57665
const TEMPORARY = 57666
const ROUTINE = 57667
const EVENT = 57668
const SHUTDOWN = 57669
const NULLX = 57670
const AUTO_INCREMENT = 57671
const APPROXNUM = 57672
const SIGNED = 57673
const UNSIGNED = 57674
const ZEROFILL = 57675
const ENGINES = 57676
const LOW_CARDINALITY = 57677
const ADMIN_NAME = 57678
const RANDOM = 57679
const SUSPEND = 57680
const ATTRIBUTE = 57681
const HISTORY = 57682
const REUSE = 57683
const CURRENT = 57684
const OPTIONAL = 57685
const FAILED_LOGIN_ATTEMPTS = 57686
const PASSWORD_LOCK_TIME = 57687
const UNBOUNDED = 57688
const SECONDARY = 57689
const USER = 57690
const IDENTIFIED = 57691
const CIPHER = 57692
const ISSUER = 57693
const X509 = 57694
const SUBJECT = 57695
const SAN = 57696
const REQUIRE = 57697
const SSL = 57698
const NONE = 57699
const PASSWORD = 57700
const MAX_QUERIES_PER_HOUR = 57701
const MAX_UPDATES_PER_HOUR = 57702
const MAX_CONNECTIONS_PER_HOUR = 57703
const MAX_USER_CONNECTIONS = 57704
const FORMAT = 57705
const VERBOSE = 57706
const CONNECTION = 57707
const TRIGGERS = 57708
const PROFILES = 57709
const LOAD = 57710
const INFILE = 57711
const TERMINATED = 57712
const OPTIONALLY = 57713
const ENCLOSED = 57714
const ESCAPED = 57715
const STARTING = 57716
const LINES = 57717
const ROWS = 57718
const IMPORT = 57719
const MODUMP = 57720
const OVER = 57721
const PRECEDING = 57722
const FOLLOWING = 57723
const GROUPS = 57724
const DATABASES = 57725
const TABLES = 57726
const EXTENDED = 57727
const FULL = 57728
const PROCESSLIST = 57729
const FIELDS = 57730
const COLUMNS = 57731
const OPEN = 57732
const ERRORS = 57733
const WARNINGS = 57734
const INDEXES = 57735
const SCHEMAS = 57736
const NODE = 57737
const LOCKS = 57738
const TABLE_NUMBER = 57739
const TABLE_SIZE = 57740
const COLUMN_NUMBER = 57741
const TABLE_VALUES = 57742
const NAMES = 57743
const GLOBAL = 57744
const SESSION = 57745
const ISOLATION = 57746
const LEVEL = 57747
const READ = 57748
const WRITE = 57749
const ONLY = 57750
const REPEATABLE = 57751
const COMMITTED = 57752
const UNCOMMITTED = 57753
const SERIALIZABLE = 57754
const LOCAL = 57755
const EVENTS = 57756
const PLUGINS = 57757
const CURRENT_TIMESTAMP = 57758
const DATABASE = 57759
const CURRENT_TIME = 57760
const LOCALTIME = 57761
const LOCALTIMESTAMP = 57762
const UTC_DATE = 57763
const UTC_TIME = 57764
const UTC_TIMESTAMP = 57765
const REPLACE = 57766
const CONVERT = 57767
const SEPARATOR = 57768
const TIMESTAMPDIFF = 57769
const CURRENT_DATE = 57770
const CURRENT_USER = 57771
const CURRENT_ROLE = 57772
const SECOND_MICROSECOND = 57773
const MINUTE_MICROSECOND = 57774
const MINUTE_SECOND = 57775
const HOUR_MICROSECOND = 57776
const HOUR_SECOND = 57777
const HOUR_MINUTE = 57778
const DAY_MICROSECOND = 57779
const DAY_SECOND = 57780
const DAY_MINUTE = 57781
const DAY_HOUR = 57782
const YEAR_MONTH = 57783
const SQL_TSI_HOUR = 57784
const SQL_TSI_DAY = 57785
const SQL_TSI_WEEK = 57786
const SQL_TSI_MONTH = 57787
const SQL_TSI_QUARTER = 57788
const SQL_TSI_YEAR = 57789
const SQL_TSI_SECOND = 57790
const SQL_TSI_MINUTE = 57791
const RECURSIVE = 57792
const CONFIG = 57793
const DRAINER = 57794
const MATCH = 57795
const AGAINST = 57796
const BOOLEAN = 57797
const LANGUAGE = 57798
const WITH = 57799
const QUERY = 57800
const EXPANSION = 57801
const ADDDATE = 57802
const BIT_AND = 57803
const BIT_OR = 57804
const BIT_XOR = 57805
const CAST = 57806
const COUNT = 57807
const APPROX_COUNT_DISTINCT = 57808
const APPROX_PERCENTILE = 57809
const CURDATE = 57810
const CURTIME = 57811
const DATE_ADD = 57812
const DATE_SUB = 57813
const EXTRACT = 57814
const GROUP_CONCAT = 57815
const MAX = 57816
const MID = 57817
const MIN = 57818
const NOW = 57819
const POSITION = 57820
const SESSION_USER = 57821
const STD = 57822
const STDDEV = 57823
const MEDIAN = 57824
const STDDEV_POP = 57825
const STDDEV_SAMP = 57826
const SUBDATE = 57827
const SUBSTR = 57828
const SUBSTRING = 57829
const SUM = 57830
const SYSDATE = 57831
const SYSTEM_USER = 57832
const TRANSLATE = 57833
const TRIM = 57834
const VARIANCE = 57835
const VAR_POP = 57836
const VAR_SAMP = 57837
const AVG = 57838
const ARROW = 57839
const ROW = 57840
const OUTFILE = 57841
const HEADER = 57842
const MAX_FILE_SIZE = 57843
const FORCE_QUOTE = 57844
const UNUSED = 57845
const BINDINGS = 57846
const DO = 57847
const DECLARE = 57848
const KILL = 57849

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"TABLE_SIZE",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8359

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 92,
	21, 534,
	-2, 515,
	-1, 100,
	212, 732,
	-2, 779,
	-1, 119,
	42, 367,
	212, 367,
	239, 374,
	240, 374,
	410, 367,
	-2, 395,
	-1, 426,
	288, 89,
	386, 89,
	-2, 1521,
	-1, 485,
	67, 1147,
	-2, 1661,
	-1, 486,
	67, 1165,
	-2, 1632,
	-1, 490,
	67, 1166,
	-2, 1660,
	-1, 512,
	67, 1080,
	-2, 1709,
	-1, 513,
	67, 1081,
	-2, 1708,
	-1, 514,
	67, 1082,
	-2, 1698,
	-1, 515,
	67, 1673,
	-2, 1693,
	-1, 516,
	67, 1674,
	-2, 1694,
	-1, 517,
	67, 1675,
	-2, 1700,
	-1, 518,
	67, 1676,
	-2, 1683,
	-1, 519,
	67, 1677,
	-2, 1691,
	-1, 520,
	67, 1678,
	-2, 1701,
	-1, 521,
	67, 1679,
	-2, 1702,
	-1, 522,
	67, 1680,
	-2, 1707,
	-1, 523,
	67, 1681,
	-2, 1712,
	-1, 524,
	67, 1682,
	-2, 1713,
	-1, 526,
	67, 1144,
	-2, 1513,
	-1, 533,
	67, 1153,
	-2, 1539,
	-1, 537,
	67, 1157,
	-2, 1578,
	-1, 538,
	67, 1158,
	-2, 1656,
	-1, 546,
	67, 1168,
	-2, 1641,
	-1, 548,
	67, 1170,
	-2, 1651,
	-1, 560,
	67, 1062,
	-2, 1703,
	-1, 561,
	67, 1063,
	-2, 1704,
	-1, 562,
	67, 1064,
	-2, 1705,
	-1, 569,
	21, 535,
	-2, 498,
	-1, 624,
	405, 395,
	406, 395,
	-2, 368,
	-1, 667,
	103, 1513,
	114, 1513,
	133, 1513,
	-2, 1306,
	-1, 706,
	21, 535,
	-2, 498,
	-1, 805,
	21, 534,
	-2, 969,
	-1, 1126,
	67, 1213,
	-2, 1658,
	-1, 1127,
	67, 1214,
	-2, 1659,
	-1, 1286,
	1, 758,
	68, 758,
	525, 758,
	-2, 765,
	-1, 1412,
	133, 1316,
	-2, 1314,
	-1, 1414,
	133, 659,
	-2, 1311,
	-1, 1415,
	133, 660,
	-2, 1312,
	-1, 1709,
	68, 1292,
	134, 1292,
	-2, 1643,
	-1, 1710,
	68, 1288,
	134, 1288,
	-2, 1642,
	-1, 1711,
	68, 1270,
	134, 1270,
	-2, 1629,
	-1, 1712,
	68, 1271,
	134, 1271,
	-2, 1634,
	-1, 1713,
	68, 1272,
	134, 1272,
	-2, 1566,
	-1, 1714,
	68, 1273,
	134, 1273,
	-2, 1560,
	-1, 1715,
	68, 1274,
	134, 1274,
	-2, 1504,
	-1, 1716,
	68, 1275,
	134, 1275,
	-2, 1631,
	-1, 1717,
	68, 1276,
	134, 1276,
	-2, 1564,
	-1, 1718,
	68, 1277,
	134, 1277,
	-2, 1559,
	-1, 1719,
	68, 1278,
	134, 1278,
	-2, 1552,
	-1, 1721,
	68, 1261,
	134, 1261,
	-2, 1661,
	-1, 1722,
	68, 1290,
	134, 1290,
	-2, 1632,
	-1, 1723,
	68, 1290,
	134, 1290,
	-2, 1660,
	-1, 1724,
	68, 1290,
	134, 1290,
	-2, 1522,
	-1, 1725,
	68, 1288,
	134, 1288,
	-2, 1651,
	-1, 1726,
	68, 1285,
	134, 1285,
	-2, 1544,
	-1, 1727,
	67, 1243,
	68, 1243,
	134, 1243,
	348, 1243,
	349, 1243,
	350, 1243,
	-2, 1503,
	-1, 1728,
	67, 1244,
	68, 1244,
	134, 1244,
	348, 1244,
	349, 1244,
	350, 1244,
	-2, 1505,
	-1, 1729,
	67, 1247,
	68, 1247,
	134, 1247,
	348, 1247,
	349, 1247,
	350, 1247,
	-2, 1633,
	-1, 1730,
	67, 1249,
	68, 1249,
	134, 1249,
	348, 1249,
	349, 1249,
	350, 1249,
	-2, 1616,
	-1, 1731,
	67, 1251,
	68, 1251,
	134, 1251,
	348, 1251,
	349, 1251,
	350, 1251,
	-2, 1565,
	-1, 1732,
	67, 1253,
	68, 1253,
	134, 1253,
	348, 1253,
	349, 1253,
	350, 1253,
	-2, 1548,
	-1, 1733,
	67, 1254,
	68, 1254,
	134, 1254,
	348, 1254,
	349, 1254,
	350, 1254,
	-2, 1549,
	-1, 1734,
	67, 1256,
	68, 1256,
	134, 1256,
	348, 1256,
	349, 1256,
	350, 1256,
	-2, 1502,
	-1, 1735,
	68, 1295,
	134, 1295,
	348, 1295,
	349, 1295,
	350, 1295,
	-2, 1527,
	-1, 1736,
	68, 1295,
	134, 1295,
	348, 1295,
	349, 1295,
	350, 1295,
	-2, 1540,
	-1, 1737,
	68, 1298,
	134, 1298,
	348, 1298,
	349, 1298,
	350, 1298,
	-2, 1523,
	-1, 1738,
	68, 1295,
	134, 1295,
	348, 1295,
	349, 1295,
	350, 1295,
	-2, 1601,
	-1, 1751,
	1, 759,
	68, 759,
	525, 759,
	-2, 765,
	-1, 1807,
	21, 534,
	-2, 626,
	-1, 1984,
	65, 441,
	134, 441,
	-2, 874,
	-1, 2262,
	87, 765,
	129, 765,
	166, 765,
	169, 765,
	-2, 822,
	-1, 2264,
	273, 937,
	-2, 916,
	-1, 2292,
	87, 765,
	129, 765,
	166, 765,
	169, 765,
	-2, 822,
	-1, 2295,
	65, 441,
	134, 441,
	-2, 875,
	-1, 2335,
	87, 765,
	129, 765,
	166, 765,
	169, 765,
	-2, 823,
	-1, 2363,
	273, 937,
	-2, 917,
	-1, 2779,
	68, 794,
	134, 794,
	-2, 765,
	-1, 2783,
	68, 794,
	134, 794,
	-2, 765,
	-1, 2797,
	68, 798,
	134, 798,
	-2, 765,
	-1, 2802,
	68, 799,
	134, 799,
	-2, 765,
}

const yyPrivate = 57344

const yyLast = 30056

var yyAct = [...]int{
	457, 2336, 1191, 2783, 2782, 2759, 2791, 1106, 436, 2624,
	2402, 438, 2748, 2705, 459, 2661, 2375, 2689, 1804, 2588,
	2521, 2690, 2568, 2321, 2400, 2330, 1371, 1699, 833, 1016,
	2592, 2401, 2512, 2529, 1102, 2254, 483, 2421, 2439, 137,
	137, 2576, 1800, 570, 1245, 137, 373, 380, 2319, 972,
	380, 1292, 2385, 2145, 2364, 2287, 1987, 666, 378, 31,
	2384, 2334, 2141, 140, 1109, 1048, 1835, 1398, 2275, 1404,
	1337, 2268, 2005, 1359, 1799, 2146, 440, 385, 1874, 1841,
	2150, 1604, 1959, 1707, 2220, 1916, 2203, 428, 391, 1842,
	565, 430, 2026, 2161, 1759, 1294, 1329, 949, 2158, 2087,
	700, 1705, 2156, 604, 2139, 937, 1873, 1243, 1600, 136,
	136, 1248, 435, 1405, 1262, 364, 1406, 472, 92, 1409,
	1412, 1399, 2040, 1352, 1332, 1330, 1961, 565, 1599, 2004,
	1305, 3, 1788, 1752, 1956, 1105, 137, 1282, 670, 674,
	42, 1758, 2339, 1632, 1270, 1100, 377, 19, 869, 437,
	1601, 1040, 695, 951, 1304, 439, 374, 8, 1703, 91,
	363, 1253, 1356, 92, 375, 6, 1744, 1302, 694, 396,
	427, 668, 1611, 1190, 673, 30, 961, 627, 376, 7,
	388, 1154, 1301, 1687, 1140, 42, 1615, 1091, 447, 369,
	717, 31, 1393, 431, 1376, 914, 1802, 696, 1099, 1809,
	1319, 1008, 1281, 366, 658, 603, 702, 16, 957, 567,
	1161, 995, 1160, 659, 393, 394, 9, 4, 973, 932,
	127, 1039, 130, 379, 601, 934, 2080, 2080, 620, 1876,
	132, 569, 2434, 1618, 1836, 2253, 1266, 1608, 2611, 1401,
	828, 568, 834, 131, 131, 131, 672, 38, 121, 101,
	92, 2652, 131, 578, 38, 121, 101, 131, 2393, 131,
	737, 1869, 131, 362, 693, 2332, 131, 1861, 38, 121,
	101, 1605, 42, 383, 1181, 997, 2642, 1058, 936, 19,
	90, 773, 131, 1616, 131, 984, 935, 985, 671, 8,
	133, 771, 770, 1055, 745, 2229, 747, 6, 2057, 1958,
	128, 128, 128, 564, 1340, 1341, 969, 30, 752, 128,
	753, 7, 2678, 1944, 1057, 1076, 128, 978, 979, 128,
	90, 2676, 637, 128, 748, 555, 998, 554, 556, 557,
	1315, 558, 559, 2693, 2694, 1092, 1045, 1096, 755, 1051,
	976, 128, 1108, 975, 978, 979, 579, 775, 776, 777,
	774, 1957, 769, 2612, 2613, 2430, 1917, 2665, 2666, 2419,
	2129, 1095, 679, 678, 680, 2514, 137, 710, 764, 2422,
	2423, 2424, 2425, 2130, 2255, 2131, 390, 709, 2514, 2517,
	2436, 2255, 380, 380, 1111, 137, 1856, 711, 2591, 2237,
	741, 2170, 677, 1349, 2276, 1345, 1353, 2651, 1087, 1612,
	2283, 884, 2162, 720, 750, 642, 705, 707, 2398, 2172,
	1783, 1742, 743, 1684, 2496, 1237, 1236, 1950, 2382, 1177,
	2073, 2075, 1174, 766, 746, 749, 1176, 1173, 1175, 1179,
	1180, 1097, 424, 1866, 1178, 425, 708, 1964, 740, 590,
	682, 720, 2167, 2168, 807, 100, 2499, 129, 742, 767,
	768, 1094, 2395, 1846, 382, 728, 571, 2169, 675, 704,
	381, 2680, 751, 643, 2703, 2692, 119, 2490, 2530, 2654,
	2655, 2776, 2792, 2429, 2714, 2626, 967, 732, 683, 2431,
	2622, 2623, 1110, 2626, 1622, 1624, 1625, 2675, 92, 92,
	672, 2721, 1118, 1121, 1122, 2166, 2577, 2578, 2579, 2581,
	2580, 872, 706, 1119, 1972, 1973, 1974, 1975, 986, 1617,
	42, 42, 956, 2649, 2751, 2452, 676, 744, 2770, 892,
	896, 898, 900, 902, 903, 905, 2483, 909, 906, 907,
	908, 754, 671, 887, 888, 889, 890, 870, 871, 893,
	2451, 873, 936, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 885, 891, 762, 763, 2553, 1093, 805,
	713, 714, 895, 897, 899, 901, 904, 2590, 1184, 1185,
	1186, 1187, 1188, 1189, 1182, 1183, 722, 721, 429, 2478,
	1050, 931, 933, 2632, 669, 681, 1970, 2164, 1004, 2474,
	1914, 1003, 809, 810, 811, 812, 638, 730, 886, 988,
	1606, 671, 729, 604, 955, 725, 726, 1606, 2682, 2683,
	911, 1606, 971, 970, 722, 721, 715, 954, 2793, 2760,
	2241, 2079, 2440, 2799, 2249, 701, 778, 2787, 2752, 938,
	1633, 389, 2028, 2030, 2511, 806, 996, 813, 1978, 1862,
	1816, 1609, 1325, 815, 977, 737, 1276, 863, 2653, 2154,
	978, 979, 941, 2083, 2614, 2615, 1196, 2078, 944, 978,
	979, 565, 565, 565, 943, 821, 1020, 1020, 384, 974,
	2681, 2135, 1620, 946, 968, 640, 39, 2032, 639, 2089,
	2088, 2163, 1813, 380, 933, 1043, 1043, 1619, 568, 919,
	939, 940, 1607, 942, 2173, 2497, 1022, 39, 1354, 1046,
	1018, 1018, 2076, 1001, 1053, 1963, 1623, 102, 102, 102,
	1815, 1814, 2394, 1343, 1120, 1870, 102, 1344, 1024, 1889,
	1890, 102, 772, 102, 1074, 736, 102, 1812, 2399, 1342,
	102, 686, 691, 692, 843, 844, 1348, 1020, 1346, 1020,
	710, 1088, 958, 962, 962, 962, 102, 2589, 102, 2786,
	1107, 645, 2749, 2750, 646, 1059, 1089, 1967, 1968, 1049,
	958, 1979, 958, 1056, 2805, 731, 2165, 999, 1000, 965,
	2804, 1966, 2155, 598, 599, 600, 981, 982, 2554, 2556,
	2557, 2558, 2555, 1083, 2479, 2480, 2029, 1026, 2798, 916,
	963, 964, 363, 2733, 918, 2151, 2154, 1128, 1129, 1130,
	1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 773,
	2476, 569, 1149, 1150, 2475, 1295, 1069, 1070, 92, 669,
	1159, 1849, 92, 993, 994, 1660, 735, 948, 1659, 1205,
	773, 1295, 1853, 92, 2795, 2777, 773, 1112, 987, 1211,
	989, 1837, 92, 894, 2772, 2183, 1985, 1104, 638, 1213,
	980, 1218, 1219, 983, 1379, 42, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 565, 42, 1014, 1015, 992, 2763, 1002,
	2762, 1082, 1101, 2737, 1011, 1012, 1013, 737, 1042, 1042,
	2707, 1079, 2263, 1085, 1693, 757, 1090, 758, 1861, 1078,
	2446, 2700, 1025, 1123, 773, 362, 2695, 688, 689, 690,
	2796, 1614, 1060, 1038, 1073, 1065, 1037, 1044, 2684, 2670,
	2773, 1259, 1072, 1238, 1986, 760, 2647, 1244, 2646, 2155,
	775, 776, 777, 774, 2148, 649, 1061, 640, 2149, 2152,
	639, 572, 1081, 1798, 1614, 1252, 1614, 1825, 1279, 1614,
	1020, 1080, 1077, 1286, 569, 1204, 2708, 1797, 604, 2200,
	1098, 1293, 1148, 1103, 1020, 1697, 2645, 2501, 1303, 1798,
	1285, 1260, 2501, 373, 2108, 1986, 1746, 1113, 1114, 1115,
	1116, 1117, 648, 1377, 1825, 2671, 651, 650, 1241, 2644,
	2153, 756, 2501, 1952, 2501, 1320, 1320, 1263, 1303, 1142,
	1303, 2634, 959, 1825, 1279, 1020, 1339, 1192, 2508, 1195,
	1250, 1251, 2507, 1206, 2500, 737, 565, 1318, 1020, 734,
	1156, 1157, 1158, 1212, 2317, 1214, 761, 1193, 2047, 1605,
	2023, 1199, 2501, 775, 776, 777, 774, 1278, 1940, 1284,
	1938, 1279, 1020, 1936, 1370, 137, 137, 1194, 1934, 759,
	1698, 1277, 1664, 1381, 1596, 2501, 912, 137, 947, 1287,
	1288, 1798, 1205, 1397, 1152, 695, 1215, 2635, 1205, 1205,
	1745, 1309, 1373, 1922, 2509, 1005, 1878, 1696, 1763, 1255,
	2501, 1258, 2757, 1387, 2709, 1283, 1233, 1316, 1317, 735,
	2048, 1414, 2298, 1326, 2048, 958, 1798, 1293, 2184, 1297,
	960, 1020, 1322, 1350, 1941, 2282, 1939, 1310, 1859, 1935,
	696, 2042, 1296, 1365, 1935, 1372, 1372, 1264, 962, 1300,
	703, 1268, 1267, 1338, 1271, 1851, 1355, 1372, 1307, 1308,
	1367, 1369, 1261, 1847, 1311, 1312, 1415, 1843, 1762, 773,
	1283, 1313, 773, 1694, 1643, 1811, 1988, 1864, 1597, 1863,
	460, 469, 1855, 1779, 1656, 461, 1627, 468, 462, 466,
	465, 463, 464, 1290, 1314, 1630, 1631, 1289, 1668, 775,
	776, 777, 774, 1299, 1763, 1667, 1306, 1101, 1395, 672,
	1323, 1613, 1324, 1644, 1395, 672, 1595, 1363, 1364, 1384,
	596, 1844, 1062, 910, 92, 1066, 1321, 819, 790, 1848,
	723, 703, 2188, 1844, 1763, 1328, 2070, 1327, 470, 1693,
	647, 703, 1264, 1642, 952, 1374, 42, 582, 1264, 1264,
	1351, 671, 959, 1360, 1361, 1362, 1009, 671, 1007, 1665,
	1366, 2746, 2734, 2072, 773, 1960, 1672, 1010, 467, 2636,
	1368, 773, 1603, 2201, 2081, 1198, 1197, 1614, 1854, 1385,
	798, 799, 791, 792, 793, 794, 795, 796, 797, 790,
	1402, 1067, 1818, 1884, 712, 1407, 1593, 1408, 1594, 1413,
	1280, 805, 789, 788, 798, 799, 791, 792, 793, 794,
	795, 796, 797, 790, 2071, 428, 710, 1598, 137, 1155,
	1893, 1662, 1155, 1602, 1638, 2669, 1708, 774, 137, 137,
	1760, 775, 776, 777, 774, 1629, 2486, 2485, 1006, 1621,
	1303, 2469, 644, 671, 777, 774, 909, 906, 907, 908,
	960, 1772, 1898, 1626, 1897, 1896, 1894, 793, 794, 795,
	796, 797, 790, 1303, 695, 1224, 652, 2272, 641, 1628,
	2267, 2046, 2781, 1142, 2766, 1637, 2564, 1339, 791, 792,
	793, 794, 795, 796, 797, 790, 1635, 1147, 1740, 1639,
	781, 782, 783, 784, 785, 786, 787, 779, 1755, 1756,
	2769, 2731, 1145, 1146, 1144, 2715, 1020, 2562, 2101, 696,
	775, 776, 777, 774, 2563, 1908, 710, 1895, 1043, 1886,
	1339, 1771, 1739, 1830, 2602, 1832, 1708, 1700, 1701, 2560,
	1650, 2570, 1205, 1279, 1654, 2548, 1769, 2547, 1805, 1805,
	1823, 1805, 1652, 2768, 2546, 2561, 2543, 1773, 1774, 2550,
	1806, 1666, 1810, 2100, 1669, 1670, 1671, 2537, 2534, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 2559, 1682, 1753,
	2533, 1689, 2279, 1808, 2171, 775, 776, 777, 774, 2127,
	884, 775, 776, 777, 774, 1702, 2126, 2549, 2066, 962,
	775, 776, 777, 774, 1807, 1651, 1747, 2044, 1839, 1692,
	1845, 1840, 2687, 1640, 2396, 1209, 1691, 1775, 1767, 1776,
	1777, 1690, 1827, 1686, 1770, 1210, 1829, 775, 776, 777,
	774, 1834, 1768, 1685, 775, 776, 777, 774, 2157, 1764,
	1780, 1063, 2280, 929, 1784, 1778, 671, 1338, 1899, 1900,
	2702, 2686, 2397, 1216, 1217, 2569, 1781, 1220, 1221, 1222,
	1223, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 775,
	776, 777, 774, 1819, 1820, 1821, 2595, 2331, 2667, 1828,
	2281, 697, 698, 699, 1826, 424, 1647, 2630, 425, 2629,
	872, 2619, 2551, 2544, 862, 2540, 2539, 2538, 775, 776,
	777, 774, 2498, 2471, 1264, 1264, 1264, 2435, 892, 896,
	898, 900, 902, 903, 905, 2329, 909, 906, 907, 908,
	2327, 1042, 887, 888, 889, 890, 870, 871, 893, 2290,
	873, 2278, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 885, 891, 2495, 2277, 1857, 2274, 2323, 2797,
	2240, 895, 897, 899, 901, 904, 1020, 1875, 1020, 2134,
	1020, 775, 776, 777, 774, 710, 775, 776, 777, 774,
	775, 776, 777, 774, 2322, 1871, 788, 798, 799, 791,
	792, 793, 794, 795, 796, 797, 790, 886, 2125, 2110,
	2077, 2244, 1867, 2045, 1020, 1902, 775, 776, 777, 774,
	2035, 511, 510, 2637, 2774, 1695, 1688, 1909, 2104, 1386,
	1273, 1020, 2767, 775, 776, 777, 774, 2794, 1064, 842,
	838, 1911, 837, 1901, 820, 801, 2175, 804, 1018, 2743,
	775, 776, 777, 774, 2520, 131, 2292, 2291, 121, 101,
	1910, 2262, 802, 803, 800, 1018, 789, 788, 798, 799,
	791, 792, 793, 794, 795, 796, 797, 790, 2251, 789,
	788, 798, 799, 791, 792, 793, 794, 795, 796, 797,
	790, 2250, 2233, 2219, 1888, 2218, 789, 788, 798, 799,
	791, 792, 793, 794, 795, 796, 797, 790, 1868, 2189,
	137, 1101, 128, 131, 2109, 2106, 1020, 1882, 2099, 1860,
	2091, 1865, 1858, 2103, 1918, 2086, 2039, 1951, 1984, 1923,
	1937, 1933, 1932, 1673, 1990, 1663, 1661, 1942, 1658, 1657,
	1252, 1655, 1649, 1879, 1646, 775, 776, 777, 774, 2102,
	1999, 1645, 137, 1881, 1208, 1207, 710, 1339, 1339, 1339,
	1339, 1892, 1953, 1029, 1027, 2745, 2006, 2739, 710, 1339,
	128, 775, 776, 777, 774, 2722, 2719, 2717, 2006, 835,
	1954, 1977, 2601, 2586, 2727, 1931, 2574, 1020, 2571, 2566,
	31, 2526, 1240, 2493, 2492, 137, 137, 2491, 1982, 2488,
	2482, 2467, 1885, 2309, 2307, 1250, 1251, 775, 776, 777,
	774, 1903, 1904, 1947, 2022, 1205, 1906, 1907, 2285, 2053,
	2273, 950, 2000, 1930, 1205, 1991, 2112, 1249, 1912, 1242,
	2052, 1981, 1020, 1980, 1955, 1805, 2002, 1993, 1254, 1257,
	1246, 1995, 1850, 817, 2064, 775, 776, 777, 774, 92,
	1817, 1283, 894, 1969, 1761, 1976, 1143, 1264, 128, 1392,
	1945, 1946, 1271, 1989, 1753, 2037, 2038, 2021, 1255, 1983,
	1258, 42, 1375, 1994, 1338, 1338, 1338, 1338, 19, 2049,
	2058, 2003, 2007, 2008, 2009, 2010, 1338, 2001, 8, 2065,
	2059, 1275, 1992, 2020, 1263, 1247, 6, 2019, 2061, 2018,
	1996, 1997, 1086, 1998, 1052, 913, 30, 861, 2092, 860,
	7, 2094, 2036, 2096, 859, 2033, 569, 858, 857, 856,
	2074, 2069, 855, 710, 2489, 1929, 710, 2043, 854, 853,
	2160, 2050, 852, 1708, 851, 2056, 2144, 2060, 850, 92,
	2068, 2054, 137, 2741, 849, 2062, 2063, 775, 776, 777,
	774, 710, 710, 2082, 848, 2031, 1339, 1760, 847, 2187,
	2090, 2144, 2144, 2084, 846, 2191, 845, 841, 840, 2097,
	2098, 2111, 2093, 2160, 839, 2113, 2114, 2115, 2116, 2095,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2107, 836,
	789, 788, 798, 799, 791, 792, 793, 794, 795, 796,
	797, 790, 2780, 1928, 832, 831, 829, 828, 827, 826,
	825, 824, 2176, 1902, 1264, 823, 822, 818, 1264, 1279,
	816, 739, 2138, 1279, 2136, 775, 776, 777, 774, 1766,
	2177, 2178, 2179, 2204, 2205, 789, 788, 798, 799, 791,
	792, 793, 794, 795, 796, 797, 790, 1749, 727, 137,
	2085, 2186, 2185, 2182, 137, 2180, 2181, 2725, 2190, 2691,
	2207, 1971, 2192, 2193, 1824, 2210, 2208, 2198, 2195, 1927,
	2199, 2197, 2105, 1338, 2196, 1389, 2227, 738, 2230, 2215,
	2216, 2217, 2225, 2209, 2012, 2211, 2011, 1926, 2212, 2231,
	1949, 775, 776, 777, 774, 2234, 2015, 2017, 2224, 1794,
	1795, 2016, 2232, 2051, 573, 574, 575, 576, 2228, 775,
	776, 777, 774, 2132, 2133, 2137, 1925, 572, 2266, 2238,
	1924, 2236, 2194, 1852, 2242, 2013, 2235, 75, 1921, 2239,
	2014, 2312, 1754, 2311, 1920, 92, 1234, 92, 775, 776,
	777, 774, 775, 776, 777, 774, 1391, 41, 1020, 1020,
	775, 776, 777, 774, 1339, 2295, 775, 776, 777, 774,
	40, 134, 1390, 1919, 1838, 2246, 1028, 2310, 1700, 1701,
	359, 710, 1790, 1793, 1794, 1795, 1791, 2286, 1792, 1796,
	1877, 2006, 1018, 2288, 2260, 775, 776, 777, 774, 2259,
	360, 2265, 1872, 2271, 1743, 2314, 1915, 1205, 2264, 915,
	2269, 358, 2269, 361, 733, 2528, 1905, 2301, 2261, 1291,
	1274, 1198, 1197, 2303, 2297, 2658, 1805, 991, 775, 776,
	777, 774, 990, 765, 1883, 917, 2270, 2293, 775, 776,
	777, 774, 927, 928, 710, 2214, 2302, 1592, 2386, 2388,
	953, 2386, 2386, 2304, 2144, 2305, 775, 776, 777, 774,
	2294, 2296, 925, 926, 923, 924, 710, 2299, 2740, 1641,
	2300, 2324, 921, 922, 2620, 2243, 2315, 2316, 2607, 2605,
	1151, 1338, 2245, 2531, 2318, 2527, 2519, 2518, 1293, 2516,
	2413, 775, 776, 777, 774, 2416, 1880, 2415, 2383, 2326,
	2333, 2387, 775, 776, 777, 774, 2361, 2328, 2432, 2325,
	2257, 2389, 2390, 2438, 2256, 2222, 920, 2442, 789, 788,
	798, 799, 791, 792, 793, 794, 795, 796, 797, 790,
	572, 2221, 2297, 2410, 2406, 2041, 2405, 1295, 2067, 2411,
	2409, 573, 574, 575, 576, 2729, 2728, 2417, 966, 49,
	2729, 1648, 1020, 724, 572, 2728, 2470, 2484, 2391, 92,
	2226, 1, 1272, 137, 1785, 577, 1388, 2024, 2025, 2407,
	2408, 2213, 2388, 2027, 1610, 1264, 1782, 2445, 2306, 1741,
	2174, 2308, 945, 597, 1200, 1071, 2288, 1790, 1793, 1794,
	1795, 1791, 685, 1792, 1796, 2313, 719, 2383, 2468, 92,
	2443, 2444, 1068, 2447, 2448, 2449, 2450, 2472, 718, 2453,
	2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463,
	2464, 2465, 2466, 2532, 2494, 2505, 1634, 2502, 716, 1153,
	474, 2506, 1400, 2487, 2504, 2513, 2567, 2412, 2515, 2657,
	2704, 2600, 2660, 1084, 458, 2510, 2565, 2392, 789, 788,
	798, 799, 791, 792, 793, 794, 795, 796, 797, 790,
	2128, 2418, 2420, 1943, 2320, 2055, 616, 505, 481, 710,
	830, 1054, 710, 710, 710, 1047, 1913, 687, 2545, 480,
	2284, 1965, 710, 684, 617, 1683, 2252, 1235, 1256, 1239,
	2598, 2790, 2779, 2575, 2758, 2738, 2583, 2584, 2585, 1805,
	2625, 2572, 2775, 2674, 2720, 2428, 2426, 2617, 2535, 2536,
	2594, 2427, 2582, 2593, 2541, 2542, 1020, 1020, 2713, 2596,
	2621, 395, 2606, 2610, 2608, 2609, 2604, 1347, 2603, 563,
	656, 2587, 1765, 2618, 2650, 2573, 2597, 586, 1748, 587,
	1751, 1750, 1124, 780, 1141, 2627, 2628, 137, 2247, 2248,
	1018, 1018, 814, 434, 1636, 710, 446, 1962, 2376, 2034,
	48, 47, 46, 45, 1380, 1410, 476, 710, 139, 1411,
	2616, 2433, 2662, 2633, 456, 455, 454, 2503, 453, 2643,
	1789, 2639, 2664, 1787, 1786, 1334, 1333, 1378, 2688, 2640,
	2641, 2648, 2481, 2552, 2477, 2473, 2663, 2631, 2335, 2362,
	2363, 710, 2525, 2656, 2369, 868, 864, 866, 867, 865,
	1891, 2672, 1887, 2668, 2142, 2143, 2140, 1372, 930, 2437,
	2258, 1706, 1704, 2206, 2202, 1396, 2677, 2679, 1269, 1948,
	1335, 1331, 2404, 566, 32, 27, 5, 29, 2685, 28,
	14, 15, 13, 1075, 12, 18, 26, 25, 24, 23,
	2706, 83, 2711, 82, 710, 2696, 2697, 2698, 2699, 81,
	80, 2712, 22, 11, 1107, 2716, 79, 2718, 78, 77,
	2710, 789, 788, 798, 799, 791, 792, 793, 794, 795,
	796, 797, 790, 21, 20, 73, 71, 2723, 2726, 2664,
	2736, 2724, 72, 59, 58, 57, 2525, 2730, 710, 70,
	710, 69, 2732, 2663, 2735, 2742, 68, 2744, 1107, 67,
	1107, 2747, 66, 65, 2701, 64, 615, 56, 55, 54,
	53, 63, 2753, 62, 61, 2706, 710, 2754, 60, 52,
	2761, 51, 50, 2765, 99, 98, 1107, 97, 2771, 96,
	95, 94, 33, 34, 35, 2638, 36, 109, 108, 110,
	111, 106, 104, 107, 105, 103, 43, 10, 17, 2778,
	2, 2785, 0, 0, 0, 2789, 0, 0, 2788, 0,
	0, 0, 0, 0, 0, 0, 0, 2800, 0, 2785,
	0, 2802, 2803, 2801, 2789, 0, 1526, 1568, 0, 0,
	1515, 307, 1473, 1528, 1446, 1462, 1536, 1463, 1464, 1501,
	1425, 1483, 269, 1460, 0, 0, 0, 0, 0, 0,
	1518, 1417, 1449, 1450, 1419, 1456, 1420, 1447, 1475, 214,
	1445, 1486, 239, 1498, 1459, 1480, 1534, 0, 0, 299,
	253, 0, 0, 1478, 1520, 1481, 1506, 1472, 1502, 1433,
	1494, 1529, 1461, 2525, 1499, 1530, 0, 0, 0, 0,
	697, 698, 699, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 1497, 1524, 1458, 0, 198, 1527, 1479,
	1500, 0, 0, 1418, 1495, 0, 1423, 1426, 1535, 1522,
	1453, 1454, 0, 0, 0, 0, 0, 0, 0, 0,
	1476, 1482, 1503, 1469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1451, 0, 1491, 0, 0, 2756, 1428,
	1424, 0, 1474, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 1567, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 0, 317, 345, 207, 336, 1427, 328, 190, 1562,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 0, 229, 277, 243, 278, 230, 255, 254,
	256, 1546, 1547, 1548, 1549, 1550, 356, 1558, 1559, 0,
	1563, 1564, 1565, 1432, 0, 1452, 1504, 0, 1416, 1591,
	1513, 1521, 1471, 330, 1523, 1468, 1467, 1553, 0, 1552,
	303, 1554, 1555, 238, 1519, 1448, 1457, 346, 1455, 289,
	271, 1525, 1490, 1566, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 1551, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 1560, 0, 1561, 342, 221, 178, 179, 325,
	0, 267, 0, 1516, 1421, 1431, 1429, 1465, 1492, 1493,
	263, 341, 1508, 1512, 1509, 1537, 292, 0, 0, 0,
	0, 0, 232, 273, 1510, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1422, 0, 300, 323,
	335, 352, 355, 1569, 1570, 1571, 183, 354, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 326, 1466, 1439, 1477, 334,
	1442, 1440, 1507, 1441, 1496, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 1487, 1470, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1488, 1580, 1581, 1582, 1583, 1584,
	1444, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 1514, 1585, 1586, 1587, 1588, 1589, 1590, 264, 231,
	297, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	246, 0, 0, 1438, 1443, 1437, 1484, 1485, 1531, 1532,
	1533, 1505, 1430, 1517, 0, 1434, 1436, 1435, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1511, 307, 487,
	1489, 180, 0, 240, 1538, 281, 219, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 448, 0, 0, 0, 214, 0, 0, 239,
	0, 0, 0, 479, 0, 0, 299, 253, 0, 0,
	0, 0, 534, 542, 0, 1556, 1557, 338, 339, 340,
	324, 0, 211, 1579, 441, 0, 0, 473, 511, 510,
	460, 469, 0, 0, 195, 461, 0, 468, 462, 466,
	465, 463, 464, 0, 526, 0, 0, 0, 0, 0,
	0, 432, 445, 2522, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 442, 443, 0, 0,
	0, 0, 488, 0, 444, 0, 0, 451, 470, 471,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 467, 486,
	490, 207, 548, 484, 328, 190, 0, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 549,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 482, 0, 0,
	330, 0, 0, 532, 0, 0, 0, 303, 0, 0,
	238, 0, 0, 0, 485, 0, 289, 271, 545, 433,
	0, 287, 241, 315, 279, 321, 305, 329, 283, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	0, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 343, 344, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 530, 267, 0,
	544, 525, 527, 528, 531, 535, 536, 537, 538, 539,
	541, 543, 547, 292, 0, 0, 0, 0, 0, 232,
	273, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 323, 335, 352, 355,
	0, 0, 0, 183, 354, 0, 2523, 0, 0, 0,
	2524, 0, 546, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 489, 257, 258, 259, 260, 533, 0, 200,
	353, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 220,
	226, 0, 228, 199, 272, 222, 332, 235, 0, 0,
	0, 0, 0, 0, 0, 264, 231, 297, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 246, 0, 0,
	555, 529, 554, 556, 557, 553, 558, 559, 540, 452,
	0, 493, 551, 550, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	240, 0, 281, 219, 518, 498, 499, 500, 450, 501,
	496, 497, 519, 491, 515, 516, 475, 494, 502, 514,
	503, 517, 520, 521, 560, 561, 509, 562, 506, 522,
	513, 512, 504, 492, 523, 524, 478, 477, 507, 508,
	495, 307, 487, 0, 338, 339, 340, 324, 0, 211,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 448, 0, 0, 0, 214,
	0, 0, 239, 0, 0, 0, 479, 0, 0, 299,
	253, 0, 0, 0, 0, 534, 542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	473, 511, 510, 460, 469, 0, 0, 195, 461, 0,
	468, 462, 466, 465, 463, 464, 0, 526, 0, 0,
	0, 0, 0, 0, 432, 445, 0, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 488, 0, 444, 0, 0,
	451, 470, 471, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 0, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 467, 486, 490, 207, 548, 484, 328, 190, 0,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 549, 229, 277, 243, 278, 230, 255, 254,
	256, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	482, 0, 0, 330, 0, 0, 532, 0, 0, 0,
	303, 0, 0, 238, 0, 0, 0, 485, 0, 289,
	271, 545, 433, 0, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 0, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 1202, 1201, 1203, 342, 221, 178, 179, 325,
	530, 267, 0, 544, 525, 527, 528, 531, 535, 536,
	537, 538, 539, 541, 543, 547, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 546, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 489, 257, 258, 259, 260,
	533, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 0, 0, 0, 0, 0, 0, 264, 231,
	297, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	246, 0, 0, 555, 529, 554, 556, 557, 553, 558,
	559, 540, 452, 0, 493, 551, 550, 552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 240, 0, 281, 219, 518, 498, 499,
	500, 450, 501, 496, 497, 519, 491, 515, 516, 475,
	494, 502, 514, 503, 517, 520, 521, 560, 561, 509,
	562, 506, 522, 513, 512, 504, 492, 523, 524, 478,
	477, 507, 508, 495, 307, 487, 0, 338, 339, 340,
	324, 0, 211, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 448, 0,
	0, 0, 214, 0, 0, 239, 0, 0, 0, 479,
	0, 0, 299, 253, 0, 0, 0, 0, 534, 542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	441, 0, 0, 473, 511, 510, 460, 469, 0, 0,
	195, 461, 0, 468, 462, 466, 465, 463, 464, 0,
	526, 0, 0, 0, 0, 0, 0, 432, 445, 0,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 442, 443, 0, 0, 0, 0, 488, 0,
	444, 0, 0, 451, 470, 471, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 467, 486, 490, 207, 548, 484,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 549, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 482, 0, 0, 330, 0, 0, 532,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	485, 0, 289, 271, 545, 433, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 530, 267, 0, 544, 525, 527, 528,
	531, 535, 536, 537, 538, 539, 541, 543, 547, 292,
	0, 0, 0, 0, 0, 232, 273, 0, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 323, 335, 352, 355, 0, 0, 0, 183,
	354, 0, 2523, 0, 0, 0, 2524, 0, 546, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 489, 257,
	258, 259, 260, 533, 0, 200, 353, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 220, 226, 0, 228, 199,
	272, 222, 332, 235, 0, 0, 0, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 555, 529, 554, 556,
	557, 553, 558, 559, 540, 452, 0, 493, 551, 550,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 0, 281, 219,
	518, 498, 499, 500, 450, 501, 496, 497, 519, 491,
	515, 516, 475, 494, 502, 514, 503, 517, 520, 521,
	560, 561, 509, 562, 506, 522, 513, 512, 504, 492,
	523, 524, 478, 477, 507, 508, 495, 307, 487, 0,
	338, 339, 340, 324, 0, 211, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 448, 0, 0, 0, 214, 1265, 0, 239, 0,
	0, 0, 479, 0, 0, 299, 253, 0, 0, 0,
	0, 534, 542, 0, 0, 0, 0, 0, 0, 0,
	1357, 0, 0, 441, 0, 0, 473, 511, 510, 460,
	469, 0, 0, 195, 461, 0, 468, 462, 466, 465,
	463, 464, 0, 526, 0, 0, 0, 0, 0, 0,
	432, 445, 0, 449, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 488, 0, 444, 0, 0, 1358, 470, 471, 0,
	0, 186, 304, 320, 196, 295, 333, 201, 302, 191,
	268, 291, 0, 0, 188, 318, 301, 250, 233, 234,
	187, 0, 286, 212, 225, 208, 266, 467, 486, 490,
	207, 548, 484, 328, 190, 0, 327, 265, 314, 319,
	251, 245, 189, 316, 249, 244, 237, 216, 549, 229,
	277, 243, 278, 230, 255, 254, 256, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 482, 0, 0, 330,
	0, 0, 532, 0, 0, 0, 303, 0, 0, 238,
	0, 0, 0, 485, 0, 289, 271, 545, 433, 0,
	287, 241, 315, 279, 321, 305, 329, 283, 280, 181,
	306, 210, 252, 192, 194, 206, 213, 215, 217, 218,
	261, 262, 274, 294, 308, 309, 310, 209, 202, 288,
	203, 227, 204, 182, 296, 205, 184, 275, 313, 0,
	223, 284, 248, 185, 247, 276, 312, 311, 193, 337,
	343, 344, 348, 0, 349, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 342, 221, 178, 179, 325, 530, 267, 0, 544,
	525, 527, 528, 531, 535, 536, 537, 538, 539, 541,
	543, 547, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 546, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 489, 257, 258, 259, 260, 533, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 0, 0,
	0, 0, 0, 0, 264, 231, 297, 236, 242, 285,
	331, 270, 290, 197, 322, 298, 246, 0, 0, 555,
	529, 554, 556, 557, 553, 558, 559, 540, 452, 0,
	493, 551, 550, 552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 240,
	0, 281, 219, 518, 498, 499, 500, 450, 501, 496,
	497, 519, 491, 515, 516, 475, 494, 502, 514, 503,
	517, 520, 521, 560, 561, 509, 562, 506, 522, 513,
	512, 504, 492, 523, 524, 478, 477, 507, 508, 495,
	131, 307, 487, 338, 339, 340, 324, 0, 211, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 448, 0, 0, 0, 214,
	0, 0, 239, 0, 0, 0, 808, 0, 0, 299,
	253, 0, 0, 0, 0, 534, 542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	473, 511, 510, 460, 469, 0, 0, 195, 461, 0,
	468, 462, 466, 465, 463, 464, 0, 526, 0, 0,
	0, 0, 0, 0, 432, 445, 0, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 488, 0, 444, 0, 0,
	451, 470, 471, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 0, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 467, 486, 490, 207, 548, 484, 328, 190, 0,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 549, 229, 277, 243, 278, 230, 255, 254,
	256, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	482, 0, 0, 330, 0, 0, 532, 0, 0, 0,
	303, 0, 0, 238, 0, 0, 0, 485, 0, 289,
	271, 545, 433, 0, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 0, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 342, 221, 178, 179, 325,
	530, 267, 0, 544, 525, 527, 528, 531, 535, 536,
	537, 538, 539, 541, 543, 547, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 546, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 489, 257, 258, 259, 260,
	533, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 0, 0, 0, 0, 0, 0, 264, 231,
	297, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	246, 0, 0, 555, 529, 554, 556, 557, 553, 558,
	559, 540, 452, 0, 493, 551, 550, 552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 240, 102, 281, 219, 518, 498, 499,
	500, 450, 501, 496, 497, 519, 491, 515, 516, 475,
	494, 502, 514, 503, 517, 520, 521, 560, 561, 509,
	562, 506, 522, 513, 512, 504, 492, 523, 524, 478,
	477, 507, 508, 495, 307, 487, 0, 338, 339, 340,
	324, 0, 211, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 448, 0,
	0, 0, 214, 2755, 0, 239, 0, 0, 0, 479,
	0, 0, 299, 253, 0, 0, 0, 0, 534, 542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	441, 0, 0, 473, 511, 510, 460, 469, 0, 0,
	195, 461, 0, 468, 462, 466, 465, 463, 464, 0,
	526, 0, 0, 0, 0, 0, 0, 432, 445, 0,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 442, 443, 0, 0, 0, 0, 488, 0,
	444, 0, 0, 451, 470, 471, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 467, 486, 490, 207, 548, 484,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 549, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 482, 0, 0, 330, 0, 0, 532,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	485, 0, 289, 271, 545, 433, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 530, 267, 0, 544, 525, 527, 528,
	531, 535, 536, 537, 538, 539, 541, 543, 547, 292,
	0, 0, 0, 0, 0, 232, 273, 0, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 323, 335, 352, 355, 0, 0, 0, 183,
	354, 0, 0, 0, 0, 0, 0, 0, 546, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 489, 257,
	258, 259, 260, 533, 0, 200, 353, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 220, 226, 0, 228, 199,
	272, 222, 332, 235, 0, 0, 0, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 555, 529, 554, 556,
	557, 553, 558, 559, 540, 452, 0, 493, 551, 550,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 0, 281, 219,
	518, 498, 499, 500, 450, 501, 496, 497, 519, 491,
	515, 516, 475, 494, 502, 514, 503, 517, 520, 521,
	560, 561, 509, 562, 506, 522, 513, 512, 504, 492,
	523, 524, 478, 477, 507, 508, 495, 307, 487, 0,
	338, 339, 340, 324, 0, 211, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 448, 0, 0, 0, 214, 1265, 0, 239, 0,
	0, 0, 479, 0, 0, 299, 253, 0, 0, 0,
	0, 534, 542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 441, 0, 0, 473, 511, 510, 460,
	469, 0, 0, 195, 461, 0, 468, 462, 466, 465,
	463, 464, 0, 526, 0, 0, 0, 0, 0, 0,
	432, 445, 0, 449, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 488, 0, 444, 0, 0, 451, 470, 471, 0,
	0, 186, 304, 320, 196, 295, 333, 201, 302, 191,
	268, 291, 0, 0, 188, 318, 301, 250, 233, 234,
	187, 0, 286, 212, 225, 208, 266, 467, 486, 490,
	207, 548, 484, 328, 190, 0, 327, 265, 314, 319,
	251, 245, 189, 316, 249, 244, 237, 216, 549, 229,
	277, 243, 278, 230, 255, 254, 256, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 482, 0, 0, 330,
	0, 0, 532, 0, 0, 0, 303, 0, 0, 238,
	0, 0, 0, 485, 0, 289, 271, 545, 433, 0,
	287, 241, 315, 279, 321, 305, 329, 283, 280, 181,
	306, 210, 252, 192, 194, 206, 213, 215, 217, 218,
	261, 262, 274, 294, 308, 309, 310, 209, 202, 288,
	203, 227, 204, 182, 296, 205, 184, 275, 313, 0,
	223, 284, 248, 185, 247, 276, 312, 311, 193, 337,
	343, 344, 348, 0, 349, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 342, 221, 178, 179, 325, 530, 267, 0, 544,
	525, 527, 528, 531, 535, 536, 537, 538, 539, 541,
	543, 547, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 546, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 489, 257, 258, 259, 260, 533, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 0, 0,
	0, 0, 0, 0, 264, 231, 297, 236, 242, 285,
	331, 270, 290, 197, 322, 298, 246, 0, 0, 555,
	529, 554, 556, 557, 553, 558, 559, 540, 452, 0,
	493, 551, 550, 552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 240,
	0, 281, 219, 518, 498, 499, 500, 450, 501, 496,
	497, 519, 491, 515, 516, 475, 494, 502, 514, 503,
	517, 520, 521, 560, 561, 509, 562, 506, 522, 513,
	512, 504, 492, 523, 524, 478, 477, 507, 508, 495,
	307, 487, 0, 338, 339, 340, 324, 0, 211, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 448, 0, 0, 0, 214, 0,
	0, 239, 0, 0, 0, 479, 0, 0, 299, 253,
	0, 0, 0, 0, 534, 542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 441, 0, 0, 473,
	511, 510, 460, 469, 0, 0, 195, 461, 0, 468,
	462, 466, 465, 463, 464, 0, 526, 0, 0, 0,
	0, 0, 0, 432, 445, 0, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 442, 443,
	1041, 0, 0, 0, 488, 0, 444, 0, 0, 451,
	470, 471, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	467, 486, 490, 207, 548, 484, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 549, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 482,
	0, 0, 330, 0, 0, 532, 0, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 485, 0, 289, 271,
	545, 433, 0, 287, 241, 315, 279, 321, 305, 329,
	283, 280, 181, 306, 210, 252, 192, 194, 206, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 343, 344, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 342, 221, 178, 179, 325, 530,
	267, 0, 544, 525, 527, 528, 531, 535, 536, 537,
	538, 539, 541, 543, 547, 292, 0, 0, 0, 0,
	0, 232, 273, 0, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 323, 335,
	352, 355, 0, 0, 0, 183, 354, 0, 0, 0,
	0, 0, 0, 0, 546, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 489, 257, 258, 259, 260, 533,
	0, 200, 353, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 220, 226, 0, 228, 199, 272, 222, 332, 235,
	0, 0, 0, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 0, 555, 529, 554, 556, 557, 553, 558, 559,
	540, 452, 0, 493, 551, 550, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 240, 0, 281, 219, 518, 498, 499, 500,
	450, 501, 496, 497, 519, 491, 515, 516, 475, 494,
	502, 514, 503, 517, 520, 521, 560, 561, 509, 562,
	506, 522, 513, 512, 504, 492, 523, 524, 478, 477,
	507, 508, 495, 0, 0, 0, 338, 339, 340, 324,
	0, 211, 307, 487, 0, 0, 1653, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 448, 0, 0, 0,
	214, 0, 0, 239, 0, 0, 0, 479, 0, 0,
	299, 253, 0, 0, 0, 0, 534, 542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 473, 511, 510, 460, 469, 0, 0, 195, 461,
	0, 468, 462, 466, 465, 463, 464, 0, 526, 0,
	0, 0, 0, 0, 0, 432, 445, 0, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	442, 443, 0, 0, 0, 0, 488, 0, 444, 0,
	0, 451, 470, 471, 0, 0, 186, 304, 320, 196,
	295, 333, 201, 302, 191, 268, 291, 0, 0, 188,
	318, 301, 250, 233, 234, 187, 0, 286, 212, 225,
	208, 266, 467, 486, 490, 207, 548, 484, 328, 190,
	0, 327, 265, 314, 319, 251, 245, 189, 316, 249,
	244, 237, 216, 549, 229, 277, 243, 278, 230, 255,
	254, 256, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 482, 0, 0, 330, 0, 0, 532, 0, 0,
	0, 303, 0, 0, 238, 0, 0, 0, 485, 0,
	289, 271, 545, 433, 0, 287, 241, 315, 279, 321,
	305, 329, 283, 280, 181, 306, 210, 252, 192, 194,
	206, 213, 215, 217, 218, 261, 262, 274, 294, 308,
	309, 310, 209, 202, 288, 203, 227, 204, 182, 296,
	205, 184, 275, 313, 0, 223, 284, 248, 185, 247,
	276, 312, 311, 193, 337, 343, 344, 348, 0, 349,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 342, 221, 178, 179,
	325, 530, 267, 0, 544, 525, 527, 528, 531, 535,
	536, 537, 538, 539, 541, 543, 547, 292, 0, 0,
	0, 0, 0, 232, 273, 0, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	323, 335, 352, 355, 0, 0, 0, 183, 354, 0,
	0, 0, 0, 0, 0, 0, 546, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 489, 257, 258, 259,
	260, 533, 0, 200, 353, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 220, 226, 0, 228, 199, 272, 222,
	332, 235, 0, 0, 0, 0, 0, 0, 0, 264,
	231, 297, 236, 242, 285, 331, 270, 290, 197, 322,
	298, 246, 0, 0, 555, 529, 554, 556, 557, 553,
	558, 559, 540, 452, 0, 493, 551, 550, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 240, 0, 281, 219, 518, 498,
	499, 500, 450, 501, 496, 497, 519, 491, 515, 516,
	475, 494, 502, 514, 503, 517, 520, 521, 560, 561,
	509, 562, 506, 522, 513, 512, 504, 492, 523, 524,
	478, 477, 507, 508, 495, 307, 487, 0, 338, 339,
	340, 324, 0, 211, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 448,
	0, 0, 0, 214, 0, 0, 239, 0, 0, 0,
	479, 0, 0, 299, 253, 0, 0, 0, 0, 534,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 441, 0, 0, 473, 511, 510, 460, 469, 0,
	0, 195, 461, 0, 468, 462, 466, 465, 463, 464,
	0, 526, 0, 0, 0, 0, 0, 0, 432, 445,
	0, 449, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 442, 443, 0, 0, 0, 0, 488,
	0, 444, 0, 0, 451, 470, 471, 0, 0, 186,
	304, 320, 196, 295, 333, 201, 302, 191, 268, 291,
	0, 0, 188, 318, 301, 250, 233, 234, 187, 0,
	286, 212, 225, 208, 266, 467, 486, 490, 207, 548,
	484, 328, 190, 0, 327, 265, 314, 319, 251, 245,
	189, 316, 249, 244, 237, 216, 549, 229, 277, 243,
	278, 230, 255, 254, 256, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 330, 0, 0,
	532, 0, 0, 0, 303, 0, 0, 238, 0, 0,
	0, 485, 0, 289, 271, 545, 433, 0, 287, 241,
	315, 279, 321, 305, 329, 283, 280, 181, 306, 210,
	252, 192, 194, 206, 213, 215, 217, 218, 261, 262,
	274, 294, 308, 309, 310, 209, 202, 288, 203, 227,
	204, 182, 296, 205, 184, 275, 313, 0, 223, 284,
	248, 185, 247, 276, 312, 311, 193, 337, 343, 344,
	348, 0, 349, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 342,
	221, 178, 179, 325, 530, 267, 0, 544, 525, 527,
	528, 531, 535, 536, 537, 538, 539, 541, 543, 547,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 546,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 489,
	257, 258, 259, 260, 533, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 0, 0, 0, 0,
	0, 0, 264, 231, 297, 236, 242, 285, 331, 270,
	290, 197, 322, 298, 246, 0, 0, 555, 529, 554,
	556, 557, 553, 558, 559, 540, 452, 0, 493, 551,
	550, 552, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 240, 0, 281,
	219, 518, 498, 499, 500, 450, 501, 496, 497, 519,
	491, 515, 516, 475, 494, 502, 514, 503, 517, 520,
	521, 560, 561, 509, 562, 506, 522, 513, 512, 504,
	492, 523, 524, 478, 477, 507, 508, 495, 307, 487,
	0, 338, 339, 340, 324, 0, 211, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 1125, 0,
	0, 0, 448, 0, 0, 0, 214, 0, 0, 239,
	0, 0, 0, 479, 0, 0, 299, 253, 0, 0,
	0, 0, 534, 542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 441, 0, 0, 473, 511, 510,
	460, 469, 0, 0, 195, 461, 0, 468, 462, 466,
	465, 463, 464, 0, 526, 0, 0, 0, 0, 0,
	0, 0, 445, 0, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 442, 443, 0, 0,
	0, 0, 488, 0, 444, 0, 0, 451, 470, 471,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 467, 486,
	490, 207, 548, 484, 328, 190, 0, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 549,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 482, 0, 0,
	330, 0, 0, 532, 0, 0, 0, 303, 0, 0,
	238, 0, 0, 0, 485, 0, 289, 271, 545, 0,
	0, 287, 241, 315, 279, 321, 305, 329, 283, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	0, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 1126, 1127, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 530, 267, 0,
	544, 525, 527, 528, 531, 535, 536, 537, 538, 539,
	541, 543, 547, 292, 0, 0, 0, 0, 0, 232,
	273, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 323, 335, 352, 355,
	0, 0, 0, 183, 354, 0, 0, 0, 0, 0,
	0, 0, 546, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 489, 257, 258, 259, 260, 533, 0, 200,
	353, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 220,
	226, 0, 228, 199, 272, 222, 332, 235, 0, 0,
	0, 0, 0, 0, 0, 264, 231, 297, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 246, 0, 0,
	555, 529, 554, 556, 557, 553, 558, 559, 540, 452,
	0, 493, 551, 550, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	240, 0, 281, 219, 518, 498, 499, 500, 450, 501,
	496, 497, 519, 491, 515, 516, 475, 494, 502, 514,
	503, 517, 520, 521, 560, 561, 509, 562, 506, 522,
	513, 512, 504, 492, 523, 524, 478, 477, 507, 508,
	495, 307, 487, 0, 338, 339, 340, 324, 0, 211,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 448, 0, 0, 0, 214,
	0, 0, 239, 0, 0, 0, 479, 0, 0, 299,
	253, 0, 0, 0, 0, 534, 542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	473, 511, 510, 460, 469, 0, 0, 195, 461, 0,
	468, 462, 466, 465, 463, 464, 0, 526, 0, 0,
	0, 0, 0, 0, 432, 445, 0, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 488, 0, 444, 0, 0,
	451, 470, 471, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 0, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 467, 486, 490, 207, 548, 484, 328, 190, 0,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 549, 229, 277, 243, 278, 230, 255, 254,
	256, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	482, 0, 0, 330, 0, 0, 532, 0, 0, 0,
	303, 0, 0, 238, 0, 0, 0, 485, 0, 289,
	271, 545, 433, 0, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 0, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 342, 221, 178, 179, 325,
	530, 267, 0, 544, 525, 527, 528, 531, 535, 536,
	537, 538, 539, 541, 543, 547, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 546, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 489, 257, 258, 259, 260,
	533, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 0, 0, 0, 0, 0, 0, 264, 231,
	297, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	246, 0, 0, 555, 529, 554, 556, 557, 553, 558,
	559, 540, 452, 0, 493, 551, 550, 552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 240, 0, 281, 219, 518, 498, 499,
	500, 450, 501, 496, 497, 519, 491, 515, 516, 475,
	494, 502, 514, 503, 517, 520, 521, 560, 561, 509,
	562, 506, 522, 513, 512, 504, 492, 523, 524, 478,
	477, 507, 508, 495, 307, 487, 0, 338, 339, 340,
	324, 0, 211, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 448, 0,
	0, 0, 214, 0, 0, 239, 0, 0, 0, 479,
	0, 0, 299, 253, 0, 0, 0, 0, 534, 542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	441, 0, 0, 473, 511, 510, 460, 469, 0, 0,
	195, 461, 0, 468, 462, 466, 465, 463, 464, 0,
	526, 0, 0, 0, 0, 0, 0, 0, 445, 0,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 442, 443, 0, 0, 0, 0, 488, 0,
	444, 0, 0, 451, 470, 471, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 467, 486, 490, 207, 548, 484,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 549, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 482, 0, 0, 330, 0, 0, 532,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	485, 0, 289, 271, 545, 0, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 530, 267, 1181, 544, 525, 527, 528,
	531, 535, 536, 537, 538, 539, 541, 543, 547, 292,
	0, 0, 0, 0, 0, 232, 273, 0, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 323, 335, 352, 355, 0, 0, 0, 183,
	354, 0, 0, 0, 0, 0, 0, 0, 546, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 489, 257,
	258, 259, 260, 533, 0, 200, 353, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 220, 226, 0, 228, 199,
	272, 222, 332, 235, 0, 0, 0, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 555, 529, 554, 556,
	557, 553, 558, 559, 540, 452, 0, 493, 551, 550,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1177, 0, 0, 1174, 0, 0, 0, 1176, 1173, 1175,
	1179, 1180, 0, 0, 180, 1178, 240, 0, 281, 219,
	518, 498, 499, 500, 450, 501, 496, 497, 519, 491,
	515, 516, 475, 494, 502, 514, 503, 517, 520, 521,
	560, 561, 509, 562, 506, 522, 513, 512, 504, 492,
	523, 524, 478, 477, 507, 508, 495, 307, 0, 0,
	338, 339, 340, 324, 0, 211, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 884, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 299, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 0, 0, 0, 1162, 1163,
	1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1184,
	1185, 1186, 1187, 1188, 1189, 1182, 1183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 872, 0, 0, 0,
	0, 186, 304, 320, 196, 295, 333, 201, 302, 191,
	268, 291, 0, 0, 1727, 1729, 1730, 1731, 1732, 1733,
	1734, 0, 1738, 1735, 1736, 1737, 266, 0, 1722, 1723,
	1724, 1725, 870, 1709, 1728, 0, 1710, 265, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 885, 1726,
	277, 243, 278, 230, 255, 254, 256, 895, 897, 899,
	901, 904, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 303, 0, 0, 238,
	0, 0, 0, 1721, 0, 289, 271, 0, 0, 0,
	287, 241, 315, 279, 321, 305, 329, 283, 280, 181,
	306, 210, 252, 192, 194, 206, 213, 215, 217, 218,
	261, 262, 274, 294, 308, 309, 310, 209, 202, 288,
	203, 227, 204, 182, 296, 205, 184, 275, 313, 0,
	223, 284, 248, 185, 247, 276, 312, 311, 193, 337,
	343, 344, 348, 0, 349, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 342, 221, 178, 179, 325, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 341, 0, 0,
	0, 0, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 350, 257, 258, 259, 260, 224, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 0, 0,
	0, 0, 0, 0, 264, 231, 297, 236, 242, 285,
	331, 270, 290, 197, 322, 298, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 894, 240,
	0, 281, 219, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 0, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	0, 0, 0, 338, 339, 340, 324, 0, 211, 131,
	307, 38, 121, 101, 0, 0, 0, 0, 0, 0,
	0, 269, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 299, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	0, 317, 345, 207, 336, 0, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 0, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 593, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 346, 0, 289, 271,
	0, 0, 0, 287, 241, 315, 279, 321, 305, 329,
	283, 280, 181, 306, 210, 252, 192, 194, 206, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 343, 344, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 342, 221, 178, 179, 325, 0,
	267, 0, 0, 595, 0, 0, 0, 0, 0, 263,
	341, 0, 0, 592, 591, 292, 0, 0, 0, 0,
	0, 232, 273, 0, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 585, 0, 0, 300, 323, 335,
	352, 355, 0, 0, 0, 183, 354, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 350, 257, 258, 259, 260, 368,
	370, 200, 353, 282, 0, 589, 0, 0, 0, 588,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	347, 220, 226, 0, 228, 199, 272, 222, 332, 235,
	583, 0, 0, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	581, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	39, 0, 0, 177, 590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 584, 0,
	180, 0, 240, 102, 281, 219, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 0, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 307, 0, 0, 338, 339, 340, 324,
	0, 211, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 594, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 299, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	2151, 2154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 304, 320,
	196, 295, 333, 201, 302, 191, 268, 291, 0, 0,
	188, 318, 301, 250, 233, 234, 187, 0, 286, 212,
	225, 208, 266, 0, 317, 345, 207, 336, 0, 328,
	190, 0, 327, 265, 314, 319, 251, 245, 189, 316,
	249, 244, 237, 216, 0, 229, 277, 243, 278, 230,
	255, 254, 256, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2155, 330, 0, 0, 0, 2148,
	0, 2147, 303, 2149, 2152, 238, 0, 0, 0, 346,
	0, 289, 271, 0, 0, 0, 287, 241, 315, 279,
	321, 305, 329, 283, 280, 181, 306, 210, 252, 192,
	194, 206, 213, 215, 217, 218, 261, 262, 274, 294,
	308, 309, 310, 209, 202, 288, 203, 227, 204, 182,
	296, 205, 184, 275, 313, 2153, 223, 284, 248, 185,
	247, 276, 312, 311, 193, 337, 343, 344, 348, 0,
	349, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 0, 342, 221, 178,
	179, 325, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 341, 0, 0, 0, 0, 292, 0,
	0, 0, 0, 0, 232, 273, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 323, 335, 352, 355, 0, 0, 0, 183, 354,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 350, 257, 258,
	259, 260, 224, 0, 200, 353, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 220, 226, 0, 228, 199, 272,
	222, 332, 235, 0, 0, 0, 0, 0, 0, 0,
	264, 231, 297, 236, 242, 285, 331, 270, 290, 197,
	322, 298, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 240, 0, 281, 219, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 0, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 307, 0, 0, 338,
	339, 340, 324, 0, 211, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1382,
	0, 0, 0, 0, 214, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 299, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 0, 1383, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 0, 775, 776, 777, 774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 304, 320, 196, 295, 333, 201, 302, 191, 268,
	291, 0, 0, 188, 318, 301, 250, 233, 234, 187,
	0, 286, 212, 225, 208, 266, 0, 317, 345, 207,
	336, 0, 328, 190, 0, 327, 265, 314, 319, 251,
	245, 189, 316, 249, 244, 237, 216, 0, 229, 277,
	243, 278, 230, 255, 254, 256, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 303, 0, 0, 238, 0,
	0, 0, 346, 0, 289, 271, 0, 0, 0, 287,
	241, 315, 279, 321, 305, 329, 283, 280, 181, 306,
	210, 252, 192, 194, 206, 213, 215, 217, 218, 261,
	262, 274, 294, 308, 309, 310, 209, 202, 288, 203,
	227, 204, 182, 296, 205, 184, 275, 313, 0, 223,
	284, 248, 185, 247, 276, 312, 311, 193, 337, 343,
	344, 348, 0, 349, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	342, 221, 178, 179, 325, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 341, 0, 0, 0,
	0, 292, 0, 0, 0, 0, 0, 232, 273, 0,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 323, 335, 352, 355, 0, 0,
	0, 183, 354, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 334, 0, 0, 0, 0, 0,
	350, 257, 258, 259, 260, 224, 0, 200, 353, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 220, 226, 0,
	228, 199, 272, 222, 332, 235, 0, 0, 0, 0,
	0, 0, 0, 264, 231, 297, 236, 242, 285, 331,
	270, 290, 197, 322, 298, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 240, 0,
	281, 219, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 0, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 307,
	0, 0, 338, 339, 340, 324, 0, 211, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 655, 0,
	239, 0, 0, 0, 0, 0, 0, 299, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 663,
	664, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 667, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 304, 320, 196, 295, 333, 201,
	302, 191, 268, 291, 0, 0, 188, 318, 301, 250,
	233, 234, 187, 0, 286, 212, 225, 208, 266, 0,
	317, 345, 207, 336, 640, 328, 190, 639, 327, 265,
	314, 319, 251, 245, 189, 316, 249, 244, 237, 216,
	0, 229, 277, 243, 278, 230, 255, 254, 256, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 303, 0,
	0, 238, 0, 0, 0, 346, 0, 289, 271, 0,
	0, 0, 287, 241, 315, 279, 321, 305, 329, 653,
	280, 181, 306, 210, 252, 192, 194, 206, 213, 215,
	217, 218, 261, 262, 274, 294, 308, 309, 310, 209,
	202, 288, 203, 227, 204, 182, 296, 205, 184, 275,
	313, 0, 223, 284, 248, 185, 247, 276, 312, 311,
	193, 337, 343, 344, 348, 0, 349, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 342, 221, 178, 179, 325, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 341,
	0, 0, 0, 0, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 654, 326, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 657, 257, 258, 259, 260, 224, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	0, 0, 0, 0, 0, 0, 665, 660, 661, 236,
	242, 285, 331, 270, 290, 197, 322, 298, 662, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 240, 0, 281, 219, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 0, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 131, 307, 0, 338, 339, 340, 324, 0,
	211, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 90, 0,
	0, 299, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	1403, 0, 138, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 304, 320,
	196, 295, 333, 201, 302, 191, 268, 291, 0, 0,
	188, 318, 301, 250, 233, 234, 187, 0, 286, 212,
	225, 208, 266, 0, 317, 345, 207, 336, 0, 328,
	190, 0, 327, 265, 314, 319, 251, 245, 189, 316,
	249, 244, 237, 216, 0, 229, 277, 243, 278, 230,
	255, 254, 256, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 0, 303, 0, 0, 238, 0, 0, 0, 346,
	0, 289, 271, 0, 0, 0, 287, 241, 315, 279,
	321, 305, 329, 283, 280, 181, 306, 210, 252, 192,
	194, 206, 213, 215, 217, 218, 261, 262, 274, 294,
	308, 309, 310, 209, 202, 288, 203, 227, 204, 182,
	296, 205, 184, 275, 313, 0, 223, 284, 248, 185,
	247, 276, 312, 311, 193, 337, 343, 344, 348, 0,
	349, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 0, 342, 221, 178,
	179, 325, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 341, 0, 0, 0, 0, 292, 0,
	0, 0, 0, 0, 232, 273, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 323, 335, 352, 355, 0, 0, 0, 183, 354,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 350, 257, 258,
	259, 260, 224, 0, 200, 353, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 220, 226, 0, 228, 199, 272,
	222, 332, 235, 0, 0, 0, 0, 0, 0, 0,
	264, 231, 297, 236, 242, 285, 331, 270, 290, 197,
	322, 298, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 240, 102, 281, 219, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 0, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 131, 307, 0, 338,
	339, 340, 324, 0, 211, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 239, 0,
	0, 0, 90, 0, 0, 299, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 1394, 0, 138, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 304, 320, 196, 295, 333, 201, 302, 191,
	268, 291, 0, 0, 188, 318, 301, 250, 233, 234,
	187, 0, 286, 212, 225, 208, 266, 0, 317, 345,
	207, 336, 0, 328, 190, 0, 327, 265, 314, 319,
	251, 245, 189, 316, 249, 244, 237, 216, 0, 229,
	277, 243, 278, 230, 255, 254, 256, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 303, 0, 0, 238,
	0, 0, 0, 346, 0, 289, 271, 0, 0, 0,
	287, 241, 315, 279, 321, 305, 329, 283, 280, 181,
	306, 210, 252, 192, 194, 206, 213, 215, 217, 218,
	261, 262, 274, 294, 308, 309, 310, 209, 202, 288,
	203, 227, 204, 182, 296, 205, 184, 275, 313, 0,
	223, 284, 248, 185, 247, 276, 312, 311, 193, 337,
	343, 344, 348, 0, 349, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 342, 221, 178, 179, 325, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 341, 0, 0,
	0, 0, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 350, 257, 258, 259, 260, 224, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 0, 0,
	0, 0, 0, 0, 264, 231, 297, 236, 242, 285,
	331, 270, 290, 197, 322, 298, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 240,
	102, 281, 219, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 0, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	131, 307, 0, 338, 339, 340, 324, 0, 211, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 239, 0, 0, 0, 90, 0, 0, 299,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 0, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 0, 317, 345, 207, 336, 0, 328, 190, 0,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 0, 229, 277, 243, 278, 230, 255, 254,
	256, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	303, 0, 0, 238, 0, 0, 0, 346, 0, 289,
	271, 0, 0, 0, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 0, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 342, 221, 178, 179, 325,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 341, 0, 0, 0, 0, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 0, 0, 0, 0, 0, 0, 264, 231,
	297, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 240, 102, 281, 219, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 0,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 307, 0, 0, 338, 339, 340,
	324, 0, 211, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 299, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 663, 664, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	667, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 0, 317, 345, 207, 336, 640,
	328, 190, 639, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 0, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	346, 0, 289, 271, 0, 0, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 341, 0, 0, 0, 0, 292,
	0, 0, 0, 0, 0, 232, 273, 0, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 323, 335, 352, 355, 0, 0, 0, 183,
	354, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 350, 257,
	258, 259, 260, 224, 0, 200, 353, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 220, 226, 0, 228, 199,
	272, 222, 332, 235, 0, 0, 0, 0, 0, 0,
	0, 665, 660, 661, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 662, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 0, 281, 219,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 0, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 307, 0, 0,
	338, 339, 340, 324, 0, 211, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 1023, 0, 239, 0,
	0, 0, 0, 0, 0, 299, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 0, 1021,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1019, 0, 0, 0,
	0, 186, 304, 320, 196, 295, 333, 201, 302, 191,
	268, 291, 0, 0, 188, 318, 301, 250, 233, 234,
	187, 0, 286, 212, 225, 208, 266, 0, 317, 345,
	207, 336, 0, 328, 190, 0, 327, 265, 314, 319,
	251, 245, 189, 316, 249, 244, 237, 216, 0, 229,
	277, 243, 278, 230, 255, 254, 256, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 303, 0, 0, 238,
	0, 0, 0, 346, 0, 289, 271, 0, 0, 0,
	287, 241, 315, 279, 321, 305, 329, 283, 280, 181,
	306, 210, 252, 192, 194, 206, 213, 215, 217, 218,
	261, 262, 274, 294, 308, 309, 310, 209, 202, 288,
	203, 227, 204, 182, 296, 205, 184, 275, 313, 0,
	223, 284, 248, 185, 247, 276, 312, 311, 193, 337,
	343, 344, 348, 0, 349, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 342, 221, 178, 179, 325, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 341, 0, 0,
	0, 0, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 350, 257, 258, 259, 260, 224, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 0, 0,
	0, 0, 0, 0, 264, 231, 297, 236, 242, 285,
	331, 270, 290, 197, 322, 298, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 240,
	0, 281, 219, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 0, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	307, 0, 0, 338, 339, 340, 324, 0, 211, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 214, 1017,
	0, 239, 0, 0, 0, 0, 0, 0, 299, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 0, 1021, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1019,
	0, 0, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	0, 317, 345, 207, 336, 0, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 0, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 346, 0, 289, 271,
	0, 0, 0, 287, 241, 315, 279, 321, 305, 329,
	283, 280, 181, 306, 210, 252, 192, 194, 206, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 343, 344, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 342, 221, 178, 179, 325, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	341, 0, 0, 0, 0, 292, 0, 0, 0, 0,
	0, 232, 273, 0, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 323, 335,
	352, 355, 0, 0, 0, 183, 354, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 350, 257, 258, 259, 260, 224,
	0, 200, 353, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 220, 226, 0, 228, 199, 272, 222, 332, 235,
	0, 0, 0, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 240, 0, 281, 219, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 0, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 307, 0, 0, 338, 339, 340, 324,
	0, 211, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 299, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2659, 0, 138, 511, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 304, 320,
	196, 295, 333, 201, 302, 191, 268, 291, 0, 0,
	188, 318, 301, 250, 233, 234, 187, 0, 286, 212,
	225, 208, 266, 0, 317, 345, 207, 336, 0, 328,
	190, 0, 327, 265, 314, 319, 251, 245, 189, 316,
	249, 244, 237, 216, 0, 229, 277, 243, 278, 230,
	255, 254, 256, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 0, 303, 0, 0, 238, 0, 0, 0, 346,
	0, 289, 271, 0, 0, 0, 287, 241, 315, 279,
	321, 305, 329, 283, 280, 181, 306, 210, 252, 192,
	194, 206, 213, 215, 217, 218, 261, 262, 274, 294,
	308, 309, 310, 209, 202, 288, 203, 227, 204, 182,
	296, 205, 184, 275, 313, 0, 223, 284, 248, 185,
	247, 276, 312, 311, 193, 337, 343, 344, 348, 0,
	349, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 0, 342, 221, 178,
	179, 325, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 341, 0, 0, 0, 0, 292, 0,
	0, 0, 0, 0, 232, 273, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 323, 335, 352, 355, 0, 0, 0, 183, 354,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 350, 257, 258,
	259, 260, 224, 0, 200, 353, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 220, 226, 0, 228, 199, 272,
	222, 332, 235, 0, 0, 0, 0, 0, 0, 0,
	264, 231, 297, 236, 242, 285, 331, 270, 290, 197,
	322, 298, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 240, 0, 281, 219, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 0, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 307, 0, 0, 338,
	339, 340, 324, 0, 211, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 299, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 0, 1021, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1019, 0, 0, 0, 0,
	186, 304, 320, 196, 295, 333, 201, 302, 191, 268,
	291, 0, 0, 188, 318, 301, 250, 233, 234, 187,
	0, 286, 212, 225, 208, 266, 0, 317, 345, 207,
	336, 0, 328, 190, 0, 327, 265, 314, 319, 251,
	245, 189, 316, 249, 244, 237, 216, 0, 229, 277,
	243, 278, 230, 255, 254, 256, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 303, 0, 0, 238, 0,
	0, 0, 346, 0, 289, 271, 0, 0, 0, 287,
	241, 315, 279, 321, 305, 329, 283, 280, 181, 306,
	210, 252, 192, 194, 206, 213, 215, 217, 218, 261,
	262, 274, 294, 308, 309, 310, 209, 202, 288, 203,
	227, 204, 182, 296, 205, 184, 275, 313, 0, 223,
	284, 248, 185, 247, 276, 312, 311, 193, 337, 343,
	344, 348, 0, 349, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	342, 221, 178, 179, 325, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 341, 0, 0, 0,
	0, 292, 0, 0, 0, 0, 0, 232, 273, 0,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 323, 335, 352, 355, 0, 0,
	0, 183, 354, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 334, 0, 0, 0, 0, 0,
	350, 257, 258, 259, 260, 224, 0, 200, 353, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 220, 226, 0,
	228, 199, 272, 222, 332, 235, 0, 0, 0, 0,
	0, 0, 0, 264, 231, 297, 236, 242, 285, 331,
	270, 290, 197, 322, 298, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 240, 0,
	281, 219, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 0, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 307,
	0, 0, 338, 339, 340, 324, 0, 211, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 299, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 1021, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2289, 0,
	0, 0, 0, 186, 304, 320, 196, 295, 333, 201,
	302, 191, 268, 291, 0, 0, 188, 318, 301, 250,
	233, 234, 187, 0, 286, 212, 225, 208, 266, 0,
	317, 345, 207, 336, 0, 328, 190, 0, 327, 265,
	314, 319, 251, 245, 189, 316, 249, 244, 237, 216,
	0, 229, 277, 243, 278, 230, 255, 254, 256, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 303, 0,
	0, 238, 0, 0, 0, 346, 0, 289, 271, 0,
	0, 0, 287, 241, 315, 279, 321, 305, 329, 283,
	280, 181, 306, 210, 252, 192, 194, 206, 213, 215,
	217, 218, 261, 262, 274, 294, 308, 309, 310, 209,
	202, 288, 203, 227, 204, 182, 296, 205, 184, 275,
	313, 0, 223, 284, 248, 185, 247, 276, 312, 311,
	193, 337, 343, 344, 348, 0, 349, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 342, 221, 178, 179, 325, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 341,
	0, 0, 0, 0, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 350, 257, 258, 259, 260, 224, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	0, 0, 0, 0, 0, 0, 264, 231, 297, 236,
	242, 285, 331, 270, 290, 197, 322, 298, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 240, 0, 281, 219, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 0, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 307, 0, 0, 338, 339, 340, 324, 0,
	211, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	214, 1822, 0, 239, 0, 0, 0, 0, 0, 0,
	299, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 0, 1021, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 304, 320, 196,
	295, 333, 201, 302, 191, 268, 291, 0, 0, 188,
	318, 301, 250, 233, 234, 187, 0, 286, 212, 225,
	208, 266, 0, 317, 345, 207, 336, 0, 328, 190,
	0, 327, 265, 314, 319, 251, 245, 189, 316, 249,
	244, 237, 216, 0, 229, 277, 243, 278, 230, 255,
	254, 256, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 303, 0, 0, 238, 0, 0, 0, 346, 0,
	289, 271, 0, 0, 0, 287, 241, 315, 279, 321,
	305, 329, 283, 280, 181, 306, 210, 252, 192, 194,
	206, 213, 215, 217, 218, 261, 262, 274, 294, 308,
	309, 310, 209, 202, 288, 203, 227, 204, 182, 296,
	205, 184, 275, 313, 0, 223, 284, 248, 185, 247,
	276, 312, 311, 193, 337, 343, 344, 348, 0, 349,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 342, 221, 178, 179,
	325, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 341, 0, 0, 0, 0, 292, 0, 0,
	0, 0, 0, 232, 273, 0, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	323, 335, 352, 355, 0, 0, 0, 183, 354, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 350, 257, 258, 259,
	260, 224, 0, 200, 353, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 220, 226, 0, 228, 199, 272, 222,
	332, 235, 0, 0, 0, 0, 0, 0, 0, 264,
	231, 297, 236, 242, 285, 331, 270, 290, 197, 322,
	298, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 240, 0, 281, 219, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	0, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 307, 0, 0, 338, 339,
	340, 324, 0, 211, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 299, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2764, 0, 138, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	304, 320, 196, 295, 333, 201, 302, 191, 268, 291,
	0, 0, 188, 318, 301, 250, 233, 234, 187, 0,
	286, 212, 225, 208, 266, 0, 317, 345, 207, 336,
	0, 328, 190, 0, 327, 265, 314, 319, 251, 245,
	189, 316, 249, 244, 237, 216, 0, 229, 277, 243,
	278, 230, 255, 254, 256, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 303, 0, 0, 238, 0, 0,
	0, 346, 0, 289, 271, 0, 0, 0, 287, 241,
	315, 279, 321, 305, 329, 283, 280, 181, 306, 210,
	252, 192, 194, 206, 213, 215, 217, 218, 261, 262,
	274, 294, 308, 309, 310, 209, 202, 288, 203, 227,
	204, 182, 296, 205, 184, 275, 313, 0, 223, 284,
	248, 185, 247, 276, 312, 311, 193, 337, 343, 344,
	348, 0, 349, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 342,
	221, 178, 179, 325, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 341, 0, 0, 0, 0,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 350,
	257, 258, 259, 260, 224, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 0, 0, 0, 0,
	0, 0, 264, 231, 297, 236, 242, 285, 331, 270,
	290, 197, 322, 298, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 240, 0, 281,
	219, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 0, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 307, 0,
	0, 338, 339, 340, 324, 0, 211, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 299, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 511, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 0, 317,
	345, 207, 336, 0, 328, 190, 0, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 0,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 303, 0, 0,
	238, 0, 0, 0, 346, 0, 289, 271, 0, 0,
	0, 287, 241, 315, 279, 321, 305, 329, 283, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	0, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 343, 344, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 341, 0,
	0, 0, 0, 292, 0, 0, 0, 0, 0, 232,
	273, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 323, 335, 352, 355,
	0, 0, 0, 183, 354, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 350, 257, 258, 259, 260, 224, 0, 200,
	353, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 220,
	226, 0, 228, 199, 272, 222, 332, 235, 0, 0,
	0, 0, 0, 0, 0, 264, 231, 297, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	240, 0, 281, 219, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 0, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 307, 0, 0, 338, 339, 340, 324, 0, 211,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 299,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2673, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 0, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 0, 317, 345, 207, 336, 0, 328, 190, 0,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 0, 229, 277, 243, 278, 230, 255, 254,
	256, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	303, 0, 0, 238, 0, 0, 0, 346, 0, 289,
	271, 0, 0, 0, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 0, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 342, 221, 178, 179, 325,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 341, 0, 0, 0, 0, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 0, 0, 0, 0, 0, 0, 264, 231,
	297, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 240, 0, 281, 219, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 0,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 307, 0, 0, 338, 339, 340,
	324, 0, 211, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 299, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2403, 0, 0, 138, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 0, 317, 345, 207, 336, 0,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 0, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	346, 0, 289, 271, 0, 0, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 341, 0, 0, 0, 0, 292,
	0, 0, 0, 0, 0, 232, 273, 0, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 323, 335, 352, 355, 0, 0, 0, 183,
	354, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 350, 257,
	258, 259, 260, 224, 0, 200, 353, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 220, 226, 0, 228, 199,
	272, 222, 332, 235, 0, 0, 0, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 0, 281, 219,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 0, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 307, 0, 0,
	338, 339, 340, 324, 0, 211, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 299, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 304, 320, 196, 295, 333, 201, 302, 191,
	268, 291, 0, 0, 188, 318, 301, 250, 233, 234,
	187, 0, 286, 212, 225, 208, 266, 0, 317, 345,
	207, 336, 0, 328, 190, 0, 327, 265, 314, 319,
	251, 245, 189, 316, 249, 244, 237, 216, 0, 229,
	277, 243, 278, 230, 255, 254, 256, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 2599, 0, 0, 303, 0, 0, 238,
	0, 0, 0, 346, 0, 289, 271, 0, 0, 0,
	287, 241, 315, 279, 321, 305, 329, 283, 280, 181,
	306, 210, 252, 192, 194, 206, 213, 215, 217, 218,
	261, 262, 274, 294, 308, 309, 310, 209, 202, 288,
	203, 227, 204, 182, 296, 205, 184, 275, 313, 0,
	223, 284, 248, 185, 247, 276, 312, 311, 193, 337,
	343, 344, 348, 0, 349, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 342, 221, 178, 179, 325, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 341, 0, 0,
	0, 0, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 350, 257, 258, 259, 260, 224, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 0, 0,
	0, 0, 0, 0, 264, 231, 297, 236, 242, 285,
	331, 270, 290, 197, 322, 298, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 240,
	0, 281, 219, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 0, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	307, 0, 0, 338, 339, 340, 324, 0, 211, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 299, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	0, 317, 345, 207, 336, 0, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 0, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 2414, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 346, 0, 289, 271,
	0, 0, 0, 287, 241, 315, 279, 321, 305, 329,
	283, 280, 181, 306, 210, 252, 192, 194, 206, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 343, 344, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 342, 221, 178, 179, 325, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	341, 0, 0, 0, 0, 292, 0, 0, 0, 0,
	0, 232, 273, 0, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 323, 335,
	352, 355, 0, 0, 0, 183, 354, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 350, 257, 258, 259, 260, 224,
	0, 200, 353, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 220, 226, 0, 228, 199, 272, 222, 332, 235,
	0, 0, 0, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 240, 0, 281, 219, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 0, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 307, 0, 0, 338, 339, 340, 324,
	0, 211, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 299, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 304, 320,
	196, 295, 333, 201, 302, 191, 268, 291, 0, 0,
	188, 318, 301, 250, 233, 234, 187, 0, 286, 212,
	225, 208, 266, 0, 317, 345, 207, 336, 0, 328,
	190, 0, 327, 265, 314, 319, 251, 245, 189, 316,
	249, 244, 237, 216, 0, 229, 277, 243, 278, 230,
	255, 254, 256, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 0, 303, 0, 0, 238, 0, 0, 0, 346,
	0, 289, 271, 0, 0, 0, 287, 241, 315, 279,
	321, 305, 329, 283, 280, 181, 306, 210, 252, 192,
	194, 206, 213, 215, 217, 218, 261, 262, 274, 294,
	308, 309, 310, 209, 202, 288, 203, 227, 204, 182,
	296, 205, 184, 275, 313, 0, 223, 284, 248, 185,
	247, 276, 312, 311, 193, 337, 343, 344, 348, 0,
	349, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 0, 342, 221, 178,
	179, 325, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 341, 0, 0, 0, 0, 292, 0,
	0, 0, 0, 0, 232, 273, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 323, 335, 352, 355, 0, 0, 0, 183, 354,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 350, 257, 258,
	259, 260, 224, 0, 200, 353, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 220, 226, 0, 228, 199, 272,
	222, 332, 235, 0, 0, 0, 0, 0, 0, 0,
	264, 231, 297, 236, 242, 285, 331, 270, 290, 197,
	322, 298, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 240, 0, 281, 219, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 0, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 307, 0, 0, 338,
	339, 340, 324, 0, 211, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 299, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1336, 0, 0, 138, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 304, 320, 196, 295, 333, 201, 302, 191, 268,
	291, 0, 0, 188, 318, 301, 250, 233, 234, 187,
	0, 286, 212, 225, 208, 266, 0, 317, 345, 207,
	336, 0, 328, 190, 0, 327, 265, 314, 319, 251,
	245, 189, 316, 249, 244, 237, 216, 0, 229, 277,
	243, 278, 230, 255, 254, 256, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 303, 0, 0, 238, 0,
	0, 0, 346, 0, 289, 271, 0, 0, 0, 287,
	241, 315, 279, 321, 305, 329, 283, 280, 181, 306,
	210, 252, 192, 194, 206, 213, 215, 217, 218, 261,
	262, 274, 294, 308, 309, 310, 209, 202, 288, 203,
	227, 204, 182, 296, 205, 184, 275, 313, 0, 223,
	284, 248, 185, 247, 276, 312, 311, 193, 337, 343,
	344, 348, 0, 349, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	342, 221, 178, 179, 325, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 341, 0, 0, 0,
	0, 292, 0, 0, 0, 0, 0, 232, 273, 0,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 323, 335, 352, 355, 0, 0,
	0, 183, 354, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 334, 0, 0, 0, 0, 0,
	350, 257, 258, 259, 260, 224, 0, 200, 353, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 220, 226, 0,
	228, 199, 272, 222, 332, 235, 0, 0, 0, 0,
	0, 0, 0, 264, 231, 297, 236, 242, 285, 331,
	270, 290, 197, 322, 298, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 240, 0,
	281, 219, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 0, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 307,
	0, 0, 338, 339, 340, 324, 0, 211, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 299, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 304, 320, 196, 295, 333, 201,
	302, 191, 268, 291, 0, 0, 188, 318, 301, 250,
	233, 234, 187, 0, 286, 212, 225, 208, 266, 0,
	317, 345, 207, 336, 0, 328, 190, 0, 327, 265,
	314, 319, 251, 245, 189, 316, 249, 244, 237, 216,
	0, 229, 277, 243, 278, 230, 255, 254, 256, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 303, 0,
	0, 238, 0, 0, 0, 346, 0, 289, 271, 0,
	0, 0, 287, 241, 315, 279, 321, 305, 329, 283,
	280, 181, 306, 210, 252, 192, 194, 206, 213, 215,
	217, 218, 261, 262, 274, 294, 308, 309, 310, 209,
	202, 288, 203, 227, 204, 182, 296, 205, 184, 275,
	313, 0, 223, 284, 248, 185, 247, 276, 312, 311,
	193, 337, 343, 344, 348, 0, 349, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 342, 221, 178, 179, 325, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 341,
	0, 0, 0, 0, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 350, 257, 258, 259, 260, 224, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	0, 0, 0, 0, 0, 0, 264, 231, 297, 236,
	242, 285, 331, 270, 290, 197, 322, 298, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 240, 0, 281, 219, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 0, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 307, 0, 0, 338, 339, 340, 324, 0,
	211, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	299, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 0, 2159, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 304, 320, 196,
	295, 333, 201, 302, 191, 268, 291, 0, 0, 188,
	318, 301, 250, 233, 234, 187, 0, 286, 212, 225,
	208, 266, 0, 317, 345, 207, 336, 0, 328, 190,
	0, 327, 265, 314, 319, 251, 245, 189, 316, 249,
	244, 237, 216, 0, 229, 277, 243, 278, 230, 255,
	254, 256, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 303, 0, 0, 238, 0, 0, 0, 346, 0,
	289, 271, 0, 0, 0, 287, 241, 315, 279, 321,
	305, 329, 283, 280, 181, 306, 210, 252, 192, 194,
	206, 213, 215, 217, 218, 261, 262, 274, 294, 308,
	309, 310, 209, 202, 288, 203, 227, 204, 182, 296,
	205, 184, 275, 313, 0, 223, 284, 248, 185, 247,
	276, 312, 311, 193, 337, 343, 344, 348, 0, 349,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 342, 221, 178, 179,
	325, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 341, 0, 0, 0, 0, 292, 0, 0,
	0, 0, 0, 232, 273, 0, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	323, 335, 352, 355, 0, 0, 0, 183, 354, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 350, 257, 258, 259,
	260, 224, 0, 200, 353, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 220, 226, 0, 228, 199, 272, 222,
	332, 235, 0, 0, 0, 0, 0, 0, 0, 264,
	231, 297, 236, 242, 285, 331, 270, 290, 197, 322,
	298, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 240, 0, 281, 219, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	0, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 307, 0, 0, 338, 339,
	340, 324, 0, 211, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 299, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 1021, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	304, 320, 196, 295, 333, 201, 302, 191, 268, 291,
	0, 0, 188, 318, 301, 250, 233, 234, 187, 0,
	286, 212, 225, 208, 266, 0, 317, 345, 207, 336,
	0, 328, 190, 0, 327, 265, 314, 319, 251, 245,
	189, 316, 249, 244, 237, 216, 0, 229, 277, 243,
	278, 230, 255, 254, 256, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 303, 0, 0, 238, 0, 0,
	0, 346, 0, 289, 271, 0, 0, 0, 287, 241,
	315, 279, 321, 305, 329, 283, 280, 181, 306, 210,
	252, 192, 194, 206, 213, 215, 217, 218, 261, 262,
	274, 294, 308, 309, 310, 209, 202, 288, 203, 227,
	204, 182, 296, 205, 184, 275, 313, 0, 223, 284,
	248, 185, 247, 276, 312, 311, 193, 337, 343, 344,
	348, 0, 349, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 342,
	221, 178, 179, 325, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 341, 0, 0, 0, 0,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 350,
	257, 258, 259, 260, 224, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 0, 0, 0, 0,
	0, 0, 264, 231, 297, 236, 242, 285, 331, 270,
	290, 197, 322, 298, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 240, 0, 281,
	219, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 0, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 307, 0,
	0, 338, 339, 340, 324, 0, 211, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 299, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 0, 317,
	345, 207, 336, 0, 328, 190, 0, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 0,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 303, 0, 0,
	238, 0, 0, 0, 346, 0, 289, 271, 0, 0,
	0, 287, 241, 315, 279, 321, 305, 329, 283, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	0, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 343, 344, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 341, 0,
	0, 0, 0, 292, 0, 0, 0, 0, 0, 232,
	273, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 323, 335, 352, 355,
	0, 0, 0, 183, 354, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 350, 257, 258, 259, 260, 224, 0, 200,
	353, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 220,
	226, 0, 228, 199, 272, 222, 332, 235, 0, 0,
	0, 0, 0, 0, 0, 264, 231, 297, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	240, 0, 281, 219, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 0, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 307, 0, 0, 338, 339, 340, 324, 0, 211,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 299,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 1831, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 0, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 0, 317, 345, 207, 336, 0, 328, 190, 0,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 0, 229, 277, 243, 278, 230, 255, 254,
	256, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	303, 0, 0, 238, 0, 0, 0, 346, 0, 289,
	271, 0, 0, 0, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 0, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 342, 221, 178, 179, 325,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 341, 0, 0, 0, 0, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 0, 0, 0, 0, 0, 0, 264, 231,
	297, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 240, 0, 281, 219, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 0,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 0, 0, 0, 338, 339, 340,
	324, 307, 211, 0, 0, 1757, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 299,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 0, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 0, 317, 345, 207, 336, 0, 328, 190, 0,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 0, 229, 277, 243, 278, 230, 255, 254,
	256, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	303, 0, 0, 238, 0, 0, 0, 346, 0, 289,
	271, 0, 0, 0, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 0, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 342, 221, 178, 179, 325,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 341, 0, 0, 0, 0, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 0, 0, 0, 0, 0, 0, 264, 231,
	297, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 240, 0, 281, 219, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 0,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 307, 0, 0, 338, 339, 340,
	324, 0, 211, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 299, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 0, 1021, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 0, 317, 345, 207, 336, 0,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 0, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	346, 0, 289, 271, 0, 0, 0, 287, 241, 315,
	279, 321, 305, 329, 1298, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 341, 0, 0, 0, 0, 292,
	0, 0, 0, 0, 0, 232, 273, 0, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 323, 335, 352, 355, 0, 0, 0, 183,
	354, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 350, 257,
	258, 259, 260, 224, 0, 200, 353, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 220, 226, 0, 228, 199,
	272, 222, 332, 235, 0, 0, 0, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 0, 281, 219,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 0, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 307, 0, 0,
	338, 339, 340, 324, 0, 211, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 299, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 304, 320, 196, 295, 333, 201, 302, 191,
	268, 291, 0, 0, 188, 318, 301, 250, 233, 234,
	187, 0, 286, 212, 225, 208, 266, 0, 317, 345,
	207, 336, 0, 328, 190, 0, 327, 265, 314, 319,
	251, 245, 189, 316, 249, 244, 237, 216, 0, 229,
	277, 243, 278, 230, 255, 254, 256, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 303, 0, 0, 238,
	0, 0, 0, 346, 0, 289, 271, 0, 0, 0,
	287, 241, 315, 279, 321, 305, 329, 283, 280, 181,
	306, 210, 252, 192, 194, 206, 213, 215, 217, 218,
	261, 262, 274, 294, 308, 309, 310, 209, 202, 288,
	203, 227, 204, 182, 296, 205, 184, 275, 313, 0,
	223, 284, 248, 185, 247, 276, 312, 311, 193, 337,
	343, 344, 348, 0, 349, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 342, 221, 178, 179, 325, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 341, 0, 0,
	0, 0, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 350, 257, 258, 259, 260, 224, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 0, 0,
	0, 0, 0, 0, 264, 231, 297, 236, 242, 285,
	331, 270, 290, 197, 322, 298, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 602, 0, 0, 0, 180, 0, 240,
	0, 281, 219, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 0, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	307, 0, 0, 338, 339, 340, 324, 0, 211, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 299, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	0, 317, 345, 207, 336, 0, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 0, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 346, 0, 289, 271,
	0, 0, 0, 287, 241, 315, 279, 321, 305, 329,
	386, 280, 181, 306, 210, 252, 192, 194, 206, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 343, 344, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 342, 221, 178, 179, 325, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	341, 0, 0, 0, 0, 292, 0, 0, 0, 0,
	0, 232, 273, 0, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 323, 335,
	352, 355, 0, 0, 0, 183, 354, 0, 0, 0,
	0, 0, 0, 387, 326, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 350, 257, 258, 259, 260, 224,
	0, 200, 353, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 220, 226, 0, 228, 199, 272, 222, 332, 235,
	0, 0, 0, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 240, 0, 281, 219, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 0, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 307, 0, 0, 338, 339, 340, 324,
	0, 211, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 299, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 304, 320,
	196, 295, 333, 201, 302, 191, 268, 291, 0, 0,
	188, 318, 301, 250, 233, 234, 187, 0, 286, 212,
	225, 208, 266, 0, 317, 345, 207, 336, 0, 328,
	190, 0, 327, 265, 314, 319, 251, 245, 189, 316,
	249, 244, 237, 216, 0, 229, 277, 243, 278, 230,
	255, 254, 256, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 0, 330, 0, 0, 0, 0,
	0, 0, 303, 0, 0, 238, 0, 0, 0, 346,
	0, 289, 271, 0, 0, 0, 287, 241, 315, 279,
	321, 305, 329, 283, 280, 181, 306, 210, 252, 192,
	194, 206, 213, 215, 217, 218, 261, 262, 274, 294,
	308, 309, 310, 209, 202, 288, 203, 227, 204, 182,
	296, 205, 184, 275, 313, 0, 223, 284, 248, 185,
	247, 276, 312, 311, 193, 337, 343, 344, 348, 0,
	349, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 0, 342, 221, 178,
	179, 325, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 341, 0, 0, 0, 0, 292, 0,
	0, 0, 0, 0, 232, 273, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 323, 335, 352, 355, 0, 0, 0, 183, 354,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 350, 257, 258,
	259, 260, 224, 0, 200, 353, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 220, 226, 0, 228, 199, 272,
	222, 332, 235, 0, 0, 0, 0, 0, 0, 0,
	264, 231, 297, 236, 242, 285, 331, 270, 290, 197,
	322, 298, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 240, 0, 281, 219, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 0, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 307, 0, 0, 338,
	339, 340, 324, 0, 211, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 214, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 299, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 304, 320, 196, 295, 333, 201, 302, 191, 268,
	291, 0, 0, 188, 318, 301, 250, 233, 234, 187,
	0, 286, 212, 225, 208, 266, 0, 317, 345, 207,
	336, 0, 328, 190, 0, 327, 265, 314, 319, 251,
	245, 189, 316, 249, 244, 237, 216, 0, 229, 277,
	243, 278, 230, 255, 254, 256, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 303, 0, 0, 238, 0,
	0, 0, 346, 0, 289, 271, 0, 0, 0, 287,
	241, 315, 279, 321, 305, 329, 283, 280, 181, 306,
	210, 252, 192, 194, 206, 213, 215, 217, 218, 261,
	262, 274, 294, 308, 309, 310, 209, 202, 288, 203,
	227, 204, 182, 296, 205, 184, 275, 313, 0, 223,
	284, 248, 185, 247, 276, 312, 311, 193, 337, 343,
	344, 348, 0, 349, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	342, 221, 178, 179, 325, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 341, 0, 0, 0,
	0, 292, 0, 0, 0, 0, 0, 232, 273, 0,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 323, 335, 352, 355, 0, 0,
	0, 183, 354, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 334, 0, 0, 0, 0, 0,
	350, 257, 258, 259, 260, 224, 0, 200, 353, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 220, 226, 0,
	228, 199, 272, 222, 332, 235, 0, 0, 0, 0,
	0, 0, 0, 264, 231, 297, 236, 242, 285, 331,
	270, 290, 197, 322, 298, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 240, 0,
	281, 219, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 0, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 307,
	0, 0, 338, 339, 340, 324, 0, 211, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 299, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 304, 320, 196, 295, 333, 201,
	302, 191, 268, 291, 0, 0, 188, 318, 301, 250,
	233, 234, 187, 0, 286, 212, 225, 208, 266, 0,
	317, 345, 207, 336, 0, 328, 190, 0, 327, 265,
	314, 319, 251, 245, 189, 316, 249, 244, 237, 216,
	0, 229, 277, 243, 278, 230, 255, 254, 256, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 303, 0,
	0, 238, 0, 0, 0, 346, 0, 289, 271, 0,
	0, 0, 287, 241, 315, 279, 321, 305, 329, 283,
	280, 181, 306, 210, 252, 192, 194, 206, 213, 215,
	217, 218, 261, 262, 274, 294, 308, 309, 310, 209,
	202, 288, 203, 227, 204, 182, 296, 205, 184, 275,
	313, 0, 223, 284, 248, 185, 247, 276, 312, 311,
	193, 337, 343, 344, 348, 0, 349, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 342, 221, 178, 179, 325, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 341,
	0, 0, 0, 0, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 350, 257, 258, 259, 260, 224, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	0, 0, 0, 0, 0, 0, 264, 231, 297, 236,
	242, 285, 331, 270, 290, 197, 322, 298, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 240, 0, 281, 219, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 0, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 307, 0, 0, 338, 339, 340, 324, 0,
	211, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	299, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 304, 320, 196,
	295, 333, 201, 302, 191, 268, 291, 0, 0, 188,
	318, 301, 250, 233, 234, 187, 0, 286, 212, 225,
	208, 266, 0, 317, 345, 207, 336, 0, 328, 190,
	0, 327, 265, 314, 319, 251, 245, 189, 316, 249,
	244, 237, 216, 0, 229, 277, 243, 278, 230, 255,
	254, 256, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 303, 0, 0, 238, 0, 0, 0, 346, 0,
	289, 271, 0, 0, 0, 287, 241, 315, 279, 321,
	305, 329, 283, 280, 181, 306, 210, 252, 192, 194,
	426, 213, 215, 217, 218, 261, 262, 274, 294, 308,
	309, 310, 209, 202, 288, 203, 227, 204, 182, 296,
	205, 184, 275, 313, 0, 223, 284, 248, 185, 247,
	276, 312, 311, 193, 337, 343, 344, 348, 0, 349,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 342, 221, 178, 179,
	325, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 341, 0, 0, 0, 0, 292, 0, 0,
	0, 0, 0, 232, 273, 0, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	323, 335, 352, 355, 0, 0, 0, 183, 354, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 350, 257, 258, 259,
	260, 224, 0, 200, 353, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 220, 226, 0, 228, 199, 272, 222,
	332, 235, 0, 0, 0, 0, 0, 0, 0, 264,
	231, 297, 236, 242, 285, 331, 270, 290, 197, 322,
	298, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 240, 0, 281, 219, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	0, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 307, 0, 0, 338, 339,
	340, 324, 0, 211, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 0,
	0, 0, 0, 214, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 299, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 697, 698, 699, 1803, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	304, 320, 196, 295, 333, 201, 302, 191, 268, 291,
	0, 0, 188, 318, 301, 250, 233, 234, 187, 0,
	286, 212, 225, 208, 266, 0, 317, 345, 207, 336,
	0, 328, 190, 0, 327, 265, 314, 319, 251, 245,
	189, 316, 249, 244, 237, 216, 0, 229, 277, 243,
	278, 230, 255, 254, 256, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 303, 0, 0, 238, 0, 0,
	0, 346, 0, 289, 271, 0, 0, 0, 287, 241,
	315, 279, 321, 305, 329, 283, 280, 181, 306, 210,
	252, 192, 194, 206, 213, 215, 217, 218, 261, 262,
	274, 294, 308, 309, 310, 209, 202, 288, 203, 227,
	204, 182, 296, 205, 184, 275, 313, 0, 223, 284,
	248, 185, 247, 276, 312, 311, 193, 337, 343, 344,
	348, 0, 349, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 342,
	221, 178, 179, 325, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 341, 0, 0, 0, 0,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 350,
	257, 258, 259, 260, 224, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 307, 228,
	199, 272, 222, 332, 235, 0, 0, 0, 0, 269,
	0, 0, 264, 231, 297, 236, 242, 285, 331, 270,
	290, 197, 322, 298, 246, 0, 214, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 299, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 697, 698, 699,
	1803, 0, 0, 0, 195, 180, 0, 240, 0, 281,
	219, 0, 0, 0, 198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 338, 339, 340, 324, 0, 211, 0, 0, 0,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 0, 317,
	345, 207, 336, 0, 328, 190, 0, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 0,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 303, 0, 0,
	238, 0, 0, 0, 346, 0, 289, 271, 0, 0,
	0, 287, 241, 315, 279, 321, 305, 329, 283, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	0, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 343, 344, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 341, 0,
	0, 0, 0, 292, 0, 0, 0, 0, 0, 232,
	273, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 323, 335, 352, 355,
	0, 0, 0, 183, 354, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 350, 257, 258, 259, 260, 224, 0, 200,
	353, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 220,
	226, 307, 228, 199, 272, 222, 332, 235, 0, 0,
	0, 0, 269, 0, 0, 264, 231, 297, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 246, 0, 214,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 299,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	697, 698, 699, 0, 0, 0, 0, 195, 180, 0,
	240, 0, 281, 219, 0, 0, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 338, 339, 340, 324, 0, 211,
	0, 0, 0, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 0, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 0, 317, 345, 207, 336, 0, 328, 190, 0,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 0, 229, 277, 243, 278, 230, 255, 254,
	256, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	303, 0, 0, 238, 0, 0, 0, 346, 0, 289,
	271, 0, 0, 0, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 0, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 342, 221, 178, 179, 325,
	131, 267, 38, 121, 101, 0, 0, 0, 0, 0,
	263, 341, 0, 0, 0, 0, 292, 0, 0, 0,
	126, 0, 232, 273, 0, 293, 0, 114, 0, 0,
	0, 0, 0, 0, 0, 0, 90, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 76, 0, 0, 0, 326, 0, 128, 0, 334,
	0, 0, 0, 0, 0, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 0, 0, 884, 0, 0, 0, 264, 231,
	297, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	246, 775, 776, 777, 774, 122, 123, 0, 124, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 606, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 240, 0, 281, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 100, 120, 129, 1181, 74, 0, 0,
	0, 0, 0, 638, 872, 0, 0, 338, 339, 340,
	324, 0, 211, 0, 119, 113, 112, 0, 0, 0,
	0, 44, 892, 896, 898, 900, 902, 903, 905, 0,
	909, 906, 907, 908, 0, 0, 887, 888, 889, 890,
	870, 871, 893, 0, 873, 0, 874, 875, 876, 877,
	878, 879, 880, 881, 882, 883, 885, 891, 0, 0,
	0, 0, 0, 0, 0, 895, 897, 899, 901, 904,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 115,
	116, 117, 640, 0, 0, 639, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 886, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 625,
	118, 0, 85, 0, 0, 0, 0, 607, 2359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1177, 0, 0, 1174, 0, 2359, 0, 1176, 1173,
	1175, 1179, 1180, 630, 0, 0, 1178, 0, 0, 0,
	0, 0, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 0, 0, 0, 0,
	1754, 0, 0, 0, 87, 37, 0, 0, 0, 2784,
	0, 0, 0, 0, 0, 2359, 0, 0, 0, 2341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1754,
	0, 39, 605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 608, 633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 102, 0, 2341, 628, 0, 0,
	0, 0, 0, 0, 2441, 0, 0, 0, 0, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172,
	1184, 1185, 1186, 1187, 1188, 1189, 1182, 1183, 0, 629,
	634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 89, 93, 0, 622, 0, 624, 637,
	0, 0, 0, 621, 619, 618, 0, 623, 609, 610,
	611, 613, 612, 614, 2345, 635, 636, 0, 0, 0,
	0, 0, 0, 0, 0, 2349, 894, 631, 632, 0,
	0, 0, 2345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2349, 0, 2338, 0, 0, 0, 2340,
	2342, 2344, 0, 2346, 2347, 2348, 2350, 2351, 2352, 2354,
	2355, 2356, 2357, 2338, 626, 0, 0, 2340, 2342, 2344,
	0, 2346, 2347, 2348, 2350, 2351, 2352, 2354, 2355, 2356,
	2357, 2345, 0, 406, 0, 405, 412, 402, 0, 0,
	0, 0, 2349, 0, 0, 2360, 0, 409, 410, 0,
	411, 415, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 0, 2338, 2360, 420, 0, 2340, 2342, 2344, 0,
	2346, 2347, 2348, 2350, 2351, 2352, 2354, 2355, 2356, 2357,
	0, 2358, 0, 0, 0, 0, 406, 0, 405, 412,
	402, 0, 0, 424, 0, 0, 425, 0, 2337, 2358,
	409, 410, 0, 411, 415, 0, 0, 397, 0, 0,
	0, 406, 2360, 405, 412, 402, 2337, 420, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 2353, 411, 415,
	0, 0, 397, 0, 2343, 0, 0, 0, 0, 0,
	0, 0, 420, 2367, 0, 2353, 424, 0, 2358, 425,
	0, 0, 2343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2337, 0, 2377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2370, 0, 0, 0, 0, 0, 2365, 0, 0, 0,
	0, 2380, 2381, 0, 2353, 0, 0, 2366, 0, 0,
	0, 2343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 400, 399, 0,
	0, 0, 2371, 0, 0, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 401, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	400, 399, 0, 0, 0, 0, 0, 0, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 398, 400, 399, 423, 0, 0,
	0, 0, 0, 404, 401, 0, 0, 0, 0, 0,
	2379, 0, 2147, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 0, 0, 2373, 0, 0,
	0, 0, 0, 403, 407, 413, 0, 414, 416, 0,
	0, 417, 418, 419, 0, 0, 421, 422, 0, 2372,
	2374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 403, 407, 413, 0,
	414, 416, 0, 0, 417, 418, 419, 0, 0, 421,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 403, 407, 413, 0, 414, 416, 2382, 0, 417,
	418, 419, 0, 0, 421, 422, 0, 0, 0, 2368,
	0, 0, 0, 0, 0, 2378,
}

var yyPact = [...]int{
	29020, -1000, -295, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -144, 26425, 26425,
	-1000, -1000, 1675, -1000, 25922, 10319, 26928, 171, 165, 26928,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 457, -1000, 25419, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 415, 29623, 27431, 329, 7794, 26928,
	-274, -1000, 2355, -129, -1000, -1000, -1000, -1000, -1000, -1000,
	10423, 573, 24916, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 29146,
	98, 573, 611, 617, 832, 832, 11828, 2355, 274, 151,
	-1000, 700, 29020, 28720, 392, 26928, -1000, 1058, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 392, -1000,
	-1000, -1000, 2355, 2355, -1000, 26928, 26928, 5, 1151, -1000,
	256, 235, 234, 1057, -1000, -1000, -1000, -1000, -1000, 2358,
	-1000, 26928, 26928, 2013, 26928, -1000, 1465, 356, 29676, 2199,
	945, 511, 2043, -1000, -1000, 1984, -1000, 110, 83, 97,
	674, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 155, -1000,
	2227, -1000, -1000, 90, -1000, -1000, 113, -1000, -1000, -1000,
	-49, -1000, -1000, -1000, -1000, -1000, -139, -1000, -1000, -139,
	675, 1201, 7794, -1000, 1247, -1000, 1581, -1000, -1000, -1000,
	-1000, 5270, 9303, 9303, 9303, 9303, -1000, -1000, 1821, 7794,
	1983, 1806, 1980, -1000, -1000, -1000, -1000, 1054, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1601, 8800, -1000, 1979, 1978, 1974, 1973, 1972, 1971, 1970,
	1969, 1968, 1967, 1742, 1952, 1599, 1597, 1937, 1931, 1930,
	1596, 1742, 1742, 1929, 1927, 1921, 1917, 1907, 1901, 1897,
	1895, 1892, 1891, 1885, 1882, 1881, 1880, 1877, 1872, 1870,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1410, -1000, 1050, 912, -1000, 1868, 2191,
	2234, 1733, 2316, 2261, 2253, 2251, 2231, 1415, -1000, -1000,
	26928, 26928, 75, 413, 413, 413, 440, 413, 453, 447,
	-1000, -1000, -1000, -1000, -1000, -1000, 526, -1000, -1000, -1000,
	-1000, 914, 26928, -1000, 1784, 1093, 2247, 378, 365, 236,
	-1000, 1197, 1197, 1197, 1197, 1093, 264, 373, 2234, 2234,
	-61, -81, 1093, 1093, -81, 74, -1000, -1000, -1000, 1197,
	360, 1197, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2222,
	2217, -189, 415, 415, 421, -1000, -148, -1000, -1000, 624,
	-1000, 558, -1000, 1465, 350, 347, 931, 1195, -1000, 1113,
	26928, 26928, 26928, 1113, 1113, 14849, 14346, -1000, 2234, 1733,
	-1000, 1726, 2128, 1725, 1733, 415, 415, 415, 415, 415,
	415, 415, 26928, 26928, 6779, 6779, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 298, -1000, -1000, -1000, -1000, -1000,
	272, 1867, -1000, 26928, 247, 2234, 2191, 2234, -1000, -1000,
	1049, 1413, 1595, -1000, -1000, 256, 1117, -1000, 732, -1000,
	-1000, -1000, -1000, 26928, 242, -1000, -1000, 1580, 1865, -1000,
	367, 692, 871, -1000, 124, 29701, 22394, 1465, 22394, 26928,
	-1000, -1000, -1000, -1000, -1000, -1000, -59, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	96, -1000, 96, 7794, 7794, 7794, 7794, 7794, -1000, 409,
	8297, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9303, 9303,
	9303, 9303, 9303, 9303, 9303, 9303, 9303, 9303, 9303, 9303,
	1819, 1251, 9303, 9303, 9303, 2128, 2232, 920, 173, -1000,
	-1000, -1000, -1000, -1000, 1181, 1201, 7794, 7794, 7794, 26928,
	-1000, 29061, 7794, 7794, 9450, 7794, 2210, 3760, 26928, 7794,
	-1000, 1717, 1716, -1000, -1000, 1397, 7794, -1000, -1000, 7794,
	9303, 7794, -1000, -1000, -1000, 109, 2210, 2210, 7794, 7794,
	2210, 2210, 2210, 1204, 2210, 2210, 2210, 2210, 2210, 2210,
	2210, 2210, 26928, 2126, 67, -1000, -1000, -1000, 1755, -1000,
	1792, 1792, 1755, 1755, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1803, 1858, -1000, -1000, 1790, 1790, 1790,
	1755, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1801, 1801, 1802, 1801,
	26928, 2234, -274, 6276, -1000, -280, 2191, 7794, -1000, -1000,
	7794, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1587,
	2206, -1000, 1854, -1000, 433, 413, -1000, 26928, 1166, 22394,
	1465, 1461, 26928, 413, 413, 421, -1000, 26928, 914, 2205,
	26928, 2341, 9303, 24413, 1197, 1093, -1000, 26928, -1000, -1000,
	-1000, 1197, 26928, 1197, 1197, 2341, 1197, -1000, -1000, -1000,
	1093, 1093, -1000, -1000, -1000, -1000, 1197, 1197, -1000, -1000,
	-71, 2341, 2341, -88, 26928, 26928, 413, 26928, -1000, 26928,
	-1000, -1000, 429, 26928, 22394, 20885, -1000, -120, 588, 569,
	574, -1000, -1000, 364, 362, 13843, 323, 22394, 4766, -1000,
	-1000, 1113, 1113, 1113, 4766, 4766, 974, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2191, -1000, -1000, -1000, -1000, -1000,
	26928, 22394, 1465, 26928, 26928, 26928, 28720, -1000, 1835, 839,
	-1000, -1000, 11325, 1046, 839, 1586, 26928, 2041, 2146, -1000,
	1822, 12836, 26928, -1000, -1000, -276, -1000, 12332, 26928, 2191,
	-1000, 2191, 2800, -1000, 2244, -1000, 256, 196, -1000, -1000,
	-1000, -1000, -1000, -1000, 1043, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 910, -1000, 26928, -1000, -1000, 124,
	22394, 1162, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 137,
	-1000, -1000, 166, -1000, 427, 33, 1103, -1000, -1000, 68,
	160, 476, 68, 1201, -1000, 1212, 1212, 1194, -1000, 401,
	-1000, -1000, -1000, -1000, 1821, -1000, -1000, -1000, 1123, 1510,
	-1000, 1196, 1196, 1062, 1062, 1062, 1062, 1062, 1219, 1219,
	-1000, -1000, -1000, 5270, 1819, 9303, 9303, 9303, 402, 2576,
	2353, -1000, 7794, 1184, -1000, 7794, 1429, 2221, 1069, 1040,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1713, 675, 1706, 1521, 2356, 1704, 7794, -1000, -1000, 1387,
	7291, -1000, -1000, -1000, 1703, 1011, 1701, -1000, -1000, -1000,
	1700, 760, 1698, 1147, 1697, 908, 7794, 7794, 1097, 1090,
	7794, 7794, 7794, 7794, 1695, 7794, 7794, 7794, 7794, 7794,
	7794, 7794, 7794, -1000, 7794, 63, -1000, -1000, -1000, -1000,
	1405, -1000, 1395, -1000, -1000, -1000, 1583, 1583, -1000, 1393,
	-1000, -1000, -1000, -1000, 1388, -1000, -1000, 1381, -1000, -1000,
	-1000, -1000, 1065, -1000, 1201, -1000, 1582, -1000, 933, 906,
	-1000, 1351, -1000, -1000, 26928, 9806, 413, 26928, 58, -1000,
	2189, 926, -1000, 33, 743, 2012, 2122, 26928, 26928, 23910,
	-1000, 1817, 1060, -1000, -1000, 7794, -1000, 1994, 1465, 26928,
	2341, -1000, -1000, -1000, -1000, 28720, -1000, -1000, -1000, -1000,
	26928, 2341, 2341, 1093, 1197, 1197, -1000, -1000, 1197, -1000,
	1010, -1000, 26928, -1000, -1000, 415, 57, 926, 2354, 917,
	-1000, -1000, -1000, -1000, 27934, 27934, 13340, 27934, -1000, 1068,
	-1000, -1000, 585, 537, 566, -1000, -1000, 426, -1000, -1000,
	743, -1000, -1000, -1000, 1813, 1149, -1000, -1000, 1806, -1000,
	4766, 4766, 4766, -1000, -1000, 16861, -1000, -1000, 885, 743,
	2030, 859, -1000, 859, -1000, 9806, 2341, 6779, -1000, 20885,
	-1000, -1000, 23400, -1000, 22897, 2341, -284, 803, -1000, 2155,
	-276, 26928, 26928, 1059, 145, -1000, 1055, -1000, 687, -1000,
	1805, -1000, 1047, 2107, 698, -1000, 1135, -1000, -1000, -1000,
	1009, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 4, -1000, -1000, 26928, 1580, 1030, 1162, 754,
	-1000, 425, 1006, 1004, -1000, 22394, 101, 22394, -1000, 22394,
	-1000, -1000, 241, -1000, 26928, 2184, -1000, -1000, -1000, 1534,
	-298, 2172, -1000, -1000, -1000, -1000, -1000, 998, -1000, 402,
	2576, 2223, -1000, 9303, 9303, 2186, 1152, -1000, 7794, 1280,
	371, -1000, 1150, 15855, 26928, -1000, -1000, 7794, 7794, -1000,
	2168, -1000, 7794, 7794, 1360, -1000, 26928, -1000, -1000, -1000,
	15855, -1000, 9303, -1000, 7794, 147, 2158, -40, -40, 2125,
	2096, 2090, 995, -40, 2082, 2078, 2049, 2031, 1965, 1887,
	1785, 1747, 1201, -1000, -1000, 1694, 1693, 970, -1000, 965,
	1692, 962, 960, 6276, -1000, -92, 7794, 7794, 7794, 2077,
	-1000, -1000, 77, 1689, 849, -1000, -1000, -1000, 29104, 1792,
	1755, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1803, -1000, 1790, 1790, 1790, 1755, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1801, 1801, 1802, 1801, 26928,
	1797, -56, 1122, -1000, 396, 22394, 345, -1000, 2027, 207,
	-1000, 2122, -1000, 509, -1000, 1796, 1794, 26928, 831, -1000,
	1003, 29020, -1000, 26928, 1201, -1000, 1465, -1000, 1093, -1000,
	-1000, 2341, 977, -1000, -1000, 2341, 1093, 1093, 1197, 26928,
	-1000, 26928, -56, 1122, 396, 26928, 20885, 20885, 20885, 20885,
	-1000, 2063, 2061, -1000, 2102, 2073, 2074, 26928, 20885, 1784,
	-1000, 28327, -1000, -1000, -1000, -1000, -1000, 2128, 952, 2149,
	571, 7794, -1000, -1000, -1000, 532, 22394, 1577, 323, -1000,
	-1000, -1000, -1000, -1000, 26928, 26928, 1688, 2338, -1000, 825,
	-1000, -1000, 968, -1000, 2338, -1000, 1379, 1570, 1242, 687,
	698, 950, -1000, 145, 26928, 2087, 1793, -1000, 26928, -276,
	6276, 252, -276, 26928, 6276, 2800, 1370, -1000, -1000, -1000,
	2343, 22394, 1465, 1075, 1153, -1000, 87, -1000, 133, 348,
	1567, -1000, 446, 93, -1000, 1131, 1534, 442, -1000, -1000,
	9303, -1000, -1000, -1000, -1000, 1201, 7794, 1687, -1000, 527,
	527, 1682, -1000, 1755, 1792, -1000, 1755, 1790, 1755, 527,
	527, 1680, -1000, 1345, 1711, -1000, 1685, 1590, 7794, -1000,
	1677, 1950, 830, 1676, 1566, -40, -1000, 1789, -1000, -40,
	-40, -40, -40, -1000, -40, -40, -40, -40, -40, -40,
	-40, -40, -1000, -1000, -1000, 1565, -1000, -1000, -1000, 1368,
	-1000, 1361, -1000, -32, -14, 1201, 1201, -1000, -1000, 2099,
	1536, 462, 9806, 2105, 1784, 10822, 1411, -1000, -1000, 21891,
	-1000, 325, -1000, -1000, -1000, 455, 85, 1356, 331, -1000,
	1606, 26928, -1000, -1000, -1000, -1000, -1000, 1122, 1122, 1122,
	10822, 10822, 392, 780, 955, 20885, 26928, -1000, 20382, 1671,
	-1000, 743, 2341, -1000, 26928, -1000, 2341, 2341, 1093, -1000,
	1784, 1411, 21891, 325, 815, -1000, 1130, 1999, 2026, 1999,
	-1000, -1000, -1000, -1000, 2060, -1000, 2042, -1000, -1000, 815,
	-1000, -1000, -1000, -1000, -1000, 571, -1000, 2242, 560, 560,
	560, 1657, -1000, 754, 1655, -1000, -1000, -1000, -1000, -1000,
	2333, 2315, 21388, 2333, -1000, -284, 2367, 233, 26928, 249,
	-1000, -276, 26928, -1000, -1000, 1654, 750, -276, -1000, 687,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1465, -1000, 126,
	-1000, -1000, -1000, -1000, -1000, -1000, 14, -1000, 26928, -1000,
	1534, 1527, 92, 26928, -1000, 1201, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 7794, -1000, -1000, -1000, 1573, -1000, -1000, 7794, -40,
	-1000, -1000, 391, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1653, 1640, -282, -6,
	2314, 2310, -1000, -1000, -1000, 29104, -1000, 1067, 2204, 1623,
	748, -1000, -1000, -1000, 29104, 707, -1000, 26928, 1241, 560,
	413, 560, 1238, 1783, -1000, -1000, -1000, 1524, 28, -1000,
	-1000, -1000, 1522, 1508, 1354, -1000, -1000, 1452, 963, 41,
	-1000, -1000, -1000, -1000, -1000, -1000, 1781, 15855, 16358, 1506,
	1619, 1618, 27934, 20885, 20382, 799, -1000, 949, -1000, -1000,
	-1000, 2341, -1000, -1000, 2341, 2203, -1000, 28, -1000, 2331,
	26928, 6276, -1000, -1000, 7794, 1767, -1000, 7794, -1000, -1000,
	-1000, -1000, -1000, 1766, 2144, -1000, -1000, -1000, -1000, -1000,
	-1000, 7794, 7794, -1000, -1000, -1000, 26928, -1000, -1000, -276,
	-1000, 687, 946, -1000, 687, 743, -1000, -1000, 145, -1000,
	-1000, -1000, -88, 1556, -1000, 1530, -1000, 2331, -1000, 2309,
	-1000, -1000, -284, 1497, -1000, 2307, 1492, 1454, -208, -1000,
	-1000, 233, 29419, 10822, 29703, -1000, -1000, 26928, 26928, -1000,
	26928, 26928, 413, 7794, -1000, -1000, 238, -1000, -1000, 142,
	-1000, -1000, 1424, 368, -1000, 18873, -1000, -1000, -1000, -1000,
	-1000, 96, 29419, 2341, 799, 949, -1000, -1000, 1071, -1000,
	-1000, 233, -1000, 2234, -1000, -1000, 1201, 26928, 1201, 19879,
	-1000, 2297, 2295, 1201, 675, 698, 687, -1000, -88, -1000,
	-33, -18, -1000, -1000, 80, 7794, -287, -1000, 1484, -9,
	-1000, -1000, 26928, -1000, 389, 29370, -1000, 1122, 1122, 761,
	1122, 1122, 1122, 1122, 290, 265, 1122, 1122, 1122, 1122,
	1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122,
	1764, -1000, -1000, 29703, -1000, -1000, 1218, 9303, -1000, -1000,
	1480, 16358, 549, 539, 1763, -1000, 253, 2364, -1000, 1208,
	1207, -1000, 26928, -1000, 1762, 1889, 184, 1760, -1000, 1757,
	1756, 26928, 1526, 341, 1479, -1000, -1000, 136, -1000, -1000,
	936, -1000, 1755, 7794, -1000, -88, 389, 2331, -1000, -1000,
	-1000, 934, 930, -1000, -1000, -1000, -1000, -1000, 419, -13,
	-18, -1000, 2289, -10, 2287, 2286, 1616, -1000, 3257, -1000,
	-1000, -1000, 675, -1000, 1754, -1000, 2285, 2201, -1000, 186,
	2283, 29419, -1000, 1352, 1340, 1122, 1122, 1339, 1474, 1473,
	1472, 1122, 1122, 1328, 1470, 28327, 1326, 1319, 1317, 1369,
	1469, 517, 1349, 1327, 1296, 26928, 1752, 1432, -1000, -1000,
	2576, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1313, 1751, -108, -1000, -1000, 1749, 18873, 199,
	199, 18873, 18873, 18873, 1746, 473, -1000, 13, -1000, -1000,
	-1000, 18873, 2162, 1458, -1000, 186, 2234, -1000, -1000, 19376,
	1745, 1306, -6, -26, 2279, -1000, 1454, 2278, 1454, 1454,
	-1000, -1000, 4263, -277, -44, 257, 26928, 1454, 1468, -1000,
	2274, 205, -1000, -1000, -1000, 15855, 15855, -1000, -1000, -1000,
	-1000, 1466, 1464, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 339, 26928, 923, -1000, 1126,
	1585, 7794, 1742, -194, 18873, 911, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 888, 850, 848, 18873, -1000, -1000, -1000,
	239, -1000, 174, -1000, -1000, 2162, -1000, -1000, -1000, -1000,
	2215, 15352, -35, -1000, -1000, 1455, -1000, 1454, -1000, -1000,
	1192, -1000, -1000, -1000, -1000, -1000, 841, -1000, -1000, -1000,
	18370, 208, 254, 245, -1000, 372, -1000, -1000, -1000, -1000,
	-1000, -1000, 363, 840, -1000, 1432, 1428, -1000, 1394, -1000,
	2025, -1000, 62, 828, -1000, -1000, -1000, -1000, 823, -1000,
	-1000, 1122, 1427, 170, -1000, -1000, -1000, -1000, 26928, -1000,
	812, -1000, -1000, -1000, 941, -1000, -1000, -1000, -1000, 4263,
	-1000, 26928, -1000, 26928, 194, 1287, 9303, 1740, 9303, 1739,
	214, 1738, -1000, -1000, -1000, -1000, -1000, 473, -1000, 2023,
	1750, 2352, -1000, -1000, -1000, -1000, 174, 174, 174, 174,
	84, 1283, -1000, 1461, 659, -1000, 1119, -1000, 17867, 26928,
	-1000, -1000, 805, 1730, 2268, -1000, 1905, 26928, 1611, 26928,
	1728, 1118, 9303, -1000, -1000, 2357, -1000, 2361, 484, 484,
	-1000, -1000, -1000, 26928, 5773, -1000, 939, -1000, -1000, 386,
	197, -1000, 802, -1000, 800, 17364, 1256, 1594, -1000, -1000,
	-1000, 1320, 248, -1000, -1000, -1000, 1201, 26928, 776, -1000,
	1584, 190, -1000, -1000, -1000, 767, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 386, 1986, -1000, 1254, -1000, -1000, 29352,
	514, -1000, -1000, 29352, 192, -1000, 382, 1600, -1000, -1000,
	766, -1000, 1529, 556, 7794, -1000, 192, 29419, -1000, 7794,
	702, -1000, 29419, 696, -1000, -1000,
}

var yyPgo = [...]int{
	0, 131, 2780, 217, 164, 156, 216, 2778, 2777, 2190,
	2177, 2776, 2775, 2774, 2773, 2772, 2771, 2770, 2769, 2768,
	2767, 2766, 2764, 2763, 2762, 2761, 2760, 2759, 2757, 2755,
	2754, 207, 2752, 2751, 2749, 2748, 2744, 2743, 2741, 2740,
	2739, 2738, 2737, 2736, 2735, 2733, 2732, 2729, 2726, 2721,
	2719, 2715, 2714, 2713, 2712, 2706, 2705, 146, 2704, 2157,
	2703, 2689, 2688, 2686, 2683, 189, 2682, 2680, 2679, 2673,
	2671, 2669, 2668, 2667, 2666, 2665, 2664, 2663, 2662, 2661,
	2660, 178, 2659, 2657, 174, 2656, 2655, 2654, 2653, 209,
	195, 64, 2652, 48, 58, 159, 220, 117, 222, 221,
	151, 141, 96, 2651, 2191, 2650, 125, 199, 124, 27,
	2649, 144, 2648, 138, 43, 49, 218, 116, 51, 97,
	100, 2645, 192, 65, 79, 86, 2644, 2643, 219, 158,
	2642, 101, 2641, 2640, 2639, 2638, 170, 104, 2636, 62,
	2635, 75, 70, 94, 26, 2634, 2632, 2630, 83, 2629,
	2628, 2627, 2626, 148, 2625, 99, 54, 2624, 2620, 2619,
	61, 2618, 29, 2617, 55, 2615, 2614, 2613, 2612, 66,
	2610, 2609, 12, 17, 21, 2608, 16, 1, 2607, 194,
	95, 84, 122, 2606, 456, 2605, 2604, 2603, 132, 2600,
	656, 2598, 2596, 2595, 2594, 10, 2592, 183, 2591, 2590,
	78, 106, 2589, 57, 167, 182, 2588, 2586, 120, 63,
	82, 119, 2585, 2584, 74, 196, 18, 34, 0, 168,
	42, 2583, 2582, 2581, 223, 2580, 203, 176, 200, 153,
	228, 154, 2579, 2578, 53, 2577, 126, 76, 112, 8,
	2576, 149, 2574, 193, 143, 2573, 184, 2572, 173, 2,
	121, 2569, 2568, 28, 242, 2564, 2563, 2562, 133, 2561,
	2560, 105, 142, 2559, 2558, 2557, 24, 2555, 31, 30,
	2554, 88, 2552, 215, 169, 135, 108, 145, 137, 128,
	198, 202, 72, 129, 1200, 123, 81, 19, 2551, 204,
	2550, 213, 201, 2549, 162, 2547, 214, 376, 187, 2541,
	150, 7, 38, 33, 2540, 9, 2538, 85, 2531, 2526,
	20, 2525, 23, 2524, 2523, 2522, 2520, 5, 2515, 2514,
	2512, 3, 6, 2511, 4, 188, 44, 107, 2509, 111,
	161, 2508, 2507, 2506, 2505, 2504, 180, 2503, 1207, 2501,
	2500, 2499, 2497, 2496, 2495, 2491, 67, 36, 2490, 2488,
	2487, 2486, 73, 114, 2485, 292, 186, 2484, 37, 2483,
	2482, 25, 32, 35, 2481, 2480, 2465, 14, 155, 2464,
	2463, 15, 2462, 2461, 11, 13, 2460, 2459, 60, 2457,
	52, 41, 71, 80, 2456, 22, 69, 113, 2452, 2450,
	212, 210, 181, 2449, 139, 205, 224, 2448, 190, 2428,
	2422, 2416, 2412, 2405, 225, 2404, 1180, 2403, 2402, 211,
	56, 89, 98, 2400, 2399, 2396, 68, 134, 102, 93,
	172, 2394, 166, 2393, 2391, 92, 2388, 2387, 2386, 2385,
	2382, 2381, 2369, 208, 130, 2368,
}

//line mysql_sql.y:8359
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 431, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 87, 429, 429, 429, 430, 430,
	85, 85, 74, 73, 86, 377, 377, 376, 376, 375,
	375, 374, 374, 374, 373, 373, 373, 372, 372, 371,
	371, 370, 370, 368, 368, 369, 367, 366, 366, 366,
	364, 364, 364, 362, 362, 363, 363, 357, 357, 360,
	360, 358, 358, 358, 358, 361, 356, 356, 356, 355,
	355, 72, 72, 72, 286, 286, 71, 71, 300, 300,
	300, 300, 300, 298, 298, 298, 298, 298, 298, 297,
	297, 296, 296, 301, 301, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 66, 66, 66, 66, 69,
	69, 69, 70, 295, 295, 295, 67, 68, 68, 285,
	285, 290, 290, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 294, 294, 294, 292, 292,
	291, 291, 293, 293, 60, 60, 60, 63, 62, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 61, 61,
	61, 61, 61, 61, 58, 58, 58, 58, 58, 57,
	57, 59, 59, 283, 283, 282, 77, 77, 77, 77,
	77, 77, 77, 76, 76, 79, 79, 78, 80, 65,
	65, 65, 65, 65, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 401, 401, 401, 403, 403, 222, 223,
	432, 225, 221, 221, 221, 397, 397, 398, 399, 400,
	400, 400, 75, 7, 7, 7, 56, 54, 415, 415,
	55, 422, 422, 336, 336, 236, 236, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 339, 340, 232, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 38, 37, 37,
	37, 272, 272, 36, 433, 433, 205, 205, 44, 45,
	46, 47, 48, 49, 50, 35, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 53, 53, 351, 351, 435,
	435, 435, 51, 52, 335, 335, 335, 42, 41, 40,
	39, 39, 34, 34, 33, 33, 229, 229, 231, 231,
	227, 434, 434, 312, 312, 230, 230, 32, 32, 32,
	228, 228, 204, 226, 226, 226, 8, 8, 6, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 18, 20,
	280, 280, 277, 19, 14, 13, 16, 12, 15, 17,
	5, 5, 5, 5, 9, 9, 10, 101, 101, 143,
	143, 410, 410, 406, 406, 407, 407, 407, 408, 408,
	409, 409, 81, 345, 345, 345, 345, 345, 345, 4,
	123, 123, 124, 124, 344, 344, 344, 344, 344, 344,
	344, 428, 428, 386, 386, 386, 387, 122, 122, 117,
	117, 346, 346, 250, 388, 388, 354, 354, 353, 353,
	352, 352, 120, 120, 121, 121, 104, 104, 90, 90,
	359, 359, 359, 359, 365, 365, 333, 333, 169, 169,
	198, 198, 199, 199, 94, 94, 95, 95, 95, 95,
	95, 95, 394, 394, 396, 396, 395, 119, 119, 115,
	115, 116, 116, 116, 114, 114, 113, 112, 112, 111,
	109, 109, 109, 110, 110, 110, 97, 97, 97, 96,
	96, 96, 96, 96, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 98, 98, 402, 402,
	402, 337, 337, 337, 342, 342, 181, 181, 182, 182,
	180, 180, 99, 99, 100, 100, 100, 100, 179, 179,
	178, 102, 102, 108, 107, 107, 103, 103, 103, 103,
	189, 189, 188, 188, 188, 188, 84, 88, 88, 89,
	127, 127, 187, 186, 186, 186, 126, 126, 125, 125,
	118, 118, 106, 106, 106, 106, 185, 105, 183, 427,
	427, 426, 426, 425, 423, 423, 423, 424, 424, 424,
	424, 379, 379, 379, 379, 379, 214, 214, 214, 220,
	220, 213, 213, 213, 213, 213, 224, 219, 219, 215,
	215, 216, 216, 216, 3, 3, 3, 3, 24, 24,
	24, 24, 24, 24, 30, 135, 136, 29, 128, 129,
	129, 130, 130, 131, 132, 132, 132, 134, 133, 28,
	404, 404, 21, 411, 414, 412, 412, 416, 416, 416,
	417, 417, 417, 418, 418, 22, 413, 419, 419, 419,
	281, 281, 278, 279, 279, 276, 275, 275, 275, 421,
	421, 420, 420, 420, 217, 217, 23, 271, 271, 273,
	274, 274, 265, 265, 265, 265, 27, 269, 269, 270,
	270, 270, 270, 270, 266, 266, 268, 268, 264, 264,
	264, 264, 264, 26, 263, 263, 261, 261, 259, 259,
	260, 260, 258, 258, 258, 262, 262, 25, 25, 25,
	92, 91, 91, 91, 201, 201, 200, 200, 93, 338,
	338, 302, 302, 303, 303, 303, 306, 306, 318, 318,
	319, 319, 317, 317, 324, 324, 323, 323, 322, 322,
	321, 321, 320, 320, 320, 320, 315, 315, 314, 314,
	304, 304, 304, 304, 304, 305, 305, 305, 313, 313,
	316, 316, 160, 160, 161, 161, 161, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 384, 384, 385, 163,
	163, 163, 167, 167, 167, 167, 167, 167, 162, 162,
	164, 164, 144, 144, 142, 142, 137, 137, 138, 138,
	139, 139, 140, 140, 141, 141, 141, 141, 141, 141,
	288, 288, 382, 382, 383, 383, 378, 378, 378, 381,
	381, 381, 381, 381, 380, 380, 145, 196, 196, 196,
	218, 218, 218, 195, 195, 195, 159, 159, 158, 158,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 287, 287, 233, 233, 234,
	234, 176, 175, 175, 175, 175, 175, 173, 174, 172,
	172, 172, 172, 172, 171, 171, 170, 170, 170, 267,
	267, 168, 168, 166, 166, 166, 165, 165, 165, 325,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 242, 242, 247, 247, 393, 393,
	392, 146, 146, 146, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 155, 155, 155, 310, 310, 310, 310,
	310, 311, 311, 311, 308, 308, 309, 309, 251, 252,
	252, 343, 343, 307, 307, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 350, 350, 350, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 405, 405, 405,
	389, 389, 389, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 391, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 391, 193, 193, 193, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 253, 253, 254,
	254, 347, 347, 347, 347, 347, 347, 348, 348, 349,
	349, 349, 349, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 240, 190, 190, 190, 255, 248, 248, 249,
	249, 243, 243, 243, 243, 243, 243, 243, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 244, 244,
	246, 246, 257, 257, 257, 256, 256, 256, 256, 256,
	256, 256, 157, 157, 157, 157, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 148, 148, 148,
	148, 152, 152, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 153, 153, 153,
	153, 151, 151, 151, 151, 151, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 82, 83, 83, 150, 197, 197, 326, 326,
	329, 329, 327, 327, 328, 330, 330, 330, 331, 331,
	331, 332, 332, 332, 334, 334, 203, 203, 203, 210,
	210, 202, 202, 211, 211, 212, 212, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	6, 8, 9, 10, 2, 0, 2, 1, 3, 3,
	3, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 3,
	0, 3, 3, 0, 3, 0, 3, 0, 2, 1,
	2, 3, 4, 3, 3, 1, 0, 1, 1, 0,
	1, 8, 5, 7, 0, 3, 8, 5, 1, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 4, 1, 3, 1, 2, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 2, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 4, 6, 1, 1, 1, 2, 4, 6, 1,
	4, 1, 3, 3, 4, 4, 4, 3, 3, 2,
	4, 4, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 1, 2, 2, 0,
	1, 4, 2, 4, 1, 5, 3, 2, 1, 2,
	2, 4, 4, 5, 2, 1, 3, 4, 4, 1,
	2, 9, 7, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 2, 3, 4, 7, 2, 3,
	3, 4, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 2, 1, 1,
	1, 1, 6, 1, 1, 1, 9, 7, 0, 4,
	7, 0, 3, 0, 2, 0, 1, 1, 1, 1,
	4, 2, 2, 3, 3, 4, 5, 3, 4, 4,
	2, 2, 2, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 2, 5,
	5, 0, 2, 7, 0, 1, 0, 1, 5, 3,
	2, 4, 4, 4, 4, 4, 1, 1, 1, 3,
	2, 3, 1, 1, 1, 6, 8, 0, 1, 1,
	1, 1, 5, 5, 0, 1, 1, 3, 3, 3,
	6, 7, 4, 4, 7, 8, 0, 2, 0, 2,
	2, 1, 1, 1, 1, 0, 1, 4, 4, 5,
	1, 3, 1, 1, 3, 5, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	1, 3, 1, 4, 6, 4, 4, 4, 3, 6,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 5,
	0, 4, 1, 3, 3, 1, 5, 6, 5, 5,
	3, 0, 5, 0, 1, 3, 3, 1, 3, 1,
	3, 1, 3, 4, 0, 1, 0, 1, 1, 3,
	1, 1, 0, 4, 1, 3, 2, 1, 0, 8,
	0, 4, 7, 4, 0, 2, 0, 2, 0, 2,
	0, 4, 1, 3, 1, 1, 4, 3, 4, 5,
	4, 5, 2, 3, 1, 3, 6, 0, 3, 0,
	1, 2, 4, 4, 0, 1, 3, 1, 3, 3,
	0, 1, 1, 0, 2, 2, 3, 3, 3, 1,
	3, 3, 3, 3, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 7, 7, 1, 1,
	1, 0, 1, 1, 1, 1, 0, 2, 0, 3,
	0, 2, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 4, 4, 3,
	2, 2, 2, 3, 2, 3, 4, 1, 3, 4,
	0, 2, 1, 1, 2, 2, 0, 1, 2, 4,
	1, 3, 1, 3, 2, 3, 1, 4, 3, 0,
	1, 1, 2, 5, 2, 2, 2, 0, 2, 3,
	3, 0, 1, 3, 1, 3, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 7, 1, 1, 12, 1, 0,
	1, 1, 3, 1, 1, 2, 4, 1, 1, 9,
	0, 1, 7, 1, 4, 1, 1, 3, 4, 3,
	0, 1, 1, 0, 2, 7, 1, 0, 2, 2,
	1, 3, 2, 1, 3, 2, 1, 3, 2, 0,
	1, 3, 4, 3, 1, 1, 4, 1, 3, 1,
	1, 1, 0, 1, 1, 1, 11, 0, 2, 3,
	2, 3, 1, 1, 1, 3, 3, 4, 0, 2,
	2, 2, 2, 5, 1, 1, 0, 3, 0, 1,
	1, 2, 4, 4, 4, 0, 1, 11, 9, 11,
	2, 2, 4, 5, 1, 3, 0, 3, 5, 0,
	1, 0, 6, 0, 3, 5, 0, 4, 0, 3,
	1, 3, 4, 5, 0, 3, 1, 3, 2, 3,
	1, 2, 0, 4, 6, 5, 0, 2, 0, 2,
	4, 5, 4, 5, 1, 5, 6, 5, 0, 3,
	0, 1, 0, 1, 1, 3, 2, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 4, 1, 3, 3, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 0, 1, 1, 3,
	1, 1, 2, 1, 7, 7, 7, 7, 8, 5,
	0, 1, 0, 1, 1, 1, 1, 3, 3, 1,
	1, 1, 1, 1, 0, 1, 3, 1, 3, 5,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 2,
	1, 2, 2, 1, 1, 2, 2, 2, 2, 2,
	1, 5, 6, 4, 1, 1, 2, 0, 1, 1,
	2, 5, 0, 1, 1, 2, 2, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 2, 2, 2, 0,
	3, 0, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 3, 5, 2, 2,
	2, 2, 1, 1, 2, 5, 6, 4, 6, 6,
	1, 1, 1, 1, 0, 2, 0, 1, 1, 2,
	4, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	2, 2, 2, 0, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 5, 0, 1, 3, 0,
	1, 0, 2, 0, 6, 7, 6, 5, 5, 6,
	6, 6, 6, 5, 6, 6, 6, 6, 6, 6,
	6, 6, 1, 1, 1, 4, 4, 6, 8, 6,
	4, 5, 4, 6, 6, 7, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 8, 4, 2, 3, 2, 4,
	6, 2, 2, 4, 6, 4, 2, 0, 1, 2,
	3, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 1, 3, 0, 1, 1,
	3, 3, 3, 3, 3, 2, 1, 1, 3, 4,
	3, 4, 3, 4, 3, 4, 3, 4, 1, 3,
	4, 4, 5, 3, 4, 5, 6, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 1, 2, 3, 5, 1, 1, 3, 0, 1,
	0, 3, 0, 3, 3, 0, 3, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 1, 2, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -431, -2, -1, -3, -85, -4, -81, -5, -6,
	-8, -64, -76, -78, -80, -79, -31, -7, -75, -57,
	-58, -60, -66, -71, -72, -73, -74, -86, -82, -83,
	-84, -94, -87, -24, -23, -22, -21, 395, 12, 441,
	-9, -10, -394, -11, 231, -221, -222, -223, -225, -432,
	-32, -33, -34, -39, -40, -41, -42, -51, -52, -53,
	-35, -36, -37, -38, -44, -45, -46, -47, -48, -49,
	-50, -55, -54, -56, 207, -59, 61, -61, -62, -63,
	-67, -68, -69, -70, 326, 332, 385, 394, 522, 523,
	46, -95, -97, 524, -25, -26, -27, -28, -29, -30,
	203, 14, 474, -12, -15, -13, -16, -14, -19, -20,
	-18, -17, 226, 225, 37, 289, 290, 291, 330, 224,
	204, 13, 135, 136, 138, 139, 30, -96, 67, 205,
	-98, 10, 525, 434, -104, 38, -142, -218, 70, -206,
	-209, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 444, 307, 308,
	471, 243, 267, 356, 270, 277, 135, 154, 148, 176,
	168, 143, 247, 282, 248, 77, 138, 427, 87, 406,
	382, 141, 262, 264, 266, 269, 249, 164, 159, 261,
	245, 522, 157, 250, 39, 251, 181, 252, 253, 476,
	402, 306, 408, 274, 380, 158, 403, 265, 405, 183,
	187, 419, 332, 152, 153, 410, 421, 180, 223, 42,
	473, 235, 422, 185, 179, 175, 430, 278, 276, 178,
	151, 174, 246, 50, 189, 188, 190, 376, 377, 378,
	379, 254, 255, 320, 418, 171, 160, 311, 144, 22,
	425, 230, 407, 333, 256, 271, 279, 184, 186, 237,
	242, 475, 384, 241, 275, 423, 156, 234, 263, 229,
	426, 145, 326, 335, 257, 139, 268, 420, 429, 49,
	348, 150, 142, 220, 136, 239, 244, 11, 258, 259,
	260, 281, 280, 272, 172, 236, 177, 162, 149, 173,
	137, 238, 428, 349, 520, 309, 365, 170, 167, 240,
	213, 424, 409, 140, 369, 350, 165, 283, 517, 518,
	519, 321, 305, 284, 285, 163, 227, 401, 286, 288,
	375, 298, 351, 383, 357, 352, 196, 292, -104, -59,
	-10, -9, -96, -97, -142, 211, -226, 23, 380, -65,
	381, 207, 67, -218, -5, -4, -81, -57, -94, -224,
	-218, 289, 289, -224, 211, -218, 241, 364, -336, 216,
	-297, -271, 242, -296, -273, -299, -274, 31, 203, 205,
	204, 238, 14, 330, 212, 12, 10, 331, 224, 24,
	25, 27, 13, 332, 334, 28, 335, 338, 339, 340,
	41, 343, 344, 231, 70, 73, 249, -136, -218, 249,
	-249, -243, 94, 232, -245, -238, -239, -241, -374, -368,
	-237, 67, 119, 120, 127, 95, -240, -325, 35, 97,
	481, 130, 442, -191, -192, -193, -194, -218, -369, -367,
	73, 78, 81, 84, 85, 83, 82, 161, 80, 74,
	131, 132, -97, 70, -389, 489, -207, 510, 509, 46,
	-341, -349, 210, -347, 166, 227, 162, 12, 125, 375,
	163, 486, 506, 444, 490, 513, 483, 484, 478, 479,
	480, 482, 491, 493, 505, -350, 501, 511, 512, 499,
	72, 71, 504, 503, 492, 487, 488, 494, 477, 485,
	495, 496, 502, 507, 508, 314, 87, 315, 316, 434,
	310, 317, 216, 380, 55, 318, 319, 320, 321, 322,
	441, 323, 56, 324, 313, 231, 365, 325, 165, 182,
	446, 445, 447, 438, 435, 433, 436, 437, 439, 440,
	497, 498, 500, -293, -291, -218, -88, -89, 515, -113,
	-114, -184, 19, 6, 7, 8, 9, -429, 382, 475,
	292, 327, -338, 307, 365, 241, -265, -263, 286, 282,
	341, 221, 220, 88, 434, 210, -406, -407, 200, 201,
	202, -396, 467, -395, -218, 316, 26, 211, 327, 412,
	413, 414, 416, 415, 417, -43, -351, -335, 409, 408,
	-230, 407, 400, 411, 402, 203, 468, -203, 351, 383,
	237, 431, 432, 328, 384, 419, 420, 403, 87, 169,
	166, -338, 307, 365, -406, 140, 137, -284, 140, 93,
	145, 144, -284, 241, 364, 40, -290, 375, -289, -291,
	419, 420, 430, 71, 72, 418, -203, 87, -114, -184,
	-113, -95, -97, -84, -394, 307, 365, 241, 212, 211,
	213, 434, 289, 327, -337, -402, 31, -342, 197, 198,
	199, 32, 33, -1, -219, -216, -209, 70, 71, 72,
	-120, 233, -142, 133, -120, -114, -113, -114, -142, -195,
	-218, 382, 103, -65, -65, 381, -397, -398, -399, -401,
	207, 381, 380, 133, 15, -224, -224, 65, -142, -273,
	241, -297, -271, 35, 64, 134, 214, 134, 64, 67,
	328, 307, 365, 329, 434, 211, 341, 213, 241, 342,
	307, 365, 211, 213, 434, 241, 307, 211, 213, 365,
	241, 342, 400, 401, 213, 26, 333, 336, 337, 401,
	-355, 430, -355, 134, 93, 90, 91, 92, -243, 110,
	-256, 103, 104, 105, 106, 107, 108, 109, 116, 115,
	126, 119, 120, 121, 122, 123, 124, 125, 117, 118,
	113, 94, 111, 112, 96, -97, -243, -249, 46, -241,
	-241, -241, -241, -325, -247, -243, 67, 67, 67, 133,
	73, -243, 67, 67, 67, 67, 67, 67, 67, 67,
	-348, 67, 67, -253, -254, 67, 67, 73, 73, 67,
	67, 67, 73, -254, -254, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 134, -148, -152, -149, -151, -150, -154, -153,
	166, 167, 130, 170, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 30, 182, 227, 162, 163, 164,
	165, 183, 148, 168, 472, 191, 149, 192, 150, 193,
	151, 194, 152, 153, 195, 154, 157, 158, 159, 156,
	133, -114, 134, 67, -90, 38, -116, 21, -98, -97,
	20, 31, 32, 31, 32, 31, 32, 31, 32, 78,
	-135, -218, -128, -218, -404, 211, 467, -261, 216, -261,
	-261, 212, -261, 211, 211, -408, 147, 134, -396, -119,
	67, -229, 111, 23, 239, 239, 276, -433, -434, 15,
	113, -227, -434, -227, -227, -229, -435, 212, 410, 42,
	240, 239, -115, -116, -115, 404, 401, -312, 405, 406,
	-230, -229, -229, -230, 211, 213, 434, -433, 239, -433,
	30, 30, -404, -336, -336, -409, 215, 423, 474, 143,
	144, 145, -273, 241, 241, 134, 103, 23, -292, 103,
	114, -291, -291, -291, -292, -292, -162, 40, -217, 130,
	-218, 73, -162, 40, -115, -98, -97, 68, 68, 68,
	-336, -336, -336, -336, -336, -336, -336, -224, -128, -99,
	-100, 121, -243, -218, -99, 38, 401, -344, -123, -94,
	308, 67, 67, -218, -345, 46, -94, 67, 30, -115,
	-90, -116, 133, 78, 73, -65, 68, 134, -400, 84,
	85, -403, 180, 172, -218, -77, 73, -3, -4, -5,
	-6, -31, -57, -94, -370, -368, 67, 31, 374, 64,
	15, -298, 211, 434, 327, 237, 213, 307, -296, -280,
	-277, -275, -217, -273, -276, -275, -301, -195, 401, -91,
	386, 288, -91, -243, -243, -243, -243, -243, 83, 94,
	305, 84, 85, -238, -257, 31, 284, 285, -239, -239,
	-239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
	-246, -255, -325, 67, 113, 111, 112, 96, -241, -239,
	-239, 68, 134, -393, -392, 98, -243, -243, -243, -218,
	-390, -391, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 318, 313, 319, 317, 310, 325, 320,
	321, 165, 465, 466, 459, 460, 461, 462, 463, 464,
	-248, -249, -248, -243, -390, -248, -190, 32, 31, -243,
	-405, 303, 302, 304, -117, -218, -248, 68, 68, 68,
	78, -249, -248, -239, -248, -391, -190, -190, -249, -249,
	-190, -190, -190, -190, 121, -190, -190, -190, -190, -190,
	-190, -190, -190, -291, 40, -332, 349, 348, -326, -328,
	67, -327, 67, -327, -326, -326, 67, 67, -329, 67,
	-329, -329, -326, -330, 67, -330, -331, 67, -330, -218,
	-115, -89, -353, -352, -243, 40, 516, -90, -243, -112,
	-111, -243, -430, 73, 34, 67, 213, -261, -411, -218,
	94, -281, -278, -275, -271, -216, -218, -261, -261, -409,
	-395, 34, -118, -218, -180, 16, -241, -275, 241, -433,
	-229, -205, -204, -218, -231, -434, -226, -231, -231, -180,
	-434, -229, -229, -231, -227, 401, -180, -180, -312, -228,
	-218, -228, -261, -205, -205, 213, -411, -281, -107, -102,
	-106, -103, -108, -183, -185, -105, 67, -142, -97, -218,
	424, 425, 141, 144, 143, 31, 374, -295, 374, 31,
	-271, -289, -285, 73, 375, -276, -294, 64, 130, -352,
	-292, -292, -292, -294, -294, 129, -90, -411, -280, -271,
	-218, -144, -142, -144, -219, 67, -179, 134, -178, 15,
	-213, -218, 34, 73, 133, -179, 73, -144, -428, 64,
	46, 30, 67, -122, 68, -117, -121, -218, -346, -250,
	-388, 515, -122, 68, -386, -387, -117, -90, -90, -211,
	-212, -202, -208, -215, -216, -209, 208, 31, 93, 34,
	36, 314, 346, 96, 130, 20, 97, 166, 129, 316,
	442, 315, 203, 59, 445, 447, 446, 435, 433, 367,
	371, 373, 370, 434, 400, 40, 14, 37, 225, 32,
	33, 123, 205, 100, 101, 228, 35, 226, 85, 44,
	23, 62, 15, 17, 18, 317, 366, 216, 215, 113,
	386, 212, 57, 12, 132, 38, 110, 368, 53, 89,
	45, 55, 111, 21, 436, 437, 41, 385, 394, 470,
	232, 125, 318, 319, 60, 94, 374, 83, 43, 64,
	90, 19, 58, 112, 206, 441, 56, 372, 322, 324,
	334, 467, 323, 210, 411, 10, 313, 443, 30, 224,
	54, 211, 99, 214, 84, 231, 6, 88, 13, 61,
	65, 438, 439, 440, 46, 98, 16, 325, 474, 387,
	388, 389, 390, 391, 392, 393, 191, 192, 193, 194,
	195, 273, 219, 217, 221, 222, 515, 516, 197, 198,
	302, 304, 169, 200, 201, 202, 233, 147, 7, 353,
	354, 355, 358, 359, 360, 361, 362, 363, 364, 523,
	395, 396, 397, 398, 399, 412, 413, 414, 415, 416,
	417, 209, 23, -65, -398, 133, 134, -118, -298, -279,
	-276, -300, 121, 70, -286, 134, 474, 526, 71, 214,
	-421, -420, 366, 68, 134, -356, 215, 441, 73, 527,
	196, -356, 83, 305, 84, 85, -325, -249, -246, -241,
	-239, -239, -244, 228, 93, -243, -242, -392, 100, -243,
	34, 68, 134, 65, 133, 68, 68, 15, 15, 68,
	-243, 68, 15, 15, -243, 68, 133, 68, 68, 68,
	65, 68, 134, 68, 134, -249, -243, 68, 68, -243,
	-243, -243, -249, 68, -243, -243, -243, -243, -243, -243,
	-243, -243, -243, -334, 350, 78, 78, -197, 73, -197,
	78, 78, 78, 134, 68, 73, 134, 22, 134, -109,
	36, 37, -136, -129, -130, -131, -132, -148, -195, 167,
	170, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 227, 162, 163, 164, 165, 183, 148, 168, 149,
	150, 151, 152, 153, 154, 157, 158, 159, 156, -261,
	-142, -414, 353, 35, -422, 134, 40, -420, -264, 65,
	-259, -260, -258, -262, 40, -142, -142, 15, -101, -143,
	-218, 67, 68, 134, -243, -272, 65, -274, -205, -180,
	-219, -142, -218, -180, -180, -229, -231, -231, -227, 133,
	-204, -336, -415, 353, -422, 30, -186, -187, -188, -189,
	53, 57, 59, 54, 55, 56, 60, 30, 134, -214,
	-220, 34, -215, 73, -216, -209, -214, -97, -102, -107,
	-214, 67, 142, 145, 145, 144, 214, 67, 103, -294,
	-294, -294, 40, -217, 64, 134, -129, -180, -100, -102,
	-218, 73, -218, 121, -180, -169, 518, 38, 39, -346,
	-386, -124, -411, 68, 134, -123, 308, 68, 134, 134,
	67, 68, 46, 134, 103, 133, 382, -218, -368, 68,
	-300, 134, 214, 133, 133, -277, 332, -217, -279, 20,
	474, -195, 38, -201, -200, 73, 527, 38, 68, -244,
	93, -241, -238, 68, 101, -243, 99, -146, -148, 348,
	349, -147, -153, 130, 166, 227, 165, 164, 162, 348,
	349, -162, -218, -243, -243, 68, -243, -243, 15, -218,
	-162, -239, -243, -343, 443, 68, -307, 396, -307, 68,
	68, 68, 68, -307, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 134, 68, 68, 68, 134,
	68, 134, -352, -359, 405, -243, -243, -111, -110, 43,
	340, 68, 134, -148, -142, 67, -417, 407, 355, -210,
	103, -236, -235, 309, 41, -339, 375, 361, 362, -278,
	241, 64, 297, 298, 299, 300, -258, -203, 129, 252,
	67, 67, -142, -101, -218, 15, 134, -410, 133, -1,
	-218, -271, -229, -180, -434, -180, -229, -229, -231, -218,
	-142, -417, -210, -236, -283, -282, -195, -106, -106, -106,
	-106, 53, 53, 53, 58, 53, 58, 53, -188, -283,
	-108, -119, -220, 68, -427, -426, -425, -423, 61, 215,
	62, -248, 145, -279, -232, 73, -285, -142, -142, 68,
	-182, 17, 133, -182, 78, 73, 89, 68, 134, -123,
	-117, 46, 67, -218, -250, -354, -353, 46, -94, -346,
	-387, -352, -211, -208, -216, -209, 78, 15, -276, -271,
	121, 121, 70, 333, -286, 73, 354, 73, 211, 528,
	134, 103, -201, 211, -238, -243, 68, -155, 153, 152,
	-155, 68, -326, -327, -326, -329, -326, -155, -155, 68,
	68, 23, 68, 68, 68, -243, 68, 68, 134, 68,
	73, -307, 67, -307, -307, -307, -307, -307, -307, -307,
	-307, -307, -307, -307, -307, 73, 78, 78, -365, 392,
	387, 389, 44, 45, 73, 209, -131, 40, -119, -137,
	-138, -139, -145, -140, -195, -234, -141, 219, 217, 221,
	-383, 88, 222, 273, 89, 212, -418, 77, -412, 73,
	-218, -419, 77, 356, 132, 311, 40, 357, 358, 372,
	306, 78, 78, 363, -413, 70, -142, -210, -210, -210,
	-137, -137, -120, 65, 133, -102, -143, -218, 121, 68,
	-180, -218, -180, -180, -229, -119, -418, -412, -419, -180,
	134, 103, -126, -125, 64, 65, -127, 64, -125, 53,
	53, -180, -425, -424, 23, -383, -383, -383, 68, 68,
	-181, 18, 20, 121, -181, -169, 13, -94, -411, 46,
	-94, -346, -124, 68, -346, -271, -286, 375, -142, -200,
	73, 528, -142, -243, 68, -243, -307, -252, -251, 233,
	68, 68, -333, 517, -363, 387, 20, 20, -133, -148,
	-237, 34, 68, 134, -148, -141, -218, 89, -382, -383,
	-261, -382, 89, 67, 73, -416, 366, 73, 73, 78,
	40, 78, 132, 359, -340, 67, -162, -164, -217, 130,
	73, 68, 68, -214, -102, -218, -180, -410, 133, -180,
	-180, 34, -416, -114, -282, -352, -243, 67, -243, 67,
	53, 19, 17, -243, -249, -386, -346, 68, -123, -93,
	-357, -312, 68, 68, -114, 20, -169, 73, 20, 73,
	-361, 73, 473, -94, -160, -161, -177, 346, 243, -262,
	247, 77, 248, 382, 249, 212, 251, 252, 253, 223,
	254, 255, 256, 375, 257, 258, 259, 260, 329, 6,
	293, -139, -159, -158, -156, 83, 94, 40, 346, -157,
	77, 129, 266, 244, 267, -176, -233, 64, 352, 217,
	88, 89, 334, -234, -378, -380, -218, -380, -218, -378,
	-378, -261, -243, 20, 474, 310, 40, 78, 40, 360,
	-266, -268, -195, 67, -92, -91, -160, -180, -180, -94,
	-115, -118, -379, -218, 217, 20, 20, -93, -364, 392,
	-360, -358, 387, 388, 389, 390, -309, -308, -311, 393,
	275, 399, -249, -198, 519, 73, 389, -134, -218, -302,
	233, 134, -177, -210, -210, -203, 129, -210, -210, -210,
	-210, 250, 250, -210, -210, -210, -210, -210, -210, -210,
	-210, -210, -210, -210, -210, -210, -210, 67, -156, 83,
	-239, 73, -164, -165, 40, 265, 261, -166, 40, 245,
	246, -168, 67, 273, 13, 89, 89, -142, 67, 65,
	283, 67, 67, 67, -380, 68, 73, 354, 73, 310,
	68, 134, -326, -243, -93, -302, -114, 68, 68, 134,
	-366, 215, -362, -363, 391, -358, 20, 389, 20, 20,
	68, -310, 96, 359, 363, -243, 67, 20, 34, -303,
	282, 20, -177, 78, 78, -210, -210, 78, 73, 73,
	73, -210, -210, 78, 73, -220, 78, 78, 78, 78,
	40, 73, -167, 40, 261, 265, 262, 263, 264, 78,
	40, 78, 40, 78, 40, -218, 67, -384, -385, 73,
	78, 67, -347, -267, 67, -266, -381, 297, 298, 299,
	301, 300, -381, -266, -266, -266, 67, -288, -287, 274,
	94, 375, -269, -268, -109, 68, -303, -115, -218, 217,
	-373, 67, 78, -363, -362, 20, -361, 20, -361, -361,
	-310, 515, 397, 398, 397, 398, -199, -218, -361, 73,
	20, -304, 275, 276, -305, -316, 278, -162, -162, 73,
	73, -163, 244, -144, 68, 134, 103, 68, -243, -253,
	-171, -170, 470, -266, 68, 68, 68, 68, -266, 274,
	-270, 223, 77, 474, 295, 296, -109, -377, 30, 68,
	-372, -371, -196, -367, -218, 392, 393, 73, -361, 93,
	68, 134, -195, 67, -314, 279, 67, -312, 67, -312,
	89, 298, 245, 246, 68, -385, 73, 68, -175, -173,
	-174, 64, 403, 271, 272, 68, -269, -269, -269, -269,
	68, -210, 73, 294, -376, -375, -374, 68, 134, 133,
	-310, -218, -301, -306, 280, 78, -239, 67, -239, 67,
	-313, 277, 67, -287, -174, 64, -173, 64, 14, 13,
	-176, 78, -216, 134, 103, -371, -218, 68, -318, 67,
	20, 68, -301, 68, -301, 67, 103, -239, -172, 268,
	269, 30, 144, -172, -375, 40, -243, 133, -319, -317,
	233, -305, 68, 68, 68, -301, 78, 68, 83, 40,
	270, -218, 68, 134, 70, -315, 281, 68, -317, -320,
	46, 78, -324, -321, 67, -177, 235, 113, -324, -177,
	-323, -322, 280, 236, 67, 68, 134, 70, 232, 67,
	-249, -322, -321, -249, 68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 664, 665, 666, 667, 0, 0, 0,
	430, 431, 0, 408, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 320, 321, 322, 323, 324, 325,
	326, 327, 328, 329, 330, 331, 332, 333, 334, 335,
	336, 283, 284, 285, 0, 229, 225, 204, 205, 206,
	165, 166, 167, 168, 293, 0, 0, 0, 0, 0,
	0, 514, -2, 35, 668, 669, 670, 671, 672, 673,
	-2, 443, 0, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 272, 273, 274, 268, 269, 271, 270, -2,
	779, 443, 218, 0, 209, 209, 0, 534, 0, 0,
	549, 571, 33, 0, 492, 0, 497, 874, 910, 911,
	912, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701,
	1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711,
	1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 492, 230,
	432, 433, 534, 534, 406, 0, 254, 0, 1539, 258,
	0, 0, 0, 403, 249, 250, 251, 252, 253, 0,
	656, 0, 0, 245, 0, 224, 1598, 0, 0, 0,
	0, 0, 0, 109, 727, 111, 729, 115, 122, 0,
	0, 127, 128, 131, 132, 133, 134, 135, 0, 139,
	0, 141, 144, 0, 146, 147, 0, 150, 151, 152,
	0, 162, 163, 164, 730, 731, -2, 44, 676, 89,
	1282, 1179, 0, 1186, 1187, 1198, 1207, 982, 983, 984,
	985, 0, 0, 0, 0, 0, 992, 993, 0, 1006,
	1687, 0, 0, 1000, 1001, 1002, 1003, 51, 63, 64,
	1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	0, 1152, 969, 910, 0, 1695, 0, 1715, 1714, 0,
	0, 1137, 0, 1127, 0, -2, -2, 0, 0, 1665,
	-2, 1692, 1711, 1719, 1696, 1718, 1689, 1690, 1684, 1685,
	1686, 1688, 1697, 1699, 1710, 0, 1706, 1716, 1717, 0,
	65, 66, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1143, -2, 1145, 1146, 1148,
	1149, 1150, 1151, -2, 1154, 1155, 1156, -2, -2, 1159,
	1160, 1161, 1162, 1163, 1164, 1167, -2, 1169, -2, 1171,
	1139, 1140, 1141, 1142, 1131, 1132, 1133, 1134, 1135, 1136,
	-2, -2, -2, 0, 202, 200, 534, 607, 0, -2,
	0, 0, 0, 554, 557, 560, 563, 0, 36, 37,
	0, 0, 690, 756, 756, 756, 0, 756, 0, 0,
	780, 733, 734, 735, 754, 755, 448, 444, 445, 446,
	447, 522, 0, 524, 527, 386, 338, 0, 0, 0,
	350, 344, 0, 0, 0, 386, 0, 0, 529, 529,
	0, 395, 386, 386, -2, 0, 356, 357, 358, 344,
	0, 344, 362, 363, 364, 375, 376, 396, 1306, 0,
	0, 690, 293, 293, 450, 219, 220, 208, 210, 0,
	214, 0, 207, 1598, 0, 0, 176, 1665, 181, 0,
	1546, 1612, 1561, 0, 0, 1579, 0, -2, 529, 0,
	535, 0, 534, 0, 0, 293, 293, 293, 293, 293,
	293, 293, 0, 0, 0, 0, 572, 573, 568, 569,
	570, 574, 575, 3, 0, 657, 658, 661, 662, 663,
	460, 0, 496, 0, 0, 529, -2, 0, 407, 255,
	913, 0, 0, 259, 260, 0, 0, 275, 0, 278,
	263, 264, 265, 0, 0, 247, 248, 0, 0, 226,
	0, 0, 0, 294, 0, 0, 0, 0, 0, 0,
	119, 116, 123, 126, 136, 143, 0, 155, 157, 160,
	117, 124, 129, 130, 137, 158, 118, 120, 121, 125,
	159, 161, 138, 142, 156, 140, 145, 148, 149, 154,
	0, 90, 0, 0, 0, 0, 0, 0, 1185, 0,
	0, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 1179, 0, 0, 988,
	989, 990, 991, 994, 0, 1007, 0, 0, 0, 0,
	1236, 0, 1177, 1177, 0, 1177, 1173, 0, 0, 1177,
	1116, 0, 0, 1118, 1128, 0, 0, 1121, 1122, 1177,
	0, 1177, 1126, 1112, 1113, 0, 1173, 1173, 0, 0,
	1173, 1173, 1173, 1173, 1173, 1173, 1173, 1173, 1173, 1173,
	1173, 1173, 0, 1283, 1301, 1238, 1239, 1240, 1288, 1242,
	1292, 1292, 1288, 1288, 1270, 1271, 1272, 1273, 1274, 1275,
	1276, 1277, 1278, 0, 0, 1281, 1261, 1290, 1290, 1290,
	1288, 1285, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1295, 1295, 1298, 1295,
	0, 529, 0, 0, 517, 0, 498, 0, 551, 553,
	0, 555, 556, 558, 559, 561, 562, 564, 565, 38,
	0, 675, 0, 678, 0, 756, 691, 0, 0, 0,
	0, 0, 0, 756, 756, 450, 449, 0, 523, 0,
	0, 580, 0, 0, 344, 386, 349, 346, 345, 391,
	392, 388, 0, 388, 388, 580, 0, 369, 370, 371,
	386, 386, 377, 530, 378, 379, 388, 0, 393, 394,
	0, 580, 580, 0, 0, 0, 756, 346, 360, 346,
	1307, 1308, 0, 0, 0, 0, 451, 0, 0, 212,
	0, 217, 169, 0, 0, 0, 0, 0, 0, 198,
	199, 0, 0, 0, 0, 0, 189, 192, 868, 869,
	724, 725, 193, 194, 498, 550, 552, 546, 547, 548,
	0, 0, 0, 0, 0, 0, 0, 428, 0, 588,
	582, 584, 651, 51, 588, 0, 0, 471, 0, 465,
	0, 0, 0, 875, 452, 484, 454, 0, 473, 498,
	520, 498, 0, 256, 0, 261, 0, 0, 277, 279,
	280, 281, 266, 267, 404, 243, 244, 236, 237, 238,
	239, 240, 241, 242, 246, 61, 0, 227, 228, 0,
	0, 0, 103, 104, 105, 106, 107, 108, 110, 94,
	420, 422, 716, 728, 0, 719, 0, 113, 153, 86,
	0, 0, 86, 1180, 1181, 1182, 1183, 1184, 1188, 0,
	1190, 1192, 1194, 1196, 0, 1212, -2, -2, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	1199, 1210, 1211, 0, 0, 0, 0, 0, 1208, 1203,
	0, 986, 0, 1004, 1008, 0, 0, 0, 0, 52,
	1172, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091,
	1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101,
	1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111,
	0, 1178, 0, 1179, 0, 0, 0, 1174, 1175, 0,
	0, 1077, 1078, 1079, 0, 479, 0, 1138, 1117, 1129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 1304, 1302, 1303, 1241, 1289,
	0, 1266, 0, 1267, 1268, 1269, 0, 0, 1262, 0,
	1263, 1264, 1265, 1257, 0, 1258, 1259, 0, 1260, 201,
	606, 608, 0, 488, 490, 491, 0, 518, 531, 536,
	537, 540, 34, 39, 0, 679, 756, 0, 0, 693,
	0, 291, 710, 0, 726, 748, -2, 0, 0, 0,
	525, 0, 0, 620, 337, 0, 387, 341, 1598, 346,
	580, 351, 347, 402, 352, 0, 390, 353, 354, 355,
	0, 580, 580, 386, 388, 388, 382, 383, 0, 397,
	400, 398, 0, 359, 361, 293, 288, 291, 593, 0,
	594, 595, 591, 622, 646, 646, 0, 646, 626, 874,
	221, 222, 0, 0, 216, 170, 171, 0, 173, 174,
	175, 182, 177, 179, 0, 0, 183, 195, 196, 197,
	0, 0, 0, 187, 188, 0, 516, 418, 419, 423,
	0, 425, 872, 426, 427, 679, 580, 0, 589, 0,
	585, 652, 0, 654, 0, 580, 508, 0, 459, 0,
	484, 473, 0, 0, 460, 477, 0, 494, 453, 481,
	0, 485, 0, 0, 458, 474, 0, 519, 521, 914,
	0, 1313, -2, 1315, -2, -2, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 0, 262, 276, 0, 0, 0, 0, 97,
	713, 0, 98, 102, 92, 0, 0, 0, 718, 0,
	715, 720, 0, 112, 0, 0, 87, 88, 771, 776,
	0, 0, 1189, 1191, 1193, 1195, 1197, 0, 1200, 1208,
	1204, 0, 1201, 0, 0, 1180, 0, 1009, 0, 0,
	0, 997, 0, 0, 0, 1065, 1066, 0, 0, 1070,
	0, 1072, 0, 0, 0, 1076, 0, 1115, 1130, 1119,
	0, 1123, 0, 1125, 0, 1041, 0, 1043, 1043, 0,
	0, 0, 0, 1043, 0, 0, 0, 0, 0, 0,
	0, 0, 1284, 1237, 1305, 0, 0, 0, 1286, 0,
	0, 0, 0, 0, 609, 500, 0, 0, 0, 543,
	541, 542, 0, 0, 680, 681, 683, 684, 0, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1531, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	0, 700, 1309, 757, 295, 0, 0, 712, 0, 0,
	753, -2, 760, 0, 766, 0, 0, 0, 0, 437,
	441, 33, 528, 0, 581, 339, 0, 340, 386, 348,
	389, 580, 874, 372, 373, 580, 386, 386, 388, 0,
	399, 0, 700, 1309, 295, 0, 0, 0, 0, 0,
	613, 0, 0, 612, 0, 0, 0, 0, 0, 527,
	647, 0, 649, 650, 659, 660, 624, -2, 0, 593,
	629, 1177, 223, 211, 213, 0, 0, 0, 0, 184,
	185, 186, 190, 191, 0, 0, 0, 578, 583, 590,
	653, 655, 52, 586, 578, 40, 0, 0, 0, 464,
	470, 0, 462, 460, 0, 0, 0, 493, 0, 484,
	486, 0, 484, 0, 0, 0, 0, 405, 62, 282,
	0, 0, 0, 0, 0, 421, 0, 717, 94, 0,
	0, 114, 0, 0, 774, 0, 776, 0, 1176, 1202,
	0, 1209, 1205, 987, 995, 1005, 0, 0, 1011, 1023,
	1023, 0, 1014, 1288, 1292, 1017, 1288, 1290, 1288, 1023,
	1023, 0, 53, 0, 0, 1071, 0, 0, 0, 480,
	0, 0, 0, 0, 0, 1043, 1047, 0, 1048, 1043,
	1043, 1043, 1043, 1053, 1043, 1043, 1043, 1043, 1043, 1043,
	1043, 1043, 1294, 1293, 1279, 0, 1280, 1291, 1296, 0,
	1299, 0, 489, 504, 0, 532, 533, 538, 539, 0,
	0, 0, 0, 685, 527, 876, 703, 701, 702, 0,
	1310, 707, 296, 297, 298, 299, 0, 0, 0, 711,
	0, 0, 749, 750, 751, 752, 761, 1309, 1309, 1309,
	876, 876, 492, 0, -2, 0, 0, 439, 0, 0,
	621, 342, 580, 365, 0, 380, 580, 580, 386, 401,
	527, 703, 0, 707, 580, 233, 0, 616, 610, 0,
	599, 614, 615, 602, 0, 604, 0, 600, 601, 580,
	592, 623, 648, 625, 628, 630, 631, 637, 0, 0,
	0, 0, 215, 172, 0, 315, 178, 424, 873, 429,
	576, 0, 0, 576, 509, 508, 0, 461, 0, 0,
	478, 484, 0, 495, 482, 0, 487, 484, 457, 456,
	475, 476, 915, 1314, 1311, 1312, 257, 0, 714, 94,
	99, 100, 101, 95, 93, 721, 0, 723, 0, 772,
	776, 0, 0, 0, 1206, 1010, 996, 1012, 1024, 1025,
	1013, 998, 1015, 1016, 1018, 1019, 1020, 1021, 1022, 999,
	1067, 0, 1069, 1073, 1074, 0, 1120, 1124, 0, 1043,
	1042, 1046, 1039, 1049, 1050, 1051, 1052, 1054, 1055, 1056,
	1057, 1058, 1059, 1060, 1061, 1287, 0, 0, 506, 75,
	0, 0, 544, 545, 674, 0, 682, 0, 0, 0,
	877, 878, 880, 881, 0, 0, 883, 939, 0, 892,
	756, 892, 0, 0, 894, 895, 692, 0, 0, 695,
	696, 705, 0, 0, 0, 301, 302, 0, 0, 0,
	314, 310, 311, 312, 292, 706, 0, 0, 0, 0,
	0, 0, 646, 0, 0, 580, 438, 441, 442, 526,
	343, 580, 384, 381, 580, 0, 287, 0, 290, 534,
	0, 0, 596, 617, 0, 0, 597, 0, 598, 603,
	605, 232, 632, 0, 0, 634, 635, 636, 627, 180,
	566, 0, 0, 587, 567, 41, 473, 466, 463, 484,
	469, 468, 0, 483, 455, 96, 91, 722, 460, 775,
	777, 773, 77, 0, 1075, 0, 1045, 534, 1040, 0,
	1297, 1300, 508, 0, 505, 0, 0, 0, 0, 688,
	686, 0, -2, 0, -2, 882, 940, 904, 904, 893,
	904, 904, 756, 0, 704, 694, 0, 708, 709, 0,
	303, 304, 0, 307, 313, 0, 762, 763, 870, 871,
	764, 0, -2, 580, 580, -2, 435, 440, 0, 366,
	385, 0, 289, 529, 234, 235, 618, 0, 611, 641,
	638, 0, 0, 577, 579, 472, 467, 461, 77, 42,
	70, 0, 1068, 1114, 1036, 0, 510, 507, 0, 501,
	503, 85, 0, 689, 781, -2, 824, 1309, 1309, 0,
	1309, 1309, 1309, 1309, 0, 0, 1309, 1309, 1309, 1309,
	1309, 1309, 1309, 1309, 1309, 1309, 1309, 1309, 1309, 1309,
	0, 879, 906, -2, 918, 920, 0, 0, 923, 924,
	0, 0, 0, 0, 961, 930, 0, 0, 934, 0,
	1224, 1225, 0, 938, 0, 896, 905, 0, 905, 0,
	0, 904, 0, 0, 0, 300, 305, 0, 308, 309,
	0, 744, 1288, 0, 768, 77, 781, 534, 436, 286,
	231, 0, 0, 642, 644, 639, 640, 43, 67, 73,
	78, 79, 0, 0, 0, 0, 0, 1037, 0, 1031,
	1032, 1033, 1038, 499, 0, 76, 0, 0, 687, 783,
	0, 765, 826, 0, 0, 1309, 1309, 0, 0, 0,
	0, 1309, 1309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 919, 921,
	922, 925, 926, 927, 966, 967, 968, 928, 963, 964,
	965, 929, 0, 0, 0, 1222, 1223, 959, 0, 0,
	0, 0, 0, 0, 0, 890, 697, 0, 699, 306,
	737, 0, 540, 0, 770, 783, 529, 619, 633, 0,
	54, 0, 75, 73, 0, 80, 0, 0, 0, 0,
	1044, 1034, 0, 0, 0, 0, 0, 0, 0, 767,
	0, 820, 825, 827, 828, 0, 0, 831, 832, 833,
	834, 0, 0, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 862, 863, 864, 865, 866, 867, 847,
	848, 849, 850, 851, 852, 859, 0, 0, 856, 0,
	0, 0, 1127, 954, 0, 0, 897, 899, 900, 901,
	902, 903, 898, 0, 0, 0, 0, 889, 891, 935,
	0, 698, 736, 745, 746, 540, 769, 434, 643, 645,
	45, 0, 0, 71, 72, 0, 81, 0, 83, 84,
	0, 1026, 1027, 1029, 1028, 1030, 0, 512, 502, 677,
	0, 808, 0, 0, 814, 0, 821, 829, 830, 835,
	836, 853, 0, 0, 855, 0, 0, 962, 0, 933,
	942, 955, 0, 0, 737, 737, 737, 737, 0, 936,
	738, 1309, 0, 0, 742, 743, 747, 778, 0, 55,
	0, 57, 59, 60, 907, 68, 69, 74, 82, 0,
	511, 0, 784, 0, 786, 0, 0, 0, 0, 0,
	818, 0, 860, 861, 854, 857, 858, 931, 941, 943,
	944, 0, 956, 957, 958, 960, 884, 885, 886, 887,
	0, 0, 740, 0, 46, 47, 0, 56, 0, 0,
	1035, 513, 0, 788, 0, 809, 0, 0, 0, 0,
	0, 0, 0, 932, 945, 0, 946, 0, 0, 0,
	888, 739, 741, 0, 0, 58, 908, 785, 782, 0,
	820, 810, 0, 812, 0, 0, 0, 0, 947, 949,
	950, 0, 0, 948, 48, 49, 50, 0, 0, 790,
	0, 806, 811, 813, 815, 0, 819, 817, 951, 953,
	952, 909, 789, 0, 802, 787, 0, 816, 791, -2,
	0, 807, 792, -2, 0, 800, 0, 0, 793, 801,
	0, 796, 0, 0, 0, 795, 0, -2, 803, 0,
	0, 797, -2, 0, 805, 804,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 525,
	104, 103, 105, 3, 526, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 527, 115, 528, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:620
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:626
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:661
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:666
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:672
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:692
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:698
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:705
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:713
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:719
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:728
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				OutFile:     yyDollar[5].str,
				MaxFileSize: int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:736
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				Tables:      yyDollar[5].tableNamesUnion(),
				OutFile:     yyDollar[7].str,
				MaxFileSize: int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:749
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:761
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:774
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:781
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:785
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:791
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:795
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:801
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:808
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:817
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:821
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:825
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:830
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:834
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:838
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:844
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:853
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:864
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:868
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:874
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:878
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:884
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:888
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:894
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:918
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:937
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:941
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:945
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:954
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:961
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:969
		{
			yyVAL.str = ""
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:973
		{
			yyVAL.str = yyDollar[3].str
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:978
		{
			yyVAL.str = "\n"
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:982
		{
			yyVAL.str = yyDollar[3].str
		}
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:987
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:991
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1015
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1019
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1025
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1031
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1049
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1066
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1089
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1093
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1097
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1102
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1106
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1112
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1125
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1136
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1149
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1153
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1163
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1176
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1189
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1195
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1201
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1208
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1216
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1225
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1229
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1233
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1237
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1241
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1245
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1252
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1256
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1262
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1269
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1278
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1282
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1288
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1292
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1296
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1300
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1304
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1308
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1312
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1316
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1320
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1324
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1328
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1332
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1336
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1340
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1344
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1348
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1352
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1356
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1360
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1364
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1368
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1372
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1376
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1380
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1384
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1388
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1392
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1396
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1400
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1404
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1408
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1412
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1416
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1420
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1424
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1428
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1432
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1436
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1440
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1444
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1448
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1452
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1456
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1460
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1464
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1468
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1472
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1476
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1480
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1484
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1496
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1503
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1510
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1519
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1549
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1553
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1557
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1563
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1569
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1573
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1580
		{
			yyVAL.str = yyDollar[3].str
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1586
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1590
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1596
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1604
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1613
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1621
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1629
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1652
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1675
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1682
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1689
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1697
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1704
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1711
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1720
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1724
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1728
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1734
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1738
		{
			yyVAL.str = yyDollar[1].str
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1745
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1751
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1755
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1766
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1772
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1797
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1801
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1815
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1819
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1823
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1827
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1832
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1837
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1843
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1850
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1856
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1863
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1870
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1880
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1887
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1898
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1909
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1913
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1919
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1931
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1937
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1941
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1947
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1951
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1957
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1963
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1973
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1979
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1983
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1987
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1991
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1995
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1999
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2007
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2015
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2025
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2066
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2070
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2076
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2082
		{
			yyVAL.str = yyDollar[1].str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2087
		{
			yyVAL.str = "true"
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2088
		{
			yyVAL.str = "false"
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2089
		{
			yyVAL.str = yyDollar[1].str
		}
	case 282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2094
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2106
		{
			yyLOCAL = &tree.AlterView{
				Name:      yyDollar[6].tableNameUnion(),
				ColNames:  yyDollar[7].identifierListUnion(),
				AsSource:  yyDollar[9].selectUnion(),
				Temporary: yyDollar[2].boolValUnion(),
				IfExists:  yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2118
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2129
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2135
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2146
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2157
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2161
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2166
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2170
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2175
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2179
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2195
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2199
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2203
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2207
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2211
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2215
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2219
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2223
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2227
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2231
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2235
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2239
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2243
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2247
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2251
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2255
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2261
		{
			yyVAL.item = nil
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2266
		{
			yyVAL.item = nil
		}
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2298
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2303
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2307
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2311
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].str)}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2324
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2330
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2335
		{
		}
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2339
		{
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2344
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2353
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2359
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2365
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2371
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2377
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2383
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2389
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2398
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2402
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2406
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2410
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2414
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2418
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2422
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2426
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2430
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2436
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2443
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2453
		{
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2455
		{
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2464
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2474
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2483
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2487
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2491
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2497
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2503
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2509
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2515
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2525
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2537
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2541
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2547
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2559
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2576
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2581
		{
			yyVAL.str = ""
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2585
		{
			yyVAL.str = yyDollar[2].str
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2591
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2604
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2608
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2614
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2619
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2623
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2629
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2633
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2642
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2646
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2650
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2656
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2660
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2680
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2689
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2698
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2702
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2708
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2717
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2726
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2736
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2742
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2748
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2754
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2760
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2771
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2776
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2783
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2799
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2812
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2823
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2827
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2833
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2838
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2845
		{
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2847
		{
		}
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2850
		{
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2859
		{
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2863
		{
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2868
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2877
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2884
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2890
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2898
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2905
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2912
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2932
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2941
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2945
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2951
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2955
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2961
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2969
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2975
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2982
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2991
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2999
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3007
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:3027
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:3031
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3050
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3054
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3058
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3064
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3073
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3077
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3083
		{
			yyVAL.str = yyDollar[1].str
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3087
		{
			yyVAL.str = yyDollar[3].str
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3093
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3097
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3103
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3108
		{
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3112
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3119
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3123
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3130
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3135
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3139
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3145
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3149
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3155
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3159
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3164
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3168
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3181
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3188
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3195
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3213
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3232
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3238
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3245
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3249
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3262
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3266
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3271
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3275
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3282
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3287
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3294
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3300
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3304
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3308
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3312
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3316
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3320
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3326
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3333
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3342
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3346
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3352
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3360
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3364
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3369
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3373
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3379
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3383
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3387
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3392
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3396
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3402
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3408
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3412
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3418
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3423
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3427
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3431
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3436
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3440
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3444
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3450
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3454
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3458
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3472
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3476
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3486
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3496
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3506
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3518
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3526
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3534
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3543
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3551
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3559
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3567
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3575
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3583
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3591
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3599
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3607
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3617
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3628
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3646
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3650
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3654
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3663
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3667
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3672
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3676
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3681
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3685
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3691
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3695
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3701
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3705
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3709
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3713
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3718
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3726
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3732
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3740
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3748
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3758
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3764
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3773
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3782
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3791
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3801
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3805
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3815
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3819
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3823
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3827
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3833
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3843
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3847
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3853
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3859
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3863
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3869
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3875
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3879
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3883
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3889
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3893
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3899
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3903
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3909
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3913
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3919
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3923
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3933
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3946
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3952
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3958
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3971
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3982
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3989
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3993
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:3999
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4009
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4013
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4017
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4022
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4026
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4030
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4034
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4039
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4043
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4047
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4051
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4055
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4060
		{
			yyVAL.str = ""
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4064
		{
			yyVAL.str = yyDollar[1].str
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4068
		{
			yyVAL.str = yyDollar[2].str
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4077
		{
			yyVAL.str = ""
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4081
		{
			yyVAL.str = yyDollar[1].str
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4085
		{
			yyVAL.str = yyDollar[2].str
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4089
		{
			yyVAL.str = yyDollar[1].str
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4093
		{
			yyVAL.str = yyDollar[2].str
		}
	case 674:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4129
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4139
		{
			yyVAL.str = yyDollar[1].str
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4145
		{
			yyVAL.str = yyDollar[1].str
		}
	case 677:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4152
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4164
		{
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].str))
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4169
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4176
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4180
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4186
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4192
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4196
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4200
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4206
		{
			yyVAL.str = yyDollar[1].str
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4212
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4218
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[6].tableNameUnion(),
				ColNames:    yyDollar[7].identifierListUnion(),
				AsSource:    yyDollar[9].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4229
		{
		}
	case 692:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4234
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4246
		{
			yyVAL.str = yyDollar[1].str
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4252
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4262
		{
			yyVAL.str = yyDollar[1].str
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4266
		{
			yyVAL.str = yyDollar[1].str
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4272
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4279
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4285
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4293
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4299
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4306
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4314
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4320
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4329
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4341
		{
			yyVAL.str = yyDollar[1].str
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4346
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4352
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4360
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4466
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4470
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4476
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4486
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4490
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4496
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4506
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4510
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4514
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4519
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4523
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4529
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4536
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4542
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4555
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4564
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4568
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4574
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4591
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4595
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4599
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4603
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4609
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4628
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4632
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4654
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4658
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4662
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4666
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4670
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4676
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4680
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4686
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4691
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4696
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4700
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4704
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4708
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4712
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4718
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4732
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4736
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4741
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4745
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4751
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4755
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4761
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4765
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4769
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4774
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4778
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4784
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4796
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4805
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4818
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4825
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4833
		{
			yyLOCAL = &tree.ExternParam{
				Option: yyDollar[3].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4839
		{
			yyLOCAL = &tree.ExternParam{
				ScanType: tree.S3,
				Option:   yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4848
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4852
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4857
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4861
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4868
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4879
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4883
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4888
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4892
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4902
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4906
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4913
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4920
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4924
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4933
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4937
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4943
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4947
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4953
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4962
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4972
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4976
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4982
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4986
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4992
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4999
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5008
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5012
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5017
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5021
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5026
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5030
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5035
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5039
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5049
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5053
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5064
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5072
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5080
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5088
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5099
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5108
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5118
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5128
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5132
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5137
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5141
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5146
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5150
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5156
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5160
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5164
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5170
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5174
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5178
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5182
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5186
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5190
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5194
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5198
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5202
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5206
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5210
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5214
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5218
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5222
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5226
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5230
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5234
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5238
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5242
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5246
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5250
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5254
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5258
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5262
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5266
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5270
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5274
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5278
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5282
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5289
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5293
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5299
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5304
		{
			yyVAL.str = ""
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5308
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5312
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5318
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5322
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5326
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5330
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5334
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5338
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5352
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5356
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5365
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5370
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5376
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5383
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5387
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5393
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5397
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5403
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5413
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5419
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5428
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5437
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5460
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5469
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5479
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5487
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5493
		{
			yyVAL.str = ""
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5497
		{
			yyVAL.str = yyDollar[1].str
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5507
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5513
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5519
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5533
		{
			yyVAL.str = ""
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5540
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5546
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5550
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5554
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5565
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5569
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5573
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5578
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5582
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5588
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5592
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5598
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5602
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5606
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5610
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5614
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5618
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5622
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5626
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5630
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5634
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5638
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5642
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5646
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5650
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5663
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5669
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5673
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5678
		{
			yyVAL.str = ""
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5682
		{
			yyVAL.str = yyDollar[1].str
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5688
		{
			yyVAL.str = ""
		}
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5692
		{
			yyVAL.str = yyDollar[2].str
		}
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5698
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5710
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5717
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5724
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5731
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5738
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5747
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5753
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5759
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5763
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5767
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5771
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5775
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5780
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5787
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5791
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5795
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5800
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5804
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5809
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5813
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5829
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5835
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5839
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5843
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5847
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5851
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5855
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5859
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5863
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5867
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5871
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5875
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5879
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5883
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5889
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5893
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5897
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5901
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5905
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5909
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5913
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5917
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5921
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5925
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5929
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5933
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5938
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5946
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5950
		{
			locale := ""
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: "BINARY",
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			})
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5962
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5966
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5975
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5979
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5983
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5987
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5992
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5996
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6001
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6005
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6011
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6015
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6021
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6031
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6048
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6065
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6078
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6091
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6103
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6117
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6132
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6147
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6164
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6179
		{
		}
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6185
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6189
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6193
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6199
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6203
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6211
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6215
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6219
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6225
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6232
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6241
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6245
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6252
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6261
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6266
		{
			yyVAL.str = ","
		}
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6270
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6275
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6279
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6289
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[7].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6300
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6310
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6319
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6328
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6338
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6348
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6358
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6368
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6378
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6388
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6398
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6408
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6418
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6428
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6438
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6448
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6465
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6473
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6481
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6489
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6497
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6506
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6514
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6523
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6531
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6539
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6548
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6557
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6579
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6615
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6627
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6639
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6649
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6657
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6664
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6671
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6683
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6691
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6702
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6711
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6720
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6728
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6738
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6746
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6756
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6760
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6766
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6770
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6789
		{
		}
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6791
		{
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6832
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6842
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6846
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6850
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6856
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6861
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6865
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6871
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6875
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6882
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6886
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6890
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6898
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6902
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6906
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6910
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6916
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6920
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6924
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6928
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6932
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6936
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6940
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6944
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6948
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6952
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6960
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6964
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6968
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6972
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6976
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6980
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6984
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6988
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6998
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7004
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7008
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7015
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7019
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7023
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7029
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7033
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7037
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7041
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7045
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7049
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7053
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7059
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7063
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7067
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7071
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7077
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7081
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7094
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7099
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7103
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7107
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7111
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7115
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7119
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7133
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7137
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7144
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7155
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7160
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7166
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7178
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7190
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7202
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7215
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7228
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7241
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7254
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7267
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7280
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7293
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7306
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7319
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7332
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7347
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7370
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7404
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7452
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7469
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7481
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7501
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7521
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7541
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7557
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7570
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7583
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7596
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7609
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7621
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7633
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7645
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7657
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7669
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7681
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7693
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7705
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7717
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7730
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7743
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7758
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7766
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7775
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7785
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7808
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7813
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7819
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7826
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7830
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7835
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7839
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7845
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7851
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7858
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7865
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7874
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7881
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7888
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7897
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7901
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7905
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7911
		{
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7913
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7923
		{
			yyVAL.str = ""
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7927
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
