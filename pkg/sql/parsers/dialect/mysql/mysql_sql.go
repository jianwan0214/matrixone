// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const S3OPTION = 57521
const SQL_SMALL_RESULT = 57522
const SQL_BIG_RESULT = 57523
const SQL_BUFFER_RESULT = 57524
const LOW_PRIORITY = 57525
const HIGH_PRIORITY = 57526
const DELAYED = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const RETURNS = 57534
const SCHEMA = 57535
const TABLE = 57536
const INDEX = 57537
const VIEW = 57538
const TO = 57539
const IGNORE = 57540
const IF = 57541
const PRIMARY = 57542
const COLUMN = 57543
const CONSTRAINT = 57544
const SPATIAL = 57545
const FULLTEXT = 57546
const FOREIGN = 57547
const KEY_BLOCK_SIZE = 57548
const SHOW = 57549
const DESCRIBE = 57550
const EXPLAIN = 57551
const DATE = 57552
const ESCAPE = 57553
const REPAIR = 57554
const OPTIMIZE = 57555
const TRUNCATE = 57556
const MAXVALUE = 57557
const PARTITION = 57558
const REORGANIZE = 57559
const LESS = 57560
const THAN = 57561
const PROCEDURE = 57562
const TRIGGER = 57563
const STATUS = 57564
const VARIABLES = 57565
const ROLE = 57566
const PROXY = 57567
const AVG_ROW_LENGTH = 57568
const STORAGE = 57569
const DISK = 57570
const MEMORY = 57571
const CHECKSUM = 57572
const COMPRESSION = 57573
const DATA = 57574
const DIRECTORY = 57575
const DELAY_KEY_WRITE = 57576
const ENCRYPTION = 57577
const ENGINE = 57578
const MAX_ROWS = 57579
const MIN_ROWS = 57580
const PACK_KEYS = 57581
const ROW_FORMAT = 57582
const STATS_AUTO_RECALC = 57583
const STATS_PERSISTENT = 57584
const STATS_SAMPLE_PAGES = 57585
const DYNAMIC = 57586
const COMPRESSED = 57587
const REDUNDANT = 57588
const COMPACT = 57589
const FIXED = 57590
const COLUMN_FORMAT = 57591
const AUTO_RANDOM = 57592
const RESTRICT = 57593
const CASCADE = 57594
const ACTION = 57595
const PARTIAL = 57596
const SIMPLE = 57597
const CHECK = 57598
const ENFORCED = 57599
const RANGE = 57600
const LIST = 57601
const ALGORITHM = 57602
const LINEAR = 57603
const PARTITIONS = 57604
const SUBPARTITION = 57605
const SUBPARTITIONS = 57606
const CLUSTER = 57607
const TYPE = 57608
const ANY = 57609
const SOME = 57610
const EXTERNAL = 57611
const LOCALFILE = 57612
const URL = 57613
const PREPARE = 57614
const DEALLOCATE = 57615
const RESET = 57616
const EXTENSION = 57617
const PROPERTIES = 57618
const PARSER = 57619
const VISIBLE = 57620
const INVISIBLE = 57621
const BTREE = 57622
const HASH = 57623
const RTREE = 57624
const BSI = 57625
const ZONEMAP = 57626
const LEADING = 57627
const BOTH = 57628
const TRAILING = 57629
const UNKNOWN = 57630
const EXPIRE = 57631
const ACCOUNT = 57632
const ACCOUNTS = 57633
const UNLOCK = 57634
const DAY = 57635
const NEVER = 57636
const PUMP = 57637
const SECOND = 57638
const ASCII = 57639
const COALESCE = 57640
const COLLATION = 57641
const HOUR = 57642
const MICROSECOND = 57643
const MINUTE = 57644
const MONTH = 57645
const QUARTER = 57646
const REPEAT = 57647
const REVERSE = 57648
const ROW_COUNT = 57649
const WEEK = 57650
const REVOKE = 57651
const FUNCTION = 57652
const PRIVILEGES = 57653
const TABLESPACE = 57654
const EXECUTE = 57655
const SUPER = 57656
const GRANT = 57657
const OPTION = 57658
const REFERENCES = 57659
const REPLICATION = 57660
const SLAVE = 57661
const CLIENT = 57662
const USAGE = 57663
const RELOAD = 57664
const FILE = 57665
const TEMPORARY = 57666
const ROUTINE = 57667
const EVENT = 57668
const SHUTDOWN = 57669
const NULLX = 57670
const AUTO_INCREMENT = 57671
const APPROXNUM = 57672
const SIGNED = 57673
const UNSIGNED = 57674
const ZEROFILL = 57675
const ENGINES = 57676
const LOW_CARDINALITY = 57677
const ADMIN_NAME = 57678
const RANDOM = 57679
const SUSPEND = 57680
const ATTRIBUTE = 57681
const HISTORY = 57682
const REUSE = 57683
const CURRENT = 57684
const OPTIONAL = 57685
const FAILED_LOGIN_ATTEMPTS = 57686
const PASSWORD_LOCK_TIME = 57687
const UNBOUNDED = 57688
const SECONDARY = 57689
const USER = 57690
const IDENTIFIED = 57691
const CIPHER = 57692
const ISSUER = 57693
const X509 = 57694
const SUBJECT = 57695
const SAN = 57696
const REQUIRE = 57697
const SSL = 57698
const NONE = 57699
const PASSWORD = 57700
const MAX_QUERIES_PER_HOUR = 57701
const MAX_UPDATES_PER_HOUR = 57702
const MAX_CONNECTIONS_PER_HOUR = 57703
const MAX_USER_CONNECTIONS = 57704
const FORMAT = 57705
const VERBOSE = 57706
const CONNECTION = 57707
const TRIGGERS = 57708
const PROFILES = 57709
const LOAD = 57710
const INFILE = 57711
const TERMINATED = 57712
const OPTIONALLY = 57713
const ENCLOSED = 57714
const ESCAPED = 57715
const STARTING = 57716
const LINES = 57717
const ROWS = 57718
const IMPORT = 57719
const MODUMP = 57720
const OVER = 57721
const PRECEDING = 57722
const FOLLOWING = 57723
const GROUPS = 57724
const DATABASES = 57725
const TABLES = 57726
const EXTENDED = 57727
const FULL = 57728
const PROCESSLIST = 57729
const FIELDS = 57730
const COLUMNS = 57731
const OPEN = 57732
const ERRORS = 57733
const WARNINGS = 57734
const INDEXES = 57735
const SCHEMAS = 57736
const NODE = 57737
const LOCKS = 57738
const TABLE_NUMBER = 57739
const TABLE_SIZE = 57740
const COLUMN_NUMBER = 57741
const TABLE_VALUES = 57742
const NAMES = 57743
const GLOBAL = 57744
const SESSION = 57745
const ISOLATION = 57746
const LEVEL = 57747
const READ = 57748
const WRITE = 57749
const ONLY = 57750
const REPEATABLE = 57751
const COMMITTED = 57752
const UNCOMMITTED = 57753
const SERIALIZABLE = 57754
const LOCAL = 57755
const EVENTS = 57756
const PLUGINS = 57757
const CURRENT_TIMESTAMP = 57758
const DATABASE = 57759
const CURRENT_TIME = 57760
const LOCALTIME = 57761
const LOCALTIMESTAMP = 57762
const UTC_DATE = 57763
const UTC_TIME = 57764
const UTC_TIMESTAMP = 57765
const REPLACE = 57766
const CONVERT = 57767
const SEPARATOR = 57768
const TIMESTAMPDIFF = 57769
const CURRENT_DATE = 57770
const CURRENT_USER = 57771
const CURRENT_ROLE = 57772
const SECOND_MICROSECOND = 57773
const MINUTE_MICROSECOND = 57774
const MINUTE_SECOND = 57775
const HOUR_MICROSECOND = 57776
const HOUR_SECOND = 57777
const HOUR_MINUTE = 57778
const DAY_MICROSECOND = 57779
const DAY_SECOND = 57780
const DAY_MINUTE = 57781
const DAY_HOUR = 57782
const YEAR_MONTH = 57783
const SQL_TSI_HOUR = 57784
const SQL_TSI_DAY = 57785
const SQL_TSI_WEEK = 57786
const SQL_TSI_MONTH = 57787
const SQL_TSI_QUARTER = 57788
const SQL_TSI_YEAR = 57789
const SQL_TSI_SECOND = 57790
const SQL_TSI_MINUTE = 57791
const RECURSIVE = 57792
const CONFIG = 57793
const DRAINER = 57794
const MATCH = 57795
const AGAINST = 57796
const BOOLEAN = 57797
const LANGUAGE = 57798
const WITH = 57799
const QUERY = 57800
const EXPANSION = 57801
const ADDDATE = 57802
const BIT_AND = 57803
const BIT_OR = 57804
const BIT_XOR = 57805
const CAST = 57806
const COUNT = 57807
const APPROX_COUNT_DISTINCT = 57808
const APPROX_PERCENTILE = 57809
const CURDATE = 57810
const CURTIME = 57811
const DATE_ADD = 57812
const DATE_SUB = 57813
const EXTRACT = 57814
const GROUP_CONCAT = 57815
const MAX = 57816
const MID = 57817
const MIN = 57818
const NOW = 57819
const POSITION = 57820
const SESSION_USER = 57821
const STD = 57822
const STDDEV = 57823
const MEDIAN = 57824
const STDDEV_POP = 57825
const STDDEV_SAMP = 57826
const SUBDATE = 57827
const SUBSTR = 57828
const SUBSTRING = 57829
const SUM = 57830
const SYSDATE = 57831
const SYSTEM_USER = 57832
const TRANSLATE = 57833
const TRIM = 57834
const VARIANCE = 57835
const VAR_POP = 57836
const VAR_SAMP = 57837
const AVG = 57838
const ARROW = 57839
const ROW = 57840
const OUTFILE = 57841
const HEADER = 57842
const MAX_FILE_SIZE = 57843
const FORCE_QUOTE = 57844
const UNUSED = 57845
const BINDINGS = 57846
const DO = 57847
const DECLARE = 57848
const KILL = 57849
const QUERY_RESULT = 57850

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"TABLE_SIZE",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8391

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 92,
	21, 537,
	-2, 518,
	-1, 100,
	212, 736,
	-2, 783,
	-1, 119,
	42, 370,
	212, 370,
	239, 377,
	240, 377,
	410, 370,
	-2, 398,
	-1, 427,
	288, 92,
	386, 92,
	-2, 1525,
	-1, 486,
	67, 1151,
	-2, 1665,
	-1, 487,
	67, 1169,
	-2, 1636,
	-1, 491,
	67, 1170,
	-2, 1664,
	-1, 513,
	67, 1084,
	-2, 1713,
	-1, 514,
	67, 1085,
	-2, 1712,
	-1, 515,
	67, 1086,
	-2, 1702,
	-1, 516,
	67, 1677,
	-2, 1697,
	-1, 517,
	67, 1678,
	-2, 1698,
	-1, 518,
	67, 1679,
	-2, 1704,
	-1, 519,
	67, 1680,
	-2, 1687,
	-1, 520,
	67, 1681,
	-2, 1695,
	-1, 521,
	67, 1682,
	-2, 1705,
	-1, 522,
	67, 1683,
	-2, 1706,
	-1, 523,
	67, 1684,
	-2, 1711,
	-1, 524,
	67, 1685,
	-2, 1716,
	-1, 525,
	67, 1686,
	-2, 1717,
	-1, 527,
	67, 1148,
	-2, 1517,
	-1, 534,
	67, 1157,
	-2, 1543,
	-1, 538,
	67, 1161,
	-2, 1582,
	-1, 539,
	67, 1162,
	-2, 1660,
	-1, 547,
	67, 1172,
	-2, 1645,
	-1, 549,
	67, 1174,
	-2, 1655,
	-1, 561,
	67, 1066,
	-2, 1707,
	-1, 562,
	67, 1067,
	-2, 1708,
	-1, 563,
	67, 1068,
	-2, 1709,
	-1, 570,
	21, 538,
	-2, 501,
	-1, 625,
	405, 398,
	406, 398,
	-2, 371,
	-1, 668,
	103, 1517,
	114, 1517,
	133, 1517,
	-2, 1310,
	-1, 708,
	21, 538,
	-2, 501,
	-1, 807,
	21, 537,
	-2, 973,
	-1, 1129,
	67, 1217,
	-2, 1662,
	-1, 1130,
	67, 1218,
	-2, 1663,
	-1, 1290,
	1, 762,
	68, 762,
	526, 762,
	-2, 769,
	-1, 1417,
	133, 1320,
	-2, 1318,
	-1, 1419,
	133, 662,
	-2, 1315,
	-1, 1420,
	133, 663,
	-2, 1316,
	-1, 1714,
	68, 1296,
	134, 1296,
	-2, 1647,
	-1, 1715,
	68, 1292,
	134, 1292,
	-2, 1646,
	-1, 1716,
	68, 1274,
	134, 1274,
	-2, 1633,
	-1, 1717,
	68, 1275,
	134, 1275,
	-2, 1638,
	-1, 1718,
	68, 1276,
	134, 1276,
	-2, 1570,
	-1, 1719,
	68, 1277,
	134, 1277,
	-2, 1564,
	-1, 1720,
	68, 1278,
	134, 1278,
	-2, 1508,
	-1, 1721,
	68, 1279,
	134, 1279,
	-2, 1635,
	-1, 1722,
	68, 1280,
	134, 1280,
	-2, 1568,
	-1, 1723,
	68, 1281,
	134, 1281,
	-2, 1563,
	-1, 1724,
	68, 1282,
	134, 1282,
	-2, 1556,
	-1, 1726,
	68, 1265,
	134, 1265,
	-2, 1665,
	-1, 1727,
	68, 1294,
	134, 1294,
	-2, 1636,
	-1, 1728,
	68, 1294,
	134, 1294,
	-2, 1664,
	-1, 1729,
	68, 1294,
	134, 1294,
	-2, 1526,
	-1, 1730,
	68, 1292,
	134, 1292,
	-2, 1655,
	-1, 1731,
	68, 1289,
	134, 1289,
	-2, 1548,
	-1, 1732,
	67, 1247,
	68, 1247,
	134, 1247,
	348, 1247,
	349, 1247,
	350, 1247,
	-2, 1507,
	-1, 1733,
	67, 1248,
	68, 1248,
	134, 1248,
	348, 1248,
	349, 1248,
	350, 1248,
	-2, 1509,
	-1, 1734,
	67, 1251,
	68, 1251,
	134, 1251,
	348, 1251,
	349, 1251,
	350, 1251,
	-2, 1637,
	-1, 1735,
	67, 1253,
	68, 1253,
	134, 1253,
	348, 1253,
	349, 1253,
	350, 1253,
	-2, 1620,
	-1, 1736,
	67, 1255,
	68, 1255,
	134, 1255,
	348, 1255,
	349, 1255,
	350, 1255,
	-2, 1569,
	-1, 1737,
	67, 1257,
	68, 1257,
	134, 1257,
	348, 1257,
	349, 1257,
	350, 1257,
	-2, 1552,
	-1, 1738,
	67, 1258,
	68, 1258,
	134, 1258,
	348, 1258,
	349, 1258,
	350, 1258,
	-2, 1553,
	-1, 1739,
	67, 1260,
	68, 1260,
	134, 1260,
	348, 1260,
	349, 1260,
	350, 1260,
	-2, 1506,
	-1, 1740,
	68, 1299,
	134, 1299,
	348, 1299,
	349, 1299,
	350, 1299,
	-2, 1531,
	-1, 1741,
	68, 1299,
	134, 1299,
	348, 1299,
	349, 1299,
	350, 1299,
	-2, 1544,
	-1, 1742,
	68, 1302,
	134, 1302,
	348, 1302,
	349, 1302,
	350, 1302,
	-2, 1527,
	-1, 1743,
	68, 1299,
	134, 1299,
	348, 1299,
	349, 1299,
	350, 1299,
	-2, 1605,
	-1, 1757,
	1, 763,
	68, 763,
	526, 763,
	-2, 769,
	-1, 1813,
	21, 537,
	-2, 629,
	-1, 1991,
	65, 444,
	134, 444,
	-2, 878,
	-1, 2272,
	87, 769,
	129, 769,
	166, 769,
	169, 769,
	-2, 826,
	-1, 2274,
	273, 941,
	-2, 920,
	-1, 2302,
	87, 769,
	129, 769,
	166, 769,
	169, 769,
	-2, 826,
	-1, 2305,
	65, 444,
	134, 444,
	-2, 879,
	-1, 2346,
	87, 769,
	129, 769,
	166, 769,
	169, 769,
	-2, 827,
	-1, 2374,
	273, 941,
	-2, 921,
	-1, 2792,
	68, 798,
	134, 798,
	-2, 769,
	-1, 2796,
	68, 798,
	134, 798,
	-2, 769,
	-1, 2810,
	68, 802,
	134, 802,
	-2, 769,
	-1, 2815,
	68, 803,
	134, 803,
	-2, 769,
}

const yyPrivate = 57344

const yyLast = 30194

var yyAct = [...]int{
	458, 2347, 2796, 1194, 2804, 2795, 2772, 1109, 2637, 437,
	2413, 439, 2761, 460, 2719, 1810, 2676, 2702, 2600, 2703,
	2386, 2604, 2535, 2337, 2580, 1704, 2411, 2329, 1375, 835,
	2236, 2412, 1018, 2588, 2526, 2541, 484, 974, 2436, 138,
	138, 1806, 2237, 571, 2335, 138, 374, 381, 2451, 2396,
	381, 1248, 2297, 667, 1105, 2428, 1296, 2153, 2375, 1994,
	1966, 141, 1298, 2149, 2012, 2345, 379, 31, 1112, 1051,
	1403, 2395, 1333, 1341, 1409, 1841, 1805, 386, 1363, 2285,
	441, 2154, 2234, 1712, 2278, 2158, 1849, 429, 1609, 1924,
	566, 1882, 431, 2228, 939, 1850, 2211, 2169, 2033, 953,
	2166, 951, 2164, 605, 1765, 392, 702, 2053, 1710, 1251,
	1881, 2147, 137, 137, 436, 1605, 1414, 1417, 365, 1265,
	1410, 1411, 2098, 2047, 1356, 1404, 2011, 566, 1604, 1246,
	1336, 1794, 1968, 1963, 3, 1308, 1193, 138, 674, 30,
	2350, 675, 42, 378, 19, 375, 8, 671, 1764, 696,
	1309, 1334, 1758, 1256, 1844, 1273, 376, 6, 871, 377,
	7, 438, 1286, 1103, 1108, 1606, 1637, 1042, 1708, 440,
	1360, 669, 91, 628, 1750, 1306, 963, 1305, 695, 397,
	1616, 428, 1692, 1157, 1143, 1620, 448, 42, 1094, 370,
	719, 1808, 1380, 659, 1102, 697, 389, 1398, 1010, 31,
	1285, 1815, 916, 1323, 604, 367, 395, 997, 568, 394,
	704, 1164, 1163, 975, 959, 934, 16, 1041, 380, 127,
	602, 9, 660, 130, 936, 621, 2091, 4, 2091, 1884,
	133, 132, 2429, 1623, 1613, 1842, 2235, 1269, 2627, 1406,
	570, 830, 569, 836, 1184, 2665, 131, 131, 38, 121,
	101, 131, 579, 38, 121, 101, 131, 739, 1184, 2404,
	1869, 131, 363, 38, 121, 101, 131, 694, 384, 131,
	131, 30, 1610, 1877, 42, 2343, 19, 999, 8, 131,
	131, 2655, 938, 90, 775, 1621, 1061, 772, 773, 6,
	2691, 937, 7, 556, 2689, 555, 557, 558, 1965, 559,
	560, 672, 1058, 128, 128, 2244, 2068, 971, 128, 1079,
	1344, 1345, 565, 128, 980, 981, 90, 1845, 128, 2706,
	2707, 134, 638, 1060, 1319, 2445, 128, 128, 1000, 978,
	766, 1047, 977, 980, 981, 1111, 1054, 128, 771, 2434,
	747, 986, 749, 987, 1925, 580, 680, 679, 681, 2054,
	1964, 1095, 754, 1099, 755, 2628, 2629, 2528, 777, 778,
	779, 776, 2680, 2681, 2055, 2238, 2056, 138, 712, 2528,
	750, 2437, 2438, 2439, 2440, 2531, 678, 1098, 711, 2431,
	391, 2238, 757, 381, 381, 1114, 138, 1199, 1864, 1180,
	713, 2664, 1177, 722, 1357, 1353, 1179, 1176, 1178, 1182,
	1183, 2603, 2252, 1180, 1181, 2286, 1177, 707, 709, 1617,
	1179, 1176, 1178, 1182, 1183, 1349, 1090, 2180, 1181, 2293,
	643, 2178, 572, 1957, 683, 2170, 1789, 1971, 2508, 2409,
	1748, 2086, 1689, 2393, 425, 2084, 743, 426, 768, 100,
	710, 129, 676, 2444, 722, 1854, 809, 1100, 752, 2446,
	1874, 2705, 1240, 1239, 591, 759, 742, 760, 745, 730,
	119, 2511, 684, 2667, 2668, 2406, 706, 1097, 769, 770,
	748, 751, 2175, 2176, 2716, 2542, 432, 969, 644, 2174,
	2502, 383, 2693, 1113, 382, 762, 2789, 2177, 2589, 2590,
	2591, 2593, 2592, 2805, 744, 734, 2727, 1121, 1124, 1125,
	677, 1979, 1980, 1981, 1982, 2688, 753, 2639, 1122, 2734,
	958, 1622, 708, 42, 42, 430, 2662, 764, 765, 2602,
	2635, 2636, 2495, 2639, 1627, 1629, 1630, 1165, 1166, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1187, 1188,
	1189, 1190, 1191, 1192, 1185, 1186, 672, 938, 2783, 2464,
	670, 758, 1187, 1188, 1189, 1190, 1191, 1192, 1185, 1186,
	2764, 715, 716, 746, 988, 2463, 724, 723, 2645, 682,
	1977, 2172, 1006, 2490, 1096, 756, 1005, 1053, 2695, 2696,
	973, 972, 933, 935, 732, 990, 763, 2806, 957, 956,
	2812, 940, 2486, 1922, 731, 2800, 2773, 1611, 2452, 2264,
	1611, 727, 728, 703, 605, 811, 812, 813, 814, 761,
	1638, 913, 1611, 2565, 390, 672, 2525, 724, 723, 639,
	998, 2256, 717, 2090, 1870, 739, 2035, 2037, 980, 981,
	1822, 1614, 980, 981, 2162, 1329, 815, 1280, 2159, 2162,
	943, 2094, 2666, 2089, 946, 979, 945, 385, 865, 2143,
	1625, 948, 687, 692, 693, 599, 600, 601, 976, 2100,
	2099, 1985, 566, 566, 566, 2630, 2631, 1022, 1022, 1821,
	1820, 2039, 1072, 1073, 2765, 970, 1819, 1346, 1348, 1003,
	941, 942, 39, 944, 381, 935, 1045, 1045, 1624, 569,
	1612, 2694, 39, 1347, 1048, 1970, 1358, 1818, 641, 2601,
	1024, 640, 2181, 646, 2171, 738, 1056, 1026, 647, 2509,
	102, 102, 2087, 2405, 1992, 102, 967, 2799, 774, 1123,
	102, 1020, 1020, 983, 984, 102, 1077, 1878, 1001, 1002,
	102, 2818, 1299, 102, 102, 1299, 845, 846, 1352, 1022,
	2746, 1022, 712, 102, 102, 1062, 1628, 1974, 1975, 2410,
	2173, 775, 1110, 1843, 1857, 2811, 1861, 2163, 1350, 1091,
	1076, 1973, 2163, 960, 964, 964, 964, 2156, 1075, 1052,
	733, 2157, 2160, 1059, 739, 2191, 2273, 1752, 2491, 2492,
	2036, 960, 1698, 960, 1986, 918, 670, 639, 1869, 1803,
	1804, 965, 966, 1086, 2817, 1959, 920, 775, 2762, 2763,
	1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140,
	1141, 1142, 1092, 2488, 2808, 1152, 1153, 2487, 689, 690,
	691, 570, 1162, 2161, 950, 2790, 2785, 1665, 1831, 2458,
	1664, 1208, 2776, 1993, 2566, 2568, 2569, 2570, 2567, 2775,
	995, 996, 1214, 1115, 1993, 989, 1702, 991, 982, 1831,
	1804, 985, 1216, 2208, 1221, 1222, 1107, 1610, 2750, 42,
	775, 1004, 1648, 1016, 1017, 566, 641, 994, 42, 640,
	1085, 1751, 1082, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	2809, 650, 737, 1081, 1013, 1014, 1015, 777, 778, 779,
	776, 1619, 2786, 1804, 1027, 363, 775, 1126, 1619, 1088,
	1040, 2721, 1039, 1104, 1046, 1619, 2713, 1068, 2708, 2697,
	780, 1063, 736, 1262, 777, 778, 779, 776, 2670, 808,
	2660, 1703, 1241, 1064, 1619, 2659, 1247, 817, 649, 2658,
	1669, 1647, 652, 651, 1383, 777, 778, 779, 776, 2657,
	1283, 2647, 1022, 1084, 1255, 1290, 1106, 1101, 1083, 823,
	605, 1263, 1207, 1297, 1080, 570, 1022, 2520, 1701, 1289,
	1307, 2519, 1195, 2512, 1198, 374, 1151, 2722, 1209, 1601,
	961, 949, 2513, 1155, 2513, 1831, 2333, 2058, 1215, 2119,
	1217, 573, 737, 1007, 2671, 1901, 2513, 1324, 1324, 1145,
	1307, 2513, 1307, 2770, 1266, 2513, 1283, 1022, 1343, 2723,
	1253, 1254, 1244, 2030, 1948, 2513, 2292, 2648, 566, 1322,
	1022, 911, 908, 909, 910, 1093, 2308, 1906, 1946, 1905,
	1904, 1902, 792, 2521, 2192, 2049, 1944, 1769, 1369, 2513,
	1313, 1942, 1281, 1283, 1022, 1282, 1374, 138, 138, 1197,
	1291, 1292, 2059, 2059, 1995, 1385, 1320, 1321, 1288, 138,
	1872, 1930, 1886, 1381, 696, 1208, 1402, 1304, 1867, 1218,
	1859, 1208, 1208, 1258, 1871, 1261, 1377, 1855, 962, 1804,
	1949, 1851, 1315, 1316, 1863, 1768, 1699, 1391, 1673, 1672,
	1785, 1419, 1903, 1326, 1947, 1618, 1069, 1236, 705, 1661,
	1297, 1330, 1943, 1649, 1022, 648, 914, 1943, 1817, 1600,
	697, 1311, 1312, 1388, 1279, 1065, 1287, 960, 912, 821,
	1376, 1376, 1354, 725, 1317, 705, 1300, 775, 775, 1314,
	1301, 1270, 1376, 1264, 1769, 1359, 1852, 1420, 1371, 2083,
	964, 954, 1608, 1856, 739, 2196, 2081, 1852, 597, 1009,
	1373, 1769, 1698, 583, 775, 775, 1602, 1011, 1201, 1200,
	1632, 1619, 1070, 2759, 1294, 1293, 1318, 1150, 1012, 1635,
	1636, 1287, 1044, 1044, 705, 961, 2747, 1327, 1967, 1328,
	1310, 1303, 1148, 1149, 1147, 2649, 1400, 2209, 2092, 1862,
	2082, 1824, 1400, 1607, 714, 1158, 1892, 1367, 1368, 1284,
	1158, 1325, 1643, 777, 778, 779, 776, 1331, 1104, 1332,
	2684, 1355, 1894, 1907, 1908, 795, 796, 797, 798, 799,
	792, 42, 1364, 1365, 1366, 776, 1645, 1378, 2498, 1008,
	2497, 653, 2282, 1670, 2277, 473, 92, 672, 1372, 1370,
	1677, 1705, 1706, 672, 779, 776, 1219, 1220, 1227, 1389,
	1223, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1116, 1117, 1118, 1119, 1120, 1418, 1407, 1598,
	645, 1599, 2057, 962, 642, 1412, 2782, 1413, 364, 2481,
	2794, 92, 777, 778, 779, 776, 2779, 2744, 429, 712,
	1744, 1603, 138, 2112, 2728, 777, 778, 779, 776, 1713,
	1212, 2576, 138, 138, 1766, 1159, 1160, 1161, 2700, 2617,
	1213, 1626, 1196, 2582, 1307, 2574, 1202, 2560, 2165, 2781,
	1634, 2559, 2558, 2555, 1631, 1778, 2549, 2546, 2572, 672,
	777, 778, 779, 776, 2545, 696, 2289, 1307, 2111, 2575,
	2562, 2179, 1633, 2138, 1145, 2407, 2290, 461, 470, 2607,
	1642, 1343, 462, 2573, 469, 463, 467, 466, 464, 465,
	777, 778, 779, 776, 673, 1746, 2571, 2137, 92, 2077,
	2051, 777, 778, 779, 776, 1761, 1762, 1775, 2561, 1657,
	1022, 697, 1697, 2408, 2291, 1745, 1696, 1695, 1779, 1780,
	712, 1691, 1045, 1690, 1343, 1066, 931, 1836, 1777, 1838,
	1713, 425, 1267, 2715, 426, 471, 1271, 1208, 1283, 1274,
	1811, 1811, 2699, 1811, 793, 794, 795, 796, 797, 798,
	799, 792, 2581, 1814, 2330, 2682, 1812, 1781, 1816, 698,
	699, 700, 1656, 2643, 1829, 468, 2507, 777, 778, 779,
	776, 1759, 2642, 1694, 783, 784, 785, 786, 787, 788,
	789, 781, 886, 1833, 777, 778, 779, 776, 777, 778,
	779, 776, 1840, 2339, 1782, 1783, 1835, 2632, 2810, 1707,
	2563, 2378, 2556, 1916, 2552, 2551, 1847, 2550, 1753, 1853,
	2510, 1848, 2787, 964, 2483, 777, 778, 779, 776, 2430,
	2328, 1774, 1773, 2326, 2300, 2388, 2288, 1267, 1776, 2287,
	2284, 2255, 1883, 1267, 1267, 2142, 2136, 2121, 2381, 1784,
	2088, 2052, 1786, 2042, 2376, 2338, 1790, 512, 511, 2391,
	2392, 1700, 1693, 672, 1392, 2377, 800, 801, 793, 794,
	795, 796, 797, 798, 799, 792, 1787, 777, 778, 779,
	776, 2259, 1390, 1276, 1067, 1825, 1826, 1827, 777, 778,
	779, 776, 874, 844, 840, 839, 822, 701, 1832, 1834,
	2382, 1652, 2183, 777, 778, 779, 776, 2650, 2534, 2302,
	894, 898, 900, 902, 904, 905, 907, 2301, 911, 908,
	909, 910, 2272, 2266, 889, 890, 891, 892, 872, 873,
	895, 2265, 875, 2248, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 887, 893, 2227, 92, 92, 673,
	2115, 1865, 2226, 897, 899, 901, 903, 906, 2197, 2120,
	2117, 1022, 2110, 1022, 2102, 1022, 2097, 2046, 1958, 2114,
	712, 1945, 777, 778, 779, 776, 777, 778, 779, 776,
	1879, 1941, 1640, 131, 1940, 1644, 121, 101, 2390, 888,
	2155, 777, 778, 779, 776, 1678, 1668, 2113, 1666, 1022,
	1910, 790, 800, 801, 793, 794, 795, 796, 797, 798,
	799, 792, 1917, 1663, 1662, 2384, 1022, 1875, 807, 777,
	778, 779, 776, 1660, 1654, 1651, 1655, 1919, 1650, 1211,
	1659, 1909, 574, 575, 576, 577, 1210, 2383, 2385, 1031,
	128, 131, 1029, 1939, 2807, 573, 2758, 1671, 1918, 1938,
	1674, 1675, 1676, 1020, 2752, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 2735, 1687, 777, 778, 779, 776, 2732,
	1020, 777, 778, 779, 776, 2730, 837, 2616, 2598, 1896,
	791, 790, 800, 801, 793, 794, 795, 796, 797, 798,
	799, 792, 2586, 1876, 1030, 2583, 138, 2578, 128, 1667,
	2522, 1243, 1022, 2505, 1890, 2393, 1937, 2504, 2503, 2500,
	1897, 1898, 2494, 1926, 1991, 2479, 2319, 2379, 1931, 1868,
	1997, 1866, 2317, 2389, 1873, 1104, 1770, 1950, 777, 778,
	779, 776, 1255, 2295, 2501, 1936, 2006, 2283, 138, 952,
	2123, 1252, 712, 1343, 1343, 1343, 1343, 1960, 921, 1245,
	1889, 1887, 2013, 1935, 712, 1343, 1900, 777, 778, 779,
	776, 2063, 1988, 1984, 2013, 1987, 1962, 1257, 1260, 1961,
	1249, 1858, 819, 1022, 1823, 777, 778, 779, 776, 1767,
	1146, 138, 138, 128, 31, 1397, 1379, 1989, 1253, 1254,
	2000, 1267, 1267, 1267, 2002, 1278, 1250, 1089, 1055, 2029,
	2009, 915, 863, 1208, 862, 1951, 861, 2064, 1044, 1954,
	860, 2007, 1208, 1934, 859, 858, 2740, 1933, 857, 1811,
	1022, 856, 855, 854, 1999, 853, 852, 851, 1998, 2075,
	850, 849, 2003, 2004, 896, 777, 778, 779, 776, 777,
	778, 779, 776, 848, 847, 1258, 1028, 1261, 1759, 843,
	842, 364, 1996, 841, 2044, 2045, 30, 2028, 838, 42,
	1983, 19, 1990, 8, 1976, 834, 1287, 833, 831, 830,
	2005, 2060, 2008, 2010, 6, 2076, 2069, 7, 92, 2001,
	2026, 2070, 92, 829, 2025, 2027, 828, 1266, 827, 826,
	825, 2072, 824, 92, 2014, 2015, 2016, 2017, 820, 2043,
	818, 2040, 92, 2103, 2038, 741, 2105, 1772, 2107, 1755,
	712, 570, 729, 712, 2050, 2085, 2738, 2168, 2212, 2213,
	1713, 2704, 2215, 2152, 2061, 1978, 2080, 1830, 2067, 138,
	2073, 2074, 2071, 2065, 1932, 2079, 2780, 1394, 712, 712,
	740, 2218, 2022, 1343, 1766, 2093, 2195, 2023, 2152, 2152,
	2020, 2217, 2199, 2095, 2019, 2021, 777, 778, 779, 776,
	2168, 2018, 2322, 2122, 2321, 2106, 2793, 2124, 2125, 2126,
	2127, 2101, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135,
	2108, 2109, 2104, 791, 790, 800, 801, 793, 794, 795,
	796, 797, 798, 799, 792, 2185, 2186, 2187, 2320, 2062,
	1910, 1860, 2184, 1956, 803, 2024, 806, 1800, 1801, 2139,
	1283, 75, 2198, 2146, 1283, 2193, 2200, 2201, 2144, 1929,
	2145, 804, 805, 802, 2207, 791, 790, 800, 801, 793,
	794, 795, 796, 797, 798, 799, 792, 1396, 1760, 2219,
	138, 777, 778, 779, 776, 138, 2190, 135, 2194, 2188,
	2189, 1237, 41, 1395, 360, 2202, 2140, 2141, 2206, 2203,
	2205, 2204, 1846, 2216, 40, 1885, 1880, 1749, 1928, 917,
	1893, 2223, 2224, 2225, 1049, 2242, 735, 2245, 2233, 1911,
	1912, 2220, 2673, 2246, 1914, 1915, 1927, 359, 2540, 2249,
	777, 778, 779, 776, 2232, 361, 1920, 2756, 1923, 767,
	2247, 1705, 1706, 2311, 2271, 2243, 2276, 362, 777, 778,
	779, 776, 1295, 2253, 1277, 993, 1913, 992, 2257, 2251,
	777, 778, 779, 776, 2222, 1267, 1201, 1200, 1952, 1953,
	1274, 929, 930, 2254, 2250, 1597, 1022, 1022, 777, 778,
	779, 776, 1343, 2305, 791, 790, 800, 801, 793, 794,
	795, 796, 797, 798, 799, 792, 1891, 927, 928, 712,
	2261, 925, 926, 923, 924, 955, 919, 2753, 2296, 2013,
	2229, 2633, 2267, 1342, 1646, 2623, 2270, 2269, 777, 778,
	779, 776, 2621, 2543, 2324, 2275, 2274, 2533, 2532, 2530,
	1020, 2298, 1208, 2279, 2281, 2279, 777, 778, 779, 776,
	2523, 2313, 1811, 2280, 2427, 2307, 2306, 574, 575, 576,
	577, 2426, 2309, 2341, 2304, 2310, 2327, 2303, 1154, 2240,
	573, 2048, 2239, 2314, 712, 1791, 2230, 922, 2397, 2399,
	673, 2397, 2397, 573, 2152, 2312, 673, 1299, 2315, 2078,
	777, 778, 779, 776, 1653, 92, 712, 726, 1796, 1799,
	1800, 1801, 1797, 2741, 1798, 1802, 2340, 2742, 2741, 2742,
	2325, 2496, 2241, 968, 49, 2332, 2331, 1, 1297, 1275,
	2424, 578, 1393, 2334, 2031, 2032, 2221, 2034, 2398, 1615,
	1788, 1747, 2394, 2182, 947, 1267, 598, 2372, 2344, 1267,
	1203, 1074, 686, 2342, 2450, 2447, 721, 1071, 2454, 720,
	718, 2421, 2400, 2401, 1796, 1799, 1800, 1801, 1797, 1156,
	1798, 1802, 475, 1405, 2579, 2307, 2418, 2419, 2417, 2423,
	2416, 2096, 807, 2672, 2422, 2718, 2615, 2402, 2420, 2432,
	2675, 1087, 459, 1022, 2524, 2433, 2619, 2435, 2482, 2336,
	2066, 2754, 617, 2116, 138, 506, 482, 832, 2448, 1057,
	1050, 1921, 688, 2399, 2457, 481, 2294, 1972, 685, 2455,
	2456, 618, 2459, 2460, 2461, 2462, 1688, 1238, 2465, 2466,
	2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476,
	2477, 2478, 2394, 2480, 2118, 2484, 1259, 2298, 791, 790,
	800, 801, 793, 794, 795, 796, 797, 798, 799, 792,
	1242, 594, 2506, 2803, 2792, 2544, 2771, 2751, 2638, 2788,
	2687, 2516, 2518, 2733, 2443, 2514, 2517, 2499, 2441, 2442,
	2726, 2634, 396, 1351, 2529, 564, 657, 2527, 2577, 2599,
	1771, 791, 790, 800, 801, 793, 794, 795, 796, 797,
	798, 799, 792, 2663, 2585, 587, 1754, 588, 1757, 1756,
	1127, 712, 782, 1144, 712, 712, 712, 2262, 2263, 2557,
	816, 435, 1641, 447, 712, 1969, 2387, 2041, 2547, 2548,
	48, 47, 2610, 2613, 2553, 2554, 46, 2587, 45, 1811,
	2595, 2596, 2597, 2584, 1384, 1415, 2594, 477, 140, 1416,
	2606, 2612, 2677, 457, 456, 2605, 455, 454, 1022, 1022,
	1795, 2614, 1793, 2608, 1792, 1338, 2609, 2618, 2622, 2626,
	2624, 2625, 2620, 1337, 1382, 2701, 1813, 2653, 2654, 2493,
	2564, 2489, 2485, 596, 2644, 2346, 2373, 2374, 2380, 138,
	2640, 2641, 870, 593, 592, 866, 868, 712, 869, 2258,
	867, 1899, 1895, 2150, 2151, 2148, 2260, 932, 2449, 712,
	2268, 1711, 1020, 1020, 586, 1709, 2214, 2646, 2210, 1342,
	1401, 1272, 1955, 2656, 2652, 1339, 1335, 2679, 2415, 567,
	32, 27, 5, 29, 28, 2661, 14, 15, 13, 1078,
	2678, 12, 18, 2669, 712, 26, 25, 24, 23, 83,
	82, 81, 80, 22, 2685, 590, 11, 79, 78, 589,
	77, 2683, 1376, 21, 20, 581, 73, 71, 72, 2690,
	2692, 59, 58, 57, 2370, 70, 69, 68, 67, 66,
	584, 65, 2717, 2698, 64, 616, 56, 55, 54, 2709,
	2710, 2711, 2712, 53, 63, 2720, 1267, 712, 62, 2316,
	582, 61, 2318, 60, 2725, 52, 51, 1110, 1760, 2729,
	886, 2731, 50, 99, 591, 98, 2323, 2724, 97, 96,
	95, 94, 33, 34, 35, 36, 109, 108, 110, 2736,
	111, 2739, 2737, 2679, 2749, 2714, 106, 104, 585, 107,
	105, 712, 2745, 712, 2743, 2352, 2678, 103, 2755, 2748,
	2757, 1110, 43, 1110, 10, 2760, 17, 2, 131, 0,
	38, 121, 101, 0, 0, 2766, 0, 0, 2720, 712,
	2403, 2767, 2774, 0, 0, 0, 2778, 0, 126, 1110,
	0, 2784, 0, 0, 0, 114, 0, 0, 0, 0,
	0, 0, 0, 0, 90, 0, 0, 0, 0, 0,
	0, 0, 2453, 2791, 2798, 0, 0, 595, 2802, 76,
	874, 0, 2801, 0, 864, 128, 0, 0, 0, 0,
	0, 2813, 2798, 2815, 2814, 0, 2816, 2802, 894, 898,
	900, 902, 904, 905, 907, 0, 911, 908, 909, 910,
	0, 0, 889, 890, 891, 892, 872, 873, 895, 0,
	875, 0, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 887, 893, 0, 0, 0, 0, 607, 0,
	0, 897, 899, 901, 903, 906, 0, 0, 0, 0,
	2356, 0, 0, 122, 123, 0, 124, 125, 0, 0,
	0, 2360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2515, 0, 0, 0, 0, 0, 888, 0, 1888,
	0, 2349, 0, 0, 0, 2351, 2353, 2355, 0, 2357,
	2358, 2359, 2361, 2362, 2363, 2365, 2366, 2367, 2368, 639,
	2539, 791, 790, 800, 801, 793, 794, 795, 796, 797,
	798, 799, 792, 0, 0, 0, 0, 0, 0, 0,
	0, 100, 120, 129, 0, 74, 0, 777, 778, 779,
	776, 2371, 1639, 0, 886, 0, 0, 0, 0, 0,
	0, 0, 119, 113, 112, 0, 0, 0, 0, 44,
	0, 0, 0, 0, 791, 790, 800, 801, 793, 794,
	795, 796, 797, 798, 799, 792, 0, 2369, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 641, 0,
	0, 640, 0, 0, 2348, 0, 0, 0, 0, 0,
	0, 0, 0, 2539, 0, 0, 0, 0, 1342, 1342,
	1342, 1342, 1184, 0, 0, 0, 0, 115, 116, 117,
	1342, 0, 0, 2364, 0, 626, 0, 0, 0, 0,
	2354, 0, 0, 608, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 874, 0, 0, 0, 0, 0,
	2651, 0, 0, 0, 84, 0, 0, 0, 118, 631,
	85, 0, 894, 898, 900, 902, 904, 905, 907, 0,
	911, 908, 909, 910, 0, 92, 889, 890, 891, 892,
	872, 873, 895, 0, 875, 0, 876, 877, 878, 879,
	880, 881, 882, 883, 884, 885, 887, 893, 0, 0,
	0, 0, 0, 0, 0, 897, 899, 901, 903, 906,
	0, 0, 0, 86, 0, 0, 0, 0, 0, 0,
	0, 2370, 87, 37, 0, 0, 0, 0, 0, 0,
	0, 0, 896, 0, 0, 0, 0, 0, 606, 0,
	0, 888, 0, 0, 0, 0, 0, 0, 0, 609,
	634, 2539, 0, 0, 0, 1760, 0, 1180, 0, 0,
	1177, 0, 0, 0, 1179, 1176, 1178, 1182, 1183, 39,
	0, 0, 1181, 629, 0, 0, 0, 0, 0, 0,
	0, 0, 2797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 630, 635, 0, 1342, 0,
	0, 0, 0, 0, 2769, 0, 0, 0, 0, 0,
	0, 0, 623, 0, 625, 638, 0, 0, 0, 622,
	620, 619, 0, 624, 610, 611, 612, 614, 613, 615,
	0, 636, 637, 0, 0, 0, 0, 0, 0, 0,
	88, 89, 93, 632, 633, 791, 790, 800, 801, 793,
	794, 795, 796, 797, 798, 799, 792, 0, 0, 0,
	0, 0, 0, 0, 92, 0, 92, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	627, 0, 0, 0, 0, 1165, 1166, 1167, 1168, 1169,
	1170, 1171, 1172, 1173, 1174, 1175, 1187, 1188, 1189, 1190,
	1191, 1192, 1185, 1186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2349, 0,
	0, 0, 2351, 2353, 2355, 0, 2357, 2358, 2359, 2361,
	2362, 2363, 2365, 2366, 2367, 2368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 896, 1531, 1573, 0,
	0, 1520, 308, 1478, 1533, 1451, 1467, 1541, 1468, 1469,
	1506, 1430, 1488, 270, 1465, 0, 0, 1342, 2371, 0,
	0, 1523, 1422, 1454, 1455, 1424, 1461, 1425, 1452, 1480,
	215, 1450, 1491, 240, 1503, 1464, 1485, 1539, 0, 0,
	300, 254, 0, 0, 1483, 1525, 1486, 1511, 1477, 1507,
	1438, 1499, 1534, 1466, 2369, 1504, 1535, 0, 0, 0,
	0, 698, 699, 700, 0, 0, 0, 0, 196, 0,
	0, 2348, 0, 0, 1502, 1529, 1463, 0, 199, 1532,
	1484, 1505, 0, 0, 1423, 1500, 0, 1428, 1431, 1540,
	1527, 1458, 1459, 0, 0, 0, 0, 92, 0, 0,
	2364, 1481, 1487, 1508, 1474, 0, 0, 2354, 0, 0,
	0, 0, 0, 0, 1456, 0, 1496, 0, 0, 0,
	1433, 1429, 0, 1479, 0, 0, 187, 305, 321, 197,
	296, 334, 202, 303, 192, 269, 292, 92, 1572, 189,
	319, 302, 251, 234, 235, 188, 0, 287, 213, 226,
	209, 267, 0, 318, 346, 208, 337, 1432, 329, 191,
	1567, 328, 266, 315, 320, 252, 246, 190, 317, 250,
	245, 238, 217, 0, 230, 278, 244, 279, 231, 256,
	255, 257, 1551, 1552, 1553, 1554, 1555, 357, 1563, 1564,
	0, 1568, 1569, 1570, 1437, 0, 1457, 1509, 0, 1421,
	1596, 1518, 1526, 1476, 331, 1528, 1473, 1472, 1558, 0,
	1557, 304, 1559, 1560, 239, 1524, 1453, 1462, 347, 1460,
	290, 272, 1530, 1495, 1571, 288, 242, 316, 280, 322,
	306, 330, 284, 281, 182, 307, 211, 253, 193, 195,
	207, 214, 216, 218, 219, 262, 263, 275, 295, 309,
	310, 311, 210, 203, 289, 204, 228, 205, 183, 297,
	206, 185, 276, 314, 1556, 224, 285, 249, 186, 248,
	277, 313, 312, 194, 338, 344, 345, 349, 0, 350,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 1565, 0, 1566, 343, 222, 179, 180,
	326, 0, 268, 0, 1521, 1426, 1436, 1434, 1470, 1497,
	1498, 264, 342, 1513, 1517, 1514, 1542, 293, 0, 0,
	0, 0, 0, 233, 274, 1515, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1427, 0, 301,
	324, 336, 353, 356, 1574, 1575, 1576, 184, 355, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 327, 1471, 1444, 1482,
	335, 1447, 1445, 1512, 1446, 1501, 351, 258, 259, 260,
	261, 225, 0, 201, 354, 283, 1492, 1475, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1493, 1585, 1586, 1587, 1588,
	1589, 1449, 348, 221, 227, 0, 229, 200, 273, 223,
	333, 236, 1519, 1590, 1591, 1592, 1593, 1594, 1595, 265,
	232, 298, 237, 243, 286, 332, 271, 291, 198, 323,
	299, 247, 0, 0, 1443, 1448, 1442, 1489, 1490, 1536,
	1537, 1538, 1510, 1435, 1522, 0, 1439, 1441, 1440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 308,
	488, 1494, 181, 0, 241, 1543, 282, 220, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 0, 0, 0, 215, 0, 0,
	240, 0, 0, 0, 480, 0, 0, 300, 254, 0,
	0, 0, 0, 535, 543, 0, 1561, 1562, 339, 340,
	341, 325, 0, 212, 1584, 442, 0, 0, 474, 512,
	511, 461, 470, 0, 0, 196, 462, 0, 469, 463,
	467, 466, 464, 465, 0, 527, 0, 0, 0, 0,
	0, 0, 433, 446, 2536, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 443, 444, 0,
	0, 0, 0, 489, 0, 445, 0, 0, 452, 471,
	472, 0, 0, 187, 305, 321, 197, 296, 334, 202,
	303, 192, 269, 292, 0, 0, 189, 319, 302, 251,
	234, 235, 188, 0, 287, 213, 226, 209, 267, 468,
	487, 491, 208, 549, 485, 329, 191, 0, 328, 266,
	315, 320, 252, 246, 190, 317, 250, 245, 238, 217,
	550, 230, 278, 244, 279, 231, 256, 255, 257, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 483, 0,
	0, 331, 0, 0, 533, 0, 0, 0, 304, 0,
	0, 239, 0, 0, 0, 486, 0, 290, 272, 546,
	434, 0, 288, 242, 316, 280, 322, 306, 330, 284,
	281, 182, 307, 211, 253, 193, 195, 207, 214, 216,
	218, 219, 262, 263, 275, 295, 309, 310, 311, 210,
	203, 289, 204, 228, 205, 183, 297, 206, 185, 276,
	314, 0, 224, 285, 249, 186, 248, 277, 313, 312,
	194, 338, 344, 345, 349, 0, 350, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 352, 0, 0, 0,
	0, 0, 0, 343, 222, 179, 180, 326, 531, 268,
	0, 545, 526, 528, 529, 532, 536, 537, 538, 539,
	540, 542, 544, 548, 293, 0, 0, 0, 0, 0,
	233, 274, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 324, 336, 353,
	356, 0, 0, 0, 184, 355, 0, 2537, 0, 0,
	0, 2538, 0, 547, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 490, 258, 259, 260, 261, 534, 0,
	201, 354, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	221, 227, 0, 229, 200, 273, 223, 333, 236, 0,
	0, 0, 0, 0, 0, 0, 265, 232, 298, 237,
	243, 286, 332, 271, 291, 198, 323, 299, 247, 0,
	0, 556, 530, 555, 557, 558, 554, 559, 560, 541,
	453, 0, 494, 552, 551, 553, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 241, 0, 282, 220, 519, 499, 500, 501, 451,
	502, 497, 498, 520, 492, 516, 517, 476, 495, 503,
	515, 504, 518, 521, 522, 561, 562, 510, 563, 507,
	523, 514, 513, 505, 493, 524, 525, 479, 478, 508,
	509, 496, 308, 488, 0, 339, 340, 341, 325, 0,
	212, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 0, 0, 0,
	215, 0, 0, 240, 0, 0, 0, 480, 0, 0,
	300, 254, 0, 0, 0, 0, 535, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 442, 0,
	0, 474, 512, 511, 461, 470, 0, 0, 196, 462,
	0, 469, 463, 467, 466, 464, 465, 0, 527, 0,
	0, 0, 0, 0, 0, 433, 446, 0, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	443, 444, 0, 0, 0, 0, 489, 0, 445, 0,
	0, 452, 471, 472, 0, 0, 187, 305, 321, 197,
	296, 334, 202, 303, 192, 269, 292, 0, 0, 189,
	319, 302, 251, 234, 235, 188, 0, 287, 213, 226,
	209, 267, 468, 487, 491, 208, 549, 485, 329, 191,
	0, 328, 266, 315, 320, 252, 246, 190, 317, 250,
	245, 238, 217, 550, 230, 278, 244, 279, 231, 256,
	255, 257, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 0, 0, 331, 0, 0, 533, 0, 0,
	0, 304, 0, 0, 239, 0, 0, 0, 486, 0,
	290, 272, 546, 434, 0, 288, 242, 316, 280, 322,
	306, 330, 284, 281, 182, 307, 211, 253, 193, 195,
	207, 214, 216, 218, 219, 262, 263, 275, 295, 309,
	310, 311, 210, 203, 289, 204, 228, 205, 183, 297,
	206, 185, 276, 314, 0, 224, 285, 249, 186, 248,
	277, 313, 312, 194, 338, 344, 345, 349, 0, 350,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 1205, 1204, 1206, 343, 222, 179, 180,
	326, 531, 268, 0, 545, 526, 528, 529, 532, 536,
	537, 538, 539, 540, 542, 544, 548, 293, 0, 0,
	0, 0, 0, 233, 274, 0, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	324, 336, 353, 356, 0, 0, 0, 184, 355, 0,
	0, 0, 0, 0, 0, 0, 547, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 490, 258, 259, 260,
	261, 534, 0, 201, 354, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 221, 227, 0, 229, 200, 273, 223,
	333, 236, 0, 0, 0, 0, 0, 0, 0, 265,
	232, 298, 237, 243, 286, 332, 271, 291, 198, 323,
	299, 247, 0, 0, 556, 530, 555, 557, 558, 554,
	559, 560, 541, 453, 0, 494, 552, 551, 553, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 241, 0, 282, 220, 519, 499,
	500, 501, 451, 502, 497, 498, 520, 492, 516, 517,
	476, 495, 503, 515, 504, 518, 521, 522, 561, 562,
	510, 563, 507, 523, 514, 513, 505, 493, 524, 525,
	479, 478, 508, 509, 496, 308, 488, 0, 339, 340,
	341, 325, 0, 212, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	0, 0, 0, 215, 0, 0, 240, 0, 0, 0,
	480, 0, 0, 300, 254, 0, 0, 0, 0, 535,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 442, 0, 0, 474, 512, 511, 461, 470, 0,
	0, 196, 462, 0, 469, 463, 467, 466, 464, 465,
	0, 527, 0, 0, 0, 0, 0, 0, 433, 446,
	0, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 443, 444, 0, 0, 0, 0, 489,
	0, 445, 0, 0, 452, 471, 472, 0, 0, 187,
	305, 321, 197, 296, 334, 202, 303, 192, 269, 292,
	0, 0, 189, 319, 302, 251, 234, 235, 188, 0,
	287, 213, 226, 209, 267, 468, 487, 491, 208, 549,
	485, 329, 191, 0, 328, 266, 315, 320, 252, 246,
	190, 317, 250, 245, 238, 217, 550, 230, 278, 244,
	279, 231, 256, 255, 257, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 0, 0, 331, 0, 0,
	533, 0, 0, 0, 304, 0, 0, 239, 0, 0,
	0, 486, 0, 290, 272, 546, 434, 0, 288, 242,
	316, 280, 322, 306, 330, 284, 281, 182, 307, 211,
	253, 193, 195, 207, 214, 216, 218, 219, 262, 263,
	275, 295, 309, 310, 311, 210, 203, 289, 204, 228,
	205, 183, 297, 206, 185, 276, 314, 0, 224, 285,
	249, 186, 248, 277, 313, 312, 194, 338, 344, 345,
	349, 0, 350, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 352, 0, 0, 0, 0, 0, 0, 343,
	222, 179, 180, 326, 531, 268, 0, 545, 526, 528,
	529, 532, 536, 537, 538, 539, 540, 542, 544, 548,
	293, 0, 0, 0, 0, 0, 233, 274, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 324, 336, 353, 356, 0, 0, 0,
	184, 355, 0, 2537, 0, 0, 0, 2538, 0, 547,
	0, 0, 0, 335, 0, 0, 0, 0, 0, 490,
	258, 259, 260, 261, 534, 0, 201, 354, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 221, 227, 0, 229,
	200, 273, 223, 333, 236, 0, 0, 0, 0, 0,
	0, 0, 265, 232, 298, 237, 243, 286, 332, 271,
	291, 198, 323, 299, 247, 0, 0, 556, 530, 555,
	557, 558, 554, 559, 560, 541, 453, 0, 494, 552,
	551, 553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 241, 0, 282,
	220, 519, 499, 500, 501, 451, 502, 497, 498, 520,
	492, 516, 517, 476, 495, 503, 515, 504, 518, 521,
	522, 561, 562, 510, 563, 507, 523, 514, 513, 505,
	493, 524, 525, 479, 478, 508, 509, 496, 308, 488,
	0, 339, 340, 341, 325, 0, 212, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 0, 0, 0, 215, 1268, 0, 240,
	0, 0, 0, 480, 0, 0, 300, 254, 0, 0,
	0, 0, 535, 543, 0, 0, 0, 0, 0, 0,
	0, 1361, 0, 0, 442, 0, 0, 474, 512, 511,
	461, 470, 0, 0, 196, 462, 0, 469, 463, 467,
	466, 464, 465, 0, 527, 0, 0, 0, 0, 0,
	0, 433, 446, 0, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 443, 444, 0, 0,
	0, 0, 489, 0, 445, 0, 0, 1362, 471, 472,
	0, 0, 187, 305, 321, 197, 296, 334, 202, 303,
	192, 269, 292, 0, 0, 189, 319, 302, 251, 234,
	235, 188, 0, 287, 213, 226, 209, 267, 468, 487,
	491, 208, 549, 485, 329, 191, 0, 328, 266, 315,
	320, 252, 246, 190, 317, 250, 245, 238, 217, 550,
	230, 278, 244, 279, 231, 256, 255, 257, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 0,
	331, 0, 0, 533, 0, 0, 0, 304, 0, 0,
	239, 0, 0, 0, 486, 0, 290, 272, 546, 434,
	0, 288, 242, 316, 280, 322, 306, 330, 284, 281,
	182, 307, 211, 253, 193, 195, 207, 214, 216, 218,
	219, 262, 263, 275, 295, 309, 310, 311, 210, 203,
	289, 204, 228, 205, 183, 297, 206, 185, 276, 314,
	0, 224, 285, 249, 186, 248, 277, 313, 312, 194,
	338, 344, 345, 349, 0, 350, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 0, 343, 222, 179, 180, 326, 531, 268, 0,
	545, 526, 528, 529, 532, 536, 537, 538, 539, 540,
	542, 544, 548, 293, 0, 0, 0, 0, 0, 233,
	274, 0, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 324, 336, 353, 356,
	0, 0, 0, 184, 355, 0, 0, 0, 0, 0,
	0, 0, 547, 0, 0, 0, 335, 0, 0, 0,
	0, 0, 490, 258, 259, 260, 261, 534, 0, 201,
	354, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 221,
	227, 0, 229, 200, 273, 223, 333, 236, 0, 0,
	0, 0, 0, 0, 0, 265, 232, 298, 237, 243,
	286, 332, 271, 291, 198, 323, 299, 247, 0, 0,
	556, 530, 555, 557, 558, 554, 559, 560, 541, 453,
	0, 494, 552, 551, 553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	241, 0, 282, 220, 519, 499, 500, 501, 451, 502,
	497, 498, 520, 492, 516, 517, 476, 495, 503, 515,
	504, 518, 521, 522, 561, 562, 510, 563, 507, 523,
	514, 513, 505, 493, 524, 525, 479, 478, 508, 509,
	496, 131, 308, 488, 339, 340, 341, 325, 0, 212,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 0, 0, 0,
	215, 0, 0, 240, 0, 0, 0, 810, 0, 0,
	300, 254, 0, 0, 0, 0, 535, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 442, 0,
	0, 474, 512, 511, 461, 470, 0, 0, 196, 462,
	0, 469, 463, 467, 466, 464, 465, 0, 527, 0,
	0, 0, 0, 0, 0, 433, 446, 0, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	443, 444, 0, 0, 0, 0, 489, 0, 445, 0,
	0, 452, 471, 472, 0, 0, 187, 305, 321, 197,
	296, 334, 202, 303, 192, 269, 292, 0, 0, 189,
	319, 302, 251, 234, 235, 188, 0, 287, 213, 226,
	209, 267, 468, 487, 491, 208, 549, 485, 329, 191,
	0, 328, 266, 315, 320, 252, 246, 190, 317, 250,
	245, 238, 217, 550, 230, 278, 244, 279, 231, 256,
	255, 257, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 0, 0, 331, 0, 0, 533, 0, 0,
	0, 304, 0, 0, 239, 0, 0, 0, 486, 0,
	290, 272, 546, 434, 0, 288, 242, 316, 280, 322,
	306, 330, 284, 281, 182, 307, 211, 253, 193, 195,
	207, 214, 216, 218, 219, 262, 263, 275, 295, 309,
	310, 311, 210, 203, 289, 204, 228, 205, 183, 297,
	206, 185, 276, 314, 0, 224, 285, 249, 186, 248,
	277, 313, 312, 194, 338, 344, 345, 349, 0, 350,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 0, 343, 222, 179, 180,
	326, 531, 268, 0, 545, 526, 528, 529, 532, 536,
	537, 538, 539, 540, 542, 544, 548, 293, 0, 0,
	0, 0, 0, 233, 274, 0, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	324, 336, 353, 356, 0, 0, 0, 184, 355, 0,
	0, 0, 0, 0, 0, 0, 547, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 490, 258, 259, 260,
	261, 534, 0, 201, 354, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 221, 227, 0, 229, 200, 273, 223,
	333, 236, 0, 0, 0, 0, 0, 0, 0, 265,
	232, 298, 237, 243, 286, 332, 271, 291, 198, 323,
	299, 247, 0, 0, 556, 530, 555, 557, 558, 554,
	559, 560, 541, 453, 0, 494, 552, 551, 553, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 241, 102, 282, 220, 519, 499,
	500, 501, 451, 502, 497, 498, 520, 492, 516, 517,
	476, 495, 503, 515, 504, 518, 521, 522, 561, 562,
	510, 563, 507, 523, 514, 513, 505, 493, 524, 525,
	479, 478, 508, 509, 496, 308, 488, 0, 339, 340,
	341, 325, 0, 212, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	0, 0, 0, 215, 2768, 0, 240, 0, 0, 0,
	480, 0, 0, 300, 254, 0, 0, 0, 0, 535,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 442, 0, 0, 474, 512, 511, 461, 470, 0,
	0, 196, 462, 0, 469, 463, 467, 466, 464, 465,
	0, 527, 0, 0, 0, 0, 0, 0, 433, 446,
	0, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 443, 444, 0, 0, 0, 0, 489,
	0, 445, 0, 0, 452, 471, 472, 0, 0, 187,
	305, 321, 197, 296, 334, 202, 303, 192, 269, 292,
	0, 0, 189, 319, 302, 251, 234, 235, 188, 0,
	287, 213, 226, 209, 267, 468, 487, 491, 208, 549,
	485, 329, 191, 0, 328, 266, 315, 320, 252, 246,
	190, 317, 250, 245, 238, 217, 550, 230, 278, 244,
	279, 231, 256, 255, 257, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 0, 0, 331, 0, 0,
	533, 0, 0, 0, 304, 0, 0, 239, 0, 0,
	0, 486, 0, 290, 272, 546, 434, 0, 288, 242,
	316, 280, 322, 306, 330, 284, 281, 182, 307, 211,
	253, 193, 195, 207, 214, 216, 218, 219, 262, 263,
	275, 295, 309, 310, 311, 210, 203, 289, 204, 228,
	205, 183, 297, 206, 185, 276, 314, 0, 224, 285,
	249, 186, 248, 277, 313, 312, 194, 338, 344, 345,
	349, 0, 350, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 352, 0, 0, 0, 0, 0, 0, 343,
	222, 179, 180, 326, 531, 268, 0, 545, 526, 528,
	529, 532, 536, 537, 538, 539, 540, 542, 544, 548,
	293, 0, 0, 0, 0, 0, 233, 274, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 324, 336, 353, 356, 0, 0, 0,
	184, 355, 0, 0, 0, 0, 0, 0, 0, 547,
	0, 0, 0, 335, 0, 0, 0, 0, 0, 490,
	258, 259, 260, 261, 534, 0, 201, 354, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 221, 227, 0, 229,
	200, 273, 223, 333, 236, 0, 0, 0, 0, 0,
	0, 0, 265, 232, 298, 237, 243, 286, 332, 271,
	291, 198, 323, 299, 247, 0, 0, 556, 530, 555,
	557, 558, 554, 559, 560, 541, 453, 0, 494, 552,
	551, 553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 241, 0, 282,
	220, 519, 499, 500, 501, 451, 502, 497, 498, 520,
	492, 516, 517, 476, 495, 503, 515, 504, 518, 521,
	522, 561, 562, 510, 563, 507, 523, 514, 513, 505,
	493, 524, 525, 479, 478, 508, 509, 496, 308, 488,
	0, 339, 340, 341, 325, 0, 212, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 0, 0, 0, 215, 1268, 0, 240,
	0, 0, 0, 480, 0, 0, 300, 254, 0, 0,
	0, 0, 535, 543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 442, 0, 0, 474, 512, 511,
	461, 470, 0, 0, 196, 462, 0, 469, 463, 467,
	466, 464, 465, 0, 527, 0, 0, 0, 0, 0,
	0, 433, 446, 0, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 443, 444, 0, 0,
	0, 0, 489, 0, 445, 0, 0, 452, 471, 472,
	0, 0, 187, 305, 321, 197, 296, 334, 202, 303,
	192, 269, 292, 0, 0, 189, 319, 302, 251, 234,
	235, 188, 0, 287, 213, 226, 209, 267, 468, 487,
	491, 208, 549, 485, 329, 191, 0, 328, 266, 315,
	320, 252, 246, 190, 317, 250, 245, 238, 217, 550,
	230, 278, 244, 279, 231, 256, 255, 257, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 0,
	331, 0, 0, 533, 0, 0, 0, 304, 0, 0,
	239, 0, 0, 0, 486, 0, 290, 272, 546, 434,
	0, 288, 242, 316, 280, 322, 306, 330, 284, 281,
	182, 307, 211, 253, 193, 195, 207, 214, 216, 218,
	219, 262, 263, 275, 295, 309, 310, 311, 210, 203,
	289, 204, 228, 205, 183, 297, 206, 185, 276, 314,
	0, 224, 285, 249, 186, 248, 277, 313, 312, 194,
	338, 344, 345, 349, 0, 350, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 0, 343, 222, 179, 180, 326, 531, 268, 0,
	545, 526, 528, 529, 532, 536, 537, 538, 539, 540,
	542, 544, 548, 293, 0, 0, 0, 0, 0, 233,
	274, 0, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 324, 336, 353, 356,
	0, 0, 0, 184, 355, 0, 0, 0, 0, 0,
	0, 0, 547, 0, 0, 0, 335, 0, 0, 0,
	0, 0, 490, 258, 259, 260, 261, 534, 0, 201,
	354, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 221,
	227, 0, 229, 200, 273, 223, 333, 236, 0, 0,
	0, 0, 0, 0, 0, 265, 232, 298, 237, 243,
	286, 332, 271, 291, 198, 323, 299, 247, 0, 0,
	556, 530, 555, 557, 558, 554, 559, 560, 541, 453,
	0, 494, 552, 551, 553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	241, 0, 282, 220, 519, 499, 500, 501, 451, 502,
	497, 498, 520, 492, 516, 517, 476, 495, 503, 515,
	504, 518, 521, 522, 561, 562, 510, 563, 507, 523,
	514, 513, 505, 493, 524, 525, 479, 478, 508, 509,
	496, 308, 488, 0, 339, 340, 341, 325, 0, 212,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 449, 0, 0, 0, 215,
	0, 0, 240, 0, 0, 0, 480, 0, 0, 300,
	254, 0, 0, 0, 0, 535, 543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 442, 0, 0,
	474, 512, 511, 461, 470, 0, 0, 196, 462, 0,
	469, 463, 467, 466, 464, 465, 0, 527, 0, 0,
	0, 0, 0, 0, 433, 446, 0, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 443,
	444, 1043, 0, 0, 0, 489, 0, 445, 0, 0,
	452, 471, 472, 0, 0, 187, 305, 321, 197, 296,
	334, 202, 303, 192, 269, 292, 0, 0, 189, 319,
	302, 251, 234, 235, 188, 0, 287, 213, 226, 209,
	267, 468, 487, 491, 208, 549, 485, 329, 191, 0,
	328, 266, 315, 320, 252, 246, 190, 317, 250, 245,
	238, 217, 550, 230, 278, 244, 279, 231, 256, 255,
	257, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 0, 0, 331, 0, 0, 533, 0, 0, 0,
	304, 0, 0, 239, 0, 0, 0, 486, 0, 290,
	272, 546, 434, 0, 288, 242, 316, 280, 322, 306,
	330, 284, 281, 182, 307, 211, 253, 193, 195, 207,
	214, 216, 218, 219, 262, 263, 275, 295, 309, 310,
	311, 210, 203, 289, 204, 228, 205, 183, 297, 206,
	185, 276, 314, 0, 224, 285, 249, 186, 248, 277,
	313, 312, 194, 338, 344, 345, 349, 0, 350, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 352, 0,
	0, 0, 0, 0, 0, 343, 222, 179, 180, 326,
	531, 268, 0, 545, 526, 528, 529, 532, 536, 537,
	538, 539, 540, 542, 544, 548, 293, 0, 0, 0,
	0, 0, 233, 274, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 324,
	336, 353, 356, 0, 0, 0, 184, 355, 0, 0,
	0, 0, 0, 0, 0, 547, 0, 0, 0, 335,
	0, 0, 0, 0, 0, 490, 258, 259, 260, 261,
	534, 0, 201, 354, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 221, 227, 0, 229, 200, 273, 223, 333,
	236, 0, 0, 0, 0, 0, 0, 0, 265, 232,
	298, 237, 243, 286, 332, 271, 291, 198, 323, 299,
	247, 0, 0, 556, 530, 555, 557, 558, 554, 559,
	560, 541, 453, 0, 494, 552, 551, 553, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 241, 0, 282, 220, 519, 499, 500,
	501, 451, 502, 497, 498, 520, 492, 516, 517, 476,
	495, 503, 515, 504, 518, 521, 522, 561, 562, 510,
	563, 507, 523, 514, 513, 505, 493, 524, 525, 479,
	478, 508, 509, 496, 0, 0, 0, 339, 340, 341,
	325, 0, 212, 308, 488, 0, 0, 1658, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 0, 0,
	0, 215, 0, 0, 240, 0, 0, 0, 480, 0,
	0, 300, 254, 0, 0, 0, 0, 535, 543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	0, 0, 474, 512, 511, 461, 470, 0, 0, 196,
	462, 0, 469, 463, 467, 466, 464, 465, 0, 527,
	0, 0, 0, 0, 0, 0, 433, 446, 0, 450,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 443, 444, 0, 0, 0, 0, 489, 0, 445,
	0, 0, 452, 471, 472, 0, 0, 187, 305, 321,
	197, 296, 334, 202, 303, 192, 269, 292, 0, 0,
	189, 319, 302, 251, 234, 235, 188, 0, 287, 213,
	226, 209, 267, 468, 487, 491, 208, 549, 485, 329,
	191, 0, 328, 266, 315, 320, 252, 246, 190, 317,
	250, 245, 238, 217, 550, 230, 278, 244, 279, 231,
	256, 255, 257, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 0, 0, 331, 0, 0, 533, 0,
	0, 0, 304, 0, 0, 239, 0, 0, 0, 486,
	0, 290, 272, 546, 434, 0, 288, 242, 316, 280,
	322, 306, 330, 284, 281, 182, 307, 211, 253, 193,
	195, 207, 214, 216, 218, 219, 262, 263, 275, 295,
	309, 310, 311, 210, 203, 289, 204, 228, 205, 183,
	297, 206, 185, 276, 314, 0, 224, 285, 249, 186,
	248, 277, 313, 312, 194, 338, 344, 345, 349, 0,
	350, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 0, 343, 222, 179,
	180, 326, 531, 268, 0, 545, 526, 528, 529, 532,
	536, 537, 538, 539, 540, 542, 544, 548, 293, 0,
	0, 0, 0, 0, 233, 274, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 324, 336, 353, 356, 0, 0, 0, 184, 355,
	0, 0, 0, 0, 0, 0, 0, 547, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 490, 258, 259,
	260, 261, 534, 0, 201, 354, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 221, 227, 0, 229, 200, 273,
	223, 333, 236, 0, 0, 0, 0, 0, 0, 0,
	265, 232, 298, 237, 243, 286, 332, 271, 291, 198,
	323, 299, 247, 0, 0, 556, 530, 555, 557, 558,
	554, 559, 560, 541, 453, 0, 494, 552, 551, 553,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 241, 0, 282, 220, 519,
	499, 500, 501, 451, 502, 497, 498, 520, 492, 516,
	517, 476, 495, 503, 515, 504, 518, 521, 522, 561,
	562, 510, 563, 507, 523, 514, 513, 505, 493, 524,
	525, 479, 478, 508, 509, 496, 308, 488, 0, 339,
	340, 341, 325, 0, 212, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 0, 0, 0, 215, 0, 0, 240, 0, 0,
	0, 480, 0, 0, 300, 254, 0, 0, 0, 0,
	535, 543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 442, 0, 0, 474, 512, 511, 461, 470,
	0, 0, 196, 462, 0, 469, 463, 467, 466, 464,
	465, 0, 527, 0, 0, 0, 0, 0, 0, 433,
	446, 0, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 443, 444, 0, 0, 0, 0,
	489, 0, 445, 0, 0, 452, 471, 472, 0, 0,
	187, 305, 321, 197, 296, 334, 202, 303, 192, 269,
	292, 0, 0, 189, 319, 302, 251, 234, 235, 188,
	0, 287, 213, 226, 209, 267, 468, 487, 491, 208,
	549, 485, 329, 191, 0, 328, 266, 315, 320, 252,
	246, 190, 317, 250, 245, 238, 217, 550, 230, 278,
	244, 279, 231, 256, 255, 257, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 0, 0, 331, 0,
	0, 533, 0, 0, 0, 304, 0, 0, 239, 0,
	0, 0, 486, 0, 290, 272, 546, 434, 0, 288,
	242, 316, 280, 322, 306, 330, 284, 281, 182, 307,
	211, 253, 193, 195, 207, 214, 216, 218, 219, 262,
	263, 275, 295, 309, 310, 311, 210, 203, 289, 204,
	228, 205, 183, 297, 206, 185, 276, 314, 0, 224,
	285, 249, 186, 248, 277, 313, 312, 194, 338, 344,
	345, 349, 0, 350, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 0,
	343, 222, 179, 180, 326, 531, 268, 0, 545, 526,
	528, 529, 532, 536, 537, 538, 539, 540, 542, 544,
	548, 293, 0, 0, 0, 0, 0, 233, 274, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 301, 324, 336, 353, 356, 0, 0,
	0, 184, 355, 0, 0, 0, 0, 0, 0, 0,
	547, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	490, 258, 259, 260, 261, 534, 0, 201, 354, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 221, 227, 0,
	229, 200, 273, 223, 333, 236, 0, 0, 0, 0,
	0, 0, 0, 265, 232, 298, 237, 243, 286, 332,
	271, 291, 198, 323, 299, 247, 0, 0, 556, 530,
	555, 557, 558, 554, 559, 560, 541, 453, 0, 494,
	552, 551, 553, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 241, 0,
	282, 220, 519, 499, 500, 501, 451, 502, 497, 498,
	520, 492, 516, 517, 476, 495, 503, 515, 504, 518,
	521, 522, 561, 562, 510, 563, 507, 523, 514, 513,
	505, 493, 524, 525, 479, 478, 508, 509, 496, 308,
	488, 0, 339, 340, 341, 325, 0, 212, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 1128,
	0, 0, 0, 449, 0, 0, 0, 215, 0, 0,
	240, 0, 0, 0, 480, 0, 0, 300, 254, 0,
	0, 0, 0, 535, 543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 442, 0, 0, 474, 512,
	511, 461, 470, 0, 0, 196, 462, 0, 469, 463,
	467, 466, 464, 465, 0, 527, 0, 0, 0, 0,
	0, 0, 0, 446, 0, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 443, 444, 0,
	0, 0, 0, 489, 0, 445, 0, 0, 452, 471,
	472, 0, 0, 187, 305, 321, 197, 296, 334, 202,
	303, 192, 269, 292, 0, 0, 189, 319, 302, 251,
	234, 235, 188, 0, 287, 213, 226, 209, 267, 468,
	487, 491, 208, 549, 485, 329, 191, 0, 328, 266,
	315, 320, 252, 246, 190, 317, 250, 245, 238, 217,
	550, 230, 278, 244, 279, 231, 256, 255, 257, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 483, 0,
	0, 331, 0, 0, 533, 0, 0, 0, 304, 0,
	0, 239, 0, 0, 0, 486, 0, 290, 272, 546,
	0, 0, 288, 242, 316, 280, 322, 306, 330, 284,
	281, 182, 307, 211, 253, 193, 195, 207, 214, 216,
	218, 219, 262, 263, 275, 295, 309, 310, 311, 210,
	203, 289, 204, 228, 205, 183, 297, 206, 185, 276,
	314, 0, 224, 285, 249, 186, 248, 277, 313, 312,
	194, 338, 1129, 1130, 349, 0, 350, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 352, 0, 0, 0,
	0, 0, 0, 343, 222, 179, 180, 326, 531, 268,
	0, 545, 526, 528, 529, 532, 536, 537, 538, 539,
	540, 542, 544, 548, 293, 0, 0, 0, 0, 0,
	233, 274, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 324, 336, 353,
	356, 0, 0, 0, 184, 355, 0, 0, 0, 0,
	0, 0, 0, 547, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 490, 258, 259, 260, 261, 534, 0,
	201, 354, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	221, 227, 0, 229, 200, 273, 223, 333, 236, 0,
	0, 0, 0, 0, 0, 0, 265, 232, 298, 237,
	243, 286, 332, 271, 291, 198, 323, 299, 247, 0,
	0, 556, 530, 555, 557, 558, 554, 559, 560, 541,
	453, 0, 494, 552, 551, 553, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 241, 0, 282, 220, 519, 499, 500, 501, 451,
	502, 497, 498, 520, 492, 516, 517, 476, 495, 503,
	515, 504, 518, 521, 522, 561, 562, 510, 563, 507,
	523, 514, 513, 505, 493, 524, 525, 479, 478, 508,
	509, 496, 308, 488, 0, 339, 340, 341, 325, 0,
	212, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 0, 0, 0,
	215, 0, 0, 240, 0, 0, 0, 480, 0, 0,
	300, 254, 0, 0, 0, 0, 535, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 512, 511, 461, 470, 0, 0, 196, 462,
	0, 469, 463, 467, 466, 464, 465, 0, 527, 0,
	0, 0, 0, 0, 0, 433, 446, 0, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	443, 444, 0, 0, 0, 0, 489, 0, 445, 0,
	0, 452, 471, 472, 0, 0, 187, 305, 321, 197,
	296, 334, 202, 303, 192, 269, 292, 0, 0, 189,
	319, 302, 251, 234, 235, 188, 0, 287, 213, 226,
	209, 267, 468, 487, 491, 208, 549, 485, 329, 191,
	0, 328, 266, 315, 320, 252, 246, 190, 317, 250,
	245, 238, 217, 550, 230, 278, 244, 279, 231, 256,
	255, 257, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 0, 0, 331, 0, 0, 533, 0, 0,
	0, 304, 0, 0, 239, 0, 0, 0, 486, 0,
	290, 272, 546, 434, 0, 288, 242, 316, 280, 322,
	306, 330, 284, 281, 182, 307, 211, 253, 193, 195,
	207, 214, 216, 218, 219, 262, 263, 275, 295, 309,
	310, 311, 210, 203, 289, 204, 228, 205, 183, 297,
	206, 185, 276, 314, 0, 224, 285, 249, 186, 248,
	277, 313, 312, 194, 338, 344, 345, 349, 0, 350,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 0, 343, 222, 179, 180,
	326, 531, 268, 0, 545, 526, 528, 529, 532, 536,
	537, 538, 539, 540, 542, 544, 548, 293, 0, 0,
	0, 0, 0, 233, 274, 0, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	324, 336, 353, 356, 0, 0, 0, 184, 355, 0,
	0, 0, 0, 0, 0, 0, 547, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 490, 258, 259, 260,
	261, 534, 0, 201, 354, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 221, 227, 0, 229, 200, 273, 223,
	333, 236, 0, 0, 0, 0, 0, 0, 0, 265,
	232, 298, 237, 243, 286, 332, 271, 291, 198, 323,
	299, 247, 0, 0, 556, 530, 555, 557, 558, 554,
	559, 560, 541, 453, 0, 494, 552, 551, 553, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 241, 0, 282, 220, 519, 499,
	500, 501, 451, 502, 497, 498, 520, 492, 516, 517,
	476, 495, 503, 515, 504, 518, 521, 522, 561, 562,
	510, 563, 507, 523, 514, 513, 505, 493, 524, 525,
	479, 478, 508, 509, 496, 308, 488, 0, 339, 340,
	341, 325, 0, 212, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	0, 0, 0, 215, 0, 0, 240, 0, 0, 0,
	480, 0, 0, 300, 254, 0, 0, 0, 0, 535,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 442, 0, 0, 474, 512, 511, 461, 470, 0,
	0, 196, 462, 0, 469, 463, 467, 466, 464, 465,
	0, 527, 0, 0, 0, 0, 0, 0, 0, 446,
	0, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 443, 444, 0, 0, 0, 0, 489,
	0, 445, 0, 0, 452, 471, 472, 0, 0, 187,
	305, 321, 197, 296, 334, 202, 303, 192, 269, 292,
	0, 0, 189, 319, 302, 251, 234, 235, 188, 0,
	287, 213, 226, 209, 267, 468, 487, 491, 208, 549,
	485, 329, 191, 0, 328, 266, 315, 320, 252, 246,
	190, 317, 250, 245, 238, 217, 550, 230, 278, 244,
	279, 231, 256, 255, 257, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 0, 0, 331, 0, 0,
	533, 0, 0, 0, 304, 0, 0, 239, 0, 0,
	0, 486, 0, 290, 272, 546, 0, 0, 288, 242,
	316, 280, 322, 306, 330, 284, 281, 182, 307, 211,
	253, 193, 195, 207, 214, 216, 218, 219, 262, 263,
	275, 295, 309, 310, 311, 210, 203, 289, 204, 228,
	205, 183, 297, 206, 185, 276, 314, 0, 224, 285,
	249, 186, 248, 277, 313, 312, 194, 338, 344, 345,
	349, 0, 350, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 352, 0, 0, 0, 0, 0, 0, 343,
	222, 179, 180, 326, 531, 268, 0, 545, 526, 528,
	529, 532, 536, 537, 538, 539, 540, 542, 544, 548,
	293, 0, 0, 0, 0, 0, 233, 274, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 324, 336, 353, 356, 0, 0, 0,
	184, 355, 0, 0, 0, 0, 0, 0, 0, 547,
	0, 0, 0, 335, 0, 0, 0, 0, 0, 490,
	258, 259, 260, 261, 534, 0, 201, 354, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 221, 227, 0, 229,
	200, 273, 223, 333, 236, 0, 0, 0, 0, 0,
	0, 0, 265, 232, 298, 237, 243, 286, 332, 271,
	291, 198, 323, 299, 247, 0, 0, 556, 530, 555,
	557, 558, 554, 559, 560, 541, 453, 0, 494, 552,
	551, 553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 241, 0, 282,
	220, 519, 499, 500, 501, 451, 502, 497, 498, 520,
	492, 516, 517, 476, 495, 503, 515, 504, 518, 521,
	522, 561, 562, 510, 563, 507, 523, 514, 513, 505,
	493, 524, 525, 479, 478, 508, 509, 496, 308, 0,
	0, 339, 340, 341, 325, 0, 212, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 886, 0, 0,
	0, 0, 0, 0, 0, 0, 215, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 300, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 139, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 874, 0, 0,
	0, 0, 187, 305, 321, 197, 296, 334, 202, 303,
	192, 269, 292, 0, 0, 1732, 1734, 1735, 1736, 1737,
	1738, 1739, 0, 1743, 1740, 1741, 1742, 267, 0, 1727,
	1728, 1729, 1730, 872, 1714, 1733, 0, 1715, 266, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 887,
	1731, 278, 244, 279, 231, 256, 255, 257, 897, 899,
	901, 903, 906, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 0, 0, 0, 0, 0, 304, 0, 0,
	239, 0, 0, 0, 1726, 0, 290, 272, 0, 0,
	0, 288, 242, 316, 280, 322, 306, 330, 284, 281,
	182, 307, 211, 253, 193, 195, 207, 214, 216, 218,
	219, 262, 263, 275, 295, 309, 310, 311, 210, 203,
	289, 204, 228, 205, 183, 297, 206, 185, 276, 314,
	0, 224, 285, 249, 186, 248, 277, 313, 312, 194,
	338, 344, 345, 349, 0, 350, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 0, 343, 222, 179, 180, 326, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 342, 0,
	0, 0, 0, 293, 0, 0, 0, 0, 0, 233,
	274, 0, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 324, 336, 353, 356,
	0, 0, 0, 184, 355, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 335, 0, 0, 0,
	0, 0, 351, 258, 259, 260, 261, 225, 0, 201,
	354, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 221,
	227, 0, 229, 200, 273, 223, 333, 236, 0, 0,
	0, 0, 0, 0, 0, 265, 232, 298, 237, 243,
	286, 332, 271, 291, 198, 323, 299, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 896,
	241, 0, 282, 220, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 0, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 0, 0, 0, 339, 340, 341, 325, 0, 212,
	131, 308, 38, 121, 101, 0, 0, 0, 0, 0,
	0, 0, 270, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 300,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 0,
	139, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 305, 321, 197, 296,
	334, 202, 303, 192, 269, 292, 0, 0, 189, 319,
	302, 251, 234, 235, 188, 0, 287, 213, 226, 209,
	267, 0, 318, 346, 208, 337, 0, 329, 191, 0,
	328, 266, 315, 320, 252, 246, 190, 317, 250, 245,
	238, 217, 0, 230, 278, 244, 279, 231, 256, 255,
	257, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 0, 0, 331, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 239, 0, 0, 0, 347, 0, 290,
	272, 0, 0, 0, 288, 242, 316, 280, 322, 306,
	330, 284, 281, 182, 307, 211, 253, 193, 195, 207,
	214, 216, 218, 219, 262, 263, 275, 295, 309, 310,
	311, 210, 203, 289, 204, 228, 205, 183, 297, 206,
	185, 276, 314, 0, 224, 285, 249, 186, 248, 277,
	313, 312, 194, 338, 344, 345, 349, 0, 350, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 352, 0,
	0, 0, 0, 0, 0, 343, 222, 179, 180, 326,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 342, 0, 0, 0, 0, 293, 0, 0, 0,
	0, 0, 233, 274, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 324,
	336, 353, 356, 0, 0, 0, 184, 355, 0, 0,
	0, 0, 0, 0, 0, 327, 0, 0, 0, 335,
	0, 0, 0, 0, 0, 351, 258, 259, 260, 261,
	369, 371, 201, 354, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 221, 227, 0, 229, 200, 273, 223, 333,
	236, 0, 0, 0, 0, 0, 0, 0, 265, 232,
	298, 237, 243, 286, 332, 271, 291, 198, 323, 299,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 39, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 241, 102, 282, 220, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 0,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 308, 0, 0, 339, 340, 341,
	325, 0, 212, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 300, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 2159, 2162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 305,
	321, 197, 296, 334, 202, 303, 192, 269, 292, 0,
	0, 189, 319, 302, 251, 234, 235, 188, 0, 287,
	213, 226, 209, 267, 0, 318, 346, 208, 337, 0,
	329, 191, 0, 328, 266, 315, 320, 252, 246, 190,
	317, 250, 245, 238, 217, 0, 230, 278, 244, 279,
	231, 256, 255, 257, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2163, 331, 0, 0, 0,
	2156, 0, 2155, 304, 2157, 2160, 239, 0, 0, 0,
	347, 0, 290, 272, 0, 0, 0, 288, 242, 316,
	280, 322, 306, 330, 284, 281, 182, 307, 211, 253,
	193, 195, 207, 214, 216, 218, 219, 262, 263, 275,
	295, 309, 310, 311, 210, 203, 289, 204, 228, 205,
	183, 297, 206, 185, 276, 314, 2161, 224, 285, 249,
	186, 248, 277, 313, 312, 194, 338, 344, 345, 349,
	0, 350, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 0, 343, 222,
	179, 180, 326, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 342, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 233, 274, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 301, 324, 336, 353, 356, 0, 0, 0, 184,
	355, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 335, 0, 0, 0, 0, 0, 351, 258,
	259, 260, 261, 225, 0, 201, 354, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 221, 227, 0, 229, 200,
	273, 223, 333, 236, 0, 0, 0, 0, 0, 0,
	0, 265, 232, 298, 237, 243, 286, 332, 271, 291,
	198, 323, 299, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 241, 0, 282, 220,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 0, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 308, 0, 0,
	339, 340, 341, 325, 0, 212, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1386, 0, 0, 0, 0, 215, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 300, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 139, 0, 0, 1387,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 777, 778, 779, 776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 305, 321, 197, 296, 334, 202, 303, 192,
	269, 292, 0, 0, 189, 319, 302, 251, 234, 235,
	188, 0, 287, 213, 226, 209, 267, 0, 318, 346,
	208, 337, 0, 329, 191, 0, 328, 266, 315, 320,
	252, 246, 190, 317, 250, 245, 238, 217, 0, 230,
	278, 244, 279, 231, 256, 255, 257, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 0, 0, 0, 0, 0, 304, 0, 0, 239,
	0, 0, 0, 347, 0, 290, 272, 0, 0, 0,
	288, 242, 316, 280, 322, 306, 330, 284, 281, 182,
	307, 211, 253, 193, 195, 207, 214, 216, 218, 219,
	262, 263, 275, 295, 309, 310, 311, 210, 203, 289,
	204, 228, 205, 183, 297, 206, 185, 276, 314, 0,
	224, 285, 249, 186, 248, 277, 313, 312, 194, 338,
	344, 345, 349, 0, 350, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	0, 343, 222, 179, 180, 326, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 342, 0, 0,
	0, 0, 293, 0, 0, 0, 0, 0, 233, 274,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 324, 336, 353, 356, 0,
	0, 0, 184, 355, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 335, 0, 0, 0, 0,
	0, 351, 258, 259, 260, 261, 225, 0, 201, 354,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 221, 227,
	0, 229, 200, 273, 223, 333, 236, 0, 0, 0,
	0, 0, 0, 0, 265, 232, 298, 237, 243, 286,
	332, 271, 291, 198, 323, 299, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 241,
	0, 282, 220, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 0, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	308, 0, 0, 339, 340, 341, 325, 0, 212, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 215, 656,
	0, 240, 0, 0, 0, 0, 0, 0, 300, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 139,
	664, 665, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 668, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 305, 321, 197, 296, 334,
	202, 303, 192, 269, 292, 0, 0, 189, 319, 302,
	251, 234, 235, 188, 0, 287, 213, 226, 209, 267,
	0, 318, 346, 208, 337, 641, 329, 191, 640, 328,
	266, 315, 320, 252, 246, 190, 317, 250, 245, 238,
	217, 0, 230, 278, 244, 279, 231, 256, 255, 257,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 0, 0, 0, 304,
	0, 0, 239, 0, 0, 0, 347, 0, 290, 272,
	0, 0, 0, 288, 242, 316, 280, 322, 306, 330,
	654, 281, 182, 307, 211, 253, 193, 195, 207, 214,
	216, 218, 219, 262, 263, 275, 295, 309, 310, 311,
	210, 203, 289, 204, 228, 205, 183, 297, 206, 185,
	276, 314, 0, 224, 285, 249, 186, 248, 277, 313,
	312, 194, 338, 344, 345, 349, 0, 350, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 0, 343, 222, 179, 180, 326, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	342, 0, 0, 0, 0, 293, 0, 0, 0, 0,
	0, 233, 274, 0, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 324, 336,
	353, 356, 0, 0, 0, 184, 355, 0, 0, 0,
	0, 0, 0, 655, 327, 0, 0, 0, 335, 0,
	0, 0, 0, 0, 658, 258, 259, 260, 261, 225,
	0, 201, 354, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 221, 227, 0, 229, 200, 273, 223, 333, 236,
	0, 0, 0, 0, 0, 0, 0, 666, 661, 662,
	237, 243, 286, 332, 271, 291, 198, 323, 299, 663,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 241, 0, 282, 220, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 0, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 131, 308, 0, 339, 340, 341, 325,
	0, 212, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 0, 240, 0, 0, 0, 90,
	0, 0, 300, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 1408, 0, 139, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 305,
	321, 197, 296, 334, 202, 303, 192, 269, 292, 0,
	0, 189, 319, 302, 251, 234, 235, 188, 0, 287,
	213, 226, 209, 267, 0, 318, 346, 208, 337, 0,
	329, 191, 0, 328, 266, 315, 320, 252, 246, 190,
	317, 250, 245, 238, 217, 0, 230, 278, 244, 279,
	231, 256, 255, 257, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 239, 0, 0, 0,
	347, 0, 290, 272, 0, 0, 0, 288, 242, 316,
	280, 322, 306, 330, 284, 281, 182, 307, 211, 253,
	193, 195, 207, 214, 216, 218, 219, 262, 263, 275,
	295, 309, 310, 311, 210, 203, 289, 204, 228, 205,
	183, 297, 206, 185, 276, 314, 0, 224, 285, 249,
	186, 248, 277, 313, 312, 194, 338, 344, 345, 349,
	0, 350, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 0, 343, 222,
	179, 180, 326, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 342, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 233, 274, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 301, 324, 336, 353, 356, 0, 0, 0, 184,
	355, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 335, 0, 0, 0, 0, 0, 351, 258,
	259, 260, 261, 225, 0, 201, 354, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 221, 227, 0, 229, 200,
	273, 223, 333, 236, 0, 0, 0, 0, 0, 0,
	0, 265, 232, 298, 237, 243, 286, 332, 271, 291,
	198, 323, 299, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 241, 102, 282, 220,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 0, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 131, 308, 0,
	339, 340, 341, 325, 0, 212, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 215, 0, 0, 240,
	0, 0, 0, 90, 0, 0, 300, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 1399, 0, 139, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 305, 321, 197, 296, 334, 202, 303,
	192, 269, 292, 0, 0, 189, 319, 302, 251, 234,
	235, 188, 0, 287, 213, 226, 209, 267, 0, 318,
	346, 208, 337, 0, 329, 191, 0, 328, 266, 315,
	320, 252, 246, 190, 317, 250, 245, 238, 217, 0,
	230, 278, 244, 279, 231, 256, 255, 257, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 0, 0, 0, 0, 0, 304, 0, 0,
	239, 0, 0, 0, 347, 0, 290, 272, 0, 0,
	0, 288, 242, 316, 280, 322, 306, 330, 284, 281,
	182, 307, 211, 253, 193, 195, 207, 214, 216, 218,
	219, 262, 263, 275, 295, 309, 310, 311, 210, 203,
	289, 204, 228, 205, 183, 297, 206, 185, 276, 314,
	0, 224, 285, 249, 186, 248, 277, 313, 312, 194,
	338, 344, 345, 349, 0, 350, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 0, 343, 222, 179, 180, 326, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 342, 0,
	0, 0, 0, 293, 0, 0, 0, 0, 0, 233,
	274, 0, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 324, 336, 353, 356,
	0, 0, 0, 184, 355, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 335, 0, 0, 0,
	0, 0, 351, 258, 259, 260, 261, 225, 0, 201,
	354, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 221,
	227, 0, 229, 200, 273, 223, 333, 236, 0, 0,
	0, 0, 0, 0, 0, 265, 232, 298, 237, 243,
	286, 332, 271, 291, 198, 323, 299, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	241, 102, 282, 220, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 0, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 131, 308, 0, 339, 340, 341, 325, 0, 212,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	215, 0, 0, 240, 0, 0, 0, 90, 0, 0,
	300, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1340, 0,
	0, 139, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 305, 321, 197,
	296, 334, 202, 303, 192, 269, 292, 0, 0, 189,
	319, 302, 251, 234, 235, 188, 0, 287, 213, 226,
	209, 267, 0, 318, 346, 208, 337, 0, 329, 191,
	0, 328, 266, 315, 320, 252, 246, 190, 317, 250,
	245, 238, 217, 0, 230, 278, 244, 279, 231, 256,
	255, 257, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 0, 0,
	0, 304, 0, 0, 239, 0, 0, 0, 347, 0,
	290, 272, 0, 0, 0, 288, 242, 316, 280, 322,
	306, 330, 284, 281, 182, 307, 211, 253, 193, 195,
	207, 214, 216, 218, 219, 262, 263, 275, 295, 309,
	310, 311, 210, 203, 289, 204, 228, 205, 183, 297,
	206, 185, 276, 314, 0, 224, 285, 249, 186, 248,
	277, 313, 312, 194, 338, 344, 345, 349, 0, 350,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 0, 343, 222, 179, 180,
	326, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 342, 0, 0, 0, 0, 293, 0, 0,
	0, 0, 0, 233, 274, 0, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	324, 336, 353, 356, 0, 0, 0, 184, 355, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 351, 258, 259, 260,
	261, 225, 0, 201, 354, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 221, 227, 0, 229, 200, 273, 223,
	333, 236, 0, 0, 0, 0, 0, 0, 0, 265,
	232, 298, 237, 243, 286, 332, 271, 291, 198, 323,
	299, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 241, 102, 282, 220, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	0, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 308, 0, 0, 339, 340,
	341, 325, 0, 212, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 215, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 300, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 139, 664, 665, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	305, 321, 197, 296, 334, 202, 303, 192, 269, 292,
	0, 0, 189, 319, 302, 251, 234, 235, 188, 0,
	287, 213, 226, 209, 267, 0, 318, 346, 208, 337,
	641, 329, 191, 640, 328, 266, 315, 320, 252, 246,
	190, 317, 250, 245, 238, 217, 0, 230, 278, 244,
	279, 231, 256, 255, 257, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 0,
	0, 0, 0, 0, 304, 0, 0, 239, 0, 0,
	0, 347, 0, 290, 272, 0, 0, 0, 288, 242,
	316, 280, 322, 306, 330, 284, 281, 182, 307, 211,
	253, 193, 195, 207, 214, 216, 218, 219, 262, 263,
	275, 295, 309, 310, 311, 210, 203, 289, 204, 228,
	205, 183, 297, 206, 185, 276, 314, 0, 224, 285,
	249, 186, 248, 277, 313, 312, 194, 338, 344, 345,
	349, 0, 350, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 352, 0, 0, 0, 0, 0, 0, 343,
	222, 179, 180, 326, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 342, 0, 0, 0, 0,
	293, 0, 0, 0, 0, 0, 233, 274, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 324, 336, 353, 356, 0, 0, 0,
	184, 355, 0, 0, 0, 0, 0, 0, 0, 327,
	0, 0, 0, 335, 0, 0, 0, 0, 0, 351,
	258, 259, 260, 261, 225, 0, 201, 354, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 221, 227, 0, 229,
	200, 273, 223, 333, 236, 0, 0, 0, 0, 0,
	0, 0, 666, 661, 662, 237, 243, 286, 332, 271,
	291, 198, 323, 299, 663, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 241, 0, 282,
	220, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 0, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 308, 0,
	0, 339, 340, 341, 325, 0, 212, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 215, 1025, 0, 240,
	0, 0, 0, 0, 0, 0, 300, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 139, 0, 0,
	1023, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1021, 0, 0,
	0, 0, 187, 305, 321, 197, 296, 334, 202, 303,
	192, 269, 292, 0, 0, 189, 319, 302, 251, 234,
	235, 188, 0, 287, 213, 226, 209, 267, 0, 318,
	346, 208, 337, 0, 329, 191, 0, 328, 266, 315,
	320, 252, 246, 190, 317, 250, 245, 238, 217, 0,
	230, 278, 244, 279, 231, 256, 255, 257, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 0, 0, 0, 0, 0, 304, 0, 0,
	239, 0, 0, 0, 347, 0, 290, 272, 0, 0,
	0, 288, 242, 316, 280, 322, 306, 330, 284, 281,
	182, 307, 211, 253, 193, 195, 207, 214, 216, 218,
	219, 262, 263, 275, 295, 309, 310, 311, 210, 203,
	289, 204, 228, 205, 183, 297, 206, 185, 276, 314,
	0, 224, 285, 249, 186, 248, 277, 313, 312, 194,
	338, 344, 345, 349, 0, 350, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 0, 343, 222, 179, 180, 326, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 342, 0,
	0, 0, 0, 293, 0, 0, 0, 0, 0, 233,
	274, 0, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 324, 336, 353, 356,
	0, 0, 0, 184, 355, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 335, 0, 0, 0,
	0, 0, 351, 258, 259, 260, 261, 225, 0, 201,
	354, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 221,
	227, 0, 229, 200, 273, 223, 333, 236, 0, 0,
	0, 0, 0, 0, 0, 265, 232, 298, 237, 243,
	286, 332, 271, 291, 198, 323, 299, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	241, 0, 282, 220, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 0, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 308, 0, 0, 339, 340, 341, 325, 0, 212,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
	1019, 0, 240, 0, 0, 0, 0, 0, 0, 300,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	139, 0, 0, 1023, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1021, 0, 0, 0, 0, 187, 305, 321, 197, 296,
	334, 202, 303, 192, 269, 292, 0, 0, 189, 319,
	302, 251, 234, 235, 188, 0, 287, 213, 226, 209,
	267, 0, 318, 346, 208, 337, 0, 329, 191, 0,
	328, 266, 315, 320, 252, 246, 190, 317, 250, 245,
	238, 217, 0, 230, 278, 244, 279, 231, 256, 255,
	257, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 239, 0, 0, 0, 347, 0, 290,
	272, 0, 0, 0, 288, 242, 316, 280, 322, 306,
	330, 284, 281, 182, 307, 211, 253, 193, 195, 207,
	214, 216, 218, 219, 262, 263, 275, 295, 309, 310,
	311, 210, 203, 289, 204, 228, 205, 183, 297, 206,
	185, 276, 314, 0, 224, 285, 249, 186, 248, 277,
	313, 312, 194, 338, 344, 345, 349, 0, 350, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 352, 0,
	0, 0, 0, 0, 0, 343, 222, 179, 180, 326,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 342, 0, 0, 0, 0, 293, 0, 0, 0,
	0, 0, 233, 274, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 324,
	336, 353, 356, 0, 0, 0, 184, 355, 0, 0,
	0, 0, 0, 0, 0, 327, 0, 0, 0, 335,
	0, 0, 0, 0, 0, 351, 258, 259, 260, 261,
	225, 0, 201, 354, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 221, 227, 0, 229, 200, 273, 223, 333,
	236, 0, 0, 0, 0, 0, 0, 0, 265, 232,
	298, 237, 243, 286, 332, 271, 291, 198, 323, 299,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 241, 0, 282, 220, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 0,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 308, 0, 0, 339, 340, 341,
	325, 0, 212, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 300, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2674, 0, 139, 512, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 305,
	321, 197, 296, 334, 202, 303, 192, 269, 292, 0,
	0, 189, 319, 302, 251, 234, 235, 188, 0, 287,
	213, 226, 209, 267, 0, 318, 346, 208, 337, 0,
	329, 191, 0, 328, 266, 315, 320, 252, 246, 190,
	317, 250, 245, 238, 217, 0, 230, 278, 244, 279,
	231, 256, 255, 257, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 239, 0, 0, 0,
	347, 0, 290, 272, 0, 0, 0, 288, 242, 316,
	280, 322, 306, 330, 284, 281, 182, 307, 211, 253,
	193, 195, 207, 214, 216, 218, 219, 262, 263, 275,
	295, 309, 310, 311, 210, 203, 289, 204, 228, 205,
	183, 297, 206, 185, 276, 314, 0, 224, 285, 249,
	186, 248, 277, 313, 312, 194, 338, 344, 345, 349,
	0, 350, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 0, 343, 222,
	179, 180, 326, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 342, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 233, 274, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 301, 324, 336, 353, 356, 0, 0, 0, 184,
	355, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 335, 0, 0, 0, 0, 0, 351, 258,
	259, 260, 261, 225, 0, 201, 354, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 221, 227, 0, 229, 200,
	273, 223, 333, 236, 0, 0, 0, 0, 0, 0,
	0, 265, 232, 298, 237, 243, 286, 332, 271, 291,
	198, 323, 299, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 241, 0, 282, 220,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 0, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 308, 0, 0,
	339, 340, 341, 325, 0, 212, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 215, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 300, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 139, 0, 0, 1023,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1021, 0, 0, 0,
	0, 187, 305, 321, 197, 296, 334, 202, 303, 192,
	269, 292, 0, 0, 189, 319, 302, 251, 234, 235,
	188, 0, 287, 213, 226, 209, 267, 0, 318, 346,
	208, 337, 0, 329, 191, 0, 328, 266, 315, 320,
	252, 246, 190, 317, 250, 245, 238, 217, 0, 230,
	278, 244, 279, 231, 256, 255, 257, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 0, 0, 0, 0, 0, 304, 0, 0, 239,
	0, 0, 0, 347, 0, 290, 272, 0, 0, 0,
	288, 242, 316, 280, 322, 306, 330, 284, 281, 182,
	307, 211, 253, 193, 195, 207, 214, 216, 218, 219,
	262, 263, 275, 295, 309, 310, 311, 210, 203, 289,
	204, 228, 205, 183, 297, 206, 185, 276, 314, 0,
	224, 285, 249, 186, 248, 277, 313, 312, 194, 338,
	344, 345, 349, 0, 350, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	0, 343, 222, 179, 180, 326, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 342, 0, 0,
	0, 0, 293, 0, 0, 0, 0, 0, 233, 274,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 324, 336, 353, 356, 0,
	0, 0, 184, 355, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 335, 0, 0, 0, 0,
	0, 351, 258, 259, 260, 261, 225, 0, 201, 354,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 221, 227,
	0, 229, 200, 273, 223, 333, 236, 0, 0, 0,
	0, 0, 0, 0, 265, 232, 298, 237, 243, 286,
	332, 271, 291, 198, 323, 299, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 241,
	0, 282, 220, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 0, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	308, 0, 0, 339, 340, 341, 325, 0, 212, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 215, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 300, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 139,
	0, 0, 1023, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2299,
	0, 0, 0, 0, 187, 305, 321, 197, 296, 334,
	202, 303, 192, 269, 292, 0, 0, 189, 319, 302,
	251, 234, 235, 188, 0, 287, 213, 226, 209, 267,
	0, 318, 346, 208, 337, 0, 329, 191, 0, 328,
	266, 315, 320, 252, 246, 190, 317, 250, 245, 238,
	217, 0, 230, 278, 244, 279, 231, 256, 255, 257,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 0, 0, 0, 304,
	0, 0, 239, 0, 0, 0, 347, 0, 290, 272,
	0, 0, 0, 288, 242, 316, 280, 322, 306, 330,
	284, 281, 182, 307, 211, 253, 193, 195, 207, 214,
	216, 218, 219, 262, 263, 275, 295, 309, 310, 311,
	210, 203, 289, 204, 228, 205, 183, 297, 206, 185,
	276, 314, 0, 224, 285, 249, 186, 248, 277, 313,
	312, 194, 338, 344, 345, 349, 0, 350, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 0, 343, 222, 179, 180, 326, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	342, 0, 0, 0, 0, 293, 0, 0, 0, 0,
	0, 233, 274, 0, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 324, 336,
	353, 356, 0, 0, 0, 184, 355, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 335, 0,
	0, 0, 0, 0, 351, 258, 259, 260, 261, 225,
	0, 201, 354, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 221, 227, 0, 229, 200, 273, 223, 333, 236,
	0, 0, 0, 0, 0, 0, 0, 265, 232, 298,
	237, 243, 286, 332, 271, 291, 198, 323, 299, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 241, 0, 282, 220, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 0, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 308, 0, 0, 339, 340, 341, 325,
	0, 212, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 215, 1828, 0, 240, 0, 0, 0, 0, 0,
	0, 300, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 139, 0, 0, 1023, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 305, 321,
	197, 296, 334, 202, 303, 192, 269, 292, 0, 0,
	189, 319, 302, 251, 234, 235, 188, 0, 287, 213,
	226, 209, 267, 0, 318, 346, 208, 337, 0, 329,
	191, 0, 328, 266, 315, 320, 252, 246, 190, 317,
	250, 245, 238, 217, 0, 230, 278, 244, 279, 231,
	256, 255, 257, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 0, 0, 0,
	0, 0, 304, 0, 0, 239, 0, 0, 0, 347,
	0, 290, 272, 0, 0, 0, 288, 242, 316, 280,
	322, 306, 330, 284, 281, 182, 307, 211, 253, 193,
	195, 207, 214, 216, 218, 219, 262, 263, 275, 295,
	309, 310, 311, 210, 203, 289, 204, 228, 205, 183,
	297, 206, 185, 276, 314, 0, 224, 285, 249, 186,
	248, 277, 313, 312, 194, 338, 344, 345, 349, 0,
	350, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 0, 343, 222, 179,
	180, 326, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 342, 0, 0, 0, 0, 293, 0,
	0, 0, 0, 0, 233, 274, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 324, 336, 353, 356, 0, 0, 0, 184, 355,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 351, 258, 259,
	260, 261, 225, 0, 201, 354, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 221, 227, 0, 229, 200, 273,
	223, 333, 236, 0, 0, 0, 0, 0, 0, 0,
	265, 232, 298, 237, 243, 286, 332, 271, 291, 198,
	323, 299, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 241, 0, 282, 220, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 0, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 308, 0, 0, 339,
	340, 341, 325, 0, 212, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 215, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 300, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2777, 0, 139, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 305, 321, 197, 296, 334, 202, 303, 192, 269,
	292, 0, 0, 189, 319, 302, 251, 234, 235, 188,
	0, 287, 213, 226, 209, 267, 0, 318, 346, 208,
	337, 0, 329, 191, 0, 328, 266, 315, 320, 252,
	246, 190, 317, 250, 245, 238, 217, 0, 230, 278,
	244, 279, 231, 256, 255, 257, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 239, 0,
	0, 0, 347, 0, 290, 272, 0, 0, 0, 288,
	242, 316, 280, 322, 306, 330, 284, 281, 182, 307,
	211, 253, 193, 195, 207, 214, 216, 218, 219, 262,
	263, 275, 295, 309, 310, 311, 210, 203, 289, 204,
	228, 205, 183, 297, 206, 185, 276, 314, 0, 224,
	285, 249, 186, 248, 277, 313, 312, 194, 338, 344,
	345, 349, 0, 350, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 0,
	343, 222, 179, 180, 326, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 342, 0, 0, 0,
	0, 293, 0, 0, 0, 0, 0, 233, 274, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 301, 324, 336, 353, 356, 0, 0,
	0, 184, 355, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	351, 258, 259, 260, 261, 225, 0, 201, 354, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 221, 227, 0,
	229, 200, 273, 223, 333, 236, 0, 0, 0, 0,
	0, 0, 0, 265, 232, 298, 237, 243, 286, 332,
	271, 291, 198, 323, 299, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 241, 0,
	282, 220, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 0, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 308,
	0, 0, 339, 340, 341, 325, 0, 212, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 215, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 300, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 139, 512,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 305, 321, 197, 296, 334, 202,
	303, 192, 269, 292, 0, 0, 189, 319, 302, 251,
	234, 235, 188, 0, 287, 213, 226, 209, 267, 0,
	318, 346, 208, 337, 0, 329, 191, 0, 328, 266,
	315, 320, 252, 246, 190, 317, 250, 245, 238, 217,
	0, 230, 278, 244, 279, 231, 256, 255, 257, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 239, 0, 0, 0, 347, 0, 290, 272, 0,
	0, 0, 288, 242, 316, 280, 322, 306, 330, 284,
	281, 182, 307, 211, 253, 193, 195, 207, 214, 216,
	218, 219, 262, 263, 275, 295, 309, 310, 311, 210,
	203, 289, 204, 228, 205, 183, 297, 206, 185, 276,
	314, 0, 224, 285, 249, 186, 248, 277, 313, 312,
	194, 338, 344, 345, 349, 0, 350, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 352, 0, 0, 0,
	0, 0, 0, 343, 222, 179, 180, 326, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 342,
	0, 0, 0, 0, 293, 0, 0, 0, 0, 0,
	233, 274, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 324, 336, 353,
	356, 0, 0, 0, 184, 355, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 351, 258, 259, 260, 261, 225, 0,
	201, 354, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	221, 227, 0, 229, 200, 273, 223, 333, 236, 0,
	0, 0, 0, 0, 0, 0, 265, 232, 298, 237,
	243, 286, 332, 271, 291, 198, 323, 299, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 241, 0, 282, 220, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 0, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 308, 0, 0, 339, 340, 341, 325, 0,
	212, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	215, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	300, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2686, 0,
	0, 139, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 305, 321, 197,
	296, 334, 202, 303, 192, 269, 292, 0, 0, 189,
	319, 302, 251, 234, 235, 188, 0, 287, 213, 226,
	209, 267, 0, 318, 346, 208, 337, 0, 329, 191,
	0, 328, 266, 315, 320, 252, 246, 190, 317, 250,
	245, 238, 217, 0, 230, 278, 244, 279, 231, 256,
	255, 257, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 0, 0,
	0, 304, 0, 0, 239, 0, 0, 0, 347, 0,
	290, 272, 0, 0, 0, 288, 242, 316, 280, 322,
	306, 330, 284, 281, 182, 307, 211, 253, 193, 195,
	207, 214, 216, 218, 219, 262, 263, 275, 295, 309,
	310, 311, 210, 203, 289, 204, 228, 205, 183, 297,
	206, 185, 276, 314, 0, 224, 285, 249, 186, 248,
	277, 313, 312, 194, 338, 344, 345, 349, 0, 350,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 0, 343, 222, 179, 180,
	326, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 342, 0, 0, 0, 0, 293, 0, 0,
	0, 0, 0, 233, 274, 0, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	324, 336, 353, 356, 0, 0, 0, 184, 355, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 351, 258, 259, 260,
	261, 225, 0, 201, 354, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 221, 227, 0, 229, 200, 273, 223,
	333, 236, 0, 0, 0, 0, 0, 0, 0, 265,
	232, 298, 237, 243, 286, 332, 271, 291, 198, 323,
	299, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 241, 0, 282, 220, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	0, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 308, 0, 0, 339, 340,
	341, 325, 0, 212, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 215, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 300, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2414, 0, 0, 139, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	305, 321, 197, 296, 334, 202, 303, 192, 269, 292,
	0, 0, 189, 319, 302, 251, 234, 235, 188, 0,
	287, 213, 226, 209, 267, 0, 318, 346, 208, 337,
	0, 329, 191, 0, 328, 266, 315, 320, 252, 246,
	190, 317, 250, 245, 238, 217, 0, 230, 278, 244,
	279, 231, 256, 255, 257, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 0,
	0, 0, 0, 0, 304, 0, 0, 239, 0, 0,
	0, 347, 0, 290, 272, 0, 0, 0, 288, 242,
	316, 280, 322, 306, 330, 284, 281, 182, 307, 211,
	253, 193, 195, 207, 214, 216, 218, 219, 262, 263,
	275, 295, 309, 310, 311, 210, 203, 289, 204, 228,
	205, 183, 297, 206, 185, 276, 314, 0, 224, 285,
	249, 186, 248, 277, 313, 312, 194, 338, 344, 345,
	349, 0, 350, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 352, 0, 0, 0, 0, 0, 0, 343,
	222, 179, 180, 326, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 342, 0, 0, 0, 0,
	293, 0, 0, 0, 0, 0, 233, 274, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 324, 336, 353, 356, 0, 0, 0,
	184, 355, 0, 0, 0, 0, 0, 0, 0, 327,
	0, 0, 0, 335, 0, 0, 0, 0, 0, 351,
	258, 259, 260, 261, 225, 0, 201, 354, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 221, 227, 0, 229,
	200, 273, 223, 333, 236, 0, 0, 0, 0, 0,
	0, 0, 265, 232, 298, 237, 243, 286, 332, 271,
	291, 198, 323, 299, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 241, 0, 282,
	220, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 0, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 308, 0,
	0, 339, 340, 341, 325, 0, 212, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 215, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 300, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 139, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 305, 321, 197, 296, 334, 202, 303,
	192, 269, 292, 0, 0, 189, 319, 302, 251, 234,
	235, 188, 0, 287, 213, 226, 209, 267, 0, 318,
	346, 208, 337, 0, 329, 191, 0, 328, 266, 315,
	320, 252, 246, 190, 317, 250, 245, 238, 217, 0,
	230, 278, 244, 279, 231, 256, 255, 257, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 0, 0, 2611, 0, 0, 304, 0, 0,
	239, 0, 0, 0, 347, 0, 290, 272, 0, 0,
	0, 288, 242, 316, 280, 322, 306, 330, 284, 281,
	182, 307, 211, 253, 193, 195, 207, 214, 216, 218,
	219, 262, 263, 275, 295, 309, 310, 311, 210, 203,
	289, 204, 228, 205, 183, 297, 206, 185, 276, 314,
	0, 224, 285, 249, 186, 248, 277, 313, 312, 194,
	338, 344, 345, 349, 0, 350, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 0, 343, 222, 179, 180, 326, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 342, 0,
	0, 0, 0, 293, 0, 0, 0, 0, 0, 233,
	274, 0, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 324, 336, 353, 356,
	0, 0, 0, 184, 355, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 335, 0, 0, 0,
	0, 0, 351, 258, 259, 260, 261, 225, 0, 201,
	354, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 221,
	227, 0, 229, 200, 273, 223, 333, 236, 0, 0,
	0, 0, 0, 0, 0, 265, 232, 298, 237, 243,
	286, 332, 271, 291, 198, 323, 299, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	241, 0, 282, 220, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 0, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 308, 0, 0, 339, 340, 341, 325, 0, 212,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 300,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	139, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 305, 321, 197, 296,
	334, 202, 303, 192, 269, 292, 0, 0, 189, 319,
	302, 251, 234, 235, 188, 0, 287, 213, 226, 209,
	267, 0, 318, 346, 208, 337, 0, 329, 191, 0,
	328, 266, 315, 320, 252, 246, 190, 317, 250, 245,
	238, 217, 0, 230, 278, 244, 279, 231, 256, 255,
	257, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 0, 0, 2425, 0, 0,
	304, 0, 0, 239, 0, 0, 0, 347, 0, 290,
	272, 0, 0, 0, 288, 242, 316, 280, 322, 306,
	330, 284, 281, 182, 307, 211, 253, 193, 195, 207,
	214, 216, 218, 219, 262, 263, 275, 295, 309, 310,
	311, 210, 203, 289, 204, 228, 205, 183, 297, 206,
	185, 276, 314, 0, 224, 285, 249, 186, 248, 277,
	313, 312, 194, 338, 344, 345, 349, 0, 350, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 352, 0,
	0, 0, 0, 0, 0, 343, 222, 179, 180, 326,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 342, 0, 0, 0, 0, 293, 0, 0, 0,
	0, 0, 233, 274, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 324,
	336, 353, 356, 0, 0, 0, 184, 355, 0, 0,
	0, 0, 0, 0, 0, 327, 0, 0, 0, 335,
	0, 0, 0, 0, 0, 351, 258, 259, 260, 261,
	225, 0, 201, 354, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 221, 227, 0, 229, 200, 273, 223, 333,
	236, 0, 0, 0, 0, 0, 0, 0, 265, 232,
	298, 237, 243, 286, 332, 271, 291, 198, 323, 299,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 241, 0, 282, 220, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 0,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 308, 0, 0, 339, 340, 341,
	325, 0, 212, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 300, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 305,
	321, 197, 296, 334, 202, 303, 192, 269, 292, 0,
	0, 189, 319, 302, 251, 234, 235, 188, 0, 287,
	213, 226, 209, 267, 0, 318, 346, 208, 337, 0,
	329, 191, 0, 328, 266, 315, 320, 252, 246, 190,
	317, 250, 245, 238, 217, 0, 230, 278, 244, 279,
	231, 256, 255, 257, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 239, 0, 0, 0,
	347, 0, 290, 272, 0, 0, 0, 288, 242, 316,
	280, 322, 306, 330, 284, 281, 182, 307, 211, 253,
	193, 195, 207, 214, 216, 218, 219, 262, 263, 275,
	295, 309, 310, 311, 210, 203, 289, 204, 228, 205,
	183, 297, 206, 185, 276, 314, 0, 224, 285, 249,
	186, 248, 277, 313, 312, 194, 338, 344, 345, 349,
	0, 350, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 0, 343, 222,
	179, 180, 326, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 342, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 233, 274, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 301, 324, 336, 353, 356, 0, 0, 0, 184,
	355, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 335, 0, 0, 0, 0, 0, 351, 258,
	259, 260, 261, 225, 0, 201, 354, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 221, 227, 0, 229, 200,
	273, 223, 333, 236, 0, 0, 0, 0, 0, 0,
	0, 265, 232, 298, 237, 243, 286, 332, 271, 291,
	198, 323, 299, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 241, 0, 282, 220,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 0, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 308, 0, 0,
	339, 340, 341, 325, 0, 212, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 215, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 300, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1340, 0, 0, 139, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 305, 321, 197, 296, 334, 202, 303, 192,
	269, 292, 0, 0, 189, 319, 302, 251, 234, 235,
	188, 0, 287, 213, 226, 209, 267, 0, 318, 346,
	208, 337, 0, 329, 191, 0, 328, 266, 315, 320,
	252, 246, 190, 317, 250, 245, 238, 217, 0, 230,
	278, 244, 279, 231, 256, 255, 257, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 0, 0, 0, 0, 0, 304, 0, 0, 239,
	0, 0, 0, 347, 0, 290, 272, 0, 0, 0,
	288, 242, 316, 280, 322, 306, 330, 284, 281, 182,
	307, 211, 253, 193, 195, 207, 214, 216, 218, 219,
	262, 263, 275, 295, 309, 310, 311, 210, 203, 289,
	204, 228, 205, 183, 297, 206, 185, 276, 314, 0,
	224, 285, 249, 186, 248, 277, 313, 312, 194, 338,
	344, 345, 349, 0, 350, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	0, 343, 222, 179, 180, 326, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 342, 0, 0,
	0, 0, 293, 0, 0, 0, 0, 0, 233, 274,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 324, 336, 353, 356, 0,
	0, 0, 184, 355, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 335, 0, 0, 0, 0,
	0, 351, 258, 259, 260, 261, 225, 0, 201, 354,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 221, 227,
	0, 229, 200, 273, 223, 333, 236, 0, 0, 0,
	0, 0, 0, 0, 265, 232, 298, 237, 243, 286,
	332, 271, 291, 198, 323, 299, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 241,
	0, 282, 220, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 0, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	308, 0, 0, 339, 340, 341, 325, 0, 212, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 215, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 300, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 139,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 305, 321, 197, 296, 334,
	202, 303, 192, 269, 292, 0, 0, 189, 319, 302,
	251, 234, 235, 188, 0, 287, 213, 226, 209, 267,
	0, 318, 346, 208, 337, 0, 329, 191, 0, 328,
	266, 315, 320, 252, 246, 190, 317, 250, 245, 238,
	217, 0, 230, 278, 244, 279, 231, 256, 255, 257,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 0, 0, 0, 304,
	0, 0, 239, 0, 0, 0, 347, 0, 290, 272,
	0, 0, 0, 288, 242, 316, 280, 322, 306, 330,
	284, 281, 182, 307, 211, 253, 193, 195, 207, 214,
	216, 218, 219, 262, 263, 275, 295, 309, 310, 311,
	210, 203, 289, 204, 228, 205, 183, 297, 206, 185,
	276, 314, 0, 224, 285, 249, 186, 248, 277, 313,
	312, 194, 338, 344, 345, 349, 0, 350, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 0, 343, 222, 179, 180, 326, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	342, 0, 0, 0, 0, 293, 0, 0, 0, 0,
	0, 233, 274, 0, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 324, 336,
	353, 356, 0, 0, 0, 184, 355, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 335, 0,
	0, 0, 0, 0, 351, 258, 259, 260, 261, 225,
	0, 201, 354, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 221, 227, 0, 229, 200, 273, 223, 333, 236,
	0, 0, 0, 0, 0, 0, 0, 265, 232, 298,
	237, 243, 286, 332, 271, 291, 198, 323, 299, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 241, 0, 282, 220, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 0, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 308, 0, 0, 339, 340, 341, 325,
	0, 212, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 215, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 300, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 139, 0, 0, 2167, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 305, 321,
	197, 296, 334, 202, 303, 192, 269, 292, 0, 0,
	189, 319, 302, 251, 234, 235, 188, 0, 287, 213,
	226, 209, 267, 0, 318, 346, 208, 337, 0, 329,
	191, 0, 328, 266, 315, 320, 252, 246, 190, 317,
	250, 245, 238, 217, 0, 230, 278, 244, 279, 231,
	256, 255, 257, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 0, 0, 0,
	0, 0, 304, 0, 0, 239, 0, 0, 0, 347,
	0, 290, 272, 0, 0, 0, 288, 242, 316, 280,
	322, 306, 330, 284, 281, 182, 307, 211, 253, 193,
	195, 207, 214, 216, 218, 219, 262, 263, 275, 295,
	309, 310, 311, 210, 203, 289, 204, 228, 205, 183,
	297, 206, 185, 276, 314, 0, 224, 285, 249, 186,
	248, 277, 313, 312, 194, 338, 344, 345, 349, 0,
	350, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 0, 343, 222, 179,
	180, 326, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 342, 0, 0, 0, 0, 293, 0,
	0, 0, 0, 0, 233, 274, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 324, 336, 353, 356, 0, 0, 0, 184, 355,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 351, 258, 259,
	260, 261, 225, 0, 201, 354, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 221, 227, 0, 229, 200, 273,
	223, 333, 236, 0, 0, 0, 0, 0, 0, 0,
	265, 232, 298, 237, 243, 286, 332, 271, 291, 198,
	323, 299, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 241, 0, 282, 220, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 0, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 308, 0, 0, 339,
	340, 341, 325, 0, 212, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 215, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 300, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 139, 0, 0, 1023, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 305, 321, 197, 296, 334, 202, 303, 192, 269,
	292, 0, 0, 189, 319, 302, 251, 234, 235, 188,
	0, 287, 213, 226, 209, 267, 0, 318, 346, 208,
	337, 0, 329, 191, 0, 328, 266, 315, 320, 252,
	246, 190, 317, 250, 245, 238, 217, 0, 230, 278,
	244, 279, 231, 256, 255, 257, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 239, 0,
	0, 0, 347, 0, 290, 272, 0, 0, 0, 288,
	242, 316, 280, 322, 306, 330, 284, 281, 182, 307,
	211, 253, 193, 195, 207, 214, 216, 218, 219, 262,
	263, 275, 295, 309, 310, 311, 210, 203, 289, 204,
	228, 205, 183, 297, 206, 185, 276, 314, 0, 224,
	285, 249, 186, 248, 277, 313, 312, 194, 338, 344,
	345, 349, 0, 350, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 0,
	343, 222, 179, 180, 326, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 342, 0, 0, 0,
	0, 293, 0, 0, 0, 0, 0, 233, 274, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 301, 324, 336, 353, 356, 0, 0,
	0, 184, 355, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	351, 258, 259, 260, 261, 225, 0, 201, 354, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 221, 227, 0,
	229, 200, 273, 223, 333, 236, 0, 0, 0, 0,
	0, 0, 0, 265, 232, 298, 237, 243, 286, 332,
	271, 291, 198, 323, 299, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 241, 0,
	282, 220, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 0, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 308,
	0, 0, 339, 340, 341, 325, 0, 212, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 215, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 300, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 305, 321, 197, 296, 334, 202,
	303, 192, 269, 292, 0, 0, 189, 319, 302, 251,
	234, 235, 188, 0, 287, 213, 226, 209, 267, 0,
	318, 346, 208, 337, 0, 329, 191, 0, 328, 266,
	315, 320, 252, 246, 190, 317, 250, 245, 238, 217,
	0, 230, 278, 244, 279, 231, 256, 255, 257, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 239, 0, 0, 0, 347, 0, 290, 272, 0,
	0, 0, 288, 242, 316, 280, 322, 306, 330, 284,
	281, 182, 307, 211, 253, 193, 195, 207, 214, 216,
	218, 219, 262, 263, 275, 295, 309, 310, 311, 210,
	203, 289, 204, 228, 205, 183, 297, 206, 185, 276,
	314, 0, 224, 285, 249, 186, 248, 277, 313, 312,
	194, 338, 344, 345, 349, 0, 350, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 352, 0, 0, 0,
	0, 0, 0, 343, 222, 179, 180, 326, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 342,
	0, 0, 0, 0, 293, 0, 0, 0, 0, 0,
	233, 274, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 324, 336, 353,
	356, 0, 0, 0, 184, 355, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 351, 258, 259, 260, 261, 225, 0,
	201, 354, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	221, 227, 0, 229, 200, 273, 223, 333, 236, 0,
	0, 0, 0, 0, 0, 0, 265, 232, 298, 237,
	243, 286, 332, 271, 291, 198, 323, 299, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 241, 0, 282, 220, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 0, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 308, 0, 0, 339, 340, 341, 325, 0,
	212, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	215, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	300, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 139, 0, 0, 1837, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 305, 321, 197,
	296, 334, 202, 303, 192, 269, 292, 0, 0, 189,
	319, 302, 251, 234, 235, 188, 0, 287, 213, 226,
	209, 267, 0, 318, 346, 208, 337, 0, 329, 191,
	0, 328, 266, 315, 320, 252, 246, 190, 317, 250,
	245, 238, 217, 0, 230, 278, 244, 279, 231, 256,
	255, 257, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 0, 0,
	0, 304, 0, 0, 239, 0, 0, 0, 347, 0,
	290, 272, 0, 0, 0, 288, 242, 316, 280, 322,
	306, 330, 284, 281, 182, 307, 211, 253, 193, 195,
	207, 214, 216, 218, 219, 262, 263, 275, 295, 309,
	310, 311, 210, 203, 289, 204, 228, 205, 183, 297,
	206, 185, 276, 314, 0, 224, 285, 249, 186, 248,
	277, 313, 312, 194, 338, 344, 345, 349, 0, 350,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 0, 343, 222, 179, 180,
	326, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 342, 0, 0, 0, 0, 293, 0, 0,
	0, 0, 0, 233, 274, 0, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	324, 336, 353, 356, 0, 0, 0, 184, 355, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 351, 258, 259, 260,
	261, 225, 0, 201, 354, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 221, 227, 0, 229, 200, 273, 223,
	333, 236, 0, 0, 0, 0, 0, 0, 0, 265,
	232, 298, 237, 243, 286, 332, 271, 291, 198, 323,
	299, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 241, 0, 282, 220, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	0, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 0, 0, 0, 339, 340,
	341, 325, 308, 212, 0, 0, 1763, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	215, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	300, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 139, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 305, 321, 197,
	296, 334, 202, 303, 192, 269, 292, 0, 0, 189,
	319, 302, 251, 234, 235, 188, 0, 287, 213, 226,
	209, 267, 0, 318, 346, 208, 337, 0, 329, 191,
	0, 328, 266, 315, 320, 252, 246, 190, 317, 250,
	245, 238, 217, 0, 230, 278, 244, 279, 231, 256,
	255, 257, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 0, 0,
	0, 304, 0, 0, 239, 0, 0, 0, 347, 0,
	290, 272, 0, 0, 0, 288, 242, 316, 280, 322,
	306, 330, 284, 281, 182, 307, 211, 253, 193, 195,
	207, 214, 216, 218, 219, 262, 263, 275, 295, 309,
	310, 311, 210, 203, 289, 204, 228, 205, 183, 297,
	206, 185, 276, 314, 0, 224, 285, 249, 186, 248,
	277, 313, 312, 194, 338, 344, 345, 349, 0, 350,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 0, 343, 222, 179, 180,
	326, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 342, 0, 0, 0, 0, 293, 0, 0,
	0, 0, 0, 233, 274, 0, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	324, 336, 353, 356, 0, 0, 0, 184, 355, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 351, 258, 259, 260,
	261, 225, 0, 201, 354, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 221, 227, 0, 229, 200, 273, 223,
	333, 236, 0, 0, 0, 0, 0, 0, 0, 265,
	232, 298, 237, 243, 286, 332, 271, 291, 198, 323,
	299, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 241, 0, 282, 220, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	0, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 308, 0, 0, 339, 340,
	341, 325, 0, 212, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 215, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 300, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 139, 0, 0, 1023, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	305, 321, 197, 296, 334, 202, 303, 192, 269, 292,
	0, 0, 189, 319, 302, 251, 234, 235, 188, 0,
	287, 213, 226, 209, 267, 0, 318, 346, 208, 337,
	0, 329, 191, 0, 328, 266, 315, 320, 252, 246,
	190, 317, 250, 245, 238, 217, 0, 230, 278, 244,
	279, 231, 256, 255, 257, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 0,
	0, 0, 0, 0, 304, 0, 0, 239, 0, 0,
	0, 347, 0, 290, 272, 0, 0, 0, 288, 242,
	316, 280, 322, 306, 330, 1302, 281, 182, 307, 211,
	253, 193, 195, 207, 214, 216, 218, 219, 262, 263,
	275, 295, 309, 310, 311, 210, 203, 289, 204, 228,
	205, 183, 297, 206, 185, 276, 314, 0, 224, 285,
	249, 186, 248, 277, 313, 312, 194, 338, 344, 345,
	349, 0, 350, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 352, 0, 0, 0, 0, 0, 0, 343,
	222, 179, 180, 326, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 342, 0, 0, 0, 0,
	293, 0, 0, 0, 0, 0, 233, 274, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 324, 336, 353, 356, 0, 0, 0,
	184, 355, 0, 0, 0, 0, 0, 0, 0, 327,
	0, 0, 0, 335, 0, 0, 0, 0, 0, 351,
	258, 259, 260, 261, 225, 0, 201, 354, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 221, 227, 0, 229,
	200, 273, 223, 333, 236, 0, 0, 0, 0, 0,
	0, 0, 265, 232, 298, 237, 243, 286, 332, 271,
	291, 198, 323, 299, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 241, 0, 282,
	220, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 0, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 308, 0,
	0, 339, 340, 341, 325, 0, 212, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 215, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 300, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 139, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 305, 321, 197, 296, 334, 202, 303,
	192, 269, 292, 0, 0, 189, 319, 302, 251, 234,
	235, 188, 0, 287, 213, 226, 209, 267, 0, 318,
	346, 208, 337, 0, 329, 191, 0, 328, 266, 315,
	320, 252, 246, 190, 317, 250, 245, 238, 217, 0,
	230, 278, 244, 279, 231, 256, 255, 257, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 0, 0, 0, 0, 0, 304, 0, 0,
	239, 0, 0, 0, 347, 0, 290, 272, 0, 0,
	0, 288, 242, 316, 280, 322, 306, 330, 284, 281,
	182, 307, 211, 253, 193, 195, 207, 214, 216, 218,
	219, 262, 263, 275, 295, 309, 310, 311, 210, 203,
	289, 204, 228, 205, 183, 297, 206, 185, 276, 314,
	0, 224, 285, 249, 186, 248, 277, 313, 312, 194,
	338, 344, 345, 349, 0, 350, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 0, 343, 222, 179, 180, 326, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 342, 0,
	0, 0, 0, 293, 0, 0, 0, 0, 0, 233,
	274, 0, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 324, 336, 353, 356,
	0, 0, 0, 184, 355, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 335, 0, 0, 0,
	0, 0, 351, 258, 259, 260, 261, 225, 0, 201,
	354, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 221,
	227, 0, 229, 200, 273, 223, 333, 236, 0, 0,
	0, 0, 0, 0, 0, 265, 232, 298, 237, 243,
	286, 332, 271, 291, 198, 323, 299, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 181, 0,
	241, 0, 282, 220, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 0, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 308, 0, 0, 339, 340, 341, 325, 0, 212,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 300,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	139, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 305, 321, 197, 296,
	334, 202, 303, 192, 269, 292, 0, 0, 189, 319,
	302, 251, 234, 235, 188, 0, 287, 213, 226, 209,
	267, 0, 318, 346, 208, 337, 0, 329, 191, 0,
	328, 266, 315, 320, 252, 246, 190, 317, 250, 245,
	238, 217, 0, 230, 278, 244, 279, 231, 256, 255,
	257, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 239, 0, 0, 0, 347, 0, 290,
	272, 0, 0, 0, 288, 242, 316, 280, 322, 306,
	330, 387, 281, 182, 307, 211, 253, 193, 195, 207,
	214, 216, 218, 219, 262, 263, 275, 295, 309, 310,
	311, 210, 203, 289, 204, 228, 205, 183, 297, 206,
	185, 276, 314, 0, 224, 285, 249, 186, 248, 277,
	313, 312, 194, 338, 344, 345, 349, 0, 350, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 352, 0,
	0, 0, 0, 0, 0, 343, 222, 179, 180, 326,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 342, 0, 0, 0, 0, 293, 0, 0, 0,
	0, 0, 233, 274, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 301, 324,
	336, 353, 356, 0, 0, 0, 184, 355, 0, 0,
	0, 0, 0, 0, 388, 327, 0, 0, 0, 335,
	0, 0, 0, 0, 0, 351, 258, 259, 260, 261,
	225, 0, 201, 354, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 221, 227, 0, 229, 200, 273, 223, 333,
	236, 0, 0, 0, 0, 0, 0, 0, 265, 232,
	298, 237, 243, 286, 332, 271, 291, 198, 323, 299,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 241, 0, 282, 220, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 0,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 308, 0, 0, 339, 340, 341,
	325, 0, 212, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 300, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 305,
	321, 197, 296, 334, 202, 303, 192, 269, 292, 0,
	0, 189, 319, 302, 251, 234, 235, 188, 0, 287,
	213, 226, 209, 267, 0, 318, 346, 208, 337, 0,
	329, 191, 0, 328, 266, 315, 320, 252, 246, 190,
	317, 250, 245, 238, 217, 0, 230, 278, 244, 279,
	231, 256, 255, 257, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 0, 331, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 239, 0, 0, 0,
	347, 0, 290, 272, 0, 0, 0, 288, 242, 316,
	280, 322, 306, 330, 284, 281, 182, 307, 211, 253,
	193, 195, 207, 214, 216, 218, 219, 262, 263, 275,
	295, 309, 310, 311, 210, 203, 289, 204, 228, 205,
	183, 297, 206, 185, 276, 314, 0, 224, 285, 249,
	186, 248, 277, 313, 312, 194, 338, 344, 345, 349,
	0, 350, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 0, 343, 222,
	179, 180, 326, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 342, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 233, 274, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 301, 324, 336, 353, 356, 0, 0, 0, 184,
	355, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 335, 0, 0, 0, 0, 0, 351, 258,
	259, 260, 261, 225, 0, 201, 354, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 221, 227, 0, 229, 200,
	273, 223, 333, 236, 0, 0, 0, 0, 0, 0,
	0, 265, 232, 298, 237, 243, 286, 332, 271, 291,
	198, 323, 299, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 241, 0, 282, 220,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 0, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 308, 0, 0,
	339, 340, 341, 325, 0, 212, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 136, 215, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 300, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 139, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 305, 321, 197, 296, 334, 202, 303, 192,
	269, 292, 0, 0, 189, 319, 302, 251, 234, 235,
	188, 0, 287, 213, 226, 209, 267, 0, 318, 346,
	208, 337, 0, 329, 191, 0, 328, 266, 315, 320,
	252, 246, 190, 317, 250, 245, 238, 217, 0, 230,
	278, 244, 279, 231, 256, 255, 257, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 0, 0, 0, 0, 0, 304, 0, 0, 239,
	0, 0, 0, 347, 0, 290, 272, 0, 0, 0,
	288, 242, 316, 280, 322, 306, 330, 284, 281, 182,
	307, 211, 253, 193, 195, 207, 214, 216, 218, 219,
	262, 263, 275, 295, 309, 310, 311, 210, 203, 289,
	204, 228, 205, 183, 297, 206, 185, 276, 314, 0,
	224, 285, 249, 186, 248, 277, 313, 312, 194, 338,
	344, 345, 349, 0, 350, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	0, 343, 222, 179, 180, 326, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 342, 0, 0,
	0, 0, 293, 0, 0, 0, 0, 0, 233, 274,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 301, 324, 336, 353, 356, 0,
	0, 0, 184, 355, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 335, 0, 0, 0, 0,
	0, 351, 258, 259, 260, 261, 225, 0, 201, 354,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 221, 227,
	0, 229, 200, 273, 223, 333, 236, 0, 0, 0,
	0, 0, 0, 0, 265, 232, 298, 237, 243, 286,
	332, 271, 291, 198, 323, 299, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 241,
	0, 282, 220, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 0, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	308, 0, 0, 339, 340, 341, 325, 0, 212, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 215, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 300, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 139,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 305, 321, 197, 296, 334,
	202, 303, 192, 269, 292, 0, 0, 189, 319, 302,
	251, 234, 235, 188, 0, 287, 213, 226, 209, 267,
	0, 318, 346, 208, 337, 0, 329, 191, 0, 328,
	266, 315, 320, 252, 246, 190, 317, 250, 245, 238,
	217, 0, 230, 278, 244, 279, 231, 256, 255, 257,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 0, 0, 0, 304,
	0, 0, 239, 0, 0, 0, 347, 0, 290, 272,
	0, 0, 0, 288, 242, 316, 280, 322, 306, 330,
	284, 281, 182, 307, 211, 253, 193, 195, 207, 214,
	216, 218, 219, 262, 263, 275, 295, 309, 310, 311,
	210, 203, 289, 204, 228, 205, 183, 297, 206, 185,
	276, 314, 0, 224, 285, 249, 186, 248, 277, 313,
	312, 194, 338, 344, 345, 349, 0, 350, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 0, 343, 222, 179, 180, 326, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	342, 0, 0, 0, 0, 293, 0, 0, 0, 0,
	0, 233, 274, 0, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 324, 336,
	353, 356, 0, 0, 0, 184, 355, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 335, 0,
	0, 0, 0, 0, 351, 258, 259, 260, 261, 225,
	0, 201, 354, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 221, 227, 0, 229, 200, 273, 223, 333, 236,
	0, 0, 0, 0, 0, 0, 0, 265, 232, 298,
	237, 243, 286, 332, 271, 291, 198, 323, 299, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 241, 0, 282, 220, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 0, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 308, 0, 0, 339, 340, 341, 325,
	0, 212, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 215, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 300, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 139, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 305, 321,
	197, 296, 334, 202, 303, 192, 269, 292, 0, 0,
	189, 319, 302, 251, 234, 235, 188, 0, 287, 213,
	226, 209, 267, 0, 318, 346, 208, 337, 0, 329,
	191, 0, 328, 266, 315, 320, 252, 246, 190, 317,
	250, 245, 238, 217, 0, 230, 278, 244, 279, 231,
	256, 255, 257, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 0, 0, 0,
	0, 0, 304, 0, 0, 239, 0, 0, 0, 347,
	0, 290, 272, 0, 0, 0, 288, 242, 316, 280,
	322, 306, 330, 284, 281, 182, 307, 211, 253, 193,
	195, 427, 214, 216, 218, 219, 262, 263, 275, 295,
	309, 310, 311, 210, 203, 289, 204, 228, 205, 183,
	297, 206, 185, 276, 314, 0, 224, 285, 249, 186,
	248, 277, 313, 312, 194, 338, 344, 345, 349, 0,
	350, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 0, 343, 222, 179,
	180, 326, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 342, 0, 0, 0, 0, 293, 0,
	0, 0, 0, 0, 233, 274, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	301, 324, 336, 353, 356, 0, 0, 0, 184, 355,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 351, 258, 259,
	260, 261, 225, 0, 201, 354, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 221, 227, 0, 229, 200, 273,
	223, 333, 236, 0, 0, 0, 0, 0, 0, 0,
	265, 232, 298, 237, 243, 286, 332, 271, 291, 198,
	323, 299, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 241, 0, 282, 220, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 0, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 308, 0, 0, 339,
	340, 341, 325, 0, 212, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	0, 0, 0, 0, 215, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 300, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 698, 699, 700, 1809, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 305, 321, 197, 296, 334, 202, 303, 192, 269,
	292, 0, 0, 189, 319, 302, 251, 234, 235, 188,
	0, 287, 213, 226, 209, 267, 0, 318, 346, 208,
	337, 0, 329, 191, 0, 328, 266, 315, 320, 252,
	246, 190, 317, 250, 245, 238, 217, 0, 230, 278,
	244, 279, 231, 256, 255, 257, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 239, 0,
	0, 0, 347, 0, 290, 272, 0, 0, 0, 288,
	242, 316, 280, 322, 306, 330, 284, 281, 182, 307,
	211, 253, 193, 195, 207, 214, 216, 218, 219, 262,
	263, 275, 295, 309, 310, 311, 210, 203, 289, 204,
	228, 205, 183, 297, 206, 185, 276, 314, 0, 224,
	285, 249, 186, 248, 277, 313, 312, 194, 338, 344,
	345, 349, 0, 350, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 0,
	343, 222, 179, 180, 326, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 342, 0, 0, 0,
	0, 293, 0, 0, 0, 0, 0, 233, 274, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 301, 324, 336, 353, 356, 0, 0,
	0, 184, 355, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	351, 258, 259, 260, 261, 225, 0, 201, 354, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 221, 227, 308,
	229, 200, 273, 223, 333, 236, 0, 0, 0, 0,
	270, 0, 0, 265, 232, 298, 237, 243, 286, 332,
	271, 291, 198, 323, 299, 247, 0, 215, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 300, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 698, 699,
	700, 1809, 0, 0, 0, 196, 181, 0, 241, 0,
	282, 220, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 340, 341, 325, 0, 212, 0, 0,
	0, 0, 0, 187, 305, 321, 197, 296, 334, 202,
	303, 192, 269, 292, 0, 0, 189, 319, 302, 251,
	234, 235, 188, 0, 287, 213, 226, 209, 267, 0,
	318, 346, 208, 337, 0, 329, 191, 0, 328, 266,
	315, 320, 252, 246, 190, 317, 250, 245, 238, 217,
	0, 230, 278, 244, 279, 231, 256, 255, 257, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 239, 0, 0, 0, 347, 0, 290, 272, 0,
	0, 0, 288, 242, 316, 280, 322, 306, 330, 284,
	281, 182, 307, 211, 253, 193, 195, 207, 214, 216,
	218, 219, 262, 263, 275, 295, 309, 310, 311, 210,
	203, 289, 204, 228, 205, 183, 297, 206, 185, 276,
	314, 0, 224, 285, 249, 186, 248, 277, 313, 312,
	194, 338, 344, 345, 349, 0, 350, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 352, 0, 0, 0,
	0, 0, 0, 343, 222, 179, 180, 326, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 342,
	0, 0, 0, 0, 293, 0, 0, 0, 0, 0,
	233, 274, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 324, 336, 353,
	356, 0, 0, 0, 184, 355, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 351, 258, 259, 260, 261, 225, 0,
	201, 354, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	221, 227, 308, 229, 200, 273, 223, 333, 236, 0,
	0, 0, 0, 270, 0, 0, 265, 232, 298, 237,
	243, 286, 332, 271, 291, 198, 323, 299, 247, 0,
	215, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	300, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 698, 699, 700, 0, 0, 0, 0, 196, 181,
	0, 241, 0, 282, 220, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 339, 340, 341, 325, 0,
	212, 0, 0, 0, 0, 0, 187, 305, 321, 197,
	296, 334, 202, 303, 192, 269, 292, 0, 0, 189,
	319, 302, 251, 234, 235, 188, 0, 287, 213, 226,
	209, 267, 0, 318, 346, 208, 337, 0, 329, 191,
	0, 328, 266, 315, 320, 252, 246, 190, 317, 250,
	245, 238, 217, 0, 230, 278, 244, 279, 231, 256,
	255, 257, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 0, 0,
	0, 304, 0, 0, 239, 0, 0, 0, 347, 0,
	290, 272, 0, 0, 0, 288, 242, 316, 280, 322,
	306, 330, 284, 281, 182, 307, 211, 253, 193, 195,
	207, 214, 216, 218, 219, 262, 263, 275, 295, 309,
	310, 311, 210, 203, 289, 204, 228, 205, 183, 297,
	206, 185, 276, 314, 0, 224, 285, 249, 186, 248,
	277, 313, 312, 194, 338, 344, 345, 349, 0, 350,
	2370, 0, 0, 358, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 0, 343, 222, 179, 180,
	326, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 342, 0, 1760, 0, 0, 293, 0, 0,
	0, 0, 0, 233, 274, 0, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	324, 336, 353, 356, 0, 0, 0, 184, 355, 0,
	0, 2352, 0, 0, 0, 0, 327, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 351, 258, 259, 260,
	261, 225, 0, 201, 354, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 221, 227, 0, 229, 200, 273, 223,
	333, 236, 0, 0, 0, 0, 0, 0, 0, 265,
	232, 298, 237, 243, 286, 332, 271, 291, 198, 323,
	299, 247, 407, 0, 406, 413, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 410, 411, 0, 412,
	416, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 241, 0, 282, 220, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 406, 413, 403,
	0, 0, 425, 0, 0, 426, 2356, 0, 0, 410,
	411, 0, 412, 416, 0, 0, 398, 2360, 0, 0,
	0, 0, 0, 0, 0, 0, 421, 0, 339, 340,
	341, 325, 0, 212, 0, 0, 0, 2349, 0, 0,
	0, 2351, 2353, 2355, 0, 2357, 2358, 2359, 2361, 2362,
	2363, 2365, 2366, 2367, 2368, 425, 0, 0, 426, 407,
	0, 406, 413, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 411, 0, 412, 416, 0, 0,
	398, 0, 0, 0, 0, 0, 0, 2371, 0, 0,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 401, 400, 0, 0,
	2348, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 0, 0, 0,
	0, 0, 0, 424, 0, 0, 0, 0, 0, 2364,
	402, 0, 0, 0, 393, 0, 2354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 401,
	400, 0, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 401, 400, 0, 0, 0, 0, 0,
	0, 405, 404, 408, 414, 0, 415, 417, 0, 0,
	418, 419, 420, 409, 0, 422, 423, 0, 0, 0,
	424, 0, 0, 0, 0, 0, 0, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 404, 408, 414, 0, 415,
	417, 0, 0, 418, 419, 420, 0, 0, 422, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 404,
	408, 414, 0, 415, 417, 0, 0, 418, 419, 420,
	0, 0, 422, 423,
}

var yyPact = [...]int{
	2738, -1000, -295, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -204, 27016, 27016,
	-1000, -1000, 1623, -1000, 26513, 10910, 27519, 195, 192, 27519,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 436, -1000, 26010, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 398, 29732, 28022, 266, 8385, 27519,
	-273, -1000, 2251, -130, -1000, -1000, -1000, -1000, -1000, -1000,
	2363, 455, 25507, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2832,
	113, 455, 563, 571, 788, 788, 12419, 2251, 270, 135,
	-1000, 621, 2738, 29311, 1474, 370, 27519, -1000, 982, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 370,
	-1000, -1000, -1000, 2251, 2251, -1000, 27519, 27519, 8, 1081,
	-1000, 251, 241, 237, 980, -1000, -1000, -1000, -1000, -1000,
	2282, -1000, 27519, 27519, 1897, 27519, -1000, 1321, 343, 29785,
	2091, 848, 491, 1926, -1000, -1000, 1888, -1000, 128, 129,
	141, 244, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 117,
	-1000, 2123, -1000, -1000, 105, -1000, -1000, 132, -1000, -1000,
	-1000, -63, -1000, -1000, -1000, -1000, -1000, -142, -1000, -1000,
	-142, 617, 1337, 8385, -1000, 1331, -1000, 1960, -1000, -1000,
	-1000, -1000, 5861, 9894, 9894, 9894, 9894, -1000, -1000, 1766,
	8385, 1883, 1755, 1881, -1000, -1000, -1000, -1000, 976, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1473, 9391, -1000, 1875, 1873, 1872, 1871, 1869, 1866,
	1852, 1851, 1850, 1848, 1659, 1841, 1472, 1471, 1836, 1833,
	1832, 1470, 1659, 1659, 1827, 1826, 1814, 1813, 1810, 1809,
	1808, 1806, 1805, 1804, 1801, 1798, 1797, 1793, 1789, 1787,
	1785, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2670, -1000, 975, 962, -1000, 1784,
	2081, 2195, 1681, 2257, 2182, 2180, 2176, 2150, 1308, -1000,
	-1000, 27519, 27519, 80, 375, 375, 375, 428, 375, 435,
	433, -1000, -1000, -1000, -1000, -1000, -1000, 504, -1000, -1000,
	-1000, -1000, 837, 27519, -1000, 1722, 1020, 2192, 350, 349,
	234, -1000, 1150, 1150, 1150, 1150, 1020, 265, 341, 2195,
	2195, -72, -81, 1020, 1020, -81, 130, -1000, -1000, -1000,
	1150, 346, 1150, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2137, 2135, -185, 398, 398, 405, -1000, -146, -1000, -1000,
	585, -1000, 534, -1000, 1321, 335, 331, 849, 1116, -1000,
	1044, 27519, 27519, 27519, 1044, 1044, 15440, 14937, -1000, 2195,
	1681, -1000, 1624, 1676, 1621, 1681, 398, 398, 398, 398,
	398, 398, 398, 27519, 27519, 7370, 7370, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 293, -1000, -1000, -1000, -1000,
	-1000, 2086, 269, 1781, -1000, 27519, 256, 2195, 2081, 2195,
	-1000, -1000, 972, 1307, 1461, -1000, -1000, 251, 1018, -1000,
	588, -1000, -1000, -1000, -1000, 27519, 236, -1000, -1000, 1436,
	1780, -1000, 385, 748, 1000, -1000, 140, 29849, 22985, 1321,
	22985, 27519, -1000, -1000, -1000, -1000, -1000, -1000, -66, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 97, -1000, 97, 8385, 8385, 8385, 8385, 8385,
	-1000, 414, 8888, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	9894, 9894, 9894, 9894, 9894, 9894, 9894, 9894, 9894, 9894,
	9894, 9894, 1763, 1061, 9894, 9894, 9894, 1676, 2200, 839,
	174, -1000, -1000, -1000, -1000, -1000, 1087, 1337, 8385, 8385,
	8385, 27519, -1000, 2857, 8385, 8385, 79, 8385, 2145, 4351,
	27519, 8385, -1000, 1618, 1611, -1000, -1000, 1222, 8385, -1000,
	-1000, 8385, 9894, 8385, -1000, -1000, -1000, 93, 2145, 2145,
	8385, 8385, 2145, 2145, 2145, 1117, 2145, 2145, 2145, 2145,
	2145, 2145, 2145, 2145, 27519, 2061, 104, -1000, -1000, -1000,
	1684, -1000, 1732, 1732, 1684, 1684, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1753, 1779, -1000, -1000, 1724,
	1724, 1724, 1684, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1750, 1750,
	1751, 1750, 27519, 2195, -273, 6867, -1000, -279, 2081, 8385,
	-1000, -1000, 8385, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1460, 2130, -1000, 1778, 971, 424, 375, -1000, 27519,
	1095, 22985, 1321, 1349, 27519, 375, 375, 405, -1000, 27519,
	837, 2128, 27519, 2271, 9894, 25004, 1150, 1020, -1000, 27519,
	-1000, -1000, -1000, 1150, 27519, 1150, 1150, 2271, 1150, -1000,
	-1000, -1000, 1020, 1020, -1000, -1000, -1000, -1000, 1150, 1150,
	-1000, -1000, -77, 2271, 2271, -91, 27519, 27519, 375, 27519,
	-1000, 27519, -1000, -1000, 422, 27519, 22985, 21476, -1000, -114,
	536, 549, 535, -1000, -1000, 384, 364, 14434, 321, 22985,
	5357, -1000, -1000, 1044, 1044, 1044, 5357, 5357, 899, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2081, -1000, -1000, -1000,
	-1000, -1000, 27519, 22985, 1321, 27519, 27519, 27519, 29311, -1000,
	1769, 919, -1000, -1000, 11916, 970, 919, 1459, 27519, 1441,
	1923, 2057, -1000, 1768, 13427, 27519, -1000, -1000, -276, -1000,
	12923, 27519, 2081, -1000, 2081, 3391, -1000, 2162, -1000, 251,
	186, -1000, -1000, -1000, -1000, -1000, -1000, 966, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 835, -1000, 27519,
	-1000, -1000, 140, 22985, 1062, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 138, -1000, -1000, 163, -1000, 417, 43, 1017,
	-1000, -1000, 70, 160, 454, 70, 1337, -1000, 1142, 1142,
	1122, -1000, 441, -1000, -1000, -1000, -1000, 1766, -1000, -1000,
	-1000, 1399, 1535, -1000, 1084, 1084, 896, 896, 896, 896,
	896, 1285, 1285, -1000, -1000, -1000, 5861, 1763, 9894, 9894,
	9894, 382, 3150, 2859, -1000, 8385, 1092, -1000, 8385, 1182,
	2156, 797, 960, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1610, 617, 1607, 1536, 2279, 1606, 8385,
	-1000, -1000, 1354, 7882, -1000, -1000, -1000, 1605, 956, 1596,
	-1000, -1000, -1000, 1595, 762, 1580, 1615, 1578, 796, 8385,
	8385, 1011, 1010, 8385, 8385, 8385, 8385, 1577, 8385, 8385,
	8385, 8385, 8385, 8385, 8385, 8385, -1000, 8385, 82, -1000,
	-1000, -1000, -1000, 1305, -1000, 1303, -1000, -1000, -1000, 1439,
	1439, -1000, 1299, -1000, -1000, -1000, -1000, 1298, -1000, -1000,
	1294, -1000, -1000, -1000, -1000, 1008, -1000, 1337, -1000, 1438,
	-1000, 824, 787, -1000, 1195, -1000, -1000, 27519, 10397, 27519,
	375, 27519, 77, -1000, 2082, 737, -1000, 43, 640, 1894,
	2048, 27519, 27519, 24501, -1000, 1762, 1007, -1000, -1000, 8385,
	-1000, 1892, 1321, 27519, 2271, -1000, -1000, -1000, -1000, 29311,
	-1000, -1000, -1000, -1000, 27519, 2271, 2271, 1020, 1150, 1150,
	-1000, -1000, 1150, -1000, 947, -1000, 27519, -1000, -1000, 398,
	73, 737, 2245, 759, -1000, -1000, -1000, -1000, 28525, 28525,
	13931, 28525, -1000, 1031, -1000, -1000, 555, 531, 525, -1000,
	-1000, 416, -1000, -1000, 640, -1000, -1000, -1000, 1757, 1078,
	-1000, -1000, 1755, -1000, 5357, 5357, 5357, -1000, -1000, 17452,
	-1000, -1000, 723, 640, 1913, 694, -1000, 694, -1000, 10397,
	2271, 7370, -1000, 21476, -1000, -1000, 23991, -1000, 23488, 2271,
	-283, 715, -88, -1000, 2073, -276, 27519, 27519, 1003, 137,
	-1000, 999, -1000, 620, -1000, 1754, -1000, 992, 2005, 622,
	-1000, 1076, -1000, -1000, -1000, 941, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 6, -1000, -1000,
	27519, 1436, 990, 1062, 654, -1000, 410, 931, 917, -1000,
	22985, 118, 22985, -1000, 22985, -1000, -1000, 253, -1000, 27519,
	2078, -1000, -1000, -1000, 1419, -299, 2077, -1000, -1000, -1000,
	-1000, -1000, 984, -1000, 382, 3150, 2806, -1000, 9894, 9894,
	2138, 1085, -1000, 8385, 1103, 1412, -1000, 855, 16446, 27519,
	-1000, -1000, 8385, 8385, -1000, 2098, -1000, 8385, 8385, 1448,
	-1000, 27519, -1000, -1000, -1000, 16446, -1000, 9894, -1000, 8385,
	150, 2080, -52, -52, 2068, 2050, 2001, 983, -52, 1916,
	1799, 1795, 1735, 1717, 1688, 1631, 1625, 1337, -1000, -1000,
	1566, 1563, 963, -1000, 958, 1553, 950, 936, 6867, -1000,
	-88, 8385, 8385, 8385, 2010, -1000, -1000, 83, 1550, 661,
	-1000, -1000, -1000, 2924, 1732, 1684, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1753, -1000, 1724, 1724, 1724,
	1684, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1750, 1750, 1751, 1750, -1000, 27519, 1749, -57, 1065, -1000,
	386, 22985, 329, -1000, 1911, 204, -1000, 2048, -1000, 532,
	-1000, 1748, 1745, 27519, 699, -1000, 911, 2738, -1000, 27519,
	1337, -1000, 1321, -1000, 1020, -1000, -1000, 2271, 955, -1000,
	-1000, 2271, 1020, 1020, 1150, 27519, -1000, 27519, -57, 1065,
	386, 27519, 21476, 21476, 21476, 21476, -1000, 1958, 1951, -1000,
	1947, 1939, 2002, 27519, 21476, 1722, -1000, 28918, -1000, -1000,
	-1000, -1000, -1000, 1676, 935, 2301, 565, 8385, -1000, -1000,
	-1000, 526, 22985, 1430, 321, -1000, -1000, -1000, -1000, -1000,
	27519, 27519, 1549, 2254, -1000, 656, -1000, -1000, 892, -1000,
	2254, -1000, 1282, 1428, -43, -23, 1173, 620, 622, 909,
	-1000, 137, 27519, 2003, 1744, -1000, 27519, -276, 6867, 260,
	-276, 27519, 6867, 3391, 1281, -1000, -1000, -1000, 2274, 22985,
	1321, 1015, 1059, -1000, 102, -1000, 126, 358, 1427, -1000,
	432, 94, -1000, 1075, 1419, 430, -1000, -1000, 9894, -1000,
	-1000, -1000, -1000, 1337, 8385, 1548, -1000, 507, 507, 1546,
	-1000, 1684, 1732, -1000, 1684, 1724, 1684, 507, 507, 1544,
	-1000, 1260, 1579, -1000, 1551, 1532, 8385, -1000, 1542, 2366,
	845, 1541, 1424, -52, -1000, 1723, -1000, -52, -52, -52,
	-52, -1000, -52, -52, -52, -52, -52, -52, -52, -52,
	-1000, -1000, -1000, 1423, -1000, -1000, -1000, 1279, -1000, 1255,
	-1000, -43, 1337, 1337, -1000, -1000, 2062, 1422, 440, 10397,
	2030, 1722, 11413, 1231, -1000, -1000, 22482, -1000, 348, -1000,
	-1000, -1000, 439, 115, 1253, 339, -1000, 1482, 27519, -1000,
	-1000, -1000, -1000, -1000, 1065, 1065, 1065, 11413, 11413, 370,
	710, 891, 21476, 27519, -1000, 20973, 1540, -1000, 640, 2271,
	-1000, 27519, -1000, 2271, 2271, 1020, -1000, 1722, 1231, 22482,
	348, 719, -1000, 1074, 1904, 1908, 1904, -1000, -1000, -1000,
	-1000, 1948, -1000, 1938, -1000, -1000, 719, -1000, -1000, -1000,
	-1000, -1000, 565, -1000, 2151, 545, 545, 545, 1534, -1000,
	654, 1528, -1000, -1000, -1000, -1000, -1000, 2202, 2256, 21979,
	2202, -1000, -283, -281, -6, 2252, 2249, 2299, 246, 27519,
	259, -1000, -276, 27519, -1000, -1000, 1515, 648, -276, -1000,
	620, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1321, -1000,
	123, -1000, -1000, -1000, -1000, -1000, -1000, 27, -1000, 27519,
	-1000, 1419, 1418, 92, 27519, -1000, 1337, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 8385, -1000, -1000, -1000, 1463, -1000, -1000, 8385,
	-52, -1000, -1000, 366, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1513, 1505, -281,
	-1000, -1000, -1000, 2924, -1000, 1264, 2120, 1504, 642, -1000,
	-1000, -1000, 2924, 550, -1000, 27519, 1135, 545, 375, 545,
	1133, 1720, -1000, -1000, -1000, 1417, 39, -1000, -1000, -1000,
	1416, 1413, 1248, -1000, -1000, 1296, 874, 60, -1000, -1000,
	-1000, -1000, -1000, -1000, 1716, 16446, 16949, 1411, 1499, 1491,
	28525, 21476, 20973, 716, -1000, 883, -1000, -1000, -1000, 2271,
	-1000, -1000, 2271, 2119, -1000, 39, -1000, 2264, 27519, 6867,
	-1000, -1000, 8385, 1705, -1000, 8385, -1000, -1000, -1000, -1000,
	-1000, 1699, 1995, -1000, -1000, -1000, -1000, -1000, -1000, 8385,
	8385, -1000, -1000, -1000, -283, 1410, -1000, -1000, 2246, 1407,
	1341, 27519, -1000, -1000, -276, -1000, 620, 908, -1000, 620,
	640, -1000, -1000, 137, -1000, -1000, -1000, -91, 1437, -1000,
	1385, -1000, 2264, -1000, 2243, -1000, -1000, -283, -198, -1000,
	-1000, 246, 29594, 11413, 1421, -1000, -1000, 27519, 27519, -1000,
	27519, 27519, 375, 8385, -1000, -1000, 239, -1000, -1000, 155,
	-1000, -1000, 1295, 389, -1000, 19464, -1000, -1000, -1000, -1000,
	-1000, 97, 29594, 2271, 716, 883, -1000, -1000, 1014, -1000,
	-1000, 246, -1000, 2195, -1000, -1000, 1337, 27519, 1337, 20470,
	-1000, 2241, 2234, 1337, 617, -287, -1000, 1406, -10, -1000,
	-1000, 622, 620, -1000, -91, -1000, -53, -16, -1000, -1000,
	50, 8385, -287, 27519, -1000, 365, 2658, -1000, 1065, 1065,
	700, 1065, 1065, 1065, 1065, 315, 299, 1065, 1065, 1065,
	1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065,
	1065, 1698, -1000, -1000, 1421, -1000, -1000, 1186, 9894, -1000,
	-1000, 1401, 16949, 552, 533, 1695, -1000, 249, 2298, -1000,
	1131, 1129, -1000, 27519, -1000, 1692, 1719, 197, 1691, -1000,
	1690, 1686, 27519, 1358, 355, 1397, -1000, -1000, 151, -1000,
	-1000, 895, -1000, 1684, 8385, -1000, -91, 365, 2264, -1000,
	-1000, -1000, 893, 889, -1000, -1000, -1000, -1000, -1000, 1683,
	-1000, 2230, -1000, 401, -22, -16, -1000, 2219, -14, 2218,
	2217, 1490, -1000, 3848, -1000, -1000, -1000, 617, -1000, 2104,
	-1000, 193, 2213, 29594, -1000, 1246, 1239, 1065, 1065, 1238,
	1394, 1392, 1391, 1065, 1065, 1235, 1389, 28918, 1234, 1233,
	1229, 1290, 1387, 573, 1278, 1265, 1251, 27519, 1680, 1339,
	-1000, -1000, 3150, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1225, 1678, -140, -1000, -1000, 1675,
	19464, 191, 191, 19464, 19464, 19464, 1661, 425, -1000, 26,
	-1000, -1000, -1000, 19464, 2115, 1271, -1000, 193, 2195, -1000,
	-1000, 19967, 27519, 1341, 1660, 1221, -6, -34, 2212, -1000,
	1341, 2205, 1341, 1341, -1000, -1000, 4854, -277, -42, 268,
	1384, -1000, 2201, 245, -1000, -1000, -1000, 16446, 16446, -1000,
	-1000, -1000, -1000, 1359, 1350, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 324, 27519, 873,
	-1000, 1072, 1489, 8385, 1659, -189, 19464, 871, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 861, 857, 852, 19464, -1000,
	-1000, -1000, 242, -1000, 168, -1000, -1000, 2115, -1000, -1000,
	-1000, -1000, 850, -1000, -1000, 2102, 15943, -30, -1000, -1000,
	-1000, 1342, -1000, 1341, -1000, -1000, 1107, -1000, -1000, -1000,
	-1000, -1000, -1000, 18961, 226, 227, 223, -1000, 393, -1000,
	-1000, -1000, -1000, -1000, -1000, 333, 841, -1000, 1339, 1329,
	-1000, 1230, -1000, 1907, -1000, 48, 840, -1000, -1000, -1000,
	-1000, 838, -1000, -1000, 1065, 1320, 180, -1000, -1000, -1000,
	-1000, 27519, -1000, 27519, -1000, 833, -1000, -1000, -1000, 866,
	-1000, -1000, -1000, -1000, 4854, -1000, 27519, 216, 1206, 9894,
	1658, 9894, 1652, 232, 1646, -1000, -1000, -1000, -1000, -1000,
	425, -1000, 1902, 1802, 2294, -1000, -1000, -1000, -1000, 168,
	168, 168, 168, 99, 1199, -1000, 1349, -1000, 606, -1000,
	1063, -1000, 18458, 27519, -1000, 790, 1637, 2197, -1000, 2323,
	27519, 2079, 27519, 1629, 1050, 9894, -1000, -1000, 2296, -1000,
	2289, 530, 530, -1000, -1000, -1000, 27519, 6364, -1000, 860,
	-1000, -1000, 363, 229, -1000, 771, -1000, 764, 17955, 1198,
	1918, -1000, -1000, -1000, 1226, 278, -1000, -1000, -1000, 1337,
	27519, 758, -1000, 1402, 205, -1000, -1000, -1000, 757, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 363, 1970, -1000, 1192,
	-1000, -1000, 3125, 482, -1000, -1000, 3125, 213, -1000, 351,
	1627, -1000, -1000, 746, -1000, 1388, 523, 8385, -1000, 213,
	29594, -1000, 8385, 726, -1000, 29594, 663, -1000, -1000,
}

var yyPgo = [...]int{
	0, 134, 2747, 227, 156, 145, 221, 2746, 2744, 2114,
	2102, 2742, 2737, 2730, 2729, 2727, 2726, 2720, 2718, 2717,
	2716, 2715, 2714, 2713, 2712, 2711, 2710, 2709, 2708, 2705,
	2703, 216, 2702, 2696, 2695, 2693, 2691, 2688, 2684, 2683,
	2678, 2677, 2676, 2675, 2674, 2671, 2669, 2668, 2667, 2666,
	2665, 2663, 2662, 2661, 2658, 2657, 2656, 143, 2654, 2061,
	2653, 2650, 2648, 2647, 2646, 189, 2643, 2642, 2641, 2640,
	2639, 2638, 2637, 2636, 2635, 2632, 2631, 2629, 2628, 2627,
	2626, 159, 2624, 2623, 138, 2622, 2621, 2620, 2619, 208,
	202, 68, 2618, 44, 66, 172, 219, 1225, 223, 217,
	167, 148, 72, 2616, 2097, 2615, 151, 201, 130, 25,
	2612, 155, 2611, 147, 43, 37, 213, 121, 56, 101,
	106, 2610, 197, 69, 86, 96, 2608, 2606, 215, 168,
	2605, 108, 2601, 2600, 2598, 2597, 181, 111, 2595, 63,
	2594, 81, 73, 104, 28, 2593, 2592, 2591, 83, 2590,
	2588, 2586, 2585, 158, 2582, 122, 58, 2578, 2577, 2576,
	65, 2575, 32, 2574, 52, 2572, 2571, 2570, 2569, 75,
	2568, 2567, 12, 17, 19, 2565, 20, 1, 2564, 192,
	62, 93, 123, 2563, 422, 2555, 2554, 2552, 131, 2550,
	387, 2547, 2546, 2544, 2543, 10, 2542, 182, 55, 2541,
	91, 110, 2539, 53, 175, 177, 2538, 2537, 117, 61,
	60, 116, 2535, 2534, 76, 191, 15, 54, 0, 178,
	41, 2528, 2526, 2521, 218, 2520, 205, 176, 203, 99,
	225, 135, 2517, 2516, 57, 2515, 132, 80, 114, 9,
	2513, 161, 2512, 476, 166, 2511, 184, 2510, 136, 3,
	125, 2508, 2507, 29, 243, 2503, 2502, 2500, 152, 2499,
	2498, 94, 140, 2497, 2496, 2495, 26, 2494, 31, 21,
	2493, 105, 2480, 206, 179, 164, 115, 163, 162, 128,
	194, 200, 64, 126, 1095, 124, 88, 18, 2479, 193,
	2476, 222, 198, 2475, 170, 2473, 209, 380, 188, 2472,
	165, 7, 48, 35, 2471, 8, 2470, 89, 2469, 2468,
	22, 2464, 23, 2463, 2460, 2459, 2458, 6, 2457, 2456,
	2454, 2, 4, 2453, 5, 186, 51, 129, 2450, 109,
	153, 2436, 2417, 82, 2416, 2411, 196, 2408, 1143, 2407,
	2406, 2405, 2402, 2401, 2400, 2399, 70, 36, 2397, 2396,
	2395, 2392, 78, 119, 2390, 287, 185, 2389, 38, 154,
	2387, 27, 2386, 30, 34, 42, 2385, 107, 2384, 13,
	169, 2382, 2381, 16, 2380, 2376, 11, 14, 2375, 2373,
	71, 2369, 49, 33, 84, 85, 2364, 24, 74, 120,
	2363, 2362, 212, 211, 183, 2359, 141, 204, 220, 2350,
	190, 2349, 2347, 2346, 2342, 2341, 224, 2340, 1138, 2336,
	2334, 207, 59, 95, 100, 2333, 2331, 2330, 79, 133,
	102, 97, 180, 2329, 174, 2327, 2326, 98, 2325, 2324,
	2322, 2321, 2319, 2317, 2314, 214, 150, 2313,
}

//line mysql_sql.y:8391
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 433, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 87, 431, 431, 431, 432, 432,
	85, 85, 85, 74, 73, 86, 379, 379, 378, 378,
	377, 377, 376, 376, 376, 375, 375, 375, 374, 374,
	373, 373, 372, 372, 370, 370, 371, 369, 368, 368,
	368, 366, 366, 366, 362, 362, 364, 363, 363, 365,
	357, 357, 360, 360, 358, 358, 358, 358, 361, 356,
	356, 356, 355, 355, 72, 72, 72, 286, 286, 71,
	71, 300, 300, 300, 300, 300, 298, 298, 298, 298,
	298, 298, 297, 297, 296, 296, 301, 301, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 66, 66,
	66, 66, 69, 69, 69, 70, 295, 295, 295, 67,
	68, 68, 285, 285, 290, 290, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 294, 294,
	294, 292, 292, 291, 291, 293, 293, 60, 60, 60,
	63, 62, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 61, 61, 61, 61, 61, 61, 58, 58, 58,
	58, 58, 57, 57, 59, 59, 283, 283, 282, 77,
	77, 77, 77, 77, 77, 77, 76, 76, 79, 79,
	78, 80, 65, 65, 65, 65, 65, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 403, 403, 403, 405,
	405, 222, 223, 434, 225, 221, 221, 221, 399, 399,
	400, 401, 402, 402, 402, 75, 7, 7, 7, 56,
	54, 417, 417, 55, 424, 424, 336, 336, 236, 236,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 339, 340, 232, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	38, 37, 37, 37, 272, 272, 36, 435, 435, 205,
	205, 44, 45, 46, 47, 48, 49, 50, 35, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 53, 53,
	351, 351, 437, 437, 437, 51, 52, 335, 335, 335,
	42, 41, 40, 39, 39, 34, 34, 33, 33, 229,
	229, 231, 231, 227, 436, 436, 312, 312, 230, 230,
	32, 32, 32, 228, 228, 204, 226, 226, 226, 8,
	8, 6, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 18, 20, 280, 280, 277, 19, 14, 13, 16,
	12, 15, 17, 5, 5, 5, 5, 9, 9, 10,
	101, 101, 143, 143, 412, 412, 408, 408, 409, 409,
	409, 410, 410, 411, 411, 81, 345, 345, 345, 345,
	345, 345, 4, 123, 123, 124, 124, 344, 344, 344,
	344, 344, 344, 344, 430, 430, 388, 388, 388, 389,
	122, 122, 117, 117, 346, 346, 250, 390, 390, 354,
	354, 353, 353, 352, 352, 120, 120, 121, 121, 104,
	104, 90, 90, 359, 359, 359, 359, 367, 367, 333,
	333, 169, 169, 198, 198, 199, 199, 94, 94, 95,
	95, 95, 95, 95, 95, 396, 396, 398, 398, 397,
	119, 119, 115, 115, 116, 116, 116, 114, 114, 113,
	112, 112, 111, 109, 109, 109, 110, 110, 110, 97,
	97, 97, 96, 96, 96, 96, 96, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 98,
	98, 404, 404, 404, 337, 337, 337, 342, 342, 181,
	181, 182, 182, 180, 180, 99, 99, 100, 100, 100,
	100, 179, 179, 178, 102, 102, 108, 107, 107, 103,
	103, 103, 103, 189, 189, 188, 188, 188, 188, 84,
	88, 88, 89, 127, 127, 187, 186, 186, 186, 126,
	126, 125, 125, 118, 118, 106, 106, 106, 106, 185,
	105, 183, 429, 429, 428, 428, 427, 425, 425, 425,
	426, 426, 426, 426, 381, 381, 381, 381, 381, 214,
	214, 214, 220, 220, 213, 213, 213, 213, 213, 224,
	219, 219, 215, 215, 216, 216, 216, 3, 3, 3,
	3, 24, 24, 24, 24, 24, 24, 30, 135, 136,
	29, 128, 128, 129, 129, 130, 130, 131, 132, 132,
	132, 134, 133, 28, 406, 406, 21, 413, 416, 414,
	414, 418, 418, 418, 419, 419, 419, 420, 420, 22,
	415, 421, 421, 421, 281, 281, 278, 279, 279, 276,
	275, 275, 275, 423, 423, 422, 422, 422, 217, 217,
	23, 271, 271, 273, 274, 274, 265, 265, 265, 265,
	27, 269, 269, 270, 270, 270, 270, 270, 266, 266,
	268, 268, 264, 264, 264, 264, 264, 26, 263, 263,
	261, 261, 259, 259, 260, 260, 258, 258, 258, 262,
	262, 25, 25, 25, 92, 91, 91, 91, 201, 201,
	200, 200, 93, 338, 338, 302, 302, 303, 303, 303,
	306, 306, 318, 318, 319, 319, 317, 317, 324, 324,
	323, 323, 322, 322, 321, 321, 320, 320, 320, 320,
	315, 315, 314, 314, 304, 304, 304, 304, 304, 305,
	305, 305, 313, 313, 316, 316, 160, 160, 161, 161,
	161, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	386, 386, 387, 163, 163, 163, 167, 167, 167, 167,
	167, 167, 162, 162, 164, 164, 144, 144, 142, 142,
	137, 137, 138, 138, 139, 139, 140, 140, 141, 141,
	141, 141, 141, 141, 288, 288, 384, 384, 385, 385,
	380, 380, 380, 383, 383, 383, 383, 383, 382, 382,
	145, 196, 196, 196, 218, 218, 218, 195, 195, 195,
	159, 159, 158, 158, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 287,
	287, 233, 233, 234, 234, 176, 175, 175, 175, 175,
	175, 173, 174, 172, 172, 172, 172, 172, 171, 171,
	170, 170, 170, 267, 267, 168, 168, 166, 166, 166,
	165, 165, 165, 325, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 242, 242,
	247, 247, 395, 395, 394, 146, 146, 146, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 155, 155, 155,
	310, 310, 310, 310, 310, 311, 311, 311, 308, 308,
	309, 309, 251, 252, 252, 343, 343, 307, 307, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 350, 350, 350, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 407, 407, 407, 391, 391, 391, 392, 392, 392,
	392, 392, 392, 392, 392, 392, 392, 392, 392, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 193, 193, 193, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 253, 253, 254, 254, 347, 347, 347, 347, 347,
	347, 348, 348, 349, 349, 349, 349, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 240, 190, 190, 190,
	255, 248, 248, 249, 249, 243, 243, 243, 243, 243,
	243, 243, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 244, 244, 246, 246, 257, 257, 257, 256,
	256, 256, 256, 256, 256, 256, 157, 157, 157, 157,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 148, 148, 148, 148, 152, 152, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 153, 153, 153, 153, 151, 151, 151, 151, 151,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 82, 83, 83, 150,
	197, 197, 326, 326, 329, 329, 327, 327, 328, 330,
	330, 330, 331, 331, 331, 332, 332, 332, 334, 334,
	203, 203, 203, 210, 210, 202, 202, 211, 211, 212,
	212, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	6, 8, 10, 9, 10, 2, 0, 2, 1, 3,
	3, 3, 1, 3, 5, 0, 2, 3, 1, 3,
	1, 1, 1, 3, 1, 1, 1, 1, 0, 3,
	3, 0, 3, 3, 0, 1, 3, 0, 1, 3,
	0, 2, 1, 2, 3, 4, 3, 3, 1, 0,
	1, 1, 0, 1, 8, 5, 7, 0, 3, 8,
	5, 1, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 4, 1, 3, 1, 2,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 2,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 4, 6, 1, 1, 1, 2,
	4, 6, 1, 4, 1, 3, 3, 4, 4, 4,
	3, 3, 2, 4, 4, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 1, 1,
	2, 2, 0, 1, 4, 2, 4, 1, 5, 3,
	2, 1, 2, 2, 4, 4, 5, 2, 1, 3,
	4, 4, 1, 2, 9, 7, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 2, 4,
	3, 3, 1, 1, 1, 1, 1, 2, 3, 4,
	7, 2, 3, 3, 4, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	2, 1, 1, 1, 1, 6, 1, 1, 1, 9,
	7, 0, 4, 7, 0, 3, 0, 2, 0, 1,
	1, 1, 1, 4, 2, 2, 3, 3, 4, 5,
	3, 4, 4, 2, 2, 2, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 2, 5, 5, 0, 2, 7, 0, 1, 0,
	1, 5, 3, 2, 4, 4, 4, 4, 4, 1,
	1, 1, 3, 2, 3, 1, 1, 1, 6, 8,
	0, 1, 1, 1, 1, 5, 5, 0, 1, 1,
	3, 3, 3, 6, 7, 4, 4, 7, 8, 0,
	2, 0, 2, 2, 1, 1, 1, 1, 0, 1,
	4, 4, 5, 1, 3, 1, 1, 3, 5, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 1, 3, 1, 4, 6, 4, 4,
	4, 3, 6, 1, 1, 2, 2, 11, 8, 9,
	1, 3, 2, 4, 0, 2, 0, 1, 1, 1,
	1, 0, 1, 0, 1, 4, 2, 1, 5, 4,
	4, 2, 5, 0, 4, 1, 3, 3, 1, 5,
	6, 5, 5, 3, 0, 5, 0, 1, 3, 3,
	1, 3, 1, 3, 1, 3, 4, 0, 1, 0,
	1, 1, 3, 1, 1, 0, 4, 1, 3, 2,
	1, 0, 8, 0, 4, 7, 4, 0, 2, 0,
	2, 0, 2, 0, 4, 1, 3, 1, 1, 4,
	3, 4, 5, 4, 5, 2, 3, 1, 3, 6,
	0, 3, 0, 1, 2, 4, 4, 0, 1, 3,
	1, 3, 3, 0, 1, 1, 0, 2, 2, 3,
	3, 3, 1, 3, 3, 3, 3, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 7,
	7, 1, 1, 1, 0, 1, 1, 1, 1, 0,
	2, 0, 3, 0, 2, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	4, 4, 3, 2, 2, 2, 3, 2, 3, 4,
	1, 3, 4, 0, 2, 1, 1, 2, 2, 0,
	1, 2, 4, 1, 3, 1, 3, 2, 3, 1,
	4, 3, 0, 1, 1, 2, 5, 2, 2, 2,
	0, 2, 3, 3, 0, 1, 3, 1, 3, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 7, 1, 1,
	12, 1, 3, 0, 1, 1, 3, 1, 1, 2,
	4, 1, 1, 9, 0, 1, 7, 1, 4, 1,
	1, 3, 4, 3, 0, 1, 1, 0, 2, 7,
	1, 0, 2, 2, 1, 3, 2, 1, 3, 2,
	1, 3, 2, 0, 1, 3, 4, 3, 1, 1,
	4, 1, 3, 1, 1, 1, 0, 1, 1, 1,
	11, 0, 2, 3, 2, 3, 1, 1, 1, 3,
	3, 4, 0, 2, 2, 2, 2, 5, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 11, 9, 11, 2, 2, 4, 5, 1, 3,
	0, 3, 5, 0, 1, 0, 6, 0, 3, 5,
	0, 4, 0, 3, 1, 3, 4, 5, 0, 3,
	1, 3, 2, 3, 1, 2, 0, 4, 6, 5,
	0, 2, 0, 2, 4, 5, 4, 5, 1, 5,
	6, 5, 0, 3, 0, 1, 0, 1, 1, 3,
	2, 3, 3, 4, 4, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 4,
	1, 3, 3, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 1, 2, 1, 7, 7,
	7, 7, 8, 5, 0, 1, 0, 1, 1, 1,
	1, 3, 3, 1, 1, 1, 1, 1, 0, 1,
	3, 1, 3, 5, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 2, 1, 2, 2, 1, 1, 2,
	2, 2, 2, 2, 1, 5, 6, 4, 1, 1,
	2, 0, 1, 1, 2, 5, 0, 1, 1, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 2, 2, 0, 3, 0, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	3, 5, 2, 2, 2, 2, 1, 1, 2, 5,
	6, 4, 6, 6, 1, 1, 1, 1, 0, 2,
	0, 1, 1, 2, 4, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 2, 2, 2, 0, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 2, 5,
	0, 1, 3, 0, 1, 0, 2, 0, 6, 7,
	6, 5, 5, 6, 6, 6, 6, 5, 6, 6,
	6, 6, 6, 6, 6, 6, 1, 1, 1, 4,
	4, 6, 8, 6, 4, 5, 4, 6, 6, 7,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 8, 4,
	2, 3, 2, 4, 6, 2, 2, 4, 6, 4,
	2, 0, 1, 2, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 1,
	3, 0, 1, 1, 3, 3, 3, 3, 3, 2,
	1, 1, 3, 4, 3, 4, 3, 4, 3, 4,
	3, 4, 1, 3, 4, 4, 5, 3, 4, 5,
	6, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 1, 2, 3, 5, 1,
	1, 3, 0, 1, 0, 3, 0, 3, 3, 0,
	3, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -433, -2, -1, -3, -85, -4, -81, -5, -6,
	-8, -64, -76, -78, -80, -79, -31, -7, -75, -57,
	-58, -60, -66, -71, -72, -73, -74, -86, -82, -83,
	-84, -94, -87, -24, -23, -22, -21, 395, 12, 441,
	-9, -10, -396, -11, 231, -221, -222, -223, -225, -434,
	-32, -33, -34, -39, -40, -41, -42, -51, -52, -53,
	-35, -36, -37, -38, -44, -45, -46, -47, -48, -49,
	-50, -55, -54, -56, 207, -59, 61, -61, -62, -63,
	-67, -68, -69, -70, 326, 332, 385, 394, 522, 523,
	46, -95, -97, 524, -25, -26, -27, -28, -29, -30,
	203, 14, 474, -12, -15, -13, -16, -14, -19, -20,
	-18, -17, 226, 225, 37, 289, 290, 291, 330, 224,
	204, 13, 135, 136, 138, 139, 30, -96, 67, 205,
	-98, 10, 526, 434, 525, -104, 38, -142, -218, 70,
	-206, -209, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 444, 307,
	308, 471, 243, 267, 356, 270, 277, 135, 154, 148,
	176, 168, 143, 247, 282, 248, 77, 138, 427, 87,
	406, 382, 141, 262, 264, 266, 269, 249, 164, 159,
	261, 245, 522, 157, 250, 39, 251, 181, 252, 253,
	476, 402, 306, 408, 274, 380, 158, 403, 265, 405,
	183, 187, 419, 332, 152, 153, 410, 421, 180, 223,
	42, 473, 235, 422, 185, 179, 175, 430, 278, 276,
	178, 151, 174, 246, 50, 189, 188, 190, 376, 377,
	378, 379, 254, 255, 320, 418, 171, 160, 311, 144,
	22, 425, 230, 407, 333, 256, 271, 279, 184, 186,
	237, 242, 475, 384, 241, 275, 423, 156, 234, 263,
	229, 426, 145, 326, 335, 257, 139, 268, 420, 429,
	49, 348, 150, 142, 220, 136, 239, 244, 11, 258,
	259, 260, 281, 280, 272, 172, 236, 177, 162, 149,
	173, 137, 238, 428, 349, 520, 309, 365, 170, 167,
	240, 213, 424, 409, 140, 369, 350, 165, 283, 517,
	518, 519, 321, 305, 284, 285, 163, 227, 401, 286,
	288, 375, 298, 351, 383, 357, 352, 196, 292, -104,
	-59, -10, -9, -96, -97, -142, 211, -226, 23, 380,
	-65, 381, 207, 67, -218, -5, -4, -81, -57, -94,
	-224, -218, 289, 289, -224, 211, -218, 241, 364, -336,
	216, -297, -271, 242, -296, -273, -299, -274, 31, 203,
	205, 204, 238, 14, 330, 212, 12, 10, 331, 224,
	24, 25, 27, 13, 332, 334, 28, 335, 338, 339,
	340, 41, 343, 344, 231, 70, 73, 249, -136, -218,
	249, -249, -243, 94, 232, -245, -238, -239, -241, -376,
	-370, -237, 67, 119, 120, 127, 95, -240, -325, 35,
	97, 481, 130, 442, -191, -192, -193, -194, -218, -371,
	-369, 73, 78, 81, 84, 85, 83, 82, 161, 80,
	74, 131, 132, -97, 70, -391, 489, -207, 510, 509,
	46, -341, -349, 210, -347, 166, 227, 162, 12, 125,
	375, 163, 486, 506, 444, 490, 513, 483, 484, 478,
	479, 480, 482, 491, 493, 505, -350, 501, 511, 512,
	499, 72, 71, 504, 503, 492, 487, 488, 494, 477,
	485, 495, 496, 502, 507, 508, 314, 87, 315, 316,
	434, 310, 317, 216, 380, 55, 318, 319, 320, 321,
	322, 441, 323, 56, 324, 313, 231, 365, 325, 165,
	182, 446, 445, 447, 438, 435, 433, 436, 437, 439,
	440, 497, 498, 500, -293, -291, -218, -88, -89, 515,
	-113, -114, -184, 19, 6, 7, 8, 9, -431, 382,
	475, 292, 327, -338, 307, 365, 241, -265, -263, 286,
	282, 341, 221, 220, 88, 434, 210, -408, -409, 200,
	201, 202, -398, 467, -397, -218, 316, 26, 211, 327,
	412, 413, 414, 416, 415, 417, -43, -351, -335, 409,
	408, -230, 407, 400, 411, 402, 203, 468, -203, 351,
	383, 237, 431, 432, 328, 384, 419, 420, 403, 87,
	169, 166, -338, 307, 365, -408, 140, 137, -284, 140,
	93, 145, 144, -284, 241, 364, 40, -290, 375, -289,
	-291, 419, 420, 430, 71, 72, 418, -203, 87, -114,
	-184, -113, -95, -97, -84, -396, 307, 365, 241, 212,
	211, 213, 434, 289, 327, -337, -404, 31, -342, 197,
	198, 199, 32, 33, -1, -219, -216, -209, 70, 71,
	72, 73, -120, 233, -142, 133, -120, -114, -113, -114,
	-142, -195, -218, 382, 103, -65, -65, 381, -399, -400,
	-401, -403, 207, 381, 380, 133, 15, -224, -224, 65,
	-142, -273, 241, -297, -271, 35, 64, 134, 214, 134,
	64, 67, 328, 307, 365, 329, 434, 211, 341, 213,
	241, 342, 307, 365, 211, 213, 434, 241, 307, 211,
	213, 365, 241, 342, 400, 401, 213, 26, 333, 336,
	337, 401, -355, 430, -355, 134, 93, 90, 91, 92,
	-243, 110, -256, 103, 104, 105, 106, 107, 108, 109,
	116, 115, 126, 119, 120, 121, 122, 123, 124, 125,
	117, 118, 113, 94, 111, 112, 96, -97, -243, -249,
	46, -241, -241, -241, -241, -325, -247, -243, 67, 67,
	67, 133, 73, -243, 67, 67, 67, 67, 67, 67,
	67, 67, -348, 67, 67, -253, -254, 67, 67, 73,
	73, 67, 67, 67, 73, -254, -254, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 134, -148, -152, -149, -151, -150,
	-154, -153, 166, 167, 130, 170, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 30, 182, 227, 162,
	163, 164, 165, 183, 148, 168, 472, 191, 149, 192,
	150, 193, 151, 194, 152, 153, 195, 154, 157, 158,
	159, 156, 133, -114, 134, 67, -90, 38, -116, 21,
	-98, -97, 20, 31, 32, 31, 32, 31, 32, 31,
	32, 78, -135, -218, -128, -218, -406, 211, 467, -261,
	216, -261, -261, 212, -261, 211, 211, -410, 147, 134,
	-398, -119, 67, -229, 111, 23, 239, 239, 276, -435,
	-436, 15, 113, -227, -436, -227, -227, -229, -437, 212,
	410, 42, 240, 239, -115, -116, -115, 404, 401, -312,
	405, 406, -230, -229, -229, -230, 211, 213, 434, -435,
	239, -435, 30, 30, -406, -336, -336, -411, 215, 423,
	474, 143, 144, 145, -273, 241, 241, 134, 103, 23,
	-292, 103, 114, -291, -291, -291, -292, -292, -162, 40,
	-217, 130, -218, 73, -162, 40, -115, -98, -97, 68,
	68, 68, -336, -336, -336, -336, -336, -336, -336, -224,
	-128, -99, -100, 121, -243, -218, -99, 38, 401, 38,
	-344, -123, -94, 308, 67, 67, -218, -345, 46, -94,
	67, 30, -115, -90, -116, 133, 78, 73, -65, 68,
	134, -402, 84, 85, -405, 180, 172, -218, -77, 73,
	-3, -4, -5, -6, -31, -57, -94, -372, -370, 67,
	31, 374, 64, 15, -298, 211, 434, 327, 237, 213,
	307, -296, -280, -277, -275, -217, -273, -276, -275, -301,
	-195, 401, -91, 386, 288, -91, -243, -243, -243, -243,
	-243, 83, 94, 305, 84, 85, -238, -257, 31, 284,
	285, -239, -239, -239, -239, -239, -239, -239, -239, -239,
	-239, -239, -239, -246, -255, -325, 67, 113, 111, 112,
	96, -241, -239, -239, 68, 134, -395, -394, 98, -243,
	-243, -243, -218, -392, -393, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 318, 313, 319, 317,
	310, 325, 320, 321, 165, 465, 466, 459, 460, 461,
	462, 463, 464, -248, -249, -248, -243, -392, -248, -190,
	32, 31, -243, -407, 303, 302, 304, -117, -218, -248,
	68, 68, 68, 78, -249, -248, -239, -248, -393, -190,
	-190, -249, -249, -190, -190, -190, -190, 121, -190, -190,
	-190, -190, -190, -190, -190, -190, -291, 40, -332, 349,
	348, -326, -328, 67, -327, 67, -327, -326, -326, 67,
	67, -329, 67, -329, -329, -326, -330, 67, -330, -331,
	67, -330, -218, -115, -89, -353, -352, -243, 40, 516,
	-90, -243, -112, -111, -243, -432, 73, 34, 67, 133,
	213, -261, -413, -218, 94, -281, -278, -275, -271, -216,
	-218, -261, -261, -411, -397, 34, -118, -218, -180, 16,
	-241, -275, 241, -435, -229, -205, -204, -218, -231, -436,
	-226, -231, -231, -180, -436, -229, -229, -231, -227, 401,
	-180, -180, -312, -228, -218, -228, -261, -205, -205, 213,
	-413, -281, -107, -102, -106, -103, -108, -183, -185, -105,
	67, -142, -97, -218, 424, 425, 141, 144, 143, 31,
	374, -295, 374, 31, -271, -289, -285, 73, 375, -276,
	-294, 64, 130, -352, -292, -292, -292, -294, -294, 129,
	-90, -413, -280, -271, -218, -144, -142, -144, -219, 67,
	-179, 134, -178, 15, -213, -218, 34, 73, 133, -179,
	73, -144, 73, -430, 64, 46, 30, 67, -122, 68,
	-117, -121, -218, -346, -250, -390, 515, -122, 68, -388,
	-389, -117, -90, -90, -211, -212, -202, -208, -215, -216,
	-209, 208, 31, 93, 34, 36, 314, 346, 96, 130,
	20, 97, 166, 129, 316, 442, 315, 203, 59, 445,
	447, 446, 435, 433, 367, 371, 373, 370, 434, 400,
	40, 14, 37, 225, 32, 33, 123, 205, 100, 101,
	228, 35, 226, 85, 44, 23, 62, 15, 17, 18,
	317, 366, 216, 215, 113, 386, 212, 57, 12, 132,
	38, 110, 368, 53, 89, 45, 55, 111, 21, 436,
	437, 41, 385, 394, 470, 232, 125, 318, 319, 60,
	94, 374, 83, 43, 64, 90, 19, 58, 112, 206,
	441, 56, 372, 322, 324, 334, 467, 323, 210, 411,
	10, 313, 443, 30, 224, 54, 211, 99, 214, 84,
	231, 6, 88, 13, 61, 65, 438, 439, 440, 46,
	98, 16, 325, 474, 387, 388, 389, 390, 391, 392,
	393, 191, 192, 193, 194, 195, 273, 219, 217, 221,
	222, 515, 516, 197, 198, 302, 304, 169, 200, 201,
	202, 233, 147, 7, 353, 354, 355, 358, 359, 360,
	361, 362, 363, 364, 523, 395, 396, 397, 398, 399,
	412, 413, 414, 415, 416, 417, 209, 23, -65, -400,
	133, 134, -118, -298, -279, -276, -300, 121, 70, -286,
	134, 474, 527, 71, 214, -423, -422, 366, 68, 134,
	-356, 215, 441, 73, 528, 196, -356, 83, 305, 84,
	85, -325, -249, -246, -241, -239, -239, -244, 228, 93,
	-243, -242, -394, 100, -243, 34, 68, 134, 65, 133,
	68, 68, 15, 15, 68, -243, 68, 15, 15, -243,
	68, 133, 68, 68, 68, 65, 68, 134, 68, 134,
	-249, -243, 68, 68, -243, -243, -243, -249, 68, -243,
	-243, -243, -243, -243, -243, -243, -243, -243, -334, 350,
	78, 78, -197, 73, -197, 78, 78, 78, 134, 68,
	73, 134, 22, 134, -109, 36, 37, -136, -129, -130,
	-131, -132, -148, -195, 167, 170, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 227, 162, 163, 164,
	165, 183, 148, 168, 149, 150, 151, 152, 153, 154,
	157, 158, 159, 156, -218, -261, -142, -416, 353, 35,
	-424, 134, 40, -422, -264, 65, -259, -260, -258, -262,
	40, -142, -142, 15, -101, -143, -218, 67, 68, 134,
	-243, -272, 65, -274, -205, -180, -219, -142, -218, -180,
	-180, -229, -231, -231, -227, 133, -204, -336, -417, 353,
	-424, 30, -186, -187, -188, -189, 53, 57, 59, 54,
	55, 56, 60, 30, 134, -214, -220, 34, -215, 73,
	-216, -209, -214, -97, -102, -107, -214, 67, 142, 145,
	145, 144, 214, 67, 103, -294, -294, -294, 40, -217,
	64, 134, -129, -180, -100, -102, -218, 73, -218, 121,
	-180, -169, 518, 38, -359, 405, 39, -346, -388, -124,
	-413, 68, 134, -123, 308, 68, 134, 134, 67, 68,
	46, 134, 103, 133, 382, -218, -370, 68, -300, 134,
	214, 133, 133, -277, 332, -217, -279, 20, 474, -195,
	38, -201, -200, 73, 528, 38, 68, -244, 93, -241,
	-238, 68, 101, -243, 99, -146, -148, 348, 349, -147,
	-153, 130, 166, 227, 165, 164, 162, 348, 349, -162,
	-218, -243, -243, 68, -243, -243, 15, -218, -162, -239,
	-243, -343, 443, 68, -307, 396, -307, 68, 68, 68,
	68, -307, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 134, 68, 68, 68, 134, 68, 134,
	-352, -359, -243, -243, -111, -110, 43, 340, 68, 134,
	-148, -142, 67, -419, 407, 355, -210, 103, -236, -235,
	309, 41, -339, 375, 361, 362, -278, 241, 64, 297,
	298, 299, 300, -258, -203, 129, 252, 67, 67, -142,
	-101, -218, 15, 134, -412, 133, -1, -218, -271, -229,
	-180, -436, -180, -229, -229, -231, -218, -142, -419, -210,
	-236, -283, -282, -195, -106, -106, -106, -106, 53, 53,
	53, 58, 53, 58, 53, -188, -283, -108, -119, -220,
	68, -429, -428, -427, -425, 61, 215, 62, -248, 145,
	-279, -232, 73, -285, -142, -142, 68, -182, 17, 133,
	-182, 78, 73, -367, 392, 387, 389, 89, 68, 134,
	-123, -117, 46, 67, -218, -250, -354, -353, 46, -94,
	-346, -389, -352, -211, -208, -216, -209, 78, 15, -276,
	-271, 121, 121, 70, 333, -286, 73, 354, 73, 211,
	529, 134, 103, -201, 211, -238, -243, 68, -155, 153,
	152, -155, 68, -326, -327, -326, -329, -326, -155, -155,
	68, 68, 23, 68, 68, 68, -243, 68, 68, 134,
	68, 73, -307, 67, -307, -307, -307, -307, -307, -307,
	-307, -307, -307, -307, -307, -307, 73, 78, 78, -367,
	44, 45, 73, 209, -131, 40, -119, -137, -138, -139,
	-145, -140, -195, -234, -141, 219, 217, 221, -385, 88,
	222, 273, 89, 212, -420, 77, -414, 73, -218, -421,
	77, 356, 132, 311, 40, 357, 358, 372, 306, 78,
	78, 363, -415, 70, -142, -210, -210, -210, -137, -137,
	-120, 65, 133, -102, -143, -218, 121, 68, -180, -218,
	-180, -180, -229, -119, -420, -414, -421, -180, 134, 103,
	-126, -125, 64, 65, -127, 64, -125, 53, 53, -180,
	-427, -426, 23, -385, -385, -385, 68, 68, -181, 18,
	20, 121, -181, -169, -333, 517, -363, -365, 387, 20,
	20, 13, -94, -413, 46, -94, -346, -124, 68, -346,
	-271, -286, 375, -142, -200, 73, 529, -142, -243, 68,
	-243, -307, -252, -251, 233, 68, 68, -333, -133, -148,
	-237, 34, 68, 134, -148, -141, -218, 89, -384, -385,
	-261, -384, 89, 67, 73, -418, 366, 73, 73, 78,
	40, 78, 132, 359, -340, 67, -162, -164, -217, 130,
	73, 68, 68, -214, -102, -218, -180, -412, 133, -180,
	-180, 34, -418, -114, -282, -352, -243, 67, -243, 67,
	53, 19, 17, -243, -249, -169, 73, 20, 73, -361,
	73, -388, -346, 68, -123, -93, -357, -312, 68, 68,
	-114, 20, -169, 473, -94, -160, -161, -177, 346, 243,
	-262, 247, 77, 248, 382, 249, 212, 251, 252, 253,
	223, 254, 255, 256, 375, 257, 258, 259, 260, 329,
	6, 293, -139, -159, -158, -156, 83, 94, 40, 346,
	-157, 77, 129, 266, 244, 267, -176, -233, 64, 352,
	217, 88, 89, 334, -234, -380, -382, -218, -382, -218,
	-380, -380, -261, -243, 20, 474, 310, 40, 78, 40,
	360, -266, -268, -195, 67, -92, -91, -160, -180, -180,
	-94, -115, -118, -381, -218, 217, 20, 20, -198, 519,
	73, 389, -93, -366, 392, -360, -358, 387, 388, 389,
	390, -309, -308, -311, 393, 275, 399, -249, -198, -134,
	-218, -302, 233, 134, -177, -210, -210, -203, 129, -210,
	-210, -210, -210, 250, 250, -210, -210, -210, -210, -210,
	-210, -210, -210, -210, -210, -210, -210, -210, -210, 67,
	-156, 83, -239, 73, -164, -165, 40, 265, 261, -166,
	40, 245, 246, -168, 67, 273, 13, 89, 89, -142,
	67, 65, 283, 67, 67, 67, -382, 68, 73, 354,
	73, 310, 68, 134, -326, -243, -93, -302, -114, 68,
	68, 134, 67, 20, -368, 215, -364, -365, 391, -358,
	20, 389, 20, 20, 68, -310, 96, 359, 363, -243,
	34, -303, 282, 20, -177, 78, 78, -210, -210, 78,
	73, 73, 73, -210, -210, 78, 73, -220, 78, 78,
	78, 78, 40, 73, -167, 40, 261, 265, 262, 263,
	264, 78, 40, 78, 40, 78, 40, -218, 67, -386,
	-387, 73, 78, 67, -347, -267, 67, -266, -383, 297,
	298, 299, 301, 300, -383, -266, -266, -266, 67, -288,
	-287, 274, 94, 375, -269, -268, -109, 68, -303, -115,
	-218, 217, -199, -218, -361, -375, 67, 78, -363, -362,
	-364, 20, -361, 20, -361, -361, -310, 515, 397, 398,
	397, 398, 73, 20, -304, 275, 276, -305, -316, 278,
	-162, -162, 73, 73, -163, 244, -144, 68, 134, 103,
	68, -243, -253, -171, -170, 470, -266, 68, 68, 68,
	68, -266, 274, -270, 223, 77, 474, 295, 296, -109,
	68, 134, -379, 30, 68, -374, -373, -196, -369, -218,
	392, 393, 73, -361, 93, -195, 67, -314, 279, 67,
	-312, 67, -312, 89, 298, 245, 246, 68, -387, 73,
	68, -175, -173, -174, 64, 403, 271, 272, 68, -269,
	-269, -269, -269, 68, -210, 73, 294, -218, -378, -377,
	-376, 68, 134, 133, -310, -301, -306, 280, 78, -239,
	67, -239, 67, -313, 277, 67, -287, -174, 64, -173,
	64, 14, 13, -176, 78, -216, 134, 103, -373, -218,
	68, -318, 67, 20, 68, -301, 68, -301, 67, 103,
	-239, -172, 268, 269, 30, 144, -172, -377, 40, -243,
	133, -319, -317, 233, -305, 68, 68, 68, -301, 78,
	68, 83, 40, 270, -218, 68, 134, 70, -315, 281,
	68, -317, -320, 46, 78, -324, -321, 67, -177, 235,
	113, -324, -177, -323, -322, 280, 236, 67, 68, 134,
	70, 232, 67, -249, -322, -321, -249, 68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 667, 668, 669, 670, 0, 0, 0,
	433, 434, 0, 411, 0, 0, 0, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 325, 326, 327, 328,
	329, 330, 331, 332, 333, 334, 335, 336, 337, 338,
	339, 286, 287, 288, 0, 232, 228, 207, 208, 209,
	168, 169, 170, 171, 296, 0, 0, 0, 0, 0,
	0, 517, -2, 35, 671, 672, 673, 674, 675, 676,
	-2, 446, 0, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 275, 276, 277, 271, 272, 274, 273, -2,
	783, 446, 221, 0, 212, 212, 0, 537, 0, 0,
	552, 574, 33, 0, 0, 495, 0, 500, 878, 914,
	915, 916, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637,
	1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 495,
	233, 435, 436, 537, 537, 409, 0, 257, 0, 1543,
	261, 0, 0, 0, 406, 252, 253, 254, 255, 256,
	0, 659, 0, 0, 248, 0, 227, 1602, 0, 0,
	0, 0, 0, 0, 112, 731, 114, 733, 118, 125,
	0, 0, 130, 131, 134, 135, 136, 137, 138, 0,
	142, 0, 144, 147, 0, 149, 150, 0, 153, 154,
	155, 0, 165, 166, 167, 734, 735, -2, 45, 679,
	92, 1286, 1183, 0, 1190, 1191, 1202, 1211, 986, 987,
	988, 989, 0, 0, 0, 0, 0, 996, 997, 0,
	1010, 1691, 0, 0, 1004, 1005, 1006, 1007, 52, 64,
	65, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 0, 1156, 973, 914, 0, 1699, 0, 1719, 1718,
	0, 0, 1141, 0, 1131, 0, -2, -2, 0, 0,
	1669, -2, 1696, 1715, 1723, 1700, 1722, 1693, 1694, 1688,
	1689, 1690, 1692, 1701, 1703, 1714, 0, 1710, 1720, 1721,
	0, 66, 67, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1147, -2, 1149, 1150,
	1152, 1153, 1154, 1155, -2, 1158, 1159, 1160, -2, -2,
	1163, 1164, 1165, 1166, 1167, 1168, 1171, -2, 1173, -2,
	1175, 1143, 1144, 1145, 1146, 1135, 1136, 1137, 1138, 1139,
	1140, -2, -2, -2, 0, 205, 203, 537, 610, 0,
	-2, 0, 0, 0, 557, 560, 563, 566, 0, 36,
	37, 0, 0, 694, 760, 760, 760, 0, 760, 0,
	0, 784, 737, 738, 739, 758, 759, 451, 447, 448,
	449, 450, 525, 0, 527, 530, 389, 341, 0, 0,
	0, 353, 347, 0, 0, 0, 389, 0, 0, 532,
	532, 0, 398, 389, 389, -2, 0, 359, 360, 361,
	347, 0, 347, 365, 366, 367, 378, 379, 399, 1310,
	0, 0, 694, 296, 296, 453, 222, 223, 211, 213,
	0, 217, 0, 210, 1602, 0, 0, 179, 1669, 184,
	0, 1550, 1616, 1565, 0, 0, 1583, 0, -2, 532,
	0, 538, 0, 537, 0, 0, 296, 296, 296, 296,
	296, 296, 296, 0, 0, 0, 0, 575, 576, 571,
	572, 573, 577, 578, 3, 0, 660, 661, 664, 665,
	666, 0, 463, 0, 499, 0, 0, 532, -2, 0,
	410, 258, 917, 0, 0, 262, 263, 0, 0, 278,
	0, 281, 266, 267, 268, 0, 0, 250, 251, 0,
	0, 229, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 0, 122, 119, 126, 129, 139, 146, 0, 158,
	160, 163, 120, 127, 132, 133, 140, 161, 121, 123,
	124, 128, 162, 164, 141, 145, 159, 143, 148, 151,
	152, 157, 0, 93, 0, 0, 0, 0, 0, 0,
	1189, 0, 0, 1219, 1220, 1221, 1222, 1223, 1224, 1225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 1183, 0,
	0, 992, 993, 994, 995, 998, 0, 1011, 0, 0,
	0, 0, 1240, 0, 1181, 1181, 0, 1181, 1177, 0,
	0, 1181, 1120, 0, 0, 1122, 1132, 0, 0, 1125,
	1126, 1181, 0, 1181, 1130, 1116, 1117, 0, 1177, 1177,
	0, 0, 1177, 1177, 1177, 1177, 1177, 1177, 1177, 1177,
	1177, 1177, 1177, 1177, 0, 1287, 1305, 1242, 1243, 1244,
	1292, 1246, 1296, 1296, 1292, 1292, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 0, 0, 1285, 1265, 1294,
	1294, 1294, 1292, 1289, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1299, 1299,
	1302, 1299, 0, 532, 0, 0, 520, 0, 501, 0,
	554, 556, 0, 558, 559, 561, 562, 564, 565, 567,
	568, 38, 0, 678, 0, 681, 0, 760, 695, 0,
	0, 0, 0, 0, 0, 760, 760, 453, 452, 0,
	526, 0, 0, 583, 0, 0, 347, 389, 352, 349,
	348, 394, 395, 391, 0, 391, 391, 583, 0, 372,
	373, 374, 389, 389, 380, 533, 381, 382, 391, 0,
	396, 397, 0, 583, 583, 0, 0, 0, 760, 349,
	363, 349, 1311, 1312, 0, 0, 0, 0, 454, 0,
	0, 215, 0, 220, 172, 0, 0, 0, 0, 0,
	0, 201, 202, 0, 0, 0, 0, 0, 192, 195,
	872, 873, 728, 729, 196, 197, 501, 553, 555, 549,
	550, 551, 0, 0, 0, 0, 0, 0, 0, 431,
	0, 591, 585, 587, 654, 52, 591, 0, 0, 0,
	474, 0, 468, 0, 0, 0, 879, 455, 487, 457,
	0, 476, 501, 523, 501, 0, 259, 0, 264, 0,
	0, 280, 282, 283, 284, 269, 270, 407, 246, 247,
	239, 240, 241, 242, 243, 244, 245, 249, 62, 0,
	230, 231, 0, 0, 0, 106, 107, 108, 109, 110,
	111, 113, 97, 423, 425, 720, 732, 0, 723, 0,
	116, 156, 89, 0, 0, 89, 1184, 1185, 1186, 1187,
	1188, 1192, 0, 1194, 1196, 1198, 1200, 0, 1216, -2,
	-2, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 1203, 1214, 1215, 0, 0, 0, 0,
	0, 1212, 1207, 0, 990, 0, 1008, 1012, 0, 0,
	0, 0, 53, 1176, 1087, 1088, 1089, 1090, 1091, 1092,
	1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102,
	1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1114, 1115, 0, 1182, 0, 1183, 0, 0, 0,
	1178, 1179, 0, 0, 1081, 1082, 1083, 0, 482, 0,
	1142, 1121, 1133, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 0, 1308, 1306,
	1307, 1245, 1293, 0, 1270, 0, 1271, 1272, 1273, 0,
	0, 1266, 0, 1267, 1268, 1269, 1261, 0, 1262, 1263,
	0, 1264, 204, 609, 611, 0, 491, 493, 494, 0,
	521, 534, 539, 540, 543, 34, 39, 0, 683, 0,
	760, 0, 0, 697, 0, 294, 714, 0, 730, 752,
	-2, 0, 0, 0, 528, 0, 0, 623, 340, 0,
	390, 344, 1602, 349, 583, 354, 350, 405, 355, 0,
	393, 356, 357, 358, 0, 583, 583, 389, 391, 391,
	385, 386, 0, 400, 403, 401, 0, 362, 364, 296,
	291, 294, 596, 0, 597, 598, 594, 625, 649, 649,
	0, 649, 629, 878, 224, 225, 0, 0, 219, 173,
	174, 0, 176, 177, 178, 185, 180, 182, 0, 0,
	186, 198, 199, 200, 0, 0, 0, 190, 191, 0,
	519, 421, 422, 426, 0, 428, 876, 429, 430, 683,
	583, 0, 592, 0, 588, 655, 0, 657, 0, 583,
	511, 0, 503, 462, 0, 487, 476, 0, 0, 463,
	480, 0, 497, 456, 484, 0, 488, 0, 0, 461,
	477, 0, 522, 524, 918, 0, 1317, -2, 1319, -2,
	-2, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 0, 265, 279,
	0, 0, 0, 0, 100, 717, 0, 101, 105, 95,
	0, 0, 0, 722, 0, 719, 724, 0, 115, 0,
	0, 90, 91, 775, 780, 0, 0, 1193, 1195, 1197,
	1199, 1201, 0, 1204, 1212, 1208, 0, 1205, 0, 0,
	1184, 0, 1013, 0, 0, 0, 1001, 0, 0, 0,
	1069, 1070, 0, 0, 1074, 0, 1076, 0, 0, 0,
	1080, 0, 1119, 1134, 1123, 0, 1127, 0, 1129, 0,
	1045, 0, 1047, 1047, 0, 0, 0, 0, 1047, 0,
	0, 0, 0, 0, 0, 0, 0, 1288, 1241, 1309,
	0, 0, 0, 1290, 0, 0, 0, 0, 0, 612,
	503, 0, 0, 0, 546, 544, 545, 0, 0, 684,
	685, 687, 688, 0, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1535, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 682, 0, 0, 704, 1313, 761,
	298, 0, 0, 716, 0, 0, 757, -2, 764, 0,
	770, 0, 0, 0, 0, 440, 444, 33, 531, 0,
	584, 342, 0, 343, 389, 351, 392, 583, 878, 375,
	376, 583, 389, 389, 391, 0, 402, 0, 704, 1313,
	298, 0, 0, 0, 0, 0, 616, 0, 0, 615,
	0, 0, 0, 0, 0, 530, 650, 0, 652, 653,
	662, 663, 627, -2, 0, 596, 632, 1181, 226, 214,
	216, 0, 0, 0, 0, 187, 188, 189, 193, 194,
	0, 0, 0, 581, 586, 593, 656, 658, 53, 589,
	581, 40, 0, 0, 507, 0, 0, 467, 473, 0,
	465, 463, 0, 0, 0, 496, 0, 487, 489, 0,
	487, 0, 0, 0, 0, 408, 63, 285, 0, 0,
	0, 0, 0, 424, 0, 721, 97, 0, 0, 117,
	0, 0, 778, 0, 780, 0, 1180, 1206, 0, 1213,
	1209, 991, 999, 1009, 0, 0, 1015, 1027, 1027, 0,
	1018, 1292, 1296, 1021, 1292, 1294, 1292, 1027, 1027, 0,
	54, 0, 0, 1075, 0, 0, 0, 483, 0, 0,
	0, 0, 0, 1047, 1051, 0, 1052, 1047, 1047, 1047,
	1047, 1057, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,
	1298, 1297, 1283, 0, 1284, 1295, 1300, 0, 1303, 0,
	492, 507, 535, 536, 541, 542, 0, 0, 0, 0,
	689, 530, 880, 707, 705, 706, 0, 1314, 711, 299,
	300, 301, 302, 0, 0, 0, 715, 0, 0, 753,
	754, 755, 756, 765, 1313, 1313, 1313, 880, 880, 495,
	0, -2, 0, 0, 442, 0, 0, 624, 345, 583,
	368, 0, 383, 583, 583, 389, 404, 530, 707, 0,
	711, 583, 236, 0, 619, 613, 0, 602, 617, 618,
	605, 0, 607, 0, 603, 604, 583, 595, 626, 651,
	628, 631, 633, 634, 640, 0, 0, 0, 0, 218,
	175, 0, 318, 181, 427, 877, 432, 579, 0, 0,
	579, 512, 511, 509, 77, 0, 0, 0, 464, 0,
	0, 481, 487, 0, 498, 485, 0, 490, 487, 460,
	459, 478, 479, 919, 1318, 1315, 1316, 260, 0, 718,
	97, 102, 103, 104, 98, 96, 725, 0, 727, 0,
	776, 780, 0, 0, 0, 1210, 1014, 1000, 1016, 1028,
	1029, 1017, 1002, 1019, 1020, 1022, 1023, 1024, 1025, 1026,
	1003, 1071, 0, 1073, 1077, 1078, 0, 1124, 1128, 0,
	1047, 1046, 1050, 1043, 1053, 1054, 1055, 1056, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1291, 0, 0, 509,
	547, 548, 677, 0, 686, 0, 0, 0, 881, 882,
	884, 885, 0, 0, 887, 943, 0, 896, 760, 896,
	0, 0, 898, 899, 696, 0, 0, 699, 700, 709,
	0, 0, 0, 304, 305, 0, 0, 0, 317, 313,
	314, 315, 295, 710, 0, 0, 0, 0, 0, 0,
	649, 0, 0, 583, 441, 444, 445, 529, 346, 583,
	387, 384, 583, 0, 290, 0, 293, 537, 0, 0,
	599, 620, 0, 0, 600, 0, 601, 606, 608, 235,
	635, 0, 0, 637, 638, 639, 630, 183, 569, 0,
	0, 590, 570, 41, 511, 0, 508, 78, 0, 0,
	0, 476, 469, 466, 487, 472, 471, 0, 486, 458,
	99, 94, 726, 463, 779, 781, 777, 80, 0, 1079,
	0, 1049, 537, 1044, 0, 1301, 1304, 511, 0, 692,
	690, 0, -2, 0, -2, 886, 944, 908, 908, 897,
	908, 908, 760, 0, 708, 698, 0, 712, 713, 0,
	306, 307, 0, 310, 316, 0, 766, 767, 874, 875,
	768, 0, -2, 583, 583, -2, 438, 443, 0, 369,
	388, 0, 292, 532, 237, 238, 621, 0, 614, 644,
	641, 0, 0, 580, 582, 513, 510, 0, 504, 506,
	88, 475, 470, 464, 80, 43, 71, 0, 1072, 1118,
	1040, 0, 513, 0, 693, 785, -2, 828, 1313, 1313,
	0, 1313, 1313, 1313, 1313, 0, 0, 1313, 1313, 1313,
	1313, 1313, 1313, 1313, 1313, 1313, 1313, 1313, 1313, 1313,
	1313, 0, 883, 910, -2, 922, 924, 0, 0, 927,
	928, 0, 0, 0, 0, 965, 934, 0, 0, 938,
	0, 1228, 1229, 0, 942, 0, 900, 909, 0, 909,
	0, 0, 908, 0, 0, 0, 303, 308, 0, 311,
	312, 0, 748, 1292, 0, 772, 80, 785, 537, 439,
	289, 234, 0, 0, 645, 647, 642, 643, 42, 0,
	79, 0, 44, 68, 0, 81, 82, 0, 0, 0,
	0, 0, 1041, 0, 1035, 1036, 1037, 1042, 502, 0,
	691, 787, 0, 769, 830, 0, 0, 1313, 1313, 0,
	0, 0, 0, 1313, 1313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	923, 925, 926, 929, 930, 931, 970, 971, 972, 932,
	967, 968, 969, 933, 0, 0, 0, 1226, 1227, 963,
	0, 0, 0, 0, 0, 0, 0, 894, 701, 0,
	703, 309, 741, 0, 543, 0, 774, 787, 532, 622,
	636, 0, 0, 0, 55, 0, 77, 74, 0, 83,
	0, 0, 0, 0, 1048, 1038, 0, 0, 0, 0,
	0, 771, 0, 824, 829, 831, 832, 0, 0, 835,
	836, 837, 838, 0, 0, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 866, 867, 868, 869, 870,
	871, 851, 852, 853, 854, 855, 856, 863, 0, 0,
	860, 0, 0, 0, 1131, 958, 0, 0, 901, 903,
	904, 905, 906, 907, 902, 0, 0, 0, 0, 893,
	895, 939, 0, 702, 740, 749, 750, 543, 773, 437,
	646, 648, 0, 515, 505, 46, 0, 0, 72, 73,
	75, 0, 84, 0, 86, 87, 0, 1030, 1031, 1033,
	1032, 1034, 680, 0, 812, 0, 0, 818, 0, 825,
	833, 834, 839, 840, 857, 0, 0, 859, 0, 0,
	966, 0, 937, 946, 959, 0, 0, 741, 741, 741,
	741, 0, 940, 742, 1313, 0, 0, 746, 747, 751,
	514, 0, 782, 0, 56, 0, 58, 60, 61, 911,
	69, 70, 76, 85, 0, 788, 0, 790, 0, 0,
	0, 0, 0, 822, 0, 864, 865, 858, 861, 862,
	935, 945, 947, 948, 0, 960, 961, 962, 964, 888,
	889, 890, 891, 0, 0, 744, 0, 516, 47, 48,
	0, 57, 0, 0, 1039, 0, 792, 0, 813, 0,
	0, 0, 0, 0, 0, 0, 936, 949, 0, 950,
	0, 0, 0, 892, 743, 745, 0, 0, 59, 912,
	789, 786, 0, 824, 814, 0, 816, 0, 0, 0,
	0, 951, 953, 954, 0, 0, 952, 49, 50, 51,
	0, 0, 794, 0, 810, 815, 817, 819, 0, 823,
	821, 955, 957, 956, 913, 793, 0, 806, 791, 0,
	820, 795, -2, 0, 811, 796, -2, 0, 804, 0,
	0, 797, 805, 0, 800, 0, 0, 0, 799, 0,
	-2, 807, 0, 0, 801, -2, 0, 809, 808,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 526,
	104, 103, 105, 3, 527, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 528, 115, 529, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:621
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:627
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:662
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:667
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:673
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:693
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:699
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:706
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:714
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:720
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:729
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].str),
				OutFile:      yyDollar[5].str,
				MaxFileSize:  int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:738
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].str),
				Tables:       yyDollar[5].tableNamesUnion(),
				OutFile:      yyDollar[7].str,
				MaxFileSize:  int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:748
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				DumpDatabase: false,
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:769
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:781
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:794
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:801
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:805
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:811
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:815
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:821
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:828
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:837
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:841
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:845
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:850
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:854
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:858
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:864
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:873
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:884
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:888
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:894
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:898
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:904
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:908
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:914
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:938
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:957
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:961
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:965
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:970
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:974
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:981
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:989
		{
			yyVAL.str = ""
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:996
		{
			yyVAL.str = yyDollar[3].str
		}
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1001
		{
			yyVAL.str = "\n"
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1008
		{
			yyVAL.str = yyDollar[3].str
		}
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1017
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1041
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1045
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1051
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1057
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1075
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1092
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1115
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1119
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1123
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1128
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1132
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1138
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1151
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1162
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1175
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1179
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1189
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1202
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1215
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1221
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1227
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1234
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1242
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1251
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1255
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1259
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1263
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1267
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1271
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1278
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1282
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1288
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1295
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1304
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1308
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1314
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1318
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1322
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1326
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1330
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1334
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1338
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1342
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1346
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1350
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1354
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1358
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1362
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1366
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1370
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1374
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1378
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1382
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1386
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1390
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1394
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1398
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1402
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1406
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1410
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1414
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1418
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1422
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1426
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1430
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1434
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1438
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1442
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1446
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1450
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1454
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1458
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1462
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1466
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1470
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1474
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1478
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1482
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1486
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1490
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1494
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1498
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1502
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1506
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1510
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1522
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1529
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1536
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1545
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1575
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1579
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1583
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1589
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1595
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1599
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1606
		{
			yyVAL.str = yyDollar[3].str
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1612
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1616
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1622
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1630
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1639
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1647
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1655
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1678
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1701
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1708
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1715
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1723
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1730
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1737
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1746
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1750
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1754
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1760
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1764
		{
			yyVAL.str = yyDollar[1].str
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1771
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1777
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1781
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1792
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1798
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1803
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1807
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1811
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1815
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1819
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1823
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1827
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1831
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1835
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1841
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1845
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1849
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1853
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1858
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1863
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1869
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1876
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1882
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1889
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1896
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1906
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1913
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1924
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1935
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1939
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1945
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1957
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1963
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1967
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1973
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1977
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1983
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1989
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1999
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2005
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2009
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2013
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2017
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2021
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2025
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2033
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2041
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2051
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2092
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2096
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2102
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2108
		{
			yyVAL.str = yyDollar[1].str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2113
		{
			yyVAL.str = "true"
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2114
		{
			yyVAL.str = "false"
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2115
		{
			yyVAL.str = yyDollar[1].str
		}
	case 285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2120
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2132
		{
			yyLOCAL = &tree.AlterView{
				Name:      yyDollar[6].tableNameUnion(),
				ColNames:  yyDollar[7].identifierListUnion(),
				AsSource:  yyDollar[9].selectUnion(),
				Temporary: yyDollar[2].boolValUnion(),
				IfExists:  yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2144
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2155
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2161
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2172
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2183
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2187
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2192
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2196
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2201
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2205
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2221
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2225
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2229
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2233
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2237
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2241
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2245
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2249
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2253
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2257
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2261
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2265
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2269
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2273
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2277
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2281
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2287
		{
			yyVAL.item = nil
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2292
		{
			yyVAL.item = nil
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2324
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2329
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2333
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2337
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].str)}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2346
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2350
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2356
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2361
		{
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2365
		{
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2370
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2379
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2385
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2391
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2397
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2403
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2409
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2415
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2424
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2428
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2432
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2436
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2440
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2444
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2448
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2452
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2456
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2462
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2469
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2479
		{
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2481
		{
		}
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2490
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2500
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2509
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2513
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2517
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2523
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2529
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2535
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2541
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2551
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2563
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2567
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2573
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2585
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2598
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2602
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2607
		{
			yyVAL.str = ""
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2611
		{
			yyVAL.str = yyDollar[2].str
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2617
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2630
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2634
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2640
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2645
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2649
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2655
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2659
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2668
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2672
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2676
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2682
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2686
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2706
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2715
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2724
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2728
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2734
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2743
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2752
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2762
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2768
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2774
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2780
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2786
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2797
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2802
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2809
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2825
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2838
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2849
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2853
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2859
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2864
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2871
		{
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2873
		{
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2876
		{
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2885
		{
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2889
		{
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2894
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2903
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2910
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2916
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2924
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2931
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2938
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2958
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2967
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2971
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2977
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2981
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2987
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2995
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3001
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3008
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3017
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3025
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3033
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:3053
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:3057
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3076
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3080
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3084
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3090
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3099
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3103
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3109
		{
			yyVAL.str = yyDollar[1].str
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3113
		{
			yyVAL.str = yyDollar[3].str
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3119
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3123
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3129
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3134
		{
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3138
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3145
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3149
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3156
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3161
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3165
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3171
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3175
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3181
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3185
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3190
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3194
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3207
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3214
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3221
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3239
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3258
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3264
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3271
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3275
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3288
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3292
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3297
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3301
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3308
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3313
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3320
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3326
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3330
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3334
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3338
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3342
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3346
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3352
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3359
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3368
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3372
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3378
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3386
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3390
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3395
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3399
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3405
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3409
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3413
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3418
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3422
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3428
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3434
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3438
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3444
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3449
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3453
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3457
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3462
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3466
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3470
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3476
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3480
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3484
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3498
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3502
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3512
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3522
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3532
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3544
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3552
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3560
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3569
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3577
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3585
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3593
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3601
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3609
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3617
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3625
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3633
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3643
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3654
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3672
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3676
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3680
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3689
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3693
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3698
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3702
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3707
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3711
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3717
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3721
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3727
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3731
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3735
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3739
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3744
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3752
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3758
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3766
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3774
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3784
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3790
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3799
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3808
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3817
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3827
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3831
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3841
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3845
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3849
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3853
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3859
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3869
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3873
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3879
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3885
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3889
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3895
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3901
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3905
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3909
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3915
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3919
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3925
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3929
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3935
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3939
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3945
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3949
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3959
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3972
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3978
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3984
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3997
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4008
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4015
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4019
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4025
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4035
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4039
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4043
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4048
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4052
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4056
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4060
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4069
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4073
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4077
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4081
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4086
		{
			yyVAL.str = ""
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4090
		{
			yyVAL.str = yyDollar[1].str
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4094
		{
			yyVAL.str = yyDollar[2].str
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4103
		{
			yyVAL.str = ""
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4107
		{
			yyVAL.str = yyDollar[1].str
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4111
		{
			yyVAL.str = yyDollar[2].str
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4115
		{
			yyVAL.str = yyDollar[1].str
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4119
		{
			yyVAL.str = yyDollar[2].str
		}
	case 677:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4155
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4165
		{
			yyVAL.str = yyDollar[1].str
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4171
		{
			yyVAL.str = yyDollar[1].str
		}
	case 680:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4178
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4190
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4195
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4201
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4208
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4212
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4218
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4224
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4228
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4232
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4238
		{
			yyVAL.str = yyDollar[1].str
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4244
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4250
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[6].tableNameUnion(),
				ColNames:    yyDollar[7].identifierListUnion(),
				AsSource:    yyDollar[9].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4261
		{
		}
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4266
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4278
		{
			yyVAL.str = yyDollar[1].str
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4284
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4294
		{
			yyVAL.str = yyDollar[1].str
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4298
		{
			yyVAL.str = yyDollar[1].str
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4304
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4311
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4317
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4325
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4331
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4338
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4346
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4352
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4361
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4373
		{
			yyVAL.str = yyDollar[1].str
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4378
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4384
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4392
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4498
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4502
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4508
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4518
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4522
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4528
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4538
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4542
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4546
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4551
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4555
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4561
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4568
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4574
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4587
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4596
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4600
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4606
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4623
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4627
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4631
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4635
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4641
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4660
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4664
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4686
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4690
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4694
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4698
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4702
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4708
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4712
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4718
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4723
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4728
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4732
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4736
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4740
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4744
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4750
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4764
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4768
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4773
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4777
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4783
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4787
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4793
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4797
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4801
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4806
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4810
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4816
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4828
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4837
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4850
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4857
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4865
		{
			yyLOCAL = &tree.ExternParam{
				Option: yyDollar[3].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4871
		{
			yyLOCAL = &tree.ExternParam{
				ScanType: tree.S3,
				Option:   yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4880
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4884
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4889
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4893
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4900
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4911
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4915
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4920
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4924
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4934
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4938
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4945
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4956
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4965
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4969
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4975
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4979
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4985
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4994
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5004
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5008
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5014
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5018
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5024
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5031
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5040
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5044
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5049
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5053
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5058
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5062
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5067
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5071
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5081
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5085
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5096
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5104
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5112
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5120
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5131
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5140
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5150
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5160
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5164
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5169
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5173
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5178
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5182
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5188
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5192
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5196
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5202
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5206
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5210
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5214
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5218
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5222
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5226
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5230
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5234
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5238
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5242
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5246
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5250
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5254
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5258
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5262
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5266
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5270
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5274
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5278
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5282
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5286
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5290
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5294
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5298
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5302
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5306
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5310
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5314
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5321
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5325
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5331
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5336
		{
			yyVAL.str = ""
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5340
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5344
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5350
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5354
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5358
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5362
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5366
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5370
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5384
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5388
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5397
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5402
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5408
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5415
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5419
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5425
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5429
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5435
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5445
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5451
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5460
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5469
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5492
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5501
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5511
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5519
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5525
		{
			yyVAL.str = ""
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5529
		{
			yyVAL.str = yyDollar[1].str
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5539
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5545
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5551
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5565
		{
			yyVAL.str = ""
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5572
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5578
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5582
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5586
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5597
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5601
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5605
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5610
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5614
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5620
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5624
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5630
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5634
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5638
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5642
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5646
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5650
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5654
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5658
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5662
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5666
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5670
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5674
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5678
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5682
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5695
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5701
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5705
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5710
		{
			yyVAL.str = ""
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5714
		{
			yyVAL.str = yyDollar[1].str
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5720
		{
			yyVAL.str = ""
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5724
		{
			yyVAL.str = yyDollar[2].str
		}
	case 945:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5730
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5742
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5749
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5756
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5763
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5770
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5779
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5785
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5791
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5795
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5799
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5803
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5807
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5812
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5819
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5823
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5827
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5832
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5836
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5841
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5845
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5861
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5867
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5871
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5875
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5879
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5883
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5887
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5891
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5895
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5899
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5903
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5907
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5911
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5915
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5921
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5925
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5929
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5933
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5937
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5941
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5945
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5949
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5953
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5957
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5961
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5965
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5970
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5978
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5982
		{
			locale := ""
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: "BINARY",
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			})
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5994
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5998
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6007
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6011
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6015
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6019
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6024
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6028
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6037
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6043
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6047
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6053
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6063
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6080
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6097
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6110
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6123
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6135
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6149
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6164
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6179
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6196
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6211
		{
		}
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6217
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6221
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6225
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6231
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6235
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6243
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6247
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6251
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6257
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6264
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6273
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6277
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6284
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6289
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6293
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6298
		{
			yyVAL.str = ","
		}
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6302
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6307
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6311
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6321
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[7].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6332
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6342
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6351
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6360
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6370
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6380
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6390
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6400
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6410
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6420
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6430
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6440
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6450
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6460
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6470
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6480
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6497
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6505
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6513
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6521
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6529
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6538
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6546
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6555
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6563
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6571
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6580
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6589
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6611
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6647
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6659
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6671
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6681
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6689
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6696
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6703
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6715
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6723
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6734
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6743
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6752
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6760
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6770
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6778
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6788
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6792
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6798
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6802
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6821
		{
		}
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6823
		{
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6864
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6874
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6878
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6882
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6888
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6893
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6897
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6903
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6907
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6914
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6918
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6922
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6930
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6934
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6938
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6942
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6948
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6952
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6956
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6960
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6964
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6968
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6972
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6976
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6980
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6984
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6992
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6996
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7000
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7004
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7008
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7012
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7016
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7020
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7026
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7030
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7036
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7040
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7047
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7051
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7055
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7061
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7065
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7069
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7073
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7077
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7081
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7085
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7091
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7095
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7099
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7103
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7109
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7113
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7126
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7131
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7135
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7139
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7143
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7147
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7151
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7165
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7169
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7176
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7187
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7192
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7198
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7210
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7222
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7234
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7247
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7260
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7273
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7286
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7299
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7312
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7325
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7338
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7351
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7364
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7379
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7402
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7436
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7484
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7501
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7513
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7533
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7553
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7573
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7589
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7602
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7615
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7628
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7641
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7653
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7665
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7677
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7689
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7701
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7713
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7725
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7737
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7749
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7762
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7775
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7790
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7798
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7807
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7817
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7840
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7845
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7851
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7858
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7862
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7867
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7871
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7877
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7883
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7890
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7897
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7906
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7913
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7920
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7929
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7933
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7937
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7943
		{
		}
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7945
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7955
		{
			yyVAL.str = ""
		}
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7959
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
