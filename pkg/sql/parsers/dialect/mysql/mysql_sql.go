// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const VALUES = 57389
const NEXT = 57390
const VALUE = 57391
const SHARE = 57392
const MODE = 57393
const SQL_NO_CACHE = 57394
const SQL_CACHE = 57395
const JOIN = 57396
const STRAIGHT_JOIN = 57397
const LEFT = 57398
const RIGHT = 57399
const INNER = 57400
const OUTER = 57401
const CROSS = 57402
const NATURAL = 57403
const USE = 57404
const FORCE = 57405
const LOWER_THAN_ON = 57406
const ON = 57407
const USING = 57408
const SUBQUERY_AS_EXPR = 57409
const LOWER_THAN_STRING = 57410
const ID = 57411
const AT_ID = 57412
const AT_AT_ID = 57413
const STRING = 57414
const VALUE_ARG = 57415
const LIST_ARG = 57416
const COMMENT = 57417
const COMMENT_KEYWORD = 57418
const QUOTE_ID = 57419
const INTEGRAL = 57420
const HEX = 57421
const BIT_LITERAL = 57422
const FLOAT = 57423
const HEXNUM = 57424
const NULL = 57425
const TRUE = 57426
const FALSE = 57427
const LOWER_THAN_CHARSET = 57428
const CHARSET = 57429
const UNIQUE = 57430
const KEY = 57431
const OR = 57432
const PIPE_CONCAT = 57433
const XOR = 57434
const AND = 57435
const NOT = 57436
const BETWEEN = 57437
const CASE = 57438
const WHEN = 57439
const THEN = 57440
const ELSE = 57441
const END = 57442
const ELSEIF = 57443
const LOWER_THAN_EQ = 57444
const LE = 57445
const GE = 57446
const NE = 57447
const NULL_SAFE_EQUAL = 57448
const IS = 57449
const LIKE = 57450
const REGEXP = 57451
const IN = 57452
const ASSIGNMENT = 57453
const ILIKE = 57454
const SHIFT_LEFT = 57455
const SHIFT_RIGHT = 57456
const DIV = 57457
const MOD = 57458
const UNARY = 57459
const COLLATE = 57460
const BINARY = 57461
const UNDERSCORE_BINARY = 57462
const INTERVAL = 57463
const OUT = 57464
const INOUT = 57465
const BEGIN = 57466
const START = 57467
const TRANSACTION = 57468
const COMMIT = 57469
const ROLLBACK = 57470
const WORK = 57471
const CONSISTENT = 57472
const SNAPSHOT = 57473
const CHAIN = 57474
const NO = 57475
const RELEASE = 57476
const PRIORITY = 57477
const QUICK = 57478
const BIT = 57479
const TINYINT = 57480
const SMALLINT = 57481
const MEDIUMINT = 57482
const INT = 57483
const INTEGER = 57484
const BIGINT = 57485
const INTNUM = 57486
const REAL = 57487
const DOUBLE = 57488
const FLOAT_TYPE = 57489
const DECIMAL = 57490
const NUMERIC = 57491
const DECIMAL_VALUE = 57492
const TIME = 57493
const TIMESTAMP = 57494
const DATETIME = 57495
const YEAR = 57496
const CHAR = 57497
const VARCHAR = 57498
const BOOL = 57499
const CHARACTER = 57500
const VARBINARY = 57501
const NCHAR = 57502
const TEXT = 57503
const TINYTEXT = 57504
const MEDIUMTEXT = 57505
const LONGTEXT = 57506
const BLOB = 57507
const TINYBLOB = 57508
const MEDIUMBLOB = 57509
const LONGBLOB = 57510
const JSON = 57511
const ENUM = 57512
const UUID = 57513
const GEOMETRY = 57514
const POINT = 57515
const LINESTRING = 57516
const POLYGON = 57517
const GEOMETRYCOLLECTION = 57518
const MULTIPOINT = 57519
const MULTILINESTRING = 57520
const MULTIPOLYGON = 57521
const INT1 = 57522
const INT2 = 57523
const INT3 = 57524
const INT4 = 57525
const INT8 = 57526
const S3OPTION = 57527
const SQL_SMALL_RESULT = 57528
const SQL_BIG_RESULT = 57529
const SQL_BUFFER_RESULT = 57530
const LOW_PRIORITY = 57531
const HIGH_PRIORITY = 57532
const DELAYED = 57533
const CREATE = 57534
const ALTER = 57535
const DROP = 57536
const RENAME = 57537
const ANALYZE = 57538
const ADD = 57539
const RETURNS = 57540
const SCHEMA = 57541
const TABLE = 57542
const SEQUENCE = 57543
const INDEX = 57544
const VIEW = 57545
const TO = 57546
const IGNORE = 57547
const IF = 57548
const PRIMARY = 57549
const COLUMN = 57550
const CONSTRAINT = 57551
const SPATIAL = 57552
const FULLTEXT = 57553
const FOREIGN = 57554
const KEY_BLOCK_SIZE = 57555
const SHOW = 57556
const DESCRIBE = 57557
const EXPLAIN = 57558
const DATE = 57559
const ESCAPE = 57560
const REPAIR = 57561
const OPTIMIZE = 57562
const TRUNCATE = 57563
const MAXVALUE = 57564
const PARTITION = 57565
const REORGANIZE = 57566
const LESS = 57567
const THAN = 57568
const PROCEDURE = 57569
const TRIGGER = 57570
const STATUS = 57571
const VARIABLES = 57572
const ROLE = 57573
const PROXY = 57574
const AVG_ROW_LENGTH = 57575
const STORAGE = 57576
const DISK = 57577
const MEMORY = 57578
const CHECKSUM = 57579
const COMPRESSION = 57580
const DATA = 57581
const DIRECTORY = 57582
const DELAY_KEY_WRITE = 57583
const ENCRYPTION = 57584
const ENGINE = 57585
const MAX_ROWS = 57586
const MIN_ROWS = 57587
const PACK_KEYS = 57588
const ROW_FORMAT = 57589
const STATS_AUTO_RECALC = 57590
const STATS_PERSISTENT = 57591
const STATS_SAMPLE_PAGES = 57592
const DYNAMIC = 57593
const COMPRESSED = 57594
const REDUNDANT = 57595
const COMPACT = 57596
const FIXED = 57597
const COLUMN_FORMAT = 57598
const AUTO_RANDOM = 57599
const RESTRICT = 57600
const CASCADE = 57601
const ACTION = 57602
const PARTIAL = 57603
const SIMPLE = 57604
const CHECK = 57605
const ENFORCED = 57606
const RANGE = 57607
const LIST = 57608
const ALGORITHM = 57609
const LINEAR = 57610
const PARTITIONS = 57611
const SUBPARTITION = 57612
const SUBPARTITIONS = 57613
const CLUSTER = 57614
const TYPE = 57615
const ANY = 57616
const SOME = 57617
const EXTERNAL = 57618
const LOCALFILE = 57619
const URL = 57620
const PREPARE = 57621
const DEALLOCATE = 57622
const RESET = 57623
const EXTENSION = 57624
const INCREMENT = 57625
const CYCLE = 57626
const MINVALUE = 57627
const PUBLICATION = 57628
const SUBSCRIPTIONS = 57629
const PUBLICATIONS = 57630
const PROPERTIES = 57631
const PARSER = 57632
const VISIBLE = 57633
const INVISIBLE = 57634
const BTREE = 57635
const HASH = 57636
const RTREE = 57637
const BSI = 57638
const ZONEMAP = 57639
const LEADING = 57640
const BOTH = 57641
const TRAILING = 57642
const UNKNOWN = 57643
const EXPIRE = 57644
const ACCOUNT = 57645
const ACCOUNTS = 57646
const UNLOCK = 57647
const DAY = 57648
const NEVER = 57649
const PUMP = 57650
const MYSQL_COMPATIBILITY_MODE = 57651
const SECOND = 57652
const ASCII = 57653
const COALESCE = 57654
const COLLATION = 57655
const HOUR = 57656
const MICROSECOND = 57657
const MINUTE = 57658
const MONTH = 57659
const QUARTER = 57660
const REPEAT = 57661
const REVERSE = 57662
const ROW_COUNT = 57663
const WEEK = 57664
const REVOKE = 57665
const FUNCTION = 57666
const PRIVILEGES = 57667
const TABLESPACE = 57668
const EXECUTE = 57669
const SUPER = 57670
const GRANT = 57671
const OPTION = 57672
const REFERENCES = 57673
const REPLICATION = 57674
const SLAVE = 57675
const CLIENT = 57676
const USAGE = 57677
const RELOAD = 57678
const FILE = 57679
const TEMPORARY = 57680
const ROUTINE = 57681
const EVENT = 57682
const SHUTDOWN = 57683
const NULLX = 57684
const AUTO_INCREMENT = 57685
const APPROXNUM = 57686
const SIGNED = 57687
const UNSIGNED = 57688
const ZEROFILL = 57689
const ENGINES = 57690
const LOW_CARDINALITY = 57691
const ADMIN_NAME = 57692
const RANDOM = 57693
const SUSPEND = 57694
const ATTRIBUTE = 57695
const HISTORY = 57696
const REUSE = 57697
const CURRENT = 57698
const OPTIONAL = 57699
const FAILED_LOGIN_ATTEMPTS = 57700
const PASSWORD_LOCK_TIME = 57701
const UNBOUNDED = 57702
const SECONDARY = 57703
const USER = 57704
const IDENTIFIED = 57705
const CIPHER = 57706
const ISSUER = 57707
const X509 = 57708
const SUBJECT = 57709
const SAN = 57710
const REQUIRE = 57711
const SSL = 57712
const NONE = 57713
const PASSWORD = 57714
const MAX_QUERIES_PER_HOUR = 57715
const MAX_UPDATES_PER_HOUR = 57716
const MAX_CONNECTIONS_PER_HOUR = 57717
const MAX_USER_CONNECTIONS = 57718
const FORMAT = 57719
const VERBOSE = 57720
const CONNECTION = 57721
const TRIGGERS = 57722
const PROFILES = 57723
const LOAD = 57724
const INFILE = 57725
const TERMINATED = 57726
const OPTIONALLY = 57727
const ENCLOSED = 57728
const ESCAPED = 57729
const STARTING = 57730
const LINES = 57731
const ROWS = 57732
const IMPORT = 57733
const MODUMP = 57734
const OVER = 57735
const PRECEDING = 57736
const FOLLOWING = 57737
const GROUPS = 57738
const DATABASES = 57739
const TABLES = 57740
const SEQUENCES = 57741
const EXTENDED = 57742
const FULL = 57743
const PROCESSLIST = 57744
const FIELDS = 57745
const COLUMNS = 57746
const OPEN = 57747
const ERRORS = 57748
const WARNINGS = 57749
const INDEXES = 57750
const SCHEMAS = 57751
const NODE = 57752
const LOCKS = 57753
const ROLES = 57754
const TABLE_NUMBER = 57755
const COLUMN_NUMBER = 57756
const TABLE_VALUES = 57757
const TABLE_SIZE = 57758
const NAMES = 57759
const GLOBAL = 57760
const SESSION = 57761
const ISOLATION = 57762
const LEVEL = 57763
const READ = 57764
const WRITE = 57765
const ONLY = 57766
const REPEATABLE = 57767
const COMMITTED = 57768
const UNCOMMITTED = 57769
const SERIALIZABLE = 57770
const LOCAL = 57771
const EVENTS = 57772
const PLUGINS = 57773
const CURRENT_TIMESTAMP = 57774
const DATABASE = 57775
const CURRENT_TIME = 57776
const LOCALTIME = 57777
const LOCALTIMESTAMP = 57778
const UTC_DATE = 57779
const UTC_TIME = 57780
const UTC_TIMESTAMP = 57781
const REPLACE = 57782
const CONVERT = 57783
const SEPARATOR = 57784
const TIMESTAMPDIFF = 57785
const CURRENT_DATE = 57786
const CURRENT_USER = 57787
const CURRENT_ROLE = 57788
const SECOND_MICROSECOND = 57789
const MINUTE_MICROSECOND = 57790
const MINUTE_SECOND = 57791
const HOUR_MICROSECOND = 57792
const HOUR_SECOND = 57793
const HOUR_MINUTE = 57794
const DAY_MICROSECOND = 57795
const DAY_SECOND = 57796
const DAY_MINUTE = 57797
const DAY_HOUR = 57798
const YEAR_MONTH = 57799
const SQL_TSI_HOUR = 57800
const SQL_TSI_DAY = 57801
const SQL_TSI_WEEK = 57802
const SQL_TSI_MONTH = 57803
const SQL_TSI_QUARTER = 57804
const SQL_TSI_YEAR = 57805
const SQL_TSI_SECOND = 57806
const SQL_TSI_MINUTE = 57807
const RECURSIVE = 57808
const CONFIG = 57809
const DRAINER = 57810
const MATCH = 57811
const AGAINST = 57812
const BOOLEAN = 57813
const LANGUAGE = 57814
const WITH = 57815
const QUERY = 57816
const EXPANSION = 57817
const ADDDATE = 57818
const BIT_AND = 57819
const BIT_OR = 57820
const BIT_XOR = 57821
const CAST = 57822
const COUNT = 57823
const APPROX_COUNT_DISTINCT = 57824
const APPROX_PERCENTILE = 57825
const CURDATE = 57826
const CURTIME = 57827
const DATE_ADD = 57828
const DATE_SUB = 57829
const EXTRACT = 57830
const GROUP_CONCAT = 57831
const MAX = 57832
const MID = 57833
const MIN = 57834
const NOW = 57835
const POSITION = 57836
const SESSION_USER = 57837
const STD = 57838
const STDDEV = 57839
const MEDIAN = 57840
const STDDEV_POP = 57841
const STDDEV_SAMP = 57842
const SUBDATE = 57843
const SUBSTR = 57844
const SUBSTRING = 57845
const SUM = 57846
const SYSDATE = 57847
const SYSTEM_USER = 57848
const TRANSLATE = 57849
const TRIM = 57850
const VARIANCE = 57851
const VAR_POP = 57852
const VAR_SAMP = 57853
const AVG = 57854
const RANK = 57855
const NEXTVAL = 57856
const SETVAL = 57857
const CURRVAL = 57858
const LASTVAL = 57859
const ARROW = 57860
const ROW = 57861
const OUTFILE = 57862
const HEADER = 57863
const MAX_FILE_SIZE = 57864
const FORCE_QUOTE = 57865
const PARALLEL = 57866
const UNUSED = 57867
const BINDINGS = 57868
const DO = 57869
const DECLARE = 57870
const LOOP = 57871
const WHILE = 57872
const LEAVE = 57873
const ITERATE = 57874
const UNTIL = 57875
const CALL = 57876
const SPBEGIN = 57877
const BACKEND = 57878
const SERVERS = 57879
const KILL = 57880
const QUERY_RESULT = 57881

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:9460

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 110,
	21, 634,
	-2, 615,
	-1, 124,
	219, 851,
	-2, 922,
	-1, 146,
	42, 455,
	219, 455,
	246, 462,
	247, 462,
	425, 455,
	-2, 488,
	-1, 182,
	558, 1583,
	-2, 373,
	-1, 499,
	295, 130,
	400, 130,
	-2, 1497,
	-1, 562,
	68, 1303,
	-2, 1637,
	-1, 563,
	68, 1321,
	-2, 1608,
	-1, 567,
	68, 1322,
	-2, 1636,
	-1, 590,
	68, 1233,
	-2, 1698,
	-1, 591,
	68, 1234,
	-2, 1697,
	-1, 592,
	68, 1235,
	-2, 1687,
	-1, 593,
	68, 1662,
	-2, 1682,
	-1, 594,
	68, 1663,
	-2, 1683,
	-1, 595,
	68, 1664,
	-2, 1689,
	-1, 596,
	68, 1665,
	-2, 1672,
	-1, 597,
	68, 1666,
	-2, 1680,
	-1, 598,
	68, 1667,
	-2, 1690,
	-1, 599,
	68, 1668,
	-2, 1691,
	-1, 600,
	68, 1669,
	-2, 1696,
	-1, 601,
	68, 1670,
	-2, 1701,
	-1, 602,
	68, 1671,
	-2, 1702,
	-1, 604,
	68, 1300,
	-2, 1489,
	-1, 611,
	68, 1309,
	-2, 1515,
	-1, 615,
	68, 1313,
	-2, 1554,
	-1, 616,
	68, 1314,
	-2, 1632,
	-1, 624,
	68, 1324,
	-2, 1617,
	-1, 626,
	68, 1326,
	-2, 1627,
	-1, 627,
	68, 1327,
	-2, 1652,
	-1, 638,
	68, 1211,
	-2, 1692,
	-1, 639,
	68, 1212,
	-2, 1693,
	-1, 640,
	68, 1213,
	-2, 1694,
	-1, 644,
	21, 635,
	-2, 598,
	-1, 714,
	420, 488,
	421, 488,
	-2, 456,
	-1, 755,
	106, 1489,
	117, 1489,
	137, 1489,
	-2, 1464,
	-1, 855,
	21, 635,
	-2, 598,
	-1, 954,
	21, 634,
	-2, 1116,
	-1, 1295,
	68, 1371,
	-2, 1634,
	-1, 1296,
	68, 1372,
	-2, 1635,
	-1, 1428,
	69, 776,
	-2, 782,
	-1, 1753,
	69, 1450,
	138, 1450,
	-2, 1619,
	-1, 1754,
	69, 1450,
	138, 1450,
	-2, 1618,
	-1, 1755,
	69, 1428,
	138, 1428,
	-2, 1605,
	-1, 1756,
	69, 1429,
	138, 1429,
	-2, 1610,
	-1, 1757,
	69, 1430,
	138, 1430,
	-2, 1542,
	-1, 1758,
	69, 1431,
	138, 1431,
	-2, 1536,
	-1, 1759,
	69, 1432,
	138, 1432,
	-2, 1480,
	-1, 1760,
	69, 1433,
	138, 1433,
	-2, 1607,
	-1, 1761,
	69, 1434,
	138, 1434,
	-2, 1540,
	-1, 1762,
	69, 1435,
	138, 1435,
	-2, 1535,
	-1, 1763,
	69, 1436,
	138, 1436,
	-2, 1528,
	-1, 1765,
	69, 1439,
	138, 1439,
	-2, 1652,
	-1, 1766,
	69, 1419,
	138, 1419,
	-2, 1637,
	-1, 1767,
	69, 1448,
	138, 1448,
	-2, 1608,
	-1, 1768,
	69, 1448,
	138, 1448,
	-2, 1636,
	-1, 1769,
	69, 1448,
	138, 1448,
	-2, 1498,
	-1, 1770,
	69, 1446,
	138, 1446,
	-2, 1627,
	-1, 1771,
	69, 1443,
	138, 1443,
	-2, 1520,
	-1, 1772,
	68, 1401,
	69, 1401,
	138, 1401,
	362, 1401,
	363, 1401,
	364, 1401,
	-2, 1479,
	-1, 1773,
	68, 1402,
	69, 1402,
	138, 1402,
	362, 1402,
	363, 1402,
	364, 1402,
	-2, 1481,
	-1, 1774,
	68, 1405,
	69, 1405,
	138, 1405,
	362, 1405,
	363, 1405,
	364, 1405,
	-2, 1609,
	-1, 1775,
	68, 1407,
	69, 1407,
	138, 1407,
	362, 1407,
	363, 1407,
	364, 1407,
	-2, 1592,
	-1, 1776,
	68, 1409,
	69, 1409,
	138, 1409,
	362, 1409,
	363, 1409,
	364, 1409,
	-2, 1541,
	-1, 1777,
	68, 1411,
	69, 1411,
	138, 1411,
	362, 1411,
	363, 1411,
	364, 1411,
	-2, 1524,
	-1, 1778,
	68, 1412,
	69, 1412,
	138, 1412,
	362, 1412,
	363, 1412,
	364, 1412,
	-2, 1525,
	-1, 1779,
	68, 1414,
	69, 1414,
	138, 1414,
	362, 1414,
	363, 1414,
	364, 1414,
	-2, 1478,
	-1, 1780,
	69, 1453,
	138, 1453,
	362, 1453,
	363, 1453,
	364, 1453,
	-2, 1503,
	-1, 1781,
	69, 1453,
	138, 1453,
	362, 1453,
	363, 1453,
	364, 1453,
	-2, 1516,
	-1, 1782,
	69, 1456,
	138, 1456,
	362, 1456,
	363, 1456,
	364, 1456,
	-2, 1499,
	-1, 1783,
	69, 1453,
	138, 1453,
	362, 1453,
	363, 1453,
	364, 1453,
	-2, 1577,
	-1, 1796,
	89, 886,
	133, 886,
	172, 886,
	175, 886,
	259, 886,
	-2, 879,
	-1, 1909,
	21, 634,
	-2, 726,
	-1, 2087,
	89, 886,
	133, 886,
	172, 886,
	175, 886,
	259, 886,
	-2, 880,
	-1, 2099,
	66, 542,
	138, 542,
	-2, 1017,
	-1, 2121,
	280, 1084,
	-2, 1063,
	-1, 2388,
	280, 1084,
	-2, 1064,
	-1, 2521,
	89, 886,
	133, 886,
	172, 886,
	175, 886,
	-2, 965,
	-1, 2524,
	89, 886,
	133, 886,
	172, 886,
	175, 886,
	-2, 965,
	-1, 2534,
	66, 542,
	138, 542,
	-2, 1018,
	-1, 2632,
	89, 886,
	133, 886,
	172, 886,
	175, 886,
	-2, 966,
	-1, 2922,
	69, 937,
	138, 937,
	-2, 886,
	-1, 2926,
	69, 937,
	138, 937,
	-2, 886,
	-1, 2940,
	69, 941,
	138, 941,
	-2, 886,
	-1, 2945,
	69, 942,
	138, 942,
	-2, 886,
}

const yyPrivate = 57344

const yyLast = 35357

var yyAct = [...]int{
	529, 1214, 1491, 2925, 2926, 2626, 173, 2934, 508, 2905,
	1276, 510, 2816, 2864, 2856, 531, 2692, 2834, 2604, 2400,
	2599, 2775, 2664, 2776, 1731, 2759, 1089, 2763, 2743, 2625,
	2476, 2686, 2624, 2477, 645, 985, 2708, 2676, 2602, 418,
	2653, 1205, 1449, 559, 2102, 2631, 2360, 1279, 424, 2594,
	429, 429, 158, 2544, 1451, 1272, 429, 445, 452, 1139,
	2188, 452, 1549, 2504, 2189, 2174, 1835, 2412, 2389, 2181,
	2184, 512, 2474, 1992, 1641, 1751, 2462, 1610, 2210, 1838,
	2445, 1524, 2335, 2187, 1903, 2330, 2332, 1562, 2411, 2117,
	1805, 2358, 463, 2088, 1856, 849, 1749, 1741, 457, 2279,
	1991, 507, 1196, 1637, 1410, 1942, 1619, 501, 2033, 502,
	1618, 1495, 1611, 2240, 1584, 1201, 1542, 2223, 754, 760,
	1213, 1636, 1527, 1892, 1065, 2070, 1904, 691, 1525, 1478,
	2066, 1047, 2361, 1063, 2123, 6, 1836, 1804, 1487, 1959,
	1436, 1275, 169, 8, 168, 7, 1418, 804, 423, 1669,
	418, 1206, 1270, 1638, 1170, 1789, 511, 500, 1148, 2363,
	1747, 109, 2362, 35, 1078, 519, 2034, 53, 1461, 1309,
	1325, 14, 1460, 173, 1648, 173, 441, 795, 796, 1261,
	866, 1617, 1546, 1614, 1021, 1600, 502, 758, 1177, 1097,
	1269, 1574, 26, 1911, 746, 438, 15, 1435, 690, 36,
	465, 1330, 1074, 13, 1123, 1131, 642, 23, 1331, 159,
	16, 1098, 10, 1169, 1090, 451, 155, 152, 709, 688,
	747, 986, 1045, 1655, 466, 791, 2273, 793, 448, 2273,
	644, 1994, 1645, 2469, 1948, 1946, 1945, 1184, 792, 1943,
	1180, 787, 788, 788, 788, 157, 425, 1110, 509, 449,
	1182, 2592, 2236, 446, 2234, 1589, 450, 2682, 2677, 417,
	447, 2595, 2475, 1532, 1414, 721, 923, 924, 925, 922,
	2752, 434, 923, 924, 925, 922, 455, 980, 1613, 643,
	156, 156, 49, 148, 125, 1351, 2718, 156, 156, 49,
	148, 125, 653, 786, 2616, 2727, 886, 156, 461, 2617,
	8, 156, 7, 49, 148, 125, 156, 156, 1228, 1037,
	2807, 1979, 156, 428, 428, 761, 1642, 763, 2255, 436,
	2302, 764, 503, 1987, 1793, 1225, 156, 462, 1653, 1923,
	2719, 920, 1221, 1924, 2248, 1560, 646, 894, 153, 153,
	896, 1422, 1423, 108, 1246, 153, 1227, 1086, 1093, 1218,
	1351, 2852, 1092, 1095, 1096, 153, 2068, 1095, 1096, 153,
	1038, 1365, 2850, 108, 153, 153, 1960, 730, 897, 633,
	1220, 632, 634, 635, 901, 636, 637, 902, 1474, 913,
	770, 765, 769, 771, 153, 1262, 1278, 654, 1266, 918,
	2779, 2780, 735, 757, 1106, 734, 756, 1107, 1724, 2684,
	2612, 2753, 2754, 2838, 2839, 904, 2478, 775, 2241, 2067,
	2745, 768, 1265, 923, 924, 925, 922, 2687, 2688, 2689,
	2690, 2242, 2745, 2243, 2748, 2680, 2478, 1974, 429, 1281,
	860, 1543, 2758, 2487, 2505, 869, 1649, 1347, 429, 859,
	890, 1344, 2346, 2512, 858, 1346, 1343, 1345, 1349, 1350,
	1535, 2336, 1883, 1348, 452, 452, 1788, 429, 1257, 773,
	1183, 1181, 2806, 892, 2700, 2268, 776, 1597, 2266, 854,
	856, 2622, 1190, 1189, 2407, 895, 898, 899, 739, 124,
	1109, 154, 2058, 766, 889, 2344, 916, 917, 1267, 759,
	915, 2073, 798, 789, 790, 736, 1984, 2593, 794, 891,
	2235, 146, 1347, 2351, 774, 2703, 1344, 2178, 1539, 1264,
	1346, 1343, 1345, 1349, 1350, 956, 1885, 2619, 1348, 1658,
	1660, 1661, 1888, 2845, 1084, 2611, 853, 2340, 2357, 869,
	2778, 2613, 2367, 2854, 1280, 2768, 900, 2341, 2342, 2095,
	2809, 2810, 767, 2654, 2655, 2656, 2658, 2657, 496, 2420,
	2421, 498, 2343, 881, 738, 855, 497, 2715, 454, 1118,
	453, 859, 2565, 1654, 2764, 2880, 990, 2935, 1558, 1559,
	893, 2849, 2919, 911, 912, 2873, 1073, 2666, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1354,
	1355, 1356, 1357, 1358, 1359, 1352, 1353, 2818, 1287, 1290,
	1291, 2734, 2082, 2083, 2084, 2085, 761, 903, 763, 1288,
	2557, 2859, 764, 772, 448, 448, 871, 870, 1263, 862,
	863, 2814, 2815, 2338, 2818, 737, 2884, 1108, 1866, 1865,
	2548, 2427, 989, 2570, 2571, 449, 449, 2552, 1071, 446,
	446, 2079, 450, 450, 1127, 1126, 447, 447, 1643, 2491,
	1088, 1087, 2272, 879, 1354, 1355, 1356, 1357, 1358, 1359,
	1352, 1353, 1070, 1643, 1043, 424, 1046, 2159, 1643, 874,
	875, 1069, 864, 2936, 2526, 761, 1018, 763, 2906, 2709,
	2942, 764, 1670, 878, 1841, 850, 962, 788, 788, 788,
	691, 851, 788, 2930, 788, 788, 2717, 2318, 2590, 2212,
	2214, 857, 1048, 1095, 1096, 461, 2742, 1124, 2716, 1656,
	871, 870, 886, 906, 1095, 1096, 907, 1854, 1944, 1644,
	877, 1980, 2808, 1914, 1185, 1855, 1646, 1844, 1094, 1053,
	1085, 2860, 2755, 2756, 50, 1091, 429, 2271, 1120, 2347,
	1057, 1056, 1055, 2337, 909, 643, 1544, 456, 50, 418,
	418, 418, 1659, 2855, 1143, 1143, 2326, 429, 2701, 2269,
	126, 126, 2665, 958, 959, 960, 961, 126, 126, 2618,
	1657, 759, 2072, 1060, 452, 1046, 424, 126, 1173, 1173,
	2057, 126, 685, 686, 687, 1150, 126, 126, 880, 173,
	998, 999, 126, 1988, 1735, 885, 2281, 2280, 418, 1049,
	1050, 1051, 1052, 1041, 1054, 2623, 126, 1536, 1058, 1141,
	1141, 2339, 1425, 1044, 1145, 1258, 905, 731, 1840, 2929,
	1737, 1736, 1072, 1842, 1426, 2076, 2077, 926, 1734, 1082,
	1424, 1289, 655, 731, 1039, 1040, 955, 1100, 1101, 2075,
	1103, 1104, 1105, 656, 964, 1191, 1212, 2639, 1215, 2553,
	2554, 2941, 910, 1223, 2948, 1845, 2857, 2858, 2550, 2213,
	1023, 2355, 2549, 1025, 1901, 1538, 969, 1080, 1081, 1744,
	779, 784, 785, 1244, 1843, 908, 683, 1860, 2885, 921,
	2442, 1229, 644, 1239, 1240, 2438, 1143, 659, 1143, 859,
	2947, 2938, 1745, 1746, 1277, 2160, 2162, 2163, 2164, 2161,
	733, 1701, 886, 732, 1700, 2920, 1119, 647, 1194, 1062,
	1197, 1198, 1075, 1079, 1079, 1079, 733, 2915, 1791, 732,
	647, 1962, 1259, 921, 1166, 1452, 1111, 1112, 2522, 1725,
	1099, 2909, 2908, 1102, 1452, 1075, 1075, 2372, 658, 1203,
	1204, 1979, 661, 660, 1902, 1297, 1298, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1137, 1138, 921,
	2939, 1320, 1321, 2889, 2063, 2866, 1125, 2100, 1329, 1134,
	1135, 1136, 1902, 921, 1651, 1243, 1151, 1368, 1369, 1370,
	2060, 1378, 434, 1242, 1967, 1925, 2916, 2356, 1642, 1164,
	1384, 1274, 1174, 1385, 1208, 884, 1211, 1165, 1175, 1116,
	1651, 1651, 532, 541, 1387, 1392, 1393, 2828, 533, 2101,
	540, 534, 538, 537, 535, 536, 1790, 764, 1186, 2786,
	1149, 764, 1828, 1730, 2781, 740, 921, 1271, 2736, 2735,
	1292, 1076, 1651, 1255, 2867, 2732, 448, 2731, 1705, 1019,
	1230, 1235, 781, 782, 783, 1408, 1633, 1902, 429, 1219,
	1434, 1143, 1438, 1226, 1440, 1441, 2442, 449, 1577, 429,
	1556, 446, 691, 542, 450, 1450, 1252, 2730, 447, 1143,
	1249, 1231, 2729, 1253, 644, 1120, 2829, 1248, 1729, 1061,
	445, 1251, 1323, 1411, 1250, 1268, 1247, 1377, 2705, 1128,
	2101, 1360, 1361, 2705, 1364, 539, 1260, 2737, 1809, 1473,
	1172, 1172, 1379, 2704, 2705, 2511, 2705, 1479, 1479, 2572,
	1120, 1273, 1120, 1120, 1311, 1386, 429, 1388, 1434, 1434,
	883, 1477, 1143, 1522, 1534, 923, 924, 925, 922, 418,
	2903, 1143, 1077, 1433, 2429, 2207, 2705, 1466, 2039, 1680,
	938, 2705, 2868, 2537, 2373, 1439, 1995, 1977, 923, 924,
	925, 922, 1472, 852, 2225, 1475, 1476, 429, 1434, 1143,
	2103, 1567, 429, 429, 1570, 923, 924, 925, 922, 1573,
	1971, 2300, 2705, 1579, 1363, 1982, 1981, 1555, 1925, 1973,
	173, 1575, 1969, 173, 173, 1964, 173, 1442, 1443, 1444,
	1825, 1696, 1437, 884, 1728, 1458, 1459, 1957, 1955, 1318,
	1319, 1518, 1519, 2430, 1902, 1953, 1076, 921, 1415, 1389,
	1455, 1679, 1468, 1469, 2377, 921, 1809, 1951, 1808, 886,
	1540, 1378, 1378, 1621, 1726, 1681, 1409, 1709, 1378, 1378,
	1632, 1582, 1588, 1628, 1545, 1591, 1592, 1480, 1594, 1965,
	1481, 1564, 1430, 1708, 1282, 1283, 1284, 1285, 1286, 1568,
	1569, 1970, 1566, 2368, 1965, 1232, 967, 1450, 872, 1471,
	1447, 1143, 1640, 1437, 1446, 2769, 1958, 1956, 1462, 1699,
	1464, 1465, 1457, 2898, 1952, 1463, 1690, 1689, 1482, 1688,
	852, 1075, 1650, 1470, 1483, 1484, 1952, 1809, 1327, 1328,
	1236, 847, 2640, 1725, 1362, 1467, 921, 845, 2263, 1634,
	1271, 657, 1372, 1622, 1367, 1366, 1079, 1077, 2886, 2770,
	1130, 1431, 921, 2369, 1663, 1453, 1454, 1523, 1913, 1521,
	1553, 1554, 1445, 1541, 2011, 1667, 1668, 1616, 941, 942,
	943, 944, 945, 938, 1616, 1561, 2641, 2529, 921, 2527,
	1550, 1551, 1552, 1412, 1857, 921, 921, 1416, 921, 1565,
	1419, 1651, 844, 841, 842, 843, 1943, 2370, 2016, 1237,
	2015, 2014, 2012, 1390, 1391, 1585, 1583, 1394, 1395, 1396,
	1397, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1485,
	2443, 2530, 761, 2528, 763, 1132, 1602, 852, 764, 761,
	1066, 763, 1706, 1129, 1067, 764, 1133, 2434, 1398, 1713,
	939, 940, 941, 942, 943, 944, 945, 938, 448, 2431,
	1625, 1623, 2274, 1630, 1626, 2179, 1627, 662, 1631, 1968,
	1563, 1916, 861, 2467, 2013, 1563, 1563, 2002, 501, 449,
	859, 1784, 1317, 446, 1937, 1752, 450, 1586, 1326, 1635,
	447, 2227, 1432, 429, 429, 429, 2560, 1806, 1314, 1316,
	1313, 1326, 1315, 1676, 1412, 925, 922, 1813, 1120, 1662,
	1412, 1412, 923, 924, 925, 922, 2803, 922, 1818, 1671,
	2559, 2244, 2135, 2470, 761, 1178, 763, 1586, 2134, 1311,
	764, 2129, 1120, 1664, 2883, 923, 924, 925, 922, 859,
	1849, 1692, 2127, 2541, 1834, 1675, 1947, 923, 924, 925,
	922, 1587, 2620, 2509, 1590, 2924, 2468, 1593, 2170, 2912,
	1595, 2168, 2874, 1815, 1816, 929, 930, 931, 932, 933,
	934, 935, 927, 1819, 1820, 923, 924, 925, 922, 2882,
	1906, 1906, 1534, 1906, 2004, 923, 924, 925, 922, 2166,
	460, 2869, 2621, 2510, 1939, 1691, 2156, 2819, 2169, 859,
	2794, 2167, 2017, 2018, 990, 1382, 1143, 429, 923, 924,
	925, 922, 2771, 1665, 1666, 1785, 1383, 1179, 923, 924,
	925, 922, 859, 424, 1723, 2720, 1173, 1752, 1534, 2165,
	2678, 1932, 2646, 1934, 2643, 1738, 2155, 173, 2642, 1858,
	2531, 1861, 1862, 1863, 1864, 1821, 2508, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1921, 1792, 1910, 1859, 1908, 2345, 1912, 2259, 1827,
	989, 1830, 2239, 923, 924, 925, 922, 2238, 2154, 1929,
	1814, 1178, 2153, 1975, 2152, 2149, 1640, 2143, 1936, 1938,
	2140, 2182, 1824, 1143, 2139, 1143, 1673, 1143, 1833, 1677,
	1826, 1832, 859, 923, 924, 925, 922, 1989, 1605, 1931,
	1604, 1822, 1603, 1599, 1823, 937, 936, 946, 947, 939,
	940, 941, 942, 943, 944, 945, 938, 1886, 1598, 1233,
	1036, 1143, 2020, 496, 1703, 2331, 498, 2844, 1687, 1079,
	2600, 497, 2840, 761, 2804, 763, 1694, 2027, 2740, 764,
	1985, 2293, 1143, 2702, 2679, 2630, 1798, 1799, 1800, 2598,
	2596, 2576, 2029, 2574, 1707, 1922, 2175, 1710, 1711, 1712,
	2543, 1928, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722,
	1930, 1817, 1927, 1917, 1918, 1919, 1141, 2507, 2506, 2773,
	2019, 2031, 1678, 2503, 859, 2496, 2490, 2292, 1993, 2061,
	1732, 1733, 2722, 2437, 2006, 2762, 2435, 1141, 2425, 2424,
	2691, 2028, 923, 924, 925, 922, 2323, 2322, 1986, 2270,
	923, 924, 925, 922, 2000, 1810, 544, 110, 923, 924,
	925, 922, 110, 2237, 1271, 2218, 2157, 2150, 2050, 1978,
	1976, 1143, 2146, 2145, 2080, 1983, 2144, 1727, 1434, 1607,
	923, 924, 925, 922, 2099, 1601, 923, 924, 925, 922,
	2105, 589, 588, 2524, 1421, 1996, 1997, 1234, 2035, 2606,
	1149, 997, 993, 2040, 2937, 992, 2114, 2010, 2064, 968,
	435, 848, 859, 110, 2523, 2605, 2521, 1834, 2495, 2569,
	2126, 2482, 923, 924, 925, 922, 2473, 2472, 2131, 2132,
	2461, 2133, 2460, 2378, 2298, 2136, 1479, 1198, 923, 924,
	925, 922, 923, 924, 925, 922, 2291, 2051, 2283, 2278,
	1906, 2222, 2108, 1412, 1412, 1412, 2110, 2054, 2096, 2026,
	2171, 2090, 2062, 2069, 1203, 1204, 2059, 1954, 2493, 1434,
	859, 1534, 1534, 1534, 1534, 2190, 1950, 1949, 1172, 2296,
	1714, 1704, 859, 1534, 1702, 2106, 1906, 2190, 2089, 1698,
	2121, 923, 924, 925, 922, 1143, 1697, 2124, 1695, 1999,
	1686, 2124, 923, 924, 925, 922, 429, 429, 1683, 1682,
	762, 2078, 1437, 1208, 110, 1211, 1606, 1407, 1381, 2107,
	173, 2098, 1380, 2104, 1371, 173, 156, 2111, 2112, 110,
	8, 110, 7, 1155, 2141, 2142, 923, 924, 925, 922,
	2147, 2148, 2203, 2295, 2120, 1153, 1378, 2116, 1378, 2897,
	2125, 2254, 2122, 2891, 2258, 2881, 2128, 2294, 2177, 2878,
	1143, 2876, 2793, 2265, 2738, 2138, 923, 924, 925, 922,
	987, 156, 2228, 1193, 148, 125, 2151, 2232, 2662, 2003,
	923, 924, 925, 922, 153, 2650, 2647, 2021, 2022, 2584,
	2582, 2567, 2180, 2176, 2113, 2024, 2025, 2048, 2566, 2191,
	2192, 2193, 2194, 2563, 2202, 2204, 1411, 2562, 2030, 644,
	2109, 2253, 2206, 2219, 2215, 2556, 2216, 2205, 2516, 1202,
	923, 924, 925, 922, 2251, 1195, 1064, 2230, 1412, 153,
	2257, 2052, 2053, 1419, 2226, 2229, 2286, 2172, 2288, 2130,
	2093, 2267, 2047, 2092, 859, 2091, 1207, 2097, 2247, 1752,
	2334, 1210, 2250, 2262, 1199, 2245, 2049, 1963, 2252, 1915,
	2349, 1881, 429, 2261, 1807, 923, 924, 925, 922, 1312,
	153, 1571, 859, 859, 859, 2275, 1429, 1834, 1834, 1834,
	2276, 1534, 1806, 1428, 2376, 1256, 1222, 1200, 2282, 1020,
	2380, 1017, 1016, 1015, 2284, 2285, 1014, 2289, 2290, 1013,
	859, 1012, 1011, 1010, 2410, 2385, 2413, 1009, 2413, 2413,
	1008, 2287, 764, 1007, 1684, 2418, 1006, 2325, 1005, 764,
	1004, 2303, 1143, 1143, 1003, 2304, 2305, 2306, 2307, 1002,
	2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2324, 1001,
	2327, 1000, 2379, 996, 2249, 2319, 2381, 2382, 995, 994,
	991, 2256, 984, 429, 983, 981, 980, 979, 2334, 2564,
	2046, 2353, 2374, 978, 2364, 2365, 1434, 1434, 2408, 2220,
	2221, 2409, 2375, 2371, 2913, 977, 976, 1141, 1141, 2089,
	975, 2422, 2423, 923, 924, 925, 922, 974, 2354, 973,
	2386, 923, 924, 925, 922, 972, 2414, 2415, 971, 110,
	110, 762, 970, 966, 965, 888, 2020, 846, 2446, 2447,
	1812, 1795, 876, 764, 2824, 2471, 2822, 2777, 2383, 2449,
	2081, 1926, 1609, 2441, 937, 936, 946, 947, 939, 940,
	941, 942, 943, 944, 945, 938, 2439, 2440, 2453, 887,
	2428, 2416, 2432, 2436, 2433, 2329, 2231, 2201, 2233, 1898,
	1899, 2199, 429, 2045, 2450, 1115, 2200, 1117, 2452, 1121,
	1122, 2451, 2197, 764, 2196, 2195, 1412, 2198, 2454, 96,
	954, 1412, 2457, 2458, 2459, 426, 923, 924, 925, 922,
	52, 2923, 51, 2466, 1972, 1966, 1156, 1157, 1158, 1159,
	1160, 1161, 1162, 1163, 2056, 2384, 2044, 1168, 2587, 2392,
	2586, 2118, 1517, 2119, 2320, 2321, 2483, 2277, 2895, 2328,
	1187, 1961, 1990, 2484, 1732, 1733, 2043, 2486, 1022, 923,
	924, 925, 922, 431, 2402, 2352, 430, 2489, 1216, 2297,
	1786, 2497, 1434, 2485, 432, 2585, 433, 2395, 2520, 923,
	924, 925, 922, 1572, 2390, 882, 2757, 2115, 2065, 2405,
	2406, 1802, 1906, 1534, 2534, 2391, 1448, 1427, 937, 936,
	946, 947, 939, 940, 941, 942, 943, 944, 945, 938,
	2042, 2831, 2499, 1367, 1366, 1034, 1035, 1143, 1032, 1033,
	2502, 2542, 2501, 1030, 1031, 1028, 1029, 2041, 429, 1884,
	1520, 1114, 2396, 923, 924, 925, 922, 2410, 1113, 914,
	2514, 2536, 2515, 1026, 2456, 1629, 1068, 1024, 2892, 2535,
	923, 924, 925, 922, 2812, 2538, 1563, 2038, 2539, 1434,
	2800, 2798, 2765, 859, 2750, 2749, 2747, 2037, 2190, 2517,
	2518, 2519, 2545, 2417, 2533, 2408, 2532, 2540, 2739, 2673,
	923, 924, 925, 922, 2672, 2036, 2589, 2597, 2498, 173,
	923, 924, 925, 922, 2480, 2479, 2578, 2464, 1027, 647,
	1452, 2463, 859, 2224, 2568, 2032, 2260, 2190, 923, 924,
	925, 922, 2826, 2825, 679, 1797, 2573, 2575, 1685, 873,
	2614, 2825, 2826, 2404, 2558, 1839, 2580, 2579, 923, 924,
	925, 922, 2481, 1083, 2023, 160, 3, 859, 1143, 1143,
	2001, 2591, 2577, 859, 2633, 60, 2, 2633, 1834, 1557,
	2398, 1322, 1147, 1, 1420, 2488, 1152, 923, 924, 925,
	922, 435, 2601, 923, 924, 925, 922, 652, 2208, 2615,
	2209, 2455, 2397, 2399, 923, 924, 925, 922, 2211, 1647,
	1882, 1787, 2348, 859, 859, 110, 1059, 859, 859, 2634,
	2637, 2636, 2629, 1141, 2545, 684, 1373, 2628, 1241, 2536,
	778, 868, 1238, 1450, 1889, 2670, 867, 2644, 2645, 865,
	1324, 546, 1612, 2674, 2675, 2651, 2652, 2173, 2669, 2660,
	2661, 2830, 2648, 2863, 2607, 2667, 2659, 2792, 1894, 1897,
	1898, 1899, 1895, 2833, 1896, 1900, 2492, 2699, 1254, 530,
	681, 2741, 676, 2494, 666, 2668, 110, 2407, 2683, 2796,
	110, 678, 677, 2685, 2603, 2711, 1652, 919, 2246, 2393,
	705, 110, 582, 557, 982, 2403, 1224, 1217, 664, 2301,
	110, 859, 670, 2697, 780, 556, 648, 649, 650, 651,
	2513, 2074, 2714, 859, 648, 649, 650, 651, 2706, 647,
	673, 2561, 777, 706, 2713, 2712, 1596, 647, 2681, 2721,
	1188, 1209, 1192, 2728, 2724, 1894, 1897, 1898, 1899, 1895,
	2638, 1896, 1900, 675, 2525, 2733, 2366, 674, 2094, 2933,
	2922, 2904, 2890, 663, 2817, 2918, 859, 669, 2848, 2879,
	2751, 2610, 2608, 2766, 2609, 2872, 2813, 2746, 2744, 1154,
	467, 1537, 416, 744, 667, 2663, 923, 924, 925, 922,
	1608, 2761, 468, 1811, 2805, 2760, 2649, 671, 2787, 2790,
	1794, 2767, 672, 2087, 2086, 665, 1293, 928, 2772, 1310,
	2316, 2317, 963, 506, 1674, 2782, 2783, 2784, 2785, 682,
	2791, 518, 2071, 2401, 2217, 59, 1412, 58, 2799, 2581,
	2801, 2802, 2583, 2797, 2795, 57, 56, 1578, 181, 548,
	180, 2789, 2835, 668, 528, 527, 2588, 2811, 526, 525,
	524, 1893, 1891, 1890, 2837, 1529, 2820, 1528, 2823, 2821,
	1576, 2419, 2137, 1853, 1846, 1351, 2827, 1486, 2774, 2836,
	2725, 2726, 2555, 859, 2158, 2551, 2547, 2426, 2846, 2632,
	2842, 2841, 2387, 2388, 2394, 1801, 803, 799, 801, 802,
	2862, 800, 2009, 2851, 2853, 2005, 1829, 2359, 1743, 1742,
	1740, 2861, 1739, 2865, 1042, 2698, 2870, 2500, 859, 1750,
	1748, 2448, 2444, 1277, 680, 2350, 1620, 1417, 2871, 2875,
	2893, 2877, 2055, 1530, 1526, 1887, 1796, 87, 2837, 2888,
	86, 94, 137, 46, 165, 164, 167, 859, 166, 859,
	163, 1940, 1277, 2836, 1277, 2887, 1941, 2894, 162, 2896,
	2899, 1176, 161, 2635, 641, 37, 33, 2865, 859, 2900,
	1533, 2843, 12, 1277, 2914, 2907, 11, 2917, 2911, 34,
	937, 936, 946, 947, 939, 940, 941, 942, 943, 944,
	945, 938, 21, 22, 2299, 2928, 2921, 20, 1245, 2932,
	2931, 19, 25, 2696, 32, 31, 2940, 30, 103, 2943,
	102, 29, 101, 2928, 2946, 2945, 100, 2944, 2932, 99,
	2707, 98, 28, 18, 41, 40, 110, 1347, 39, 110,
	110, 1344, 110, 9, 93, 1346, 1343, 1345, 1349, 1350,
	2723, 91, 27, 1348, 937, 936, 946, 947, 939, 940,
	941, 942, 943, 944, 945, 938, 92, 89, 90, 88,
	71, 70, 69, 84, 83, 1998, 82, 762, 81, 80,
	79, 77, 78, 704, 762, 68, 67, 352, 564, 66,
	65, 64, 75, 110, 85, 76, 2696, 74, 315, 937,
	936, 946, 947, 939, 940, 941, 942, 943, 944, 945,
	938, 520, 73, 72, 63, 261, 62, 61, 285, 122,
	123, 121, 120, 555, 119, 118, 344, 299, 117, 116,
	42, 43, 612, 620, 946, 947, 939, 940, 941, 942,
	943, 944, 945, 938, 513, 44, 45, 545, 589, 588,
	532, 541, 133, 132, 243, 179, 533, 134, 540, 534,
	538, 537, 535, 536, 136, 604, 138, 135, 130, 954,
	128, 131, 504, 517, 2693, 521, 129, 127, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1354,
	1355, 1356, 1357, 1358, 1359, 1352, 1353, 54, 17, 514,
	515, 24, 4, 0, 0, 565, 2696, 516, 0, 0,
	560, 542, 543, 0, 0, 0, 0, 234, 349, 365,
	244, 340, 378, 249, 347, 239, 314, 337, 0, 0,
	236, 363, 346, 296, 279, 280, 235, 0, 332, 259,
	272, 256, 312, 539, 563, 567, 255, 626, 561, 373,
	238, 0, 372, 311, 359, 364, 297, 291, 237, 361,
	295, 290, 283, 263, 627, 276, 323, 289, 324, 277,
	301, 300, 302, 0, 0, 0, 0, 0, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2902,
	0, 0, 558, 0, 0, 0, 375, 0, 0, 610,
	0, 0, 0, 348, 0, 0, 284, 0, 0, 0,
	562, 0, 335, 317, 623, 505, 0, 333, 287, 360,
	325, 366, 350, 374, 329, 326, 229, 351, 258, 298,
	240, 242, 254, 260, 262, 264, 265, 307, 308, 320,
	339, 353, 354, 355, 257, 250, 334, 251, 274, 252,
	230, 341, 253, 232, 321, 358, 0, 270, 330, 294,
	233, 293, 322, 357, 356, 241, 382, 388, 389, 394,
	0, 395, 0, 0, 0, 403, 408, 409, 410, 412,
	413, 414, 415, 0, 0, 0, 0, 397, 1909, 0,
	0, 0, 0, 0, 387, 268, 226, 227, 422, 608,
	313, 0, 0, 622, 603, 605, 606, 609, 613, 614,
	615, 616, 617, 619, 621, 625, 421, 0, 0, 0,
	0, 0, 420, 319, 0, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 1533, 0, 0, 0, 345, 368,
	380, 398, 401, 110, 0, 0, 231, 400, 0, 2694,
	0, 1672, 0, 2695, 0, 624, 0, 0, 0, 379,
	0, 0, 0, 0, 0, 566, 303, 304, 305, 306,
	611, 0, 248, 399, 328, 937, 936, 946, 947, 939,
	940, 941, 942, 943, 944, 945, 938, 0, 0, 0,
	0, 392, 393, 267, 273, 411, 275, 247, 318, 269,
	377, 281, 0, 404, 0, 405, 0, 0, 0, 0,
	310, 278, 342, 282, 288, 331, 376, 316, 336, 245,
	367, 343, 292, 0, 0, 633, 607, 632, 634, 635,
	631, 636, 637, 618, 523, 0, 570, 629, 628, 630,
	0, 0, 0, 0, 0, 0, 0, 0, 819, 937,
	936, 946, 947, 939, 940, 941, 942, 943, 944, 945,
	938, 0, 0, 228, 0, 286, 0, 327, 266, 596,
	575, 576, 577, 522, 578, 573, 574, 597, 568, 593,
	594, 547, 571, 579, 592, 580, 595, 598, 599, 638,
	639, 586, 640, 583, 600, 591, 590, 581, 569, 601,
	602, 554, 549, 584, 585, 572, 587, 550, 551, 552,
	553, 949, 0, 953, 383, 384, 385, 407, 369, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 950,
	952, 948, 0, 951, 937, 936, 946, 947, 939, 940,
	941, 942, 943, 944, 945, 938, 0, 0, 0, 0,
	0, 0, 807, 0, 0, 0, 797, 0, 0, 0,
	0, 0, 0, 0, 110, 0, 0, 0, 0, 0,
	0, 0, 827, 831, 833, 835, 837, 838, 840, 0,
	844, 841, 842, 843, 0, 0, 822, 823, 824, 825,
	805, 806, 828, 0, 808, 0, 809, 810, 811, 812,
	813, 814, 815, 816, 817, 818, 820, 826, 0, 0,
	0, 0, 0, 0, 0, 830, 832, 834, 836, 839,
	936, 946, 947, 939, 940, 941, 942, 943, 944, 945,
	938, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1533, 1533, 1533,
	1533, 0, 821, 0, 0, 0, 0, 0, 0, 1533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 0, 0, 0,
	0, 110, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 0, 0, 0, 0, 0, 0, 110, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 261, 0, 0, 285, 0, 0,
	0, 0, 555, 0, 0, 344, 299, 0, 0, 0,
	0, 612, 620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 513, 0, 0, 545, 589, 588, 532,
	541, 0, 110, 243, 179, 533, 0, 540, 534, 538,
	537, 535, 536, 0, 604, 0, 0, 0, 0, 0,
	0, 504, 517, 0, 521, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 514, 515,
	0, 0, 110, 0, 565, 0, 516, 0, 0, 560,
	542, 543, 0, 0, 0, 0, 234, 349, 365, 244,
	340, 378, 249, 347, 239, 314, 337, 0, 0, 236,
	363, 346, 296, 279, 280, 235, 829, 332, 259, 272,
	256, 312, 539, 563, 567, 255, 626, 561, 373, 238,
	0, 372, 311, 359, 364, 297, 291, 237, 361, 295,
	290, 283, 263, 627, 276, 323, 289, 324, 277, 301,
	300, 302, 0, 0, 0, 0, 0, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 558, 0, 0, 0, 375, 0, 0, 610, 0,
	0, 0, 348, 0, 0, 284, 0, 0, 0, 562,
	0, 335, 317, 623, 505, 0, 333, 287, 360, 325,
	366, 350, 374, 329, 326, 229, 351, 258, 298, 240,
	242, 254, 260, 262, 264, 265, 307, 308, 320, 339,
	353, 354, 355, 257, 250, 334, 251, 274, 252, 230,
	341, 253, 232, 321, 358, 0, 270, 330, 294, 233,
	293, 322, 357, 356, 241, 382, 388, 389, 394, 0,
	395, 0, 0, 0, 403, 408, 409, 410, 412, 413,
	414, 415, 0, 0, 0, 0, 397, 0, 0, 0,
	1375, 1374, 1376, 387, 268, 226, 227, 422, 608, 313,
	0, 0, 622, 603, 605, 606, 609, 613, 614, 615,
	616, 617, 619, 621, 625, 421, 0, 0, 0, 0,
	0, 420, 319, 0, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 368, 380,
	398, 401, 0, 0, 0, 231, 400, 0, 0, 0,
	0, 0, 0, 0, 624, 0, 0, 0, 379, 1533,
	0, 0, 0, 0, 566, 303, 304, 305, 306, 611,
	0, 248, 399, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 267, 273, 411, 275, 247, 318, 269, 377,
	281, 0, 404, 0, 405, 0, 0, 0, 0, 310,
	278, 342, 282, 288, 331, 376, 316, 336, 245, 367,
	343, 292, 0, 0, 633, 607, 632, 634, 635, 631,
	636, 637, 618, 523, 0, 570, 629, 628, 630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 110, 0, 0, 0, 0,
	0, 0, 228, 0, 286, 0, 327, 266, 596, 575,
	576, 577, 522, 578, 573, 574, 597, 568, 593, 594,
	547, 571, 579, 592, 580, 595, 598, 599, 638, 639,
	586, 640, 583, 600, 591, 590, 581, 569, 601, 602,
	554, 549, 584, 585, 572, 587, 550, 551, 552, 553,
	352, 564, 0, 383, 384, 385, 407, 369, 0, 419,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 261, 0,
	0, 285, 0, 0, 0, 0, 555, 0, 0, 344,
	299, 0, 0, 0, 0, 612, 620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 0, 0,
	545, 589, 588, 532, 541, 0, 0, 243, 179, 533,
	0, 540, 534, 538, 537, 535, 536, 0, 604, 0,
	0, 0, 0, 0, 0, 504, 517, 0, 521, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 514, 515, 0, 0, 0, 0, 565, 0,
	516, 0, 0, 560, 542, 543, 0, 0, 0, 0,
	234, 349, 365, 244, 340, 378, 249, 347, 239, 314,
	337, 0, 0, 236, 363, 346, 296, 279, 280, 235,
	0, 332, 259, 272, 256, 312, 539, 563, 567, 255,
	626, 561, 373, 238, 0, 372, 311, 359, 364, 297,
	291, 237, 361, 295, 290, 283, 263, 627, 276, 323,
	289, 324, 277, 301, 300, 302, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 558, 0, 0, 0, 375,
	0, 0, 610, 0, 0, 0, 348, 0, 0, 284,
	0, 0, 0, 562, 0, 335, 317, 623, 505, 0,
	333, 287, 360, 325, 366, 350, 374, 329, 326, 229,
	351, 258, 298, 240, 242, 254, 260, 262, 264, 265,
	307, 308, 320, 339, 353, 354, 355, 257, 250, 334,
	251, 274, 252, 230, 341, 253, 232, 321, 358, 0,
	270, 330, 294, 233, 293, 322, 357, 356, 241, 382,
	388, 389, 394, 0, 395, 0, 0, 0, 403, 408,
	409, 410, 412, 413, 414, 415, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 387, 268, 226,
	227, 422, 608, 313, 0, 0, 622, 603, 605, 606,
	609, 613, 614, 615, 616, 617, 619, 621, 625, 421,
	0, 0, 0, 0, 0, 420, 319, 0, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 368, 380, 398, 401, 0, 0, 0, 231,
	400, 0, 2694, 0, 0, 0, 2695, 0, 624, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 566, 303,
	304, 305, 306, 611, 0, 248, 399, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 267, 273, 411, 275,
	247, 318, 269, 377, 281, 0, 404, 0, 405, 0,
	0, 0, 0, 310, 278, 342, 282, 288, 331, 376,
	316, 336, 245, 367, 343, 292, 0, 0, 633, 607,
	632, 634, 635, 631, 636, 637, 618, 523, 0, 570,
	629, 628, 630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 286, 0,
	327, 266, 596, 575, 576, 577, 522, 578, 573, 574,
	597, 568, 593, 594, 547, 571, 579, 592, 580, 595,
	598, 599, 638, 639, 586, 640, 583, 600, 591, 590,
	581, 569, 601, 602, 554, 549, 584, 585, 572, 587,
	550, 551, 552, 553, 352, 564, 0, 383, 384, 385,
	407, 369, 0, 419, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 520, 0,
	0, 0, 261, 1413, 0, 285, 0, 0, 0, 0,
	555, 0, 0, 344, 299, 0, 0, 0, 0, 612,
	620, 0, 0, 0, 0, 0, 0, 0, 1547, 0,
	0, 513, 0, 0, 545, 589, 588, 532, 541, 0,
	0, 243, 179, 533, 0, 540, 534, 538, 537, 535,
	536, 0, 604, 0, 0, 0, 0, 0, 0, 504,
	517, 0, 521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 514, 515, 0, 0,
	0, 0, 565, 0, 516, 0, 0, 1548, 542, 543,
	0, 0, 0, 0, 234, 349, 365, 244, 340, 378,
	249, 347, 239, 314, 337, 0, 0, 236, 363, 346,
	296, 279, 280, 235, 0, 332, 259, 272, 256, 312,
	539, 563, 567, 255, 626, 561, 373, 238, 0, 372,
	311, 359, 364, 297, 291, 237, 361, 295, 290, 283,
	263, 627, 276, 323, 289, 324, 277, 301, 300, 302,
	0, 0, 0, 0, 0, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 558,
	0, 0, 0, 375, 0, 0, 610, 0, 0, 0,
	348, 0, 0, 284, 0, 0, 0, 562, 0, 335,
	317, 623, 505, 0, 333, 287, 360, 325, 366, 350,
	374, 329, 326, 229, 351, 258, 298, 240, 242, 254,
	260, 262, 264, 265, 307, 308, 320, 339, 353, 354,
	355, 257, 250, 334, 251, 274, 252, 230, 341, 253,
	232, 321, 358, 0, 270, 330, 294, 233, 293, 322,
	357, 356, 241, 382, 388, 389, 394, 0, 395, 0,
	0, 0, 403, 408, 409, 410, 412, 413, 414, 415,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 387, 268, 226, 227, 422, 608, 313, 0, 0,
	622, 603, 605, 606, 609, 613, 614, 615, 616, 617,
	619, 621, 625, 421, 0, 0, 0, 0, 0, 420,
	319, 0, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 368, 380, 398, 401,
	0, 0, 0, 231, 400, 0, 0, 0, 0, 0,
	0, 0, 624, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 566, 303, 304, 305, 306, 611, 0, 248,
	399, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	267, 273, 411, 275, 247, 318, 269, 377, 281, 0,
	404, 0, 405, 0, 0, 0, 0, 310, 278, 342,
	282, 288, 331, 376, 316, 336, 245, 367, 343, 292,
	0, 0, 633, 607, 632, 634, 635, 631, 636, 637,
	618, 523, 0, 570, 629, 628, 630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 286, 0, 327, 266, 596, 575, 576, 577,
	522, 578, 573, 574, 597, 568, 593, 594, 547, 571,
	579, 592, 580, 595, 598, 599, 638, 639, 586, 640,
	583, 600, 591, 590, 581, 569, 601, 602, 554, 549,
	584, 585, 572, 587, 550, 551, 552, 553, 156, 352,
	564, 383, 384, 385, 407, 369, 0, 419, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 520, 0, 0, 0, 261, 0, 0,
	285, 0, 0, 0, 0, 957, 0, 0, 344, 299,
	0, 0, 0, 0, 612, 620, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 513, 0, 0, 545,
	589, 588, 532, 541, 0, 0, 243, 179, 533, 0,
	540, 534, 538, 537, 535, 536, 0, 604, 0, 0,
	0, 0, 0, 0, 504, 517, 0, 521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 514, 515, 0, 0, 0, 0, 565, 0, 516,
	0, 0, 560, 542, 543, 0, 0, 0, 0, 234,
	349, 365, 244, 340, 378, 249, 347, 239, 314, 337,
	0, 0, 236, 363, 346, 296, 279, 280, 235, 0,
	332, 259, 272, 256, 312, 539, 563, 567, 255, 626,
	561, 373, 238, 0, 372, 311, 359, 364, 297, 291,
	237, 361, 295, 290, 283, 263, 627, 276, 323, 289,
	324, 277, 301, 300, 302, 0, 0, 0, 0, 0,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 558, 0, 0, 0, 375, 0,
	0, 610, 0, 0, 0, 348, 0, 0, 284, 0,
	0, 0, 562, 0, 335, 317, 623, 505, 0, 333,
	287, 360, 325, 366, 350, 374, 329, 326, 229, 351,
	258, 298, 240, 242, 254, 260, 262, 264, 265, 307,
	308, 320, 339, 353, 354, 355, 257, 250, 334, 251,
	274, 252, 230, 341, 253, 232, 321, 358, 0, 270,
	330, 294, 233, 293, 322, 357, 356, 241, 382, 388,
	389, 394, 0, 395, 0, 0, 0, 403, 408, 409,
	410, 412, 413, 414, 415, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 387, 268, 226, 227,
	422, 608, 313, 0, 0, 622, 603, 605, 606, 609,
	613, 614, 615, 616, 617, 619, 621, 625, 421, 0,
	0, 0, 0, 0, 420, 319, 0, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 368, 380, 398, 401, 0, 0, 0, 231, 400,
	0, 0, 0, 0, 0, 0, 0, 624, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 566, 303, 304,
	305, 306, 611, 0, 248, 399, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 267, 273, 411, 275, 247,
	318, 269, 377, 281, 0, 404, 0, 405, 0, 0,
	0, 0, 310, 278, 342, 282, 288, 331, 376, 316,
	336, 245, 367, 343, 292, 0, 0, 633, 607, 632,
	634, 635, 631, 636, 637, 618, 523, 0, 570, 629,
	628, 630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 286, 126, 327,
	266, 596, 575, 576, 577, 522, 578, 573, 574, 597,
	568, 593, 594, 547, 571, 579, 592, 580, 595, 598,
	599, 638, 639, 586, 640, 583, 600, 591, 590, 581,
	569, 601, 602, 554, 549, 584, 585, 572, 587, 550,
	551, 552, 553, 352, 564, 0, 383, 384, 385, 407,
	369, 0, 419, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 520, 0, 0,
	0, 261, 2901, 0, 285, 0, 0, 0, 0, 555,
	0, 0, 344, 299, 0, 0, 0, 0, 612, 620,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 0, 0, 545, 589, 588, 532, 541, 0, 0,
	243, 179, 533, 0, 540, 534, 538, 537, 535, 536,
	0, 604, 0, 0, 0, 0, 0, 0, 504, 517,
	0, 521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 514, 515, 0, 0, 0,
	0, 565, 0, 516, 0, 0, 560, 542, 543, 0,
	0, 0, 0, 234, 349, 365, 244, 340, 378, 249,
	347, 239, 314, 337, 0, 0, 236, 363, 346, 296,
	279, 280, 235, 0, 332, 259, 272, 256, 312, 539,
	563, 567, 255, 626, 561, 373, 238, 0, 372, 311,
	359, 364, 297, 291, 237, 361, 295, 290, 283, 263,
	627, 276, 323, 289, 324, 277, 301, 300, 302, 0,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 558, 0,
	0, 0, 375, 0, 0, 610, 0, 0, 0, 348,
	0, 0, 284, 0, 0, 0, 562, 0, 335, 317,
	623, 505, 0, 333, 287, 360, 325, 366, 350, 374,
	329, 326, 229, 351, 258, 298, 240, 242, 254, 260,
	262, 264, 265, 307, 308, 320, 339, 353, 354, 355,
	257, 250, 334, 251, 274, 252, 230, 341, 253, 232,
	321, 358, 0, 270, 330, 294, 233, 293, 322, 357,
	356, 241, 382, 388, 389, 394, 0, 395, 0, 0,
	0, 403, 408, 409, 410, 412, 413, 414, 415, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	387, 268, 226, 227, 422, 608, 313, 0, 0, 622,
	603, 605, 606, 609, 613, 614, 615, 616, 617, 619,
	621, 625, 421, 0, 0, 0, 0, 0, 420, 319,
	0, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 368, 380, 398, 401, 0,
	0, 0, 231, 400, 0, 0, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 379, 0, 0, 0, 0,
	0, 566, 303, 304, 305, 306, 611, 0, 248, 399,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 267,
	273, 411, 275, 247, 318, 269, 377, 281, 0, 404,
	0, 405, 0, 0, 0, 0, 310, 278, 342, 282,
	288, 331, 376, 316, 336, 245, 367, 343, 292, 0,
	0, 633, 607, 632, 634, 635, 631, 636, 637, 618,
	523, 0, 570, 629, 628, 630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 286, 0, 327, 266, 596, 575, 576, 577, 522,
	578, 573, 574, 597, 568, 593, 594, 547, 571, 579,
	592, 580, 595, 598, 599, 638, 639, 586, 640, 583,
	600, 591, 590, 581, 569, 601, 602, 554, 549, 584,
	585, 572, 587, 550, 551, 552, 553, 352, 564, 0,
	383, 384, 385, 407, 369, 0, 419, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 520, 0, 0, 0, 261, 1413, 0, 285, 0,
	0, 0, 0, 555, 0, 0, 344, 299, 0, 0,
	0, 0, 612, 620, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 513, 0, 0, 545, 589, 588,
	532, 541, 0, 0, 243, 179, 533, 0, 540, 534,
	538, 537, 535, 536, 0, 604, 0, 0, 0, 0,
	0, 0, 504, 517, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 514,
	515, 0, 0, 0, 0, 565, 0, 516, 0, 0,
	560, 542, 543, 0, 0, 0, 0, 234, 349, 365,
	244, 340, 378, 249, 347, 239, 314, 337, 0, 0,
	236, 363, 346, 296, 279, 280, 235, 0, 332, 259,
	272, 256, 312, 539, 563, 567, 255, 626, 561, 373,
	238, 0, 372, 311, 359, 364, 297, 291, 237, 361,
	295, 290, 283, 263, 627, 276, 323, 289, 324, 277,
	301, 300, 302, 0, 0, 0, 0, 0, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 558, 0, 0, 0, 375, 0, 0, 610,
	0, 0, 0, 348, 0, 0, 284, 0, 0, 0,
	562, 0, 335, 317, 623, 505, 0, 333, 287, 360,
	325, 366, 350, 374, 329, 326, 229, 351, 258, 298,
	240, 242, 254, 260, 262, 264, 265, 307, 308, 320,
	339, 353, 354, 355, 257, 250, 334, 251, 274, 252,
	230, 341, 253, 232, 321, 358, 0, 270, 330, 294,
	233, 293, 322, 357, 356, 241, 382, 388, 389, 394,
	0, 395, 0, 0, 0, 403, 408, 409, 410, 412,
	413, 414, 415, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 387, 268, 226, 227, 422, 608,
	313, 0, 0, 622, 603, 605, 606, 609, 613, 614,
	615, 616, 617, 619, 621, 625, 421, 0, 0, 0,
	0, 0, 420, 319, 0, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 368,
	380, 398, 401, 0, 0, 0, 231, 400, 0, 0,
	0, 0, 0, 0, 0, 624, 0, 0, 0, 379,
	0, 0, 0, 0, 0, 566, 303, 304, 305, 306,
	611, 0, 248, 399, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 267, 273, 411, 275, 247, 318, 269,
	377, 281, 0, 404, 0, 405, 0, 0, 0, 0,
	310, 278, 342, 282, 288, 331, 376, 316, 336, 245,
	367, 343, 292, 0, 0, 633, 607, 632, 634, 635,
	631, 636, 637, 618, 523, 0, 570, 629, 628, 630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 286, 0, 327, 266, 596,
	575, 576, 577, 522, 578, 573, 574, 597, 568, 593,
	594, 547, 571, 579, 592, 580, 595, 598, 599, 638,
	639, 586, 640, 583, 600, 591, 590, 581, 569, 601,
	602, 554, 549, 584, 585, 572, 587, 550, 551, 552,
	553, 352, 564, 0, 383, 384, 385, 407, 369, 0,
	419, 0, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 0, 0, 0, 261,
	0, 0, 285, 0, 0, 0, 0, 555, 0, 0,
	344, 299, 0, 0, 0, 0, 612, 620, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 513, 0,
	0, 545, 589, 588, 532, 541, 0, 0, 243, 179,
	533, 0, 540, 534, 538, 537, 535, 536, 0, 604,
	0, 0, 0, 0, 0, 0, 504, 517, 0, 521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 515, 1171, 0, 0, 0, 565,
	0, 516, 0, 0, 560, 542, 543, 0, 0, 0,
	0, 234, 349, 365, 244, 340, 378, 249, 347, 239,
	314, 337, 0, 0, 236, 363, 346, 296, 279, 280,
	235, 0, 332, 259, 272, 256, 312, 539, 563, 567,
	255, 626, 561, 373, 238, 0, 372, 311, 359, 364,
	297, 291, 237, 361, 295, 290, 283, 263, 627, 276,
	323, 289, 324, 277, 301, 300, 302, 0, 0, 0,
	0, 0, 402, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 558, 0, 0, 0,
	375, 0, 0, 610, 0, 0, 0, 348, 0, 0,
	284, 0, 0, 0, 562, 0, 335, 317, 623, 505,
	0, 333, 287, 360, 325, 366, 350, 374, 329, 326,
	229, 351, 258, 298, 240, 242, 254, 260, 262, 264,
	265, 307, 308, 320, 339, 353, 354, 355, 257, 250,
	334, 251, 274, 252, 230, 341, 253, 232, 321, 358,
	0, 270, 330, 294, 233, 293, 322, 357, 356, 241,
	382, 388, 389, 394, 0, 395, 0, 0, 0, 403,
	408, 409, 410, 412, 413, 414, 415, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 387, 268,
	226, 227, 422, 608, 313, 0, 0, 622, 603, 605,
	606, 609, 613, 614, 615, 616, 617, 619, 621, 625,
	421, 0, 0, 0, 0, 0, 420, 319, 0, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 368, 380, 398, 401, 0, 0, 0,
	231, 400, 0, 0, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 566,
	303, 304, 305, 306, 611, 0, 248, 399, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 267, 273, 411,
	275, 247, 318, 269, 377, 281, 0, 404, 0, 405,
	0, 0, 0, 0, 310, 278, 342, 282, 288, 331,
	376, 316, 336, 245, 367, 343, 292, 0, 0, 633,
	607, 632, 634, 635, 631, 636, 637, 618, 523, 0,
	570, 629, 628, 630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 286,
	0, 327, 266, 596, 575, 576, 577, 522, 578, 573,
	574, 597, 568, 593, 594, 547, 571, 579, 592, 580,
	595, 598, 599, 638, 639, 586, 640, 583, 600, 591,
	590, 581, 569, 601, 602, 554, 549, 584, 585, 572,
	587, 550, 551, 552, 553, 0, 0, 0, 383, 384,
	385, 407, 369, 0, 419, 352, 564, 0, 0, 1693,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 520,
	0, 0, 0, 261, 0, 0, 285, 0, 0, 0,
	0, 555, 0, 0, 344, 299, 0, 0, 0, 0,
	612, 620, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 0, 0, 545, 589, 588, 532, 541,
	0, 0, 243, 179, 533, 0, 540, 534, 538, 537,
	535, 536, 0, 604, 0, 0, 0, 0, 0, 0,
	504, 517, 0, 521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 514, 515, 0,
	0, 0, 0, 565, 0, 516, 0, 0, 560, 542,
	543, 0, 0, 0, 0, 234, 349, 365, 244, 340,
	378, 249, 347, 239, 314, 337, 0, 0, 236, 363,
	346, 296, 279, 280, 235, 0, 332, 259, 272, 256,
	312, 539, 563, 567, 255, 626, 561, 373, 238, 0,
	372, 311, 359, 364, 297, 291, 237, 361, 295, 290,
	283, 263, 627, 276, 323, 289, 324, 277, 301, 300,
	302, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	558, 0, 0, 0, 375, 0, 0, 610, 0, 0,
	0, 348, 0, 0, 284, 0, 0, 0, 562, 0,
	335, 317, 623, 505, 0, 333, 287, 360, 325, 366,
	350, 374, 329, 326, 229, 351, 258, 298, 240, 242,
	254, 260, 262, 264, 265, 307, 308, 320, 339, 353,
	354, 355, 257, 250, 334, 251, 274, 252, 230, 341,
	253, 232, 321, 358, 0, 270, 330, 294, 233, 293,
	322, 357, 356, 241, 382, 388, 389, 394, 0, 395,
	0, 0, 0, 403, 408, 409, 410, 412, 413, 414,
	415, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 387, 268, 226, 227, 422, 608, 313, 0,
	0, 622, 603, 605, 606, 609, 613, 614, 615, 616,
	617, 619, 621, 625, 421, 0, 0, 0, 0, 0,
	420, 319, 0, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 368, 380, 398,
	401, 0, 0, 0, 231, 400, 0, 0, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 379, 0, 0,
	0, 0, 0, 566, 303, 304, 305, 306, 611, 0,
	248, 399, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 267, 273, 411, 275, 247, 318, 269, 377, 281,
	0, 404, 0, 405, 0, 0, 0, 0, 310, 278,
	342, 282, 288, 331, 376, 316, 336, 245, 367, 343,
	292, 0, 0, 633, 607, 632, 634, 635, 631, 636,
	637, 618, 523, 0, 570, 629, 628, 630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 286, 0, 327, 266, 596, 575, 576,
	577, 522, 578, 573, 574, 597, 568, 593, 594, 547,
	571, 579, 592, 580, 595, 598, 599, 638, 639, 586,
	640, 583, 600, 591, 590, 581, 569, 601, 602, 554,
	549, 584, 585, 572, 587, 550, 551, 552, 553, 352,
	564, 0, 383, 384, 385, 407, 369, 0, 419, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 520, 0, 0, 0, 261, 0, 0,
	285, 0, 0, 0, 0, 555, 0, 0, 344, 299,
	0, 0, 0, 0, 612, 620, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 513, 0, 0, 545,
	589, 588, 532, 541, 0, 0, 243, 179, 533, 0,
	540, 534, 538, 537, 535, 536, 0, 604, 0, 0,
	0, 0, 0, 0, 504, 517, 0, 521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 514, 515, 0, 0, 0, 0, 565, 0, 516,
	0, 0, 560, 542, 543, 0, 0, 0, 0, 234,
	349, 365, 244, 340, 378, 249, 347, 239, 314, 337,
	0, 0, 236, 363, 346, 296, 279, 280, 235, 0,
	332, 259, 272, 256, 312, 539, 563, 567, 255, 626,
	561, 373, 238, 0, 372, 311, 359, 364, 297, 291,
	237, 361, 295, 290, 283, 263, 627, 276, 323, 289,
	324, 277, 301, 300, 302, 0, 0, 0, 0, 0,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 558, 0, 0, 0, 375, 0,
	0, 610, 0, 0, 0, 348, 0, 0, 284, 0,
	0, 0, 562, 0, 335, 317, 623, 505, 0, 333,
	287, 360, 325, 366, 350, 374, 329, 326, 229, 351,
	258, 298, 240, 242, 254, 260, 262, 264, 265, 307,
	308, 320, 339, 353, 354, 355, 257, 250, 334, 251,
	274, 252, 230, 341, 253, 232, 321, 358, 0, 270,
	330, 294, 233, 293, 322, 357, 356, 241, 382, 388,
	389, 394, 0, 395, 0, 0, 0, 403, 408, 409,
	410, 412, 413, 414, 415, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 387, 268, 226, 227,
	422, 608, 313, 0, 0, 622, 603, 605, 606, 609,
	613, 614, 615, 616, 617, 619, 621, 625, 421, 0,
	0, 0, 0, 0, 420, 319, 0, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 368, 380, 398, 401, 0, 0, 0, 231, 400,
	0, 0, 0, 0, 0, 0, 0, 624, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 566, 303, 304,
	305, 306, 611, 0, 248, 399, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 267, 273, 411, 275, 247,
	318, 269, 377, 281, 0, 404, 0, 405, 0, 0,
	0, 0, 310, 278, 342, 282, 288, 331, 376, 316,
	336, 245, 367, 343, 292, 0, 0, 633, 607, 632,
	634, 635, 631, 636, 637, 618, 523, 0, 570, 629,
	628, 630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 286, 0, 327,
	266, 596, 575, 576, 577, 522, 578, 573, 574, 597,
	568, 593, 594, 547, 571, 579, 592, 580, 595, 598,
	599, 638, 639, 586, 640, 583, 600, 591, 590, 581,
	569, 601, 602, 554, 549, 584, 585, 572, 587, 550,
	551, 552, 553, 352, 564, 0, 383, 384, 385, 407,
	369, 0, 419, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 1294, 0, 0, 0, 520, 0, 0,
	0, 261, 0, 0, 285, 0, 0, 0, 0, 555,
	0, 0, 344, 299, 0, 0, 0, 0, 612, 620,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 0, 0, 545, 589, 588, 532, 541, 0, 0,
	243, 179, 533, 0, 540, 534, 538, 537, 535, 536,
	0, 604, 0, 0, 0, 0, 0, 0, 0, 517,
	0, 521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 514, 515, 0, 0, 0,
	0, 565, 0, 516, 0, 0, 560, 542, 543, 0,
	0, 0, 0, 234, 349, 365, 244, 340, 378, 249,
	347, 239, 314, 337, 0, 0, 236, 363, 346, 296,
	279, 280, 235, 0, 332, 259, 272, 256, 312, 539,
	563, 567, 255, 626, 561, 373, 238, 0, 372, 311,
	359, 364, 297, 291, 237, 361, 295, 290, 283, 263,
	627, 276, 323, 289, 324, 277, 301, 300, 302, 0,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 558, 0,
	0, 0, 375, 0, 0, 610, 0, 0, 0, 348,
	0, 0, 284, 0, 0, 0, 562, 0, 335, 317,
	623, 0, 0, 333, 287, 360, 325, 366, 350, 374,
	329, 326, 229, 351, 258, 298, 240, 242, 254, 260,
	262, 264, 265, 307, 308, 320, 339, 353, 354, 355,
	257, 250, 334, 251, 274, 252, 230, 341, 253, 232,
	321, 358, 0, 270, 330, 294, 233, 293, 322, 357,
	356, 241, 382, 1295, 1296, 394, 0, 395, 0, 0,
	0, 403, 408, 409, 410, 412, 413, 414, 415, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	387, 268, 226, 227, 422, 608, 313, 0, 0, 622,
	603, 605, 606, 609, 613, 614, 615, 616, 617, 619,
	621, 625, 421, 0, 0, 0, 0, 0, 420, 319,
	0, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 368, 380, 398, 401, 0,
	0, 0, 231, 400, 0, 0, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 379, 0, 0, 0, 0,
	0, 566, 303, 304, 305, 306, 611, 0, 248, 399,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 267,
	273, 411, 275, 247, 318, 269, 377, 281, 0, 404,
	0, 405, 0, 0, 0, 0, 310, 278, 342, 282,
	288, 331, 376, 316, 336, 245, 367, 343, 292, 0,
	0, 633, 607, 632, 634, 635, 631, 636, 637, 618,
	523, 0, 570, 629, 628, 630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 286, 0, 327, 266, 596, 575, 576, 577, 522,
	578, 573, 574, 597, 568, 593, 594, 547, 571, 579,
	592, 580, 595, 598, 599, 638, 639, 586, 640, 583,
	600, 591, 590, 581, 569, 601, 602, 554, 549, 584,
	585, 572, 587, 550, 551, 552, 553, 352, 564, 0,
	383, 384, 385, 407, 369, 0, 419, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 520, 0, 0, 0, 261, 0, 0, 285, 0,
	0, 0, 0, 555, 0, 0, 344, 299, 0, 0,
	0, 0, 612, 620, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 545, 589, 588,
	532, 541, 0, 0, 243, 179, 533, 0, 540, 534,
	538, 537, 535, 536, 0, 604, 0, 0, 0, 0,
	0, 0, 504, 517, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 514,
	515, 0, 0, 0, 0, 565, 0, 516, 0, 0,
	560, 542, 543, 0, 0, 0, 0, 234, 349, 365,
	244, 340, 378, 249, 347, 239, 314, 337, 0, 0,
	236, 363, 346, 296, 279, 280, 235, 0, 332, 259,
	272, 256, 312, 539, 563, 567, 255, 626, 561, 373,
	238, 0, 372, 311, 359, 364, 297, 291, 237, 361,
	295, 290, 283, 263, 627, 276, 323, 289, 324, 277,
	301, 300, 302, 0, 0, 0, 0, 0, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 558, 0, 0, 0, 375, 0, 0, 610,
	0, 0, 0, 348, 0, 0, 284, 0, 0, 0,
	562, 0, 335, 317, 623, 505, 0, 333, 287, 360,
	325, 366, 350, 374, 329, 326, 229, 351, 258, 298,
	240, 242, 254, 260, 262, 264, 265, 307, 308, 320,
	339, 353, 354, 355, 257, 250, 334, 251, 274, 252,
	230, 341, 253, 232, 321, 358, 0, 270, 330, 294,
	233, 293, 322, 357, 356, 241, 382, 388, 389, 394,
	0, 395, 0, 0, 0, 403, 408, 409, 410, 412,
	413, 414, 415, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 387, 268, 226, 227, 422, 608,
	313, 0, 0, 622, 603, 605, 606, 609, 613, 614,
	615, 616, 617, 619, 621, 625, 421, 0, 0, 0,
	0, 0, 420, 319, 0, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 368,
	380, 398, 401, 0, 0, 0, 231, 400, 0, 0,
	0, 0, 0, 0, 0, 624, 0, 0, 0, 379,
	0, 0, 0, 0, 0, 566, 303, 304, 305, 306,
	611, 0, 248, 399, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 267, 273, 411, 275, 247, 318, 269,
	377, 281, 0, 404, 0, 405, 0, 0, 0, 0,
	310, 278, 342, 282, 288, 331, 376, 316, 336, 245,
	367, 343, 292, 0, 0, 633, 607, 632, 634, 635,
	631, 636, 637, 618, 523, 0, 570, 629, 628, 630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 286, 0, 327, 266, 596,
	575, 576, 577, 522, 578, 573, 574, 597, 568, 593,
	594, 547, 571, 579, 592, 580, 595, 598, 599, 638,
	639, 586, 640, 583, 600, 591, 590, 581, 569, 601,
	602, 554, 549, 584, 585, 572, 587, 550, 551, 552,
	553, 352, 564, 0, 383, 384, 385, 407, 369, 0,
	419, 0, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 0, 0, 0, 261,
	0, 0, 285, 0, 0, 0, 0, 555, 0, 0,
	344, 299, 0, 0, 0, 0, 612, 620, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 513, 0,
	0, 545, 589, 588, 532, 541, 0, 0, 243, 179,
	533, 0, 540, 534, 538, 537, 535, 536, 0, 604,
	0, 0, 0, 0, 0, 0, 0, 517, 0, 521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 515, 0, 0, 0, 0, 565,
	0, 516, 0, 0, 560, 542, 543, 0, 0, 0,
	0, 234, 349, 365, 244, 340, 378, 249, 347, 239,
	314, 337, 0, 0, 236, 363, 346, 296, 279, 280,
	235, 0, 332, 259, 272, 256, 312, 539, 563, 567,
	255, 626, 561, 373, 238, 0, 372, 311, 359, 364,
	297, 291, 237, 361, 295, 290, 283, 263, 627, 276,
	323, 289, 324, 277, 301, 300, 302, 0, 0, 0,
	0, 0, 402, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 558, 0, 0, 0,
	375, 0, 0, 610, 0, 0, 0, 348, 0, 0,
	284, 0, 0, 0, 562, 0, 335, 317, 623, 0,
	0, 333, 287, 360, 325, 366, 350, 374, 329, 326,
	229, 351, 258, 298, 240, 242, 254, 260, 262, 264,
	265, 307, 308, 320, 339, 353, 354, 355, 257, 250,
	334, 251, 274, 252, 230, 341, 253, 232, 321, 358,
	0, 270, 330, 294, 233, 293, 322, 357, 356, 241,
	382, 388, 389, 394, 0, 395, 0, 0, 0, 403,
	408, 409, 410, 412, 413, 414, 415, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 387, 268,
	226, 227, 422, 608, 313, 0, 0, 622, 603, 605,
	606, 609, 613, 614, 615, 616, 617, 619, 621, 625,
	421, 0, 0, 0, 0, 0, 420, 319, 0, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 368, 380, 398, 401, 0, 0, 0,
	231, 400, 0, 0, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 566,
	303, 304, 305, 306, 611, 0, 248, 399, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 267, 273, 411,
	275, 247, 318, 269, 377, 281, 0, 404, 0, 405,
	0, 0, 0, 0, 310, 278, 342, 282, 288, 331,
	376, 316, 336, 245, 367, 343, 292, 0, 0, 633,
	607, 632, 634, 635, 631, 636, 637, 618, 523, 0,
	570, 629, 628, 630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 286,
	0, 327, 266, 596, 575, 576, 577, 522, 578, 573,
	574, 597, 568, 593, 594, 547, 571, 579, 592, 580,
	595, 598, 599, 638, 639, 586, 640, 583, 600, 591,
	590, 581, 569, 601, 602, 554, 549, 584, 585, 572,
	587, 550, 551, 552, 553, 0, 0, 0, 383, 384,
	385, 407, 369, 0, 419, 156, 352, 49, 148, 125,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 0, 0, 0,
	0, 0, 141, 0, 261, 0, 150, 285, 0, 0,
	0, 0, 108, 0, 0, 344, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 0,
	0, 0, 0, 153, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 349, 365, 244,
	340, 378, 249, 347, 239, 314, 337, 0, 0, 236,
	363, 346, 296, 279, 280, 235, 0, 332, 259, 272,
	256, 312, 0, 362, 390, 255, 381, 0, 373, 238,
	0, 372, 311, 359, 364, 297, 291, 237, 361, 295,
	290, 283, 263, 406, 276, 323, 289, 324, 277, 301,
	300, 302, 0, 0, 0, 0, 0, 402, 0, 0,
	0, 0, 0, 0, 124, 147, 154, 0, 95, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 171, 0,
	0, 0, 348, 0, 0, 284, 146, 140, 139, 391,
	0, 335, 317, 55, 0, 0, 333, 287, 360, 325,
	366, 350, 374, 329, 326, 229, 351, 258, 298, 240,
	242, 254, 260, 262, 264, 265, 307, 308, 320, 339,
	353, 354, 355, 257, 250, 334, 251, 274, 252, 230,
	341, 253, 232, 321, 358, 0, 270, 330, 294, 233,
	293, 322, 357, 356, 241, 382, 388, 389, 394, 0,
	395, 142, 143, 144, 403, 408, 409, 410, 412, 413,
	414, 415, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 387, 268, 226, 227, 370, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	386, 174, 0, 0, 0, 182, 0, 0, 0, 145,
	0, 183, 319, 0, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 368, 380,
	398, 401, 0, 0, 0, 231, 400, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 396, 303, 304, 305, 306, 271,
	0, 248, 399, 328, 106, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 48, 0, 0, 0, 0, 0,
	392, 393, 267, 273, 411, 275, 247, 318, 269, 377,
	281, 0, 404, 0, 405, 0, 0, 0, 0, 310,
	278, 342, 282, 288, 331, 376, 316, 336, 245, 367,
	343, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 50, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 286, 126, 327, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	0, 0, 0, 383, 384, 385, 407, 369, 352, 184,
	38, 172, 175, 177, 176, 0, 47, 5, 0, 315,
	111, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 285,
	0, 0, 0, 0, 0, 0, 0, 344, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 988, 0, 0, 178, 0,
	0, 532, 541, 0, 0, 243, 179, 533, 0, 540,
	534, 538, 537, 535, 536, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 542, 0, 0, 0, 0, 0, 234, 349,
	365, 244, 340, 378, 249, 347, 239, 314, 337, 0,
	0, 236, 363, 346, 296, 279, 280, 235, 0, 332,
	259, 272, 256, 312, 539, 362, 390, 255, 381, 0,
	373, 238, 0, 372, 311, 359, 364, 297, 291, 237,
	361, 295, 290, 283, 263, 406, 276, 323, 289, 324,
	277, 301, 300, 302, 0, 0, 0, 0, 0, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 284, 0, 0,
	0, 391, 0, 335, 317, 0, 0, 0, 333, 287,
	360, 325, 366, 350, 374, 329, 326, 229, 351, 258,
	298, 240, 242, 254, 260, 262, 264, 265, 307, 308,
	320, 339, 353, 354, 355, 257, 250, 334, 251, 274,
	252, 230, 341, 253, 232, 321, 358, 0, 270, 330,
	294, 233, 293, 322, 357, 356, 241, 382, 388, 389,
	394, 0, 395, 0, 0, 0, 403, 408, 409, 410,
	412, 413, 414, 415, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 387, 268, 226, 227, 422,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 386, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 420, 319, 0, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	368, 380, 398, 401, 0, 0, 0, 231, 400, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 396, 303, 304, 305,
	306, 271, 0, 248, 399, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 267, 273, 411, 275, 247, 318,
	269, 377, 281, 0, 404, 0, 405, 0, 0, 0,
	0, 310, 278, 342, 282, 288, 331, 376, 316, 336,
	245, 367, 343, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 286, 0, 327, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 0, 0, 0, 383, 384, 385, 407, 369,
	0, 419, 156, 352, 49, 148, 125, 0, 0, 0,
	0, 0, 0, 0, 315, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 344, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	444, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 349, 365, 244, 340, 378, 249,
	347, 239, 314, 337, 0, 0, 236, 363, 346, 296,
	279, 280, 235, 0, 332, 259, 272, 256, 312, 0,
	362, 390, 255, 381, 0, 373, 238, 0, 372, 311,
	359, 364, 297, 291, 237, 361, 295, 290, 283, 263,
	406, 276, 323, 289, 324, 277, 301, 300, 302, 0,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 443, 0, 0, 0, 0,
	0, 0, 375, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 284, 0, 0, 0, 391, 0, 335, 317,
	0, 0, 0, 333, 287, 360, 325, 366, 350, 374,
	329, 326, 229, 351, 258, 298, 240, 242, 254, 260,
	262, 264, 265, 307, 308, 320, 339, 353, 354, 355,
	257, 250, 334, 251, 274, 252, 230, 341, 253, 232,
	321, 358, 0, 270, 330, 294, 233, 293, 322, 357,
	356, 241, 382, 388, 389, 394, 0, 395, 0, 0,
	0, 403, 408, 409, 410, 412, 413, 414, 415, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	387, 268, 226, 227, 422, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 386, 0, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 420, 319,
	0, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 368, 380, 398, 401, 0,
	0, 0, 231, 400, 0, 0, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 379, 0, 0, 0, 0,
	0, 396, 303, 304, 305, 306, 440, 442, 248, 399,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 267,
	273, 411, 275, 247, 318, 269, 377, 281, 0, 404,
	0, 405, 0, 0, 0, 0, 310, 278, 342, 282,
	288, 331, 376, 316, 336, 245, 367, 343, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 50,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 286, 126, 327, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 352, 0, 0,
	383, 384, 385, 407, 369, 0, 419, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 819, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 344, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	807, 0, 0, 0, 0, 0, 0, 234, 349, 365,
	244, 340, 378, 249, 347, 239, 314, 337, 0, 0,
	1772, 1774, 1775, 1776, 1777, 1778, 1779, 0, 1783, 1780,
	1781, 1782, 312, 0, 1767, 1768, 1769, 1770, 805, 1753,
	1773, 0, 1754, 311, 1755, 1756, 1757, 1758, 1759, 1760,
	1761, 1762, 1763, 1764, 1765, 1771, 323, 289, 324, 277,
	301, 300, 302, 830, 832, 834, 836, 839, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 0, 0, 0,
	0, 0, 0, 348, 0, 0, 284, 0, 0, 0,
	1766, 0, 335, 317, 0, 0, 0, 333, 287, 360,
	325, 366, 350, 374, 329, 326, 229, 351, 258, 298,
	240, 242, 254, 260, 262, 264, 265, 307, 308, 320,
	339, 353, 354, 355, 257, 250, 334, 251, 274, 252,
	230, 341, 253, 232, 321, 358, 0, 270, 330, 294,
	233, 293, 322, 357, 356, 241, 382, 388, 389, 394,
	0, 395, 0, 0, 0, 403, 408, 409, 410, 412,
	413, 414, 415, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 387, 268, 226, 227, 422, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 386, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 420, 319, 0, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 368,
	380, 398, 401, 0, 0, 0, 231, 400, 0, 0,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 379,
	0, 0, 0, 0, 0, 396, 303, 304, 305, 306,
	271, 0, 248, 399, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 267, 273, 411, 275, 247, 318, 269,
	377, 281, 0, 404, 0, 405, 0, 0, 0, 0,
	310, 278, 342, 282, 288, 331, 376, 316, 336, 245,
	367, 343, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 829, 286, 0, 327, 266, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 222, 223, 224,
	225, 352, 0, 0, 383, 384, 385, 407, 369, 0,
	419, 0, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	344, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	1841, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 349, 365, 244, 340, 378, 249, 347, 239,
	314, 337, 0, 0, 236, 363, 346, 296, 279, 280,
	235, 0, 332, 259, 272, 256, 312, 0, 362, 390,
	255, 381, 0, 373, 238, 0, 372, 311, 359, 364,
	297, 291, 237, 361, 295, 290, 283, 263, 406, 276,
	323, 289, 324, 277, 301, 300, 302, 0, 0, 0,
	0, 0, 402, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	375, 0, 0, 0, 1840, 1831, 1839, 348, 1837, 1842,
	284, 0, 0, 0, 391, 0, 335, 317, 0, 0,
	0, 333, 287, 360, 325, 366, 350, 374, 329, 326,
	229, 351, 258, 298, 240, 242, 254, 260, 262, 264,
	265, 307, 308, 320, 339, 353, 354, 355, 257, 250,
	334, 251, 274, 252, 230, 341, 253, 232, 321, 358,
	1843, 270, 330, 294, 233, 293, 322, 357, 356, 241,
	382, 388, 389, 394, 0, 395, 0, 0, 0, 403,
	408, 409, 410, 412, 413, 414, 415, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 387, 268,
	226, 227, 422, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 386, 0, 0, 0, 0,
	421, 0, 0, 0, 0, 0, 420, 319, 0, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 368, 380, 398, 401, 0, 0, 0,
	231, 400, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 396,
	303, 304, 305, 306, 271, 0, 248, 399, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 267, 273, 411,
	275, 247, 318, 269, 377, 281, 0, 404, 0, 405,
	0, 0, 0, 0, 310, 278, 342, 282, 288, 331,
	376, 316, 336, 245, 367, 343, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 286,
	0, 327, 266, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 0, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	0, 222, 223, 224, 225, 352, 0, 0, 383, 384,
	385, 407, 369, 0, 419, 0, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 344, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 243, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 1841, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 349, 365, 244, 340,
	378, 249, 347, 239, 314, 337, 0, 0, 236, 363,
	346, 296, 279, 280, 235, 0, 332, 259, 272, 256,
	312, 0, 362, 390, 255, 381, 0, 373, 238, 0,
	372, 311, 359, 364, 297, 291, 237, 361, 295, 290,
	283, 263, 406, 276, 323, 289, 324, 277, 301, 300,
	302, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 375, 0, 0, 0, 1840, 0,
	1839, 348, 1837, 1842, 284, 0, 0, 0, 391, 0,
	335, 317, 0, 0, 0, 333, 287, 360, 325, 366,
	350, 374, 329, 326, 229, 351, 258, 298, 240, 242,
	254, 260, 262, 264, 265, 307, 308, 320, 339, 353,
	354, 355, 257, 250, 334, 251, 274, 252, 230, 341,
	253, 232, 321, 358, 1843, 270, 330, 294, 233, 293,
	322, 357, 356, 241, 382, 388, 389, 394, 0, 395,
	0, 0, 0, 403, 408, 409, 410, 412, 413, 414,
	415, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 387, 268, 226, 227, 422, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 386,
	0, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	420, 319, 0, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 368, 380, 398,
	401, 0, 0, 0, 231, 400, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 379, 0, 0,
	0, 0, 0, 396, 303, 304, 305, 306, 271, 0,
	248, 399, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 267, 273, 411, 275, 247, 318, 269, 377, 281,
	0, 404, 0, 405, 0, 0, 0, 0, 310, 278,
	342, 282, 288, 331, 376, 316, 336, 245, 367, 343,
	292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 286, 0, 327, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 352,
	0, 0, 383, 384, 385, 407, 369, 0, 419, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1580, 0, 0, 0, 0, 261, 0, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 344, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 1581, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	923, 924, 925, 922, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	349, 365, 244, 340, 378, 249, 347, 239, 314, 337,
	0, 0, 236, 363, 346, 296, 279, 280, 235, 0,
	332, 259, 272, 256, 312, 0, 362, 390, 255, 381,
	0, 373, 238, 0, 372, 311, 359, 364, 297, 291,
	237, 361, 295, 290, 283, 263, 406, 276, 323, 289,
	324, 277, 301, 300, 302, 0, 0, 0, 0, 0,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 0, 0, 348, 0, 0, 284, 0,
	0, 0, 391, 0, 335, 317, 0, 0, 0, 333,
	287, 360, 325, 366, 350, 374, 329, 326, 229, 351,
	258, 298, 240, 242, 254, 260, 262, 264, 265, 307,
	308, 320, 339, 353, 354, 355, 257, 250, 334, 251,
	274, 252, 230, 341, 253, 232, 321, 358, 0, 270,
	330, 294, 233, 293, 322, 357, 356, 241, 382, 388,
	389, 394, 0, 395, 0, 0, 0, 403, 408, 409,
	410, 412, 413, 414, 415, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 387, 268, 226, 227,
	422, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 386, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 420, 319, 0, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 368, 380, 398, 401, 0, 0, 0, 231, 400,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 396, 303, 304,
	305, 306, 271, 0, 248, 399, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 267, 273, 411, 275, 247,
	318, 269, 377, 281, 0, 404, 0, 405, 0, 0,
	0, 0, 310, 278, 342, 282, 288, 331, 376, 316,
	336, 245, 367, 343, 292, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 286, 0, 327,
	266, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 0, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 222,
	223, 224, 225, 352, 0, 0, 383, 384, 385, 407,
	369, 0, 419, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 743, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 344, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 751, 752, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 349, 365, 244, 340, 378, 249,
	347, 239, 314, 337, 0, 0, 236, 363, 346, 296,
	279, 280, 235, 0, 332, 259, 272, 256, 312, 0,
	362, 390, 255, 381, 733, 373, 238, 732, 372, 311,
	359, 364, 297, 291, 237, 361, 295, 290, 283, 263,
	406, 276, 323, 289, 324, 277, 301, 300, 302, 0,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 284, 0, 0, 0, 391, 0, 335, 317,
	0, 0, 0, 333, 287, 360, 325, 366, 350, 374,
	741, 326, 229, 351, 258, 298, 240, 242, 254, 260,
	262, 264, 265, 307, 308, 320, 339, 353, 354, 355,
	257, 250, 334, 251, 274, 252, 230, 341, 253, 232,
	321, 358, 0, 270, 330, 294, 233, 293, 322, 357,
	356, 241, 382, 388, 389, 394, 0, 395, 0, 0,
	0, 403, 408, 409, 410, 412, 413, 414, 415, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	387, 268, 226, 227, 422, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 386, 0, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 420, 319,
	0, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 368, 380, 398, 401, 0,
	0, 0, 231, 400, 0, 0, 0, 0, 0, 0,
	742, 371, 0, 0, 0, 379, 0, 0, 0, 0,
	0, 745, 303, 304, 305, 306, 271, 0, 248, 399,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 267,
	273, 411, 275, 247, 318, 269, 377, 281, 0, 404,
	0, 405, 0, 0, 0, 0, 753, 748, 749, 282,
	288, 331, 376, 316, 336, 245, 367, 343, 750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 286, 0, 327, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 352, 0, 0,
	383, 384, 385, 407, 369, 0, 419, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 344, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 349, 365,
	244, 340, 378, 249, 347, 239, 314, 337, 0, 0,
	236, 363, 346, 296, 279, 280, 235, 0, 332, 259,
	272, 256, 312, 0, 362, 390, 255, 381, 0, 373,
	238, 0, 372, 311, 359, 364, 297, 291, 237, 361,
	295, 290, 283, 263, 406, 276, 323, 289, 324, 277,
	301, 300, 302, 0, 0, 0, 0, 0, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1847, 375, 0, 0, 0,
	1852, 1850, 0, 348, 0, 1851, 284, 0, 0, 0,
	391, 0, 335, 317, 0, 0, 0, 333, 287, 360,
	325, 366, 350, 374, 329, 326, 229, 351, 258, 298,
	240, 242, 254, 260, 262, 264, 265, 307, 308, 320,
	339, 353, 354, 355, 257, 250, 334, 251, 274, 252,
	230, 341, 253, 232, 321, 358, 0, 270, 330, 294,
	233, 293, 322, 357, 356, 241, 382, 388, 389, 394,
	0, 395, 0, 0, 0, 403, 408, 409, 410, 412,
	413, 414, 415, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 387, 268, 226, 227, 422, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 386, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 420, 319, 0, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 368,
	380, 398, 401, 0, 0, 0, 231, 400, 0, 0,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 379,
	0, 0, 0, 0, 0, 396, 303, 304, 305, 306,
	271, 0, 248, 399, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 267, 273, 411, 275, 247, 318, 269,
	377, 281, 0, 404, 0, 405, 0, 0, 0, 0,
	310, 278, 342, 282, 288, 331, 376, 316, 336, 245,
	367, 343, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 286, 0, 327, 266, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 222, 223, 224,
	225, 156, 352, 0, 383, 384, 385, 407, 369, 0,
	419, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 285, 0, 0, 0, 0, 108, 0,
	0, 344, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	1624, 0, 178, 0, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 349, 365, 244, 340, 378, 249, 347,
	239, 314, 337, 0, 0, 236, 363, 346, 296, 279,
	280, 235, 0, 332, 259, 272, 256, 312, 0, 362,
	390, 255, 381, 0, 373, 238, 0, 372, 311, 359,
	364, 297, 291, 237, 361, 295, 290, 283, 263, 406,
	276, 323, 289, 324, 277, 301, 300, 302, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 284, 0, 0, 0, 391, 0, 335, 317, 0,
	0, 0, 333, 287, 360, 325, 366, 350, 374, 329,
	326, 229, 351, 258, 298, 240, 242, 254, 260, 262,
	264, 265, 307, 308, 320, 339, 353, 354, 355, 257,
	250, 334, 251, 274, 252, 230, 341, 253, 232, 321,
	358, 0, 270, 330, 294, 233, 293, 322, 357, 356,
	241, 382, 388, 389, 394, 0, 395, 0, 0, 0,
	403, 408, 409, 410, 412, 413, 414, 415, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 387,
	268, 226, 227, 422, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 386, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 420, 319, 0,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 368, 380, 398, 401, 0, 0,
	0, 231, 400, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	396, 303, 304, 305, 306, 271, 0, 248, 399, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 267, 273,
	411, 275, 247, 318, 269, 377, 281, 0, 404, 0,
	405, 0, 0, 0, 0, 310, 278, 342, 282, 288,
	331, 376, 316, 336, 245, 367, 343, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	286, 126, 327, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 156, 352, 0, 383,
	384, 385, 407, 369, 0, 419, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 285, 0,
	0, 0, 0, 108, 0, 0, 344, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 1615, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 349, 365,
	244, 340, 378, 249, 347, 239, 314, 337, 0, 0,
	236, 363, 346, 296, 279, 280, 235, 0, 332, 259,
	272, 256, 312, 0, 362, 390, 255, 381, 0, 373,
	238, 0, 372, 311, 359, 364, 297, 291, 237, 361,
	295, 290, 283, 263, 406, 276, 323, 289, 324, 277,
	301, 300, 302, 0, 0, 0, 0, 0, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 0, 0, 0,
	0, 0, 0, 348, 0, 0, 284, 0, 0, 0,
	391, 0, 335, 317, 0, 0, 0, 333, 287, 360,
	325, 366, 350, 374, 329, 326, 229, 351, 258, 298,
	240, 242, 254, 260, 262, 264, 265, 307, 308, 320,
	339, 353, 354, 355, 257, 250, 334, 251, 274, 252,
	230, 341, 253, 232, 321, 358, 0, 270, 330, 294,
	233, 293, 322, 357, 356, 241, 382, 388, 389, 394,
	0, 395, 0, 0, 0, 403, 408, 409, 410, 412,
	413, 414, 415, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 387, 268, 226, 227, 422, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 386, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 420, 319, 0, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 368,
	380, 398, 401, 0, 0, 0, 231, 400, 0, 0,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 379,
	0, 0, 0, 0, 0, 396, 303, 304, 305, 306,
	271, 0, 248, 399, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 267, 273, 411, 275, 247, 318, 269,
	377, 281, 0, 404, 0, 405, 0, 0, 0, 0,
	310, 278, 342, 282, 288, 331, 376, 316, 336, 245,
	367, 343, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 286, 126, 327, 266, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 222, 223, 224,
	225, 156, 352, 0, 383, 384, 385, 407, 369, 0,
	419, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 285, 0, 0, 0, 0, 108, 0,
	0, 344, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1531,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 349, 365, 244, 340, 378, 249, 347,
	239, 314, 337, 0, 0, 236, 363, 346, 296, 279,
	280, 235, 0, 332, 259, 272, 256, 312, 0, 362,
	390, 255, 381, 0, 373, 238, 0, 372, 311, 359,
	364, 297, 291, 237, 361, 295, 290, 283, 263, 406,
	276, 323, 289, 324, 277, 301, 300, 302, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 284, 0, 0, 0, 391, 0, 335, 317, 0,
	0, 0, 333, 287, 360, 325, 366, 350, 374, 329,
	326, 229, 351, 258, 298, 240, 242, 254, 260, 262,
	264, 265, 307, 308, 320, 339, 353, 354, 355, 257,
	250, 334, 251, 274, 252, 230, 341, 253, 232, 321,
	358, 0, 270, 330, 294, 233, 293, 322, 357, 356,
	241, 382, 388, 389, 394, 0, 395, 0, 0, 0,
	403, 408, 409, 410, 412, 413, 414, 415, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 387,
	268, 226, 227, 422, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 386, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 420, 319, 0,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 368, 380, 398, 401, 0, 0,
	0, 231, 400, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	396, 303, 304, 305, 306, 271, 0, 248, 399, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 267, 273,
	411, 275, 247, 318, 269, 377, 281, 0, 404, 0,
	405, 0, 0, 0, 0, 310, 278, 342, 282, 288,
	331, 376, 316, 336, 245, 367, 343, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	286, 126, 327, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 352, 0, 0, 383,
	384, 385, 407, 369, 0, 419, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 344, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 751, 752, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 349, 365, 244,
	340, 378, 249, 347, 239, 314, 337, 0, 0, 236,
	363, 346, 296, 279, 280, 235, 0, 332, 259, 272,
	256, 312, 0, 362, 390, 255, 381, 733, 373, 238,
	732, 372, 311, 359, 364, 297, 291, 237, 361, 295,
	290, 283, 263, 406, 276, 323, 289, 324, 277, 301,
	300, 302, 0, 0, 0, 0, 0, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 284, 0, 0, 0, 391,
	0, 335, 317, 0, 0, 0, 333, 287, 360, 325,
	366, 350, 374, 329, 326, 229, 351, 258, 298, 240,
	242, 254, 260, 262, 264, 265, 307, 308, 320, 339,
	353, 354, 355, 257, 250, 334, 251, 274, 252, 230,
	341, 253, 232, 321, 358, 0, 270, 330, 294, 233,
	293, 322, 357, 356, 241, 382, 388, 389, 394, 0,
	395, 0, 0, 0, 403, 408, 409, 410, 412, 413,
	414, 415, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 387, 268, 226, 227, 422, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	386, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 420, 319, 0, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 368, 380,
	398, 401, 0, 0, 0, 231, 400, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 396, 303, 304, 305, 306, 271,
	0, 248, 399, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 267, 273, 411, 275, 247, 318, 269, 377,
	281, 0, 404, 0, 405, 0, 0, 0, 0, 753,
	748, 749, 282, 288, 331, 376, 316, 336, 245, 367,
	343, 750, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 286, 0, 327, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	352, 0, 0, 383, 384, 385, 407, 369, 0, 419,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	2183, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 344,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 349, 365, 244, 340, 378, 249, 347, 239, 314,
	337, 0, 0, 236, 363, 346, 296, 279, 280, 235,
	0, 332, 259, 272, 256, 312, 0, 362, 390, 255,
	381, 0, 373, 238, 0, 372, 311, 359, 364, 297,
	291, 237, 361, 295, 290, 283, 263, 406, 276, 323,
	289, 324, 277, 301, 300, 302, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	2186, 0, 0, 2185, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 284,
	0, 0, 0, 391, 0, 335, 317, 0, 0, 0,
	333, 287, 360, 325, 366, 350, 374, 329, 326, 229,
	351, 258, 298, 240, 242, 254, 260, 262, 264, 265,
	307, 308, 320, 339, 353, 354, 355, 257, 250, 334,
	251, 274, 252, 230, 341, 253, 232, 321, 358, 0,
	270, 330, 294, 233, 293, 322, 357, 356, 241, 382,
	388, 389, 394, 0, 395, 0, 0, 0, 403, 408,
	409, 410, 412, 413, 414, 415, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 387, 268, 226,
	227, 422, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 386, 0, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 420, 319, 0, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 368, 380, 398, 401, 0, 0, 0, 231,
	400, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 396, 303,
	304, 305, 306, 271, 0, 248, 399, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 267, 273, 411, 275,
	247, 318, 269, 377, 281, 0, 404, 0, 405, 0,
	0, 0, 0, 310, 278, 342, 282, 288, 331, 376,
	316, 336, 245, 367, 343, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 286, 0,
	327, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 352, 0, 0, 383, 384, 385,
	407, 369, 0, 419, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 1146, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 344, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 1144, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1142, 0, 0,
	0, 0, 0, 0, 234, 349, 365, 244, 340, 378,
	249, 347, 239, 314, 337, 0, 0, 236, 363, 346,
	296, 279, 280, 235, 0, 332, 259, 272, 256, 312,
	0, 362, 390, 255, 381, 0, 373, 238, 0, 372,
	311, 359, 364, 297, 291, 237, 361, 295, 290, 283,
	263, 406, 276, 323, 289, 324, 277, 301, 300, 302,
	0, 0, 0, 0, 0, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 284, 0, 0, 0, 391, 0, 335,
	317, 0, 0, 0, 333, 287, 360, 325, 366, 350,
	374, 329, 326, 229, 351, 258, 298, 240, 242, 254,
	260, 262, 264, 265, 307, 308, 320, 339, 353, 354,
	355, 257, 250, 334, 251, 274, 252, 230, 341, 253,
	232, 321, 358, 0, 270, 330, 294, 233, 293, 322,
	357, 356, 241, 382, 388, 389, 394, 0, 395, 0,
	0, 0, 403, 408, 409, 410, 412, 413, 414, 415,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 387, 268, 226, 227, 422, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 386, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 420,
	319, 0, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 368, 380, 398, 401,
	0, 0, 0, 231, 400, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 396, 303, 304, 305, 306, 271, 0, 248,
	399, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	267, 273, 411, 275, 247, 318, 269, 377, 281, 0,
	404, 0, 405, 0, 0, 0, 0, 310, 278, 342,
	282, 288, 331, 376, 316, 336, 245, 367, 343, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 286, 0, 327, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 222, 223, 224, 225, 352, 0,
	0, 383, 384, 385, 407, 369, 0, 419, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 1140, 0, 285,
	0, 0, 0, 0, 0, 0, 0, 344, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 1144, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1142, 0, 0, 0, 0, 0, 0, 234, 349,
	365, 244, 340, 378, 249, 347, 239, 314, 337, 0,
	0, 236, 363, 346, 296, 279, 280, 235, 0, 332,
	259, 272, 256, 312, 0, 362, 390, 255, 381, 0,
	373, 238, 0, 372, 311, 359, 364, 297, 291, 237,
	361, 295, 290, 283, 263, 406, 276, 323, 289, 324,
	277, 301, 300, 302, 0, 0, 0, 0, 0, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 284, 0, 0,
	0, 391, 0, 335, 317, 0, 0, 0, 333, 287,
	360, 325, 366, 350, 374, 329, 326, 229, 351, 258,
	298, 240, 242, 254, 260, 262, 264, 265, 307, 308,
	320, 339, 353, 354, 355, 257, 250, 334, 251, 274,
	252, 230, 341, 253, 232, 321, 358, 0, 270, 330,
	294, 233, 293, 322, 357, 356, 241, 382, 388, 389,
	394, 0, 395, 0, 0, 0, 403, 408, 409, 410,
	412, 413, 414, 415, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 387, 268, 226, 227, 422,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 386, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 420, 319, 0, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	368, 380, 398, 401, 0, 0, 0, 231, 400, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 396, 303, 304, 305,
	306, 271, 0, 248, 399, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 267, 273, 411, 275, 247, 318,
	269, 377, 281, 0, 404, 0, 405, 0, 0, 0,
	0, 310, 278, 342, 282, 288, 331, 376, 316, 336,
	245, 367, 343, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 286, 0, 327, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 352, 0, 0, 383, 384, 385, 407, 369,
	0, 419, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 344, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2832, 0, 178, 589, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 349, 365, 244, 340, 378, 249, 347,
	239, 314, 337, 0, 0, 236, 363, 346, 296, 279,
	280, 235, 0, 332, 259, 272, 256, 312, 0, 362,
	390, 255, 381, 0, 373, 238, 0, 372, 311, 359,
	364, 297, 291, 237, 361, 295, 290, 283, 263, 406,
	276, 323, 289, 324, 277, 301, 300, 302, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 284, 0, 0, 0, 391, 0, 335, 317, 0,
	0, 0, 333, 287, 360, 325, 366, 350, 374, 329,
	326, 229, 351, 258, 298, 240, 242, 254, 260, 262,
	264, 265, 307, 308, 320, 339, 353, 354, 355, 257,
	250, 334, 251, 274, 252, 230, 341, 253, 232, 321,
	358, 0, 270, 330, 294, 233, 293, 322, 357, 356,
	241, 382, 388, 389, 394, 0, 395, 0, 0, 0,
	403, 408, 409, 410, 412, 413, 414, 415, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 387,
	268, 226, 227, 422, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 386, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 420, 319, 0,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 368, 380, 398, 401, 0, 0,
	0, 231, 400, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	396, 303, 304, 305, 306, 271, 0, 248, 399, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 267, 273,
	411, 275, 247, 318, 269, 377, 281, 0, 404, 0,
	405, 0, 0, 0, 0, 310, 278, 342, 282, 288,
	331, 376, 316, 336, 245, 367, 343, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	286, 0, 327, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 352, 0, 0, 383,
	384, 385, 407, 369, 0, 419, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 344, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 1144,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2546,
	0, 0, 0, 0, 0, 0, 234, 349, 365, 244,
	340, 378, 249, 347, 239, 314, 337, 0, 0, 236,
	363, 346, 296, 279, 280, 235, 0, 332, 259, 272,
	256, 312, 0, 362, 390, 255, 381, 0, 373, 238,
	0, 372, 311, 359, 364, 297, 291, 237, 361, 295,
	290, 283, 263, 406, 276, 323, 289, 324, 277, 301,
	300, 302, 0, 0, 0, 0, 0, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 284, 0, 0, 0, 391,
	0, 335, 317, 0, 0, 0, 333, 287, 360, 325,
	366, 350, 374, 329, 326, 229, 351, 258, 298, 240,
	242, 254, 260, 262, 264, 265, 307, 308, 320, 339,
	353, 354, 355, 257, 250, 334, 251, 274, 252, 230,
	341, 253, 232, 321, 358, 0, 270, 330, 294, 233,
	293, 322, 357, 356, 241, 382, 388, 389, 394, 0,
	395, 0, 0, 0, 403, 408, 409, 410, 412, 413,
	414, 415, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 387, 268, 226, 227, 422, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	386, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 420, 319, 0, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 368, 380,
	398, 401, 0, 0, 0, 231, 400, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 396, 303, 304, 305, 306, 271,
	0, 248, 399, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 267, 273, 411, 275, 247, 318, 269, 377,
	281, 0, 404, 0, 405, 0, 0, 0, 0, 310,
	278, 342, 282, 288, 331, 376, 316, 336, 245, 367,
	343, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 286, 0, 327, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	352, 0, 0, 383, 384, 385, 407, 369, 0, 419,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 344,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 1144, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1142, 0, 0, 0, 0, 0, 0,
	234, 349, 365, 244, 340, 378, 249, 347, 239, 314,
	337, 0, 0, 236, 363, 346, 296, 279, 280, 235,
	0, 332, 259, 272, 256, 312, 0, 362, 390, 255,
	381, 0, 373, 238, 0, 372, 311, 359, 364, 297,
	291, 237, 361, 295, 290, 283, 263, 406, 276, 323,
	289, 324, 277, 301, 300, 302, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 284,
	0, 0, 0, 391, 0, 335, 317, 0, 0, 0,
	333, 287, 360, 325, 366, 350, 374, 329, 326, 229,
	351, 258, 298, 240, 242, 254, 260, 262, 264, 265,
	307, 308, 320, 339, 353, 354, 355, 257, 250, 334,
	251, 274, 252, 230, 341, 253, 232, 321, 358, 0,
	270, 330, 294, 233, 293, 322, 357, 356, 241, 382,
	388, 389, 394, 0, 395, 0, 0, 0, 403, 408,
	409, 410, 412, 413, 414, 415, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 387, 268, 226,
	227, 422, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 386, 0, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 420, 319, 0, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 368, 380, 398, 401, 0, 0, 0, 231,
	400, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 396, 303,
	304, 305, 306, 271, 0, 248, 399, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 267, 273, 411, 275,
	247, 318, 269, 377, 281, 0, 404, 0, 405, 0,
	0, 0, 0, 310, 278, 342, 282, 288, 331, 376,
	316, 336, 245, 367, 343, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 286, 0,
	327, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 352, 0, 0, 383, 384, 385,
	407, 369, 0, 419, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1905, 0, 0,
	0, 0, 261, 0, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 344, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 1907, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 349, 365, 244, 340, 378,
	249, 347, 239, 314, 337, 0, 0, 236, 363, 346,
	296, 279, 280, 235, 0, 332, 259, 272, 256, 312,
	0, 362, 390, 255, 381, 0, 373, 238, 0, 372,
	311, 359, 364, 297, 291, 237, 361, 295, 290, 283,
	263, 406, 276, 323, 289, 324, 277, 301, 300, 302,
	0, 0, 0, 0, 0, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 284, 0, 0, 0, 391, 0, 335,
	317, 0, 0, 0, 333, 287, 360, 325, 366, 350,
	374, 329, 326, 229, 351, 258, 298, 240, 242, 254,
	260, 262, 264, 265, 307, 308, 320, 339, 353, 354,
	355, 257, 250, 334, 251, 274, 252, 230, 341, 253,
	232, 321, 358, 0, 270, 330, 294, 233, 293, 322,
	357, 356, 241, 382, 388, 389, 394, 0, 395, 0,
	0, 0, 403, 408, 409, 410, 412, 413, 414, 415,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 387, 268, 226, 227, 422, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 386, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 420,
	319, 0, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 368, 380, 398, 401,
	0, 0, 0, 231, 400, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 396, 303, 304, 305, 306, 271, 0, 248,
	399, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	267, 273, 411, 275, 247, 318, 269, 377, 281, 0,
	404, 0, 405, 0, 0, 0, 0, 310, 278, 342,
	282, 288, 331, 376, 316, 336, 245, 367, 343, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 286, 0, 327, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 222, 223, 224, 225, 352, 0,
	0, 383, 384, 385, 407, 369, 0, 419, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 1920, 0, 285,
	0, 0, 0, 0, 0, 0, 0, 344, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 1144, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 349,
	365, 244, 340, 378, 249, 347, 239, 314, 337, 0,
	0, 236, 363, 346, 296, 279, 280, 235, 0, 332,
	259, 272, 256, 312, 0, 362, 390, 255, 381, 0,
	373, 238, 0, 372, 311, 359, 364, 297, 291, 237,
	361, 295, 290, 283, 263, 406, 276, 323, 289, 324,
	277, 301, 300, 302, 0, 0, 0, 0, 0, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 284, 0, 0,
	0, 391, 0, 335, 317, 0, 0, 0, 333, 287,
	360, 325, 366, 350, 374, 329, 326, 229, 351, 258,
	298, 240, 242, 254, 260, 262, 264, 265, 307, 308,
	320, 339, 353, 354, 355, 257, 250, 334, 251, 274,
	252, 230, 341, 253, 232, 321, 358, 0, 270, 330,
	294, 233, 293, 322, 357, 356, 241, 382, 388, 389,
	394, 0, 395, 0, 0, 0, 403, 408, 409, 410,
	412, 413, 414, 415, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 387, 268, 226, 227, 422,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 386, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 420, 319, 0, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	368, 380, 398, 401, 0, 0, 0, 231, 400, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 396, 303, 304, 305,
	306, 271, 0, 248, 399, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 267, 273, 411, 275, 247, 318,
	269, 377, 281, 0, 404, 0, 405, 0, 0, 0,
	0, 310, 278, 342, 282, 288, 331, 376, 316, 336,
	245, 367, 343, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 286, 0, 327, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 352, 0, 0, 383, 384, 385, 407, 369,
	0, 419, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 344, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2910, 0, 178, 0, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 349, 365, 244, 340, 378, 249, 347,
	239, 314, 337, 0, 0, 236, 363, 346, 296, 279,
	280, 235, 0, 332, 259, 272, 256, 312, 0, 362,
	390, 255, 381, 0, 373, 238, 0, 372, 311, 359,
	364, 297, 291, 237, 361, 295, 290, 283, 263, 406,
	276, 323, 289, 324, 277, 301, 300, 302, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 284, 0, 0, 0, 391, 0, 335, 317, 0,
	0, 0, 333, 287, 360, 325, 366, 350, 374, 329,
	326, 229, 351, 258, 298, 240, 242, 254, 260, 262,
	264, 265, 307, 308, 320, 339, 353, 354, 355, 257,
	250, 334, 251, 274, 252, 230, 341, 253, 232, 321,
	358, 0, 270, 330, 294, 233, 293, 322, 357, 356,
	241, 382, 388, 389, 394, 0, 395, 0, 0, 0,
	403, 408, 409, 410, 412, 413, 414, 415, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 387,
	268, 226, 227, 422, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 386, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 420, 319, 0,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 368, 380, 398, 401, 0, 0,
	0, 231, 400, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	396, 303, 304, 305, 306, 271, 0, 248, 399, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 267, 273,
	411, 275, 247, 318, 269, 377, 281, 0, 404, 0,
	405, 0, 0, 0, 0, 310, 278, 342, 282, 288,
	331, 376, 316, 336, 245, 367, 343, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	286, 0, 327, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 352, 0, 0, 383,
	384, 385, 407, 369, 0, 419, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 344, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 589, 0, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 349, 365, 244,
	340, 378, 249, 347, 239, 314, 337, 0, 0, 236,
	363, 346, 296, 279, 280, 235, 0, 332, 259, 272,
	256, 312, 0, 362, 390, 255, 381, 0, 373, 238,
	0, 372, 311, 359, 364, 297, 291, 237, 361, 295,
	290, 283, 263, 406, 276, 323, 289, 324, 277, 301,
	300, 302, 0, 0, 0, 0, 0, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 284, 0, 0, 0, 391,
	0, 335, 317, 0, 0, 0, 333, 287, 360, 325,
	366, 350, 374, 329, 326, 229, 351, 258, 298, 240,
	242, 254, 260, 262, 264, 265, 307, 308, 320, 339,
	353, 354, 355, 257, 250, 334, 251, 274, 252, 230,
	341, 253, 232, 321, 358, 0, 270, 330, 294, 233,
	293, 322, 357, 356, 241, 382, 388, 389, 394, 0,
	395, 0, 0, 0, 403, 408, 409, 410, 412, 413,
	414, 415, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 387, 268, 226, 227, 422, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	386, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 420, 319, 0, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 368, 380,
	398, 401, 0, 0, 0, 231, 400, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 396, 303, 304, 305, 306, 271,
	0, 248, 399, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 267, 273, 411, 275, 247, 318, 269, 377,
	281, 0, 404, 0, 405, 0, 0, 0, 0, 310,
	278, 342, 282, 288, 331, 376, 316, 336, 245, 367,
	343, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 286, 0, 327, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	352, 0, 0, 383, 384, 385, 407, 369, 0, 419,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 344,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2847, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 349, 365, 244, 340, 378, 249, 347, 239, 314,
	337, 0, 0, 236, 363, 346, 296, 279, 280, 235,
	0, 332, 259, 272, 256, 312, 0, 362, 390, 255,
	381, 0, 373, 238, 0, 372, 311, 359, 364, 297,
	291, 237, 361, 295, 290, 283, 263, 406, 276, 323,
	289, 324, 277, 301, 300, 302, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 284,
	0, 0, 0, 391, 0, 335, 317, 0, 0, 0,
	333, 287, 360, 325, 366, 350, 374, 329, 326, 229,
	351, 258, 298, 240, 242, 254, 260, 262, 264, 265,
	307, 308, 320, 339, 353, 354, 355, 257, 250, 334,
	251, 274, 252, 230, 341, 253, 232, 321, 358, 0,
	270, 330, 294, 233, 293, 322, 357, 356, 241, 382,
	388, 389, 394, 0, 395, 0, 0, 0, 403, 408,
	409, 410, 412, 413, 414, 415, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 387, 268, 226,
	227, 422, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 386, 0, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 420, 319, 0, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 368, 380, 398, 401, 0, 0, 0, 231,
	400, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 396, 303,
	304, 305, 306, 271, 0, 248, 399, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 267, 273, 411, 275,
	247, 318, 269, 377, 281, 0, 404, 0, 405, 0,
	0, 0, 0, 310, 278, 342, 282, 288, 331, 376,
	316, 336, 245, 367, 343, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 286, 0,
	327, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 352, 0, 0, 383, 384, 385,
	407, 369, 0, 419, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 344, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 349, 365, 244, 340, 378,
	249, 347, 239, 314, 337, 0, 0, 236, 363, 346,
	296, 279, 280, 235, 0, 332, 259, 272, 256, 312,
	0, 362, 390, 255, 381, 0, 373, 238, 0, 372,
	311, 359, 364, 297, 291, 237, 361, 295, 290, 283,
	263, 406, 276, 323, 289, 324, 277, 301, 300, 302,
	0, 0, 0, 0, 0, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 2788, 0, 0,
	348, 0, 0, 284, 0, 0, 0, 391, 0, 335,
	317, 0, 0, 0, 333, 287, 360, 325, 366, 350,
	374, 329, 326, 229, 351, 258, 298, 240, 242, 254,
	260, 262, 264, 265, 307, 308, 320, 339, 353, 354,
	355, 257, 250, 334, 251, 274, 252, 230, 341, 253,
	232, 321, 358, 0, 270, 330, 294, 233, 293, 322,
	357, 356, 241, 382, 388, 389, 394, 0, 395, 0,
	0, 0, 403, 408, 409, 410, 412, 413, 414, 415,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 387, 268, 226, 227, 422, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 386, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 420,
	319, 0, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 368, 380, 398, 401,
	0, 0, 0, 231, 400, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 396, 303, 304, 305, 306, 271, 0, 248,
	399, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	267, 273, 411, 275, 247, 318, 269, 377, 281, 0,
	404, 0, 405, 0, 0, 0, 0, 310, 278, 342,
	282, 288, 331, 376, 316, 336, 245, 367, 343, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 286, 0, 327, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 222, 223, 224, 225, 352, 0,
	0, 383, 384, 385, 407, 369, 0, 419, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 285,
	0, 0, 0, 0, 0, 0, 0, 344, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2627, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 349,
	365, 244, 340, 378, 249, 347, 239, 314, 337, 0,
	0, 236, 363, 346, 296, 279, 280, 235, 0, 332,
	259, 272, 256, 312, 0, 362, 390, 255, 381, 0,
	373, 238, 0, 372, 311, 359, 364, 297, 291, 237,
	361, 295, 290, 283, 263, 406, 276, 323, 289, 324,
	277, 301, 300, 302, 0, 0, 0, 0, 0, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 284, 0, 0,
	0, 391, 0, 335, 317, 0, 0, 0, 333, 287,
	360, 325, 366, 350, 374, 329, 326, 229, 351, 258,
	298, 240, 242, 254, 260, 262, 264, 265, 307, 308,
	320, 339, 353, 354, 355, 257, 250, 334, 251, 274,
	252, 230, 341, 253, 232, 321, 358, 0, 270, 330,
	294, 233, 293, 322, 357, 356, 241, 382, 388, 389,
	394, 0, 395, 0, 0, 0, 403, 408, 409, 410,
	412, 413, 414, 415, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 387, 268, 226, 227, 422,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 386, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 420, 319, 0, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	368, 380, 398, 401, 0, 0, 0, 231, 400, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 396, 303, 304, 305,
	306, 271, 0, 248, 399, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 267, 273, 411, 275, 247, 318,
	269, 377, 281, 0, 404, 0, 405, 0, 0, 0,
	0, 310, 278, 342, 282, 288, 331, 376, 316, 336,
	245, 367, 343, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 286, 0, 327, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 352, 0, 0, 383, 384, 385, 407, 369,
	0, 419, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 344, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 349, 365, 244, 340, 378, 249, 347,
	239, 314, 337, 0, 0, 236, 363, 346, 296, 279,
	280, 235, 0, 332, 259, 272, 256, 312, 0, 362,
	390, 255, 381, 0, 373, 238, 0, 372, 311, 359,
	364, 297, 291, 237, 361, 295, 290, 283, 263, 406,
	276, 323, 289, 324, 277, 301, 300, 302, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 2671, 0, 0, 348, 0,
	0, 284, 0, 0, 0, 391, 0, 335, 317, 0,
	0, 0, 333, 287, 360, 325, 366, 350, 374, 329,
	326, 229, 351, 258, 298, 240, 242, 254, 260, 262,
	264, 265, 307, 308, 320, 339, 353, 354, 355, 257,
	250, 334, 251, 274, 252, 230, 341, 253, 232, 321,
	358, 0, 270, 330, 294, 233, 293, 322, 357, 356,
	241, 382, 388, 389, 394, 0, 395, 0, 0, 0,
	403, 408, 409, 410, 412, 413, 414, 415, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 387,
	268, 226, 227, 422, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 386, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 420, 319, 0,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 368, 380, 398, 401, 0, 0,
	0, 231, 400, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	396, 303, 304, 305, 306, 271, 0, 248, 399, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 267, 273,
	411, 275, 247, 318, 269, 377, 281, 0, 404, 0,
	405, 0, 0, 0, 0, 310, 278, 342, 282, 288,
	331, 376, 316, 336, 245, 367, 343, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	286, 0, 327, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 352, 0, 0, 383,
	384, 385, 407, 369, 0, 419, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 344, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 349, 365, 244,
	340, 378, 249, 347, 239, 314, 337, 0, 0, 236,
	363, 346, 296, 279, 280, 235, 0, 332, 259, 272,
	256, 312, 0, 362, 390, 255, 381, 0, 373, 238,
	0, 372, 311, 359, 364, 297, 291, 237, 361, 295,
	290, 283, 263, 406, 276, 323, 289, 324, 277, 301,
	300, 302, 0, 0, 0, 0, 0, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 284, 0, 0, 0, 391,
	0, 335, 317, 0, 0, 0, 333, 287, 360, 325,
	366, 350, 374, 329, 326, 229, 351, 258, 298, 240,
	242, 254, 260, 262, 264, 265, 307, 308, 320, 339,
	353, 354, 355, 257, 250, 334, 251, 274, 252, 230,
	341, 253, 232, 321, 358, 0, 270, 330, 294, 233,
	293, 322, 357, 356, 241, 382, 388, 389, 394, 0,
	395, 0, 0, 0, 403, 408, 409, 410, 412, 413,
	414, 415, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 387, 268, 226, 227, 422, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	386, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 420, 319, 0, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 368, 380,
	398, 401, 0, 0, 0, 231, 400, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 396, 303, 304, 305, 306, 271,
	0, 248, 399, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 267, 273, 411, 275, 247, 318, 269, 377,
	281, 0, 404, 0, 405, 0, 0, 0, 0, 310,
	278, 342, 282, 288, 331, 376, 316, 336, 245, 367,
	343, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 286, 0, 327, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	352, 0, 0, 383, 384, 385, 407, 369, 0, 419,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 344,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1531, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 349, 365, 244, 340, 378, 249, 347, 239, 314,
	337, 0, 0, 236, 363, 346, 296, 279, 280, 235,
	0, 332, 259, 272, 256, 312, 0, 362, 390, 255,
	381, 0, 373, 238, 0, 372, 311, 359, 364, 297,
	291, 237, 361, 295, 290, 283, 263, 406, 276, 323,
	289, 324, 277, 301, 300, 302, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 284,
	0, 0, 0, 391, 0, 335, 317, 0, 0, 0,
	333, 287, 360, 325, 366, 350, 374, 329, 326, 229,
	351, 258, 298, 240, 242, 254, 260, 262, 264, 265,
	307, 308, 320, 339, 353, 354, 355, 257, 250, 334,
	251, 274, 252, 230, 341, 253, 232, 321, 358, 0,
	270, 330, 294, 233, 293, 322, 357, 356, 241, 382,
	388, 389, 394, 0, 395, 0, 0, 0, 403, 408,
	409, 410, 412, 413, 414, 415, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 387, 268, 226,
	227, 422, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 386, 0, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 420, 319, 0, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 368, 380, 398, 401, 0, 0, 0, 231,
	400, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 396, 303,
	304, 305, 306, 271, 0, 248, 399, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 267, 273, 411, 275,
	247, 318, 269, 377, 281, 0, 404, 0, 405, 0,
	0, 0, 0, 310, 278, 342, 282, 288, 331, 376,
	316, 336, 245, 367, 343, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 286, 0,
	327, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 352, 0, 0, 383, 384, 385,
	407, 369, 0, 419, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 344, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2465, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 349, 365, 244, 340, 378,
	249, 347, 239, 314, 337, 0, 0, 236, 363, 346,
	296, 279, 280, 235, 0, 332, 259, 272, 256, 312,
	0, 362, 390, 255, 381, 0, 373, 238, 0, 372,
	311, 359, 364, 297, 291, 237, 361, 295, 290, 283,
	263, 406, 276, 323, 289, 324, 277, 301, 300, 302,
	0, 0, 0, 0, 0, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 284, 0, 0, 0, 391, 0, 335,
	317, 0, 0, 0, 333, 287, 360, 325, 366, 350,
	374, 329, 326, 229, 351, 258, 298, 240, 242, 254,
	260, 262, 264, 265, 307, 308, 320, 339, 353, 354,
	355, 257, 250, 334, 251, 274, 252, 230, 341, 253,
	232, 321, 358, 0, 270, 330, 294, 233, 293, 322,
	357, 356, 241, 382, 388, 389, 394, 0, 395, 0,
	0, 0, 403, 408, 409, 410, 412, 413, 414, 415,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 387, 268, 226, 227, 422, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 386, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 420,
	319, 0, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 368, 380, 398, 401,
	0, 0, 0, 231, 400, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 396, 303, 304, 305, 306, 271, 0, 248,
	399, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	267, 273, 411, 275, 247, 318, 269, 377, 281, 0,
	404, 0, 405, 0, 0, 0, 0, 310, 278, 342,
	282, 288, 331, 376, 316, 336, 245, 367, 343, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 286, 0, 327, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 222, 223, 224, 225, 352, 0,
	0, 383, 384, 385, 407, 369, 0, 419, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 285,
	0, 0, 0, 0, 0, 0, 0, 344, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 2333, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 349,
	365, 244, 340, 378, 249, 347, 239, 314, 337, 0,
	0, 236, 363, 346, 296, 279, 280, 235, 0, 332,
	259, 272, 256, 312, 0, 362, 390, 255, 381, 0,
	373, 238, 0, 372, 311, 359, 364, 297, 291, 237,
	361, 295, 290, 283, 263, 406, 276, 323, 289, 324,
	277, 301, 300, 302, 0, 0, 0, 0, 0, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 284, 0, 0,
	0, 391, 0, 335, 317, 0, 0, 0, 333, 287,
	360, 325, 366, 350, 374, 329, 326, 229, 351, 258,
	298, 240, 242, 254, 260, 262, 264, 265, 307, 308,
	320, 339, 353, 354, 355, 257, 250, 334, 251, 274,
	252, 230, 341, 253, 232, 321, 358, 0, 270, 330,
	294, 233, 293, 322, 357, 356, 241, 382, 388, 389,
	394, 0, 395, 0, 0, 0, 403, 408, 409, 410,
	412, 413, 414, 415, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 387, 268, 226, 227, 422,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 386, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 420, 319, 0, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	368, 380, 398, 401, 0, 0, 0, 231, 400, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 396, 303, 304, 305,
	306, 271, 0, 248, 399, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 267, 273, 411, 275, 247, 318,
	269, 377, 281, 0, 404, 0, 405, 0, 0, 0,
	0, 310, 278, 342, 282, 288, 331, 376, 316, 336,
	245, 367, 343, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 286, 0, 327, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 352, 0, 0, 383, 384, 385, 407, 369,
	0, 419, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 344, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 349, 365, 244, 340, 378, 249, 347,
	239, 314, 337, 0, 0, 236, 363, 346, 296, 279,
	280, 235, 0, 332, 259, 272, 256, 312, 0, 362,
	390, 255, 381, 0, 373, 238, 0, 372, 311, 359,
	364, 297, 291, 237, 361, 295, 290, 283, 263, 406,
	276, 323, 289, 324, 277, 301, 300, 302, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 284, 0, 0, 0, 391, 0, 335, 317, 0,
	0, 0, 333, 287, 360, 325, 366, 350, 374, 329,
	326, 229, 351, 258, 298, 240, 242, 254, 260, 262,
	264, 265, 307, 308, 320, 339, 353, 354, 355, 257,
	250, 334, 251, 274, 252, 230, 341, 253, 232, 321,
	358, 0, 270, 330, 294, 233, 293, 322, 357, 356,
	241, 382, 388, 389, 394, 0, 395, 0, 0, 0,
	403, 408, 409, 410, 412, 413, 414, 415, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 387,
	268, 226, 227, 422, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 386, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 420, 319, 0,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 368, 380, 398, 401, 0, 0,
	0, 231, 400, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	396, 303, 304, 305, 306, 271, 0, 248, 399, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 267, 273,
	411, 275, 247, 318, 269, 377, 281, 0, 404, 0,
	405, 0, 0, 0, 0, 310, 278, 342, 282, 288,
	331, 376, 316, 336, 245, 367, 343, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	286, 0, 327, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 352, 0, 0, 383,
	384, 385, 407, 369, 0, 419, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 344, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 1144,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 349, 365, 244,
	340, 378, 249, 347, 239, 314, 337, 0, 0, 236,
	363, 346, 296, 279, 280, 235, 0, 332, 259, 272,
	256, 312, 0, 362, 390, 255, 381, 0, 373, 238,
	0, 372, 311, 359, 364, 297, 291, 237, 361, 295,
	290, 283, 263, 406, 276, 323, 289, 324, 277, 301,
	300, 302, 0, 0, 0, 0, 0, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 284, 0, 0, 0, 391,
	0, 335, 317, 0, 0, 0, 333, 287, 360, 325,
	366, 350, 374, 329, 326, 229, 351, 258, 298, 240,
	242, 254, 260, 262, 264, 265, 307, 308, 320, 339,
	353, 354, 355, 257, 250, 334, 251, 274, 252, 230,
	341, 253, 232, 321, 358, 0, 270, 330, 294, 233,
	293, 322, 357, 356, 241, 382, 388, 389, 394, 0,
	395, 0, 0, 0, 403, 408, 409, 410, 412, 413,
	414, 415, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 387, 268, 226, 227, 422, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	386, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 420, 319, 0, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 368, 380,
	398, 401, 0, 0, 0, 231, 400, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 396, 303, 304, 305, 306, 271,
	0, 248, 399, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 267, 273, 411, 275, 247, 318, 269, 377,
	281, 0, 404, 0, 405, 0, 0, 0, 0, 310,
	278, 342, 282, 288, 331, 376, 316, 336, 245, 367,
	343, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 286, 0, 327, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	352, 0, 0, 383, 384, 385, 407, 369, 0, 419,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 344,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 1907, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 349, 365, 244, 340, 378, 249, 347, 239, 314,
	337, 0, 0, 236, 363, 346, 296, 279, 280, 235,
	0, 332, 259, 272, 256, 312, 0, 362, 390, 255,
	381, 0, 373, 238, 0, 372, 311, 359, 364, 297,
	291, 237, 361, 295, 290, 283, 263, 406, 276, 323,
	289, 324, 277, 301, 300, 302, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 284,
	0, 0, 0, 391, 0, 335, 317, 0, 0, 0,
	333, 287, 360, 325, 366, 350, 374, 329, 326, 229,
	351, 258, 298, 240, 242, 254, 260, 262, 264, 265,
	307, 308, 320, 339, 353, 354, 355, 257, 250, 334,
	251, 274, 252, 230, 341, 253, 232, 321, 358, 0,
	270, 330, 294, 233, 293, 322, 357, 356, 241, 382,
	388, 389, 394, 0, 395, 0, 0, 0, 403, 408,
	409, 410, 412, 413, 414, 415, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 387, 268, 226,
	227, 422, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 386, 0, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 420, 319, 0, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 368, 380, 398, 401, 0, 0, 0, 231,
	400, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 396, 303,
	304, 305, 306, 271, 0, 248, 399, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 267, 273, 411, 275,
	247, 318, 269, 377, 281, 0, 404, 0, 405, 0,
	0, 0, 0, 310, 278, 342, 282, 288, 331, 376,
	316, 336, 245, 367, 343, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 286, 0,
	327, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 352, 0, 0, 383, 384, 385,
	407, 369, 0, 419, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 344, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1639, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 349, 365, 244, 340, 378,
	249, 347, 239, 314, 337, 0, 0, 236, 363, 346,
	296, 279, 280, 235, 0, 332, 259, 272, 256, 312,
	0, 362, 390, 255, 381, 0, 373, 238, 0, 372,
	311, 359, 364, 297, 291, 237, 361, 295, 290, 283,
	263, 406, 276, 323, 289, 324, 277, 301, 300, 302,
	0, 0, 0, 0, 0, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 284, 0, 0, 0, 391, 0, 335,
	317, 0, 0, 0, 333, 287, 360, 325, 366, 350,
	374, 329, 326, 229, 351, 258, 298, 240, 242, 254,
	260, 262, 264, 265, 307, 308, 320, 339, 353, 354,
	355, 257, 250, 334, 251, 274, 252, 230, 341, 253,
	232, 321, 358, 0, 270, 330, 294, 233, 293, 322,
	357, 356, 241, 382, 388, 389, 394, 0, 395, 0,
	0, 0, 403, 408, 409, 410, 412, 413, 414, 415,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 387, 268, 226, 227, 422, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 386, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 420,
	319, 0, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 368, 380, 398, 401,
	0, 0, 0, 231, 400, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 396, 303, 304, 305, 306, 271, 0, 248,
	399, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	267, 273, 411, 275, 247, 318, 269, 377, 281, 0,
	404, 0, 405, 0, 0, 0, 0, 310, 278, 342,
	282, 288, 331, 376, 316, 336, 245, 367, 343, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 286, 0, 327, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 222, 223, 224, 225, 352, 0,
	0, 383, 384, 385, 407, 369, 0, 419, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 285,
	0, 0, 0, 0, 0, 0, 0, 344, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1935, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 349,
	365, 244, 340, 378, 249, 347, 239, 314, 337, 0,
	0, 236, 363, 346, 296, 279, 280, 235, 0, 332,
	259, 272, 256, 312, 0, 362, 390, 255, 381, 0,
	373, 238, 0, 372, 311, 359, 364, 297, 291, 237,
	361, 295, 290, 283, 263, 406, 276, 323, 289, 324,
	277, 301, 300, 302, 0, 0, 0, 0, 0, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 284, 0, 0,
	0, 391, 0, 335, 317, 0, 0, 0, 333, 287,
	360, 325, 366, 350, 374, 329, 326, 229, 351, 258,
	298, 240, 242, 254, 260, 262, 264, 265, 307, 308,
	320, 339, 353, 354, 355, 257, 250, 334, 251, 274,
	252, 230, 341, 253, 232, 321, 358, 0, 270, 330,
	294, 233, 293, 322, 357, 356, 241, 382, 388, 389,
	394, 0, 395, 0, 0, 0, 403, 408, 409, 410,
	412, 413, 414, 415, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 387, 268, 226, 227, 422,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 386, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 420, 319, 0, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	368, 380, 398, 401, 0, 0, 0, 231, 400, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 396, 303, 304, 305,
	306, 271, 0, 248, 399, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 267, 273, 411, 275, 247, 318,
	269, 377, 281, 0, 404, 0, 405, 0, 0, 0,
	0, 310, 278, 342, 282, 288, 331, 376, 316, 336,
	245, 367, 343, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 286, 0, 327, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 352, 0, 0, 383, 384, 385, 407, 369,
	0, 419, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 344, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 1933, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 349, 365, 244, 340, 378, 249, 347,
	239, 314, 337, 0, 0, 236, 363, 346, 296, 279,
	280, 235, 0, 332, 259, 272, 256, 312, 0, 362,
	390, 255, 381, 0, 373, 238, 0, 372, 311, 359,
	364, 297, 291, 237, 361, 295, 290, 283, 263, 406,
	276, 323, 289, 324, 277, 301, 300, 302, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 284, 0, 0, 0, 391, 0, 335, 317, 0,
	0, 0, 333, 287, 360, 325, 366, 350, 374, 329,
	326, 229, 351, 258, 298, 240, 242, 254, 260, 262,
	264, 265, 307, 308, 320, 339, 353, 354, 355, 257,
	250, 334, 251, 274, 252, 230, 341, 253, 232, 321,
	358, 0, 270, 330, 294, 233, 293, 322, 357, 356,
	241, 382, 388, 389, 394, 0, 395, 0, 0, 0,
	403, 408, 409, 410, 412, 413, 414, 415, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 387,
	268, 226, 227, 422, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 386, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 420, 319, 0,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 368, 380, 398, 401, 0, 0,
	0, 231, 400, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	396, 303, 304, 305, 306, 271, 0, 248, 399, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 267, 273,
	411, 275, 247, 318, 269, 377, 281, 0, 404, 0,
	405, 0, 0, 0, 0, 310, 278, 342, 282, 288,
	331, 376, 316, 336, 245, 367, 343, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	286, 0, 327, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 0, 0, 0, 383,
	384, 385, 407, 369, 352, 419, 0, 0, 1803, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 344, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 349, 365, 244, 340, 378,
	249, 347, 239, 314, 337, 0, 0, 236, 363, 346,
	296, 279, 280, 235, 0, 332, 259, 272, 256, 312,
	0, 362, 390, 255, 381, 0, 373, 238, 0, 372,
	311, 359, 364, 297, 291, 237, 361, 295, 290, 283,
	263, 406, 276, 323, 289, 324, 277, 301, 300, 302,
	0, 0, 0, 0, 0, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 284, 0, 0, 0, 391, 0, 335,
	317, 0, 0, 0, 333, 287, 360, 325, 366, 350,
	374, 329, 326, 229, 351, 258, 298, 240, 242, 254,
	260, 262, 264, 265, 307, 308, 320, 339, 353, 354,
	355, 257, 250, 334, 251, 274, 252, 230, 341, 253,
	232, 321, 358, 0, 270, 330, 294, 233, 293, 322,
	357, 356, 241, 382, 388, 389, 394, 0, 395, 0,
	0, 0, 403, 408, 409, 410, 412, 413, 414, 415,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 387, 268, 226, 227, 422, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 386, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 420,
	319, 0, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 368, 380, 398, 401,
	0, 0, 0, 231, 400, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 396, 303, 304, 305, 306, 271, 0, 248,
	399, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	267, 273, 411, 275, 247, 318, 269, 377, 281, 0,
	404, 0, 405, 0, 0, 0, 0, 310, 278, 342,
	282, 288, 331, 376, 316, 336, 245, 367, 343, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 286, 0, 327, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 222, 223, 224, 225, 352, 0,
	0, 383, 384, 385, 407, 369, 0, 419, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 285,
	0, 0, 0, 0, 0, 0, 0, 344, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 1144, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 349,
	365, 244, 340, 378, 249, 347, 239, 314, 337, 0,
	0, 236, 363, 346, 296, 279, 280, 235, 0, 332,
	259, 272, 256, 312, 0, 362, 390, 255, 381, 0,
	373, 238, 0, 372, 311, 359, 364, 297, 291, 237,
	361, 295, 290, 283, 263, 406, 276, 323, 289, 324,
	277, 301, 300, 302, 0, 0, 0, 0, 0, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 284, 0, 0,
	0, 391, 0, 335, 317, 0, 0, 0, 333, 287,
	360, 325, 366, 350, 374, 1456, 326, 229, 351, 258,
	298, 240, 242, 254, 260, 262, 264, 265, 307, 308,
	320, 339, 353, 354, 355, 257, 250, 334, 251, 274,
	252, 230, 341, 253, 232, 321, 358, 0, 270, 330,
	294, 233, 293, 322, 357, 356, 241, 382, 388, 389,
	394, 0, 395, 0, 0, 0, 403, 408, 409, 410,
	412, 413, 414, 415, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 387, 268, 226, 227, 422,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 386, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 420, 319, 0, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	368, 380, 398, 401, 0, 0, 0, 231, 400, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 396, 303, 304, 305,
	306, 271, 0, 248, 399, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 267, 273, 411, 275, 247, 318,
	269, 377, 281, 0, 404, 0, 405, 0, 0, 0,
	0, 310, 278, 342, 282, 288, 331, 376, 316, 336,
	245, 367, 343, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 286, 0, 327, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 352, 0, 0, 383, 384, 385, 407, 369,
	0, 419, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 344, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 349, 365, 244, 340, 378, 249, 347,
	239, 314, 337, 0, 0, 236, 363, 346, 296, 279,
	280, 235, 0, 332, 259, 272, 256, 312, 0, 362,
	390, 255, 381, 0, 373, 238, 0, 372, 311, 359,
	364, 297, 291, 237, 361, 295, 290, 283, 263, 406,
	276, 323, 289, 324, 277, 301, 300, 302, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 1167, 0, 0, 0, 348, 0,
	0, 284, 0, 0, 0, 391, 0, 335, 317, 0,
	0, 0, 333, 287, 360, 325, 366, 350, 374, 329,
	326, 229, 351, 258, 298, 240, 242, 254, 260, 262,
	264, 265, 307, 308, 320, 339, 353, 354, 355, 257,
	250, 334, 251, 274, 252, 230, 341, 253, 232, 321,
	358, 0, 270, 330, 294, 233, 293, 322, 357, 356,
	241, 382, 388, 389, 394, 0, 395, 0, 0, 0,
	403, 408, 409, 410, 412, 413, 414, 415, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 387,
	268, 226, 227, 422, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 386, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 420, 319, 0,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 368, 380, 398, 401, 0, 0,
	0, 231, 400, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	396, 303, 304, 305, 306, 271, 0, 248, 399, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 267, 273,
	411, 275, 247, 318, 269, 377, 281, 0, 404, 0,
	405, 0, 0, 0, 0, 310, 278, 342, 282, 288,
	331, 376, 316, 336, 245, 367, 343, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	286, 0, 327, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 352, 0, 0, 383,
	384, 385, 407, 369, 0, 419, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 344, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 349, 365, 244,
	340, 378, 249, 347, 239, 314, 337, 0, 0, 236,
	363, 346, 296, 279, 280, 235, 0, 332, 259, 272,
	256, 312, 0, 362, 390, 255, 381, 0, 373, 238,
	0, 372, 311, 359, 364, 297, 291, 237, 361, 295,
	290, 283, 263, 406, 276, 323, 289, 324, 277, 301,
	300, 302, 0, 0, 0, 0, 0, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 284, 0, 0, 0, 391,
	0, 335, 317, 0, 0, 0, 333, 287, 360, 325,
	366, 350, 374, 329, 326, 229, 351, 258, 298, 240,
	242, 254, 260, 262, 264, 265, 307, 308, 320, 339,
	353, 354, 355, 257, 250, 334, 251, 274, 252, 230,
	341, 253, 232, 321, 358, 0, 270, 330, 294, 233,
	293, 322, 357, 356, 241, 382, 388, 389, 394, 0,
	395, 0, 0, 0, 403, 408, 409, 410, 412, 413,
	414, 415, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 387, 268, 226, 227, 422, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	386, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 420, 319, 0, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 368, 380,
	398, 401, 0, 0, 0, 231, 400, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 396, 303, 304, 305, 306, 271,
	0, 248, 399, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 267, 273, 411, 275, 247, 318, 269, 377,
	281, 0, 404, 0, 405, 0, 0, 0, 0, 310,
	278, 342, 282, 288, 331, 376, 316, 336, 245, 367,
	343, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 228, 0, 286, 0, 327, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	352, 0, 0, 383, 384, 385, 407, 369, 0, 419,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 344,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 243, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 349, 365, 244, 340, 378, 249, 347, 239, 314,
	337, 0, 0, 236, 363, 346, 296, 279, 280, 235,
	0, 332, 259, 272, 256, 312, 0, 362, 390, 255,
	381, 0, 373, 238, 0, 372, 311, 359, 364, 297,
	291, 237, 361, 295, 290, 283, 263, 406, 276, 323,
	289, 324, 277, 301, 300, 302, 0, 0, 0, 0,
	0, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 284,
	0, 0, 0, 391, 0, 335, 317, 0, 0, 0,
	333, 287, 360, 325, 366, 350, 374, 458, 326, 229,
	351, 258, 298, 240, 242, 254, 260, 262, 264, 265,
	307, 308, 320, 339, 353, 354, 355, 257, 250, 334,
	251, 274, 252, 230, 341, 253, 232, 321, 358, 0,
	270, 330, 294, 233, 293, 322, 357, 356, 241, 382,
	388, 389, 394, 0, 395, 0, 0, 0, 403, 408,
	409, 410, 412, 413, 414, 415, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 387, 268, 226,
	227, 422, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 386, 0, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 420, 319, 0, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 368, 380, 398, 401, 0, 0, 0, 231,
	400, 0, 0, 0, 0, 0, 0, 459, 371, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 396, 303,
	304, 305, 306, 271, 0, 248, 399, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 267, 273, 411, 275,
	247, 318, 269, 377, 281, 0, 404, 0, 405, 0,
	0, 0, 0, 310, 278, 342, 282, 288, 331, 376,
	316, 336, 245, 367, 343, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 286, 0,
	327, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 352, 0, 0, 383, 384, 385,
	407, 369, 0, 419, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 344, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 349, 365, 244, 340, 378,
	249, 347, 239, 314, 337, 0, 0, 236, 363, 346,
	296, 279, 280, 235, 0, 332, 259, 272, 256, 312,
	0, 362, 390, 255, 381, 0, 373, 238, 0, 372,
	311, 359, 364, 297, 291, 237, 361, 295, 290, 283,
	263, 406, 276, 323, 289, 324, 277, 301, 300, 302,
	0, 0, 0, 0, 0, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 284, 0, 0, 0, 391, 0, 335,
	317, 0, 0, 0, 333, 287, 360, 325, 366, 350,
	374, 329, 326, 229, 351, 258, 298, 240, 242, 254,
	260, 262, 264, 265, 307, 308, 320, 339, 353, 354,
	355, 257, 250, 334, 251, 274, 252, 230, 341, 253,
	232, 321, 358, 0, 270, 330, 294, 233, 293, 322,
	357, 356, 241, 382, 388, 389, 394, 0, 395, 0,
	0, 0, 403, 408, 409, 410, 412, 413, 414, 415,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 387, 268, 226, 227, 422, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 386, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 420,
	319, 0, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 368, 380, 398, 401,
	0, 0, 0, 231, 400, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 396, 303, 304, 305, 306, 271, 0, 248,
	399, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	267, 273, 411, 275, 247, 318, 269, 377, 281, 0,
	404, 0, 405, 0, 0, 0, 0, 310, 278, 342,
	282, 288, 331, 376, 316, 336, 245, 367, 343, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 286, 0, 327, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 222, 223, 224, 225, 352, 0,
	0, 383, 384, 385, 407, 369, 0, 419, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 427, 261, 0, 0, 285,
	0, 0, 0, 0, 0, 0, 0, 344, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 243, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 349,
	365, 244, 340, 378, 249, 347, 239, 314, 337, 0,
	0, 236, 363, 346, 296, 279, 280, 235, 0, 332,
	259, 272, 256, 312, 0, 362, 390, 255, 381, 0,
	373, 238, 0, 372, 311, 359, 364, 297, 291, 237,
	361, 295, 290, 283, 263, 406, 276, 323, 289, 324,
	277, 301, 300, 302, 0, 0, 0, 0, 0, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 284, 0, 0,
	0, 391, 0, 335, 317, 0, 0, 0, 333, 287,
	360, 325, 366, 350, 374, 329, 326, 229, 351, 258,
	298, 240, 242, 254, 260, 262, 264, 265, 307, 308,
	320, 339, 353, 354, 355, 257, 250, 334, 251, 274,
	252, 230, 341, 253, 232, 321, 358, 0, 270, 330,
	294, 233, 293, 322, 357, 356, 241, 382, 388, 389,
	394, 0, 395, 0, 0, 0, 403, 408, 409, 410,
	412, 413, 414, 415, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 387, 268, 226, 227, 422,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 386, 0, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 420, 319, 0, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	368, 380, 398, 401, 0, 0, 0, 231, 400, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 396, 303, 304, 305,
	306, 271, 0, 248, 399, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 267, 273, 411, 275, 247, 318,
	269, 377, 281, 0, 404, 0, 405, 0, 0, 0,
	0, 310, 278, 342, 282, 288, 331, 376, 316, 336,
	245, 367, 343, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 286, 0, 327, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 352, 0, 0, 383, 384, 385, 407, 369,
	0, 419, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 344, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 349, 365, 244, 340, 378, 249, 347,
	239, 314, 337, 0, 0, 236, 363, 346, 296, 279,
	280, 235, 0, 332, 259, 272, 256, 312, 0, 362,
	390, 255, 381, 0, 373, 238, 0, 372, 311, 359,
	364, 297, 291, 237, 361, 295, 290, 283, 263, 406,
	276, 323, 289, 324, 277, 301, 300, 302, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 284, 0, 0, 0, 391, 0, 335, 317, 0,
	0, 0, 333, 287, 360, 325, 366, 350, 374, 329,
	326, 229, 351, 258, 298, 240, 242, 254, 260, 262,
	264, 265, 307, 308, 320, 339, 353, 354, 355, 257,
	250, 334, 251, 274, 252, 230, 341, 253, 232, 321,
	358, 0, 270, 330, 294, 233, 293, 322, 357, 356,
	241, 382, 388, 389, 394, 0, 395, 0, 0, 0,
	403, 408, 409, 410, 412, 413, 414, 415, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 387,
	268, 226, 227, 422, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 386, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 420, 319, 0,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 368, 380, 398, 401, 0, 0,
	0, 231, 400, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	396, 303, 304, 305, 306, 271, 0, 248, 399, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 267, 273,
	411, 275, 247, 318, 269, 377, 281, 0, 404, 0,
	405, 0, 0, 0, 0, 310, 278, 342, 282, 288,
	331, 376, 316, 336, 245, 367, 343, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	286, 0, 327, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 352, 0, 0, 383,
	384, 385, 407, 369, 0, 419, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 344, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 349, 365, 244,
	340, 378, 249, 347, 239, 314, 337, 0, 0, 236,
	363, 346, 296, 279, 280, 235, 0, 332, 259, 272,
	256, 312, 0, 362, 390, 255, 381, 0, 373, 238,
	0, 372, 311, 359, 364, 297, 291, 237, 361, 295,
	290, 283, 263, 406, 276, 323, 289, 324, 277, 301,
	300, 302, 0, 0, 0, 0, 0, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 284, 0, 0, 0, 391,
	0, 335, 317, 0, 0, 0, 333, 287, 360, 325,
	366, 350, 374, 329, 326, 229, 351, 258, 298, 240,
	242, 499, 260, 262, 264, 265, 307, 308, 320, 339,
	353, 354, 355, 257, 250, 334, 251, 274, 252, 230,
	341, 253, 232, 321, 358, 0, 270, 330, 294, 233,
	293, 322, 357, 356, 241, 382, 388, 389, 394, 0,
	395, 0, 0, 0, 403, 408, 409, 410, 412, 413,
	414, 415, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 387, 268, 226, 227, 422, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	386, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 420, 319, 0, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 368, 380,
	398, 401, 0, 0, 0, 231, 400, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 396, 303, 304, 305, 306, 271,
	0, 248, 399, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 267, 273, 411, 275, 247, 318, 269, 377,
	281, 0, 404, 156, 405, 49, 148, 125, 0, 310,
	278, 342, 282, 288, 331, 376, 316, 336, 245, 367,
	343, 292, 0, 149, 0, 0, 0, 0, 0, 0,
	141, 0, 0, 0, 150, 221, 0, 0, 0, 0,
	108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 0, 0, 0, 0,
	0, 153, 228, 0, 286, 0, 327, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	0, 0, 0, 383, 384, 385, 407, 369, 0, 419,
	0, 156, 0, 49, 148, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 113, 0, 114, 115, 0,
	0, 149, 0, 0, 0, 0, 0, 0, 141, 0,
	0, 0, 150, 0, 0, 0, 0, 0, 108, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 0, 0, 0, 0, 0, 153,
	0, 0, 693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 147, 154, 0, 95, 0, 0, 0,
	0, 0, 0, 0, 0, 1515, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 140, 139, 0, 819, 0,
	0, 55, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 731, 0, 0, 0, 1517,
	0, 0, 112, 113, 0, 114, 115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 477, 484, 474, 0, 1497, 0, 142,
	143, 144, 0, 0, 0, 481, 482, 0, 483, 487,
	0, 0, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 0, 151, 0, 0, 0, 0,
	124, 147, 154, 0, 95, 0, 0, 0, 733, 0,
	0, 732, 807, 104, 0, 0, 0, 145, 0, 105,
	0, 0, 146, 140, 139, 0, 0, 0, 0, 55,
	0, 0, 827, 831, 833, 835, 837, 838, 840, 0,
	844, 841, 842, 843, 0, 718, 822, 823, 824, 825,
	805, 806, 828, 694, 808, 0, 809, 810, 811, 812,
	813, 814, 815, 816, 817, 818, 820, 826, 0, 0,
	0, 0, 106, 0, 0, 830, 832, 834, 836, 839,
	696, 0, 48, 0, 0, 0, 0, 142, 143, 144,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1490,
	1489, 1492, 0, 1488, 0, 0, 0, 0, 1501, 0,
	0, 0, 821, 151, 0, 0, 0, 0, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 104, 0, 0, 0, 145, 0, 105, 0, 1494,
	717, 716, 0, 1496, 1498, 1500, 0, 1502, 1503, 1504,
	1506, 1507, 1508, 1510, 1511, 1512, 1513, 715, 0, 0,
	470, 472, 471, 126, 0, 0, 692, 0, 0, 0,
	476, 0, 0, 0, 0, 0, 0, 695, 726, 0,
	0, 0, 480, 0, 0, 0, 0, 0, 0, 495,
	106, 0, 0, 0, 0, 1516, 473, 0, 0, 0,
	48, 722, 0, 0, 0, 0, 0, 0, 1515, 0,
	0, 0, 0, 0, 0, 0, 0, 107, 38, 0,
	0, 0, 0, 0, 47, 5, 0, 0, 111, 819,
	0, 0, 1514, 723, 727, 0, 0, 0, 0, 0,
	2007, 2008, 1517, 0, 0, 0, 0, 0, 50, 1493,
	712, 0, 710, 714, 730, 0, 0, 0, 711, 708,
	707, 0, 713, 698, 699, 697, 700, 701, 702, 703,
	2927, 728, 729, 1515, 0, 0, 0, 0, 1509, 0,
	1497, 126, 0, 724, 725, 1499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 475, 479, 485, 0, 486,
	488, 0, 0, 489, 490, 491, 0, 1517, 493, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 807, 0, 107, 38, 0, 0, 0,
	0, 0, 47, 0, 0, 1497, 111, 0, 0, 0,
	0, 0, 0, 827, 831, 833, 835, 837, 838, 840,
	0, 844, 841, 842, 843, 0, 829, 822, 823, 824,
	825, 805, 806, 828, 0, 808, 1515, 809, 810, 811,
	812, 813, 814, 815, 816, 817, 818, 820, 826, 719,
	0, 0, 0, 0, 0, 0, 830, 832, 834, 836,
	839, 0, 0, 0, 0, 2710, 0, 0, 0, 0,
	1517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1505, 821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1497, 0,
	0, 0, 1494, 0, 0, 0, 1496, 1498, 1500, 0,
	1502, 1503, 1504, 1506, 1507, 1508, 1510, 1511, 1512, 1513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1501, 0, 0, 478,
	0, 477, 484, 474, 0, 0, 0, 1505, 0, 0,
	0, 0, 0, 481, 482, 0, 483, 487, 1516, 0,
	469, 0, 0, 0, 0, 0, 0, 1494, 0, 0,
	492, 1496, 1498, 1500, 0, 1502, 1503, 1504, 1506, 1507,
	1508, 1510, 1511, 1512, 1513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1514, 0, 0, 0, 0,
	496, 0, 0, 498, 0, 0, 0, 0, 497, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 0, 0, 0, 0, 478, 0,
	477, 484, 474, 0, 0, 0, 0, 0, 0, 1501,
	0, 1509, 481, 482, 0, 483, 487, 0, 1499, 469,
	1505, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	1514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1494, 0, 0, 0, 1496, 1498, 1500, 1493, 1502, 1503,
	1504, 1506, 1507, 1508, 1510, 1511, 1512, 1513, 0, 496,
	0, 0, 498, 0, 0, 0, 0, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 1509, 0, 0, 0,
	0, 0, 0, 1499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 829, 470, 472,
	471, 0, 0, 0, 0, 0, 0, 0, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	480, 0, 0, 1514, 0, 0, 0, 495, 0, 0,
	0, 0, 0, 0, 473, 0, 0, 0, 464, 0,
	1493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1509,
	0, 0, 0, 0, 0, 0, 1499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 470, 472, 471,
	0, 0, 0, 0, 0, 0, 0, 476, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 0, 0, 473, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 475, 479, 485, 0, 486, 488, 0,
	0, 489, 490, 491, 0, 0, 493, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 475, 479, 485, 0, 486, 488, 0, 0,
	489, 490, 491, 0, 0, 493, 494,
}

var yyPact = [...]int{
	34103, -1000, -1000, -1000, -312, 10075, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33161, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 33161, -310, 32637,
	32637, -1000, -1000, 1981, -1000, 32113, 11142, 33161, 264, 262,
	33161, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 530, -1000, 31589, -1000, -1000,
	-1000, -1000, -1000, -1000, 482, 34909, 33685, 7968, -257, -1000,
	2658, -104, 686, 700, 792, 792, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2404, 576, 31065, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 34266, 175, 576, 13762,
	-19, -22, 2658, 296, 163, -1000, 839, 34221, 138, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	7968, 7968, 10075, -320, 10075, 7968, 33161, 33161, -1000, -1000,
	-1000, -1000, 482, 34909, 7968, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-22, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3438, -1000, 1160, -1000,
	-1000, -1000, -1000, 2159, 1154, 1757, 445, 33161, -1000, 1143,
	445, -1000, -1000, -1000, 2658, 2658, -1000, 33161, 33161, 34,
	1316, -1000, 291, 277, 316, 1121, -1000, -1000, -1000, -1000,
	-1000, 2484, -1000, 33161, 33161, 2166, 33161, -1000, 1612, 405,
	34998, 2330, 1055, 574, 2194, -1000, -1000, 2157, -1000, 142,
	120, 157, 496, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	159, -1000, 2393, -1000, -1000, 143, -1000, -1000, 136, -1000,
	-1000, -1000, -26, -1000, -1000, -1000, -1000, -1000, -1000, -115,
	-1000, -1000, 741, 1561, 7968, -1000, 1409, -1000, 3435, -1000,
	-1000, -1000, -1000, 5338, 9540, 9540, 9540, 9540, -1000, -1000,
	2022, 7968, 2156, 2155, -1000, -1000, -1000, -1000, -1000, 1119,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1755, 9016, -1000, 2154, 2150, 2147, 2141, 2139,
	2132, 2128, 2127, 2115, 2109, 2108, 2107, 2106, 2104, 1922,
	10607, 2102, 1751, 1748, 2101, 2100, 2095, 1747, 1922, 1922,
	2093, 2091, 2081, 2076, 2072, 2070, 2068, 2065, 2062, 2059,
	2055, 2054, 2053, 2051, 2048, 2045, 2044, 2043, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 901, -1000, 2041, 2300, 2406, 1936, 2458, 2374, 2372,
	2367, 2364, 1600, -1000, -1000, -1000, -130, -1000, -1000, 685,
	-1000, 652, -1000, 33161, 33161, 33161, 479, 479, 479, 479,
	479, 510, 479, 525, 524, 523, 479, -1000, -1000, -1000,
	-1000, -1000, -1000, 620, -1000, -1000, -1000, -1000, 941, 33161,
	-1000, 1978, 1276, 2403, 425, 416, 392, 1276, 293, -1000,
	1191, 1191, 1191, 1191, 1276, 305, 404, 2406, 2406, -67,
	1191, -51, 1276, 1276, -51, 1276, 1276, 1276, 177, -307,
	-1000, -1000, -1000, 1191, 1191, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2388, 2381, 482, 33161, 75, 33161, 482, 482,
	485, 1612, 397, 396, 951, 1287, -1000, 1279, 33161, 33161,
	33161, 1279, 1279, 17957, 17433, -1000, 33161, -1000, 2406, 1936,
	-1000, 1896, 2650, 1884, 1936, 482, 482, 482, 482, 482,
	482, 482, 482, 33161, 33161, 30541, 482, 6910, 6910, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 10075, 1531,
	1466, 137, -86, -313, 180, -1000, -1000, 33161, 2290, 110,
	-1000, -1000, -1000, 1925, -1000, 1977, 1977, 1977, 1977, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2006, 2039,
	-1000, -1000, 1971, 1971, 1971, 1925, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1998, 1998, 2003, 1998, 33161, 7968, 33161, 2310, 302,
	2038, -1000, 33161, 278, 2406, 2300, 2406, -1000, -1000, 1118,
	1599, 1743, -1000, -1000, 291, 1221, -1000, 797, -1000, -1000,
	-1000, -1000, 33161, 270, -1000, -1000, 1739, 2037, -1000, 427,
	857, 1081, -1000, 168, 34381, 26865, 1612, 26865, 33161, -1000,
	-1000, -1000, -1000, -1000, -1000, -29, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 134,
	-1000, 7968, 7968, 7968, 7968, 7968, -1000, 513, 8492, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 9540, 9540, 9540, 9540,
	9540, 9540, 9540, 9540, 9540, 9540, 9540, 9540, 2021, 1334,
	9540, 9540, 9540, 9540, 2650, 2462, 944, 209, -1000, -1000,
	-1000, -1000, -1000, 1338, 1561, 7968, 7968, 33161, -1000, 2634,
	7968, 7968, 114, 7968, 2362, 7968, 7968, 7968, 1875, 3765,
	33161, 7968, -1000, 1873, 1869, -1000, -1000, 1486, 7968, -1000,
	-1000, 7968, -1000, -1000, 7968, 9540, 7968, -1000, -1000, -1000,
	179, 2362, 2362, 7968, 7968, 2362, 2362, 2362, 1273, 2362,
	2362, 2362, 2362, 2362, 2362, 2362, 2362, 1868, 2406, -257,
	6386, -1000, -273, 2300, 7968, -1000, -1000, 7968, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1740, -99, 683, 662,
	675, -1000, 2343, -1000, 2035, 2028, 1105, 33161, 1346, 33161,
	26865, 33161, 1612, 33161, 33161, 479, 479, 479, 33161, 485,
	-1000, 33161, 941, 2342, 33161, 2464, 9540, 9540, 30017, 1191,
	1276, 1276, -1000, -1000, 33161, -1000, -1000, -1000, 1191, 33161,
	1191, 1191, 2464, 1191, -1000, -1000, -1000, 1276, 1276, -1000,
	-1000, -1000, -1000, 1191, 1191, -1000, -1000, 2464, 33161, -37,
	2464, 2464, -63, -1000, -1000, -1000, 33161, 33161, 479, 33161,
	-1000, 33161, 33161, -1000, -1000, 33161, 34319, 33161, 33161, 2380,
	-1000, 26865, 33161, 24769, -1000, -1000, 419, 477, 16385, 357,
	26865, 4813, -1000, -1000, 1279, 1279, 1279, 4813, 4813, 1044,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 922, -1000, 129,
	2300, -1000, -1000, -1000, -1000, -1000, 33161, 33161, 26865, 1612,
	33161, 33161, 33161, 33161, -1000, 2023, -1000, 2328, 33161, 1043,
	-1000, -1000, 13238, 1094, 1043, -1000, 1375, -1000, 7968, 10075,
	-291, 7968, 10075, 10075, 7968, 10075, -1000, 7968, 103, -1000,
	-1000, -1000, -1000, 1598, -1000, 1583, -1000, -1000, -1000, 1731,
	1731, -1000, 1582, -1000, -1000, -1000, -1000, 1580, -1000, -1000,
	1578, -1000, -1000, 1867, 741, -1000, 1725, 2177, -258, -1000,
	15336, 33161, 33161, -1000, -1000, -258, -1000, 14811, 33161, 2300,
	-1000, 2300, 33161, -1000, 2402, -1000, 291, 222, -1000, -1000,
	-1000, -1000, -1000, -1000, 1093, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 908, -1000, 33161, -1000, -1000, 168,
	26865, 27913, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 178,
	-1000, -1000, 160, -1000, 505, 56, 1213, -1000, -1000, 106,
	149, 568, 1561, -1000, 1361, 1361, 1372, -1000, 434, -1000,
	-1000, -1000, -1000, 2022, -1000, -1000, -1000, 2933, 3520, -1000,
	1203, 1203, 1010, 1010, 1010, 1010, 1010, 1277, 1277, -1000,
	-1000, -1000, 5338, 2021, 9540, 9540, 9540, 9540, 447, 447,
	3350, 3276, -1000, 7968, 1351, -1000, 7968, 1708, 1073, 1088,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1860, 1859, 2119, 2483, 1851, 7968, -1000, -1000, 1210, 1208,
	1207, -1000, 1476, 7444, -1000, -1000, -1000, 1849, 1054, 1847,
	-1000, -1000, -1000, 1840, 1200, 835, 1835, 1546, 1832, 900,
	7968, 7968, 1174, 1158, 7968, 7968, 7968, 7968, 1831, 7968,
	7968, 7968, 7968, 7968, 7968, 7968, 7968, -12, -1000, -1000,
	1155, -1000, 1561, -1000, 1723, -1000, 1056, 885, -1000, 1714,
	-1000, -1000, -1000, -1000, 680, 643, 670, 33161, 753, 11666,
	33161, 1978, 2315, 89, -1000, 878, -1000, 56, -126, 764,
	2165, 2480, 33161, 33161, 33161, 2337, 29493, -1000, 2016, 1149,
	-1000, -1000, 7968, -1000, -1000, 2164, 33161, 33161, 2464, 2464,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 33161, 2464, 2464,
	1276, 1191, -1000, -1000, 1191, -1000, -1000, 1191, -1000, 1053,
	-1000, 33161, -1000, -1000, -1000, 1978, 884, -1000, 12190, 14286,
	498, -1000, 504, 1238, 1238, 744, 1238, 1238, 1238, 1238,
	372, 371, 1238, 1238, 1238, 1238, 1238, 1238, 1238, 1238,
	1238, 1238, 1238, 1238, 1238, 1238, 2013, -1000, 85, 2379,
	190, 878, 202, 2554, 834, -1000, -1000, -1000, -1000, 20053,
	20053, 15861, 20053, -1000, 1250, -1000, -1000, 502, -1000, -1000,
	764, -1000, -1000, -1000, 2011, 1315, -1000, -1000, 10607, -1000,
	4813, 4813, 4813, -1000, -1000, 20577, 33161, -1000, -117, -1000,
	-107, -1000, 847, -1000, -1000, 850, 764, 2176, 847, 847,
	-1000, 11666, 33161, -1000, 2464, 6910, -1000, 24769, -1000, -1000,
	28961, -1000, 28437, 2464, 1331, -1000, 10075, 1443, 135, -1000,
	174, -314, 132, 1393, 131, 1561, -1000, -1000, 1828, 1827,
	1148, -1000, 1136, 1818, 1129, 1128, -1000, -54, -1000, 2292,
	783, -1000, 2009, -1000, 1116, 2258, -1000, 846, -1000, 1313,
	1113, -1000, 783, 1101, 2257, 846, -1000, -1000, 1042, 31,
	-1000, -1000, 33161, 1739, 1078, 27913, 803, -1000, 500, 1039,
	1038, -1000, 26865, 150, 26865, -1000, 26865, -1000, -1000, 303,
	-1000, 33161, 2294, -1000, -1000, -1000, 1674, -329, -1000, -1000,
	-1000, -1000, -1000, 1077, -1000, 447, 447, 3350, 2900, -1000,
	9540, -1000, 9540, 2451, 1324, -1000, 7968, 1433, 34308, 1190,
	19529, 33161, -1000, -1000, 7968, 7968, -1000, 2445, -1000, -1000,
	-1000, -1000, 7968, 7968, 1864, -1000, 33161, -1000, -1000, -1000,
	-1000, 19529, -1000, 9540, -1000, 7968, 888, 2416, -12, -12,
	2396, 2378, 2368, 1069, -12, 2338, 2321, 2267, 2247, 2204,
	2111, 1993, 1948, -1000, 2008, 6386, -1000, -54, 7968, 7968,
	7968, 2271, -1000, -1000, -1000, -1000, -1000, 629, 128, 1817,
	842, -1000, -1000, 33161, -1000, -1000, -1000, 1813, 826, -1000,
	-1000, -1000, 34629, 1977, 1977, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2006, -1000, -1000, 1971, 1971, 1971,
	1925, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1998, 1998, 2003, 1998, -1000, 2334, -1000, -13, 1238, 450,
	26865, 393, -1000, 33161, 2175, 292, 2282, 33161, 1997, 1995,
	1992, 239, 34629, 33161, 952, -1000, 1023, 34221, -1000, 33161,
	1561, -1000, 1612, -1000, 1276, -1000, -1000, 2464, 1016, -1000,
	-1000, 2464, 1276, 1276, 1191, 33161, -1000, 2333, 34319, -1000,
	2277, 33161, -1000, -1000, 34629, 594, -1000, 636, 479, 33161,
	1401, 636, 1390, 1991, -1000, -1000, -1000, 33161, 33161, -1000,
	33161, 1387, 1381, -1000, 33161, 33161, 1564, -1000, 1560, 1238,
	1238, 1557, 1722, 1719, 1718, 1238, 1238, 1555, 1713, 27389,
	1554, 1552, 1548, 1506, 1712, 627, 1499, 1471, 1468, 33161,
	1989, 1642, -13, 1238, 181, 1309, 450, 1563, 16909, 33161,
	24769, 24769, 24769, 24769, -1000, 2231, 2230, -1000, 2228, 2217,
	2213, 33161, 24769, 1978, -1000, 27389, -1000, -1000, -1000, 2650,
	1066, 2631, 637, 7968, 26865, 1711, 357, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 33161, 33161, 1802, -1000, 2466,
	-1000, 806, -1000, -1000, 1017, -1000, 2466, 1342, -315, 10075,
	1335, 1252, -1000, 7968, 10075, 7968, -292, 164, -295, -1000,
	-1000, -1000, 1709, -1000, -1000, -1000, 1547, -1000, 1542, 2,
	20, 1380, -258, 6386, 287, 33161, -258, 33161, 6386, -1000,
	33161, 271, -258, 33161, 1538, -1000, -1000, -1000, 2471, 26865,
	1612, 1173, 26341, -1000, 121, -1000, 173, 391, 1695, -1000,
	520, 91, -1000, 1306, 1674, -1000, -1000, -1000, 9540, -1000,
	-1000, -1000, -1000, 1561, 7968, 1800, -1000, 638, 638, 1799,
	-1000, 1977, 1977, -1000, 1925, 1971, 1925, 638, 638, 1797,
	-1000, 1678, 1908, -1000, 1894, 1830, 7968, -1000, 1785, 2855,
	1033, -139, -12, -1000, -1000, -1000, -12, -12, -12, -12,
	-1000, -12, -12, -12, -12, -12, -12, -12, -12, 457,
	-1000, 2, 1561, 1561, -1000, -1000, 2280, -1000, 1693, 1692,
	753, 34629, 541, 11666, 2289, 297, 1607, -1000, -1000, 25817,
	373, -1000, -1000, -1000, 487, 166, 1536, 362, -1000, 33161,
	183, 33161, -1000, -1000, -1000, -1000, -1000, 2282, -1000, 728,
	225, 12714, 12714, 12714, 230, 1233, -1000, 445, 871, 1007,
	24769, 33161, -1000, 24245, 1784, -1000, 764, 2464, -1000, 33161,
	-1000, 2464, 2464, 1276, -1000, 297, -1000, -1000, -1000, 33161,
	2277, 2279, -1000, 33161, -1000, 33161, -1000, 33161, 33161, 479,
	7968, -1000, -1000, -1000, 33161, -1000, 241, -1000, -1000, -1000,
	-1000, 19529, 19529, -1000, -1000, -1000, -1000, 1685, 1684, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 380, 33161, 1065, -1000, 1303, 1607, 25817, 1291, 1682,
	373, -1000, 1679, -1000, 747, 33161, 33161, -1000, 918, -1000,
	1274, 2163, 2174, 2163, -1000, -1000, -1000, -1000, 2227, -1000,
	2224, -1000, -1000, 918, -1000, -1000, -1000, -1000, -1000, 637,
	-1000, 2401, 636, 636, 636, 1783, 803, 1781, -1000, -1000,
	-1000, -1000, -1000, 2463, 2457, 25293, 2463, -1000, -315, 1320,
	-1000, 1405, 130, 1370, 33161, -1000, -1000, -1000, 1778, 1777,
	-276, 25, 2455, 2454, 2499, -1000, 1772, 791, -258, -1000,
	-1000, 783, -1000, -1000, -1000, -258, -1000, 783, -1000, -1000,
	1612, -1000, 158, -1000, -1000, -1000, -1000, -1000, -1000, 44,
	-1000, 33161, -1000, 1674, 1672, 88, -1000, 1561, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 7968, -1000, -1000, -1000, 1819, -1000, -1000,
	7968, 1769, 1671, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2460, -1000, 2448, -276,
	-1000, -1000, -1000, -1000, -1000, -1000, 34629, -1000, 928, -1000,
	-1000, 1669, 54, -1000, -1000, -1000, 1664, 1663, 1516, -1000,
	-1000, 1463, 969, 70, -1000, -1000, -1000, -1000, -1000, -1000,
	1563, 33161, 1970, -1000, 1238, 1238, 1238, 33161, 1767, 790,
	-1000, -1000, -1000, -1000, 1765, 1744, 435, 1259, 1257, -1000,
	1510, 20053, 24769, 24245, 909, -1000, 1006, -1000, -1000, -1000,
	2464, -1000, -1000, 2464, -1000, -1000, -1000, -1000, 2279, -1000,
	-1000, 1408, 9540, -1000, -1000, 1646, 19005, 590, 597, 1967,
	-1000, 330, 2491, -1000, 1379, 1355, -1000, 33161, -1000, 1959,
	-1000, 1955, 2113, 272, 1950, 1943, 33161, 1770, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 381, 1040, -1000,
	1642, 1639, -1000, 54, 1637, -1000, -1000, -1000, 33161, 747,
	747, 2460, 33161, 6386, -1000, -1000, 7968, 1942, -1000, 7968,
	-1000, -1000, -1000, -1000, -1000, 1941, 2301, -1000, -1000, -1000,
	-1000, -1000, -1000, 7968, 7968, -1000, -1000, 475, 10075, -296,
	161, -1000, -1000, -1000, -278, 1636, -1000, -1000, 2447, 1635,
	1616, 33161, -1000, 783, 783, 764, -1000, -1000, -63, -1000,
	-1000, -1000, 1766, -1000, 1750, -12, -1000, 118, 7968, -278,
	-195, -1000, -1000, -1000, -1000, 279, -1000, -1000, 194, -1000,
	-1000, 1462, 431, -1000, -1000, 747, 23197, 19529, 19005, 1631,
	-1000, 34800, 12714, 134, 34800, 705, 1212, -1000, 1508, -1000,
	1504, -1000, 2464, 909, 1006, -1000, -1000, 1089, -1000, -1000,
	-1000, -1000, 3350, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1502, 1938, -80, -1000,
	-1000, 1937, 23197, 23197, 233, 233, 23197, 23197, 1930, 481,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2406, -1000,
	-1000, 1561, 33161, 1561, 23721, -1000, 2444, 2439, 1561, 741,
	-1000, -315, 33161, 33161, -282, 1500, -1000, 1630, 22, -1000,
	-1000, 742, -284, -7, 16, -1000, -1000, -1000, 1691, -1000,
	2996, -1000, -1000, -1000, 741, -282, 33161, 390, 1629, -1000,
	-1000, 182, -1000, -1000, 1034, -1000, 1925, 7968, -1000, -1000,
	-1000, 439, 34697, -1000, -1000, -1000, -63, 439, 407, 206,
	-1000, 1495, -1000, -1000, 2460, -1000, 1683, 7968, 1922, -191,
	23197, 1003, 998, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	968, 966, 23197, -1000, -1000, -1000, 320, -1000, 960, 959,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1916, -1000, -1000,
	2438, -1000, 1624, 484, 5, 16, -1000, 2426, 21, 2425,
	2424, -1000, -1000, 4289, -266, -10, 321, -1000, 2332, -1000,
	-1000, 43, -1000, -1000, -1000, 23197, 2298, 1686, 275, 2422,
	34800, -1000, -1000, 275, -1000, 234, -1000, 1185, -1000, 1482,
	-1000, 2406, -1000, 1670, -1000, 2172, -1000, 112, 955, -1000,
	-1000, -1000, -1000, 950, -1000, -1000, -1000, 22673, 33161, 1616,
	-1000, 1914, 1470, 25, 17, 2421, -1000, 1616, 2420, 1616,
	1616, 1371, -1000, -1000, -1000, -1000, -1000, 1620, -1000, 232,
	-1000, -1000, 2298, -1000, 2414, 339, -1000, -1000, -1000, -1000,
	1467, -1000, -1000, 481, -1000, 2171, 2169, 2479, -1000, -1000,
	-1000, -1000, 232, 232, 232, 232, 126, -1000, -1000, 938,
	-1000, -1000, 2361, 18481, -3, -1000, -1000, -1000, 1618, -1000,
	1616, -1000, -1000, 4289, -1000, -1000, 1238, 1613, 216, -1000,
	-1000, -1000, 22149, 285, 294, 283, -1000, 442, -1000, -1000,
	-1000, -1000, 2489, -1000, 2487, 581, 581, -1000, -1000, 33161,
	-1000, 33161, -1000, 896, -1000, -1000, -1000, 1005, -1000, -1000,
	-1000, -1000, -1000, 1461, -1000, 33161, -1000, 33161, 288, 1432,
	9540, 1913, 9540, 1911, 281, 1907, -1000, -1000, -1000, 1444,
	349, -1000, -1000, 740, -1000, 1202, -1000, 21625, 33161, -1000,
	-1000, 894, 1905, 2408, -1000, 2791, 33161, 2259, 33161, 1901,
	1167, 9540, -1000, -1000, -1000, 33161, 5862, -1000, 993, -1000,
	-1000, 438, 312, -1000, 863, -1000, 862, 21101, 1429, 2125,
	-1000, -1000, 1561, 33161, 848, -1000, 33161, 284, -1000, -1000,
	-1000, 836, -1000, -1000, -1000, -1000, 438, 2254, -1000, 1425,
	-1000, -1000, 34632, 577, -1000, -1000, 34632, 280, -1000, 430,
	1756, -1000, -1000, 822, -1000, 33161, 612, 7968, -1000, 280,
	34800, -1000, 7968, 821, -1000, 34800, 785, -1000, -1000,
}

var yyPgo = [...]int{
	0, 135, 2515, 209, 144, 3122, 52, 212, 203, 196,
	210, 3121, 3118, 2302, 2300, 3117, 3097, 3096, 3091, 3090,
	3088, 3087, 3086, 3084, 3077, 3073, 3072, 3066, 3065, 3051,
	3050, 3049, 3048, 3045, 3044, 3042, 3041, 3040, 3039, 207,
	3037, 3036, 3034, 3033, 3032, 3017, 3015, 3014, 3012, 3011,
	3010, 3009, 3006, 3005, 3003, 3002, 3001, 3000, 2999, 2998,
	2996, 2994, 2993, 2992, 2991, 2990, 2989, 2988, 2987, 2986,
	192, 2972, 2289, 2971, 2964, 2963, 2958, 2955, 2954, 2953,
	176, 2952, 2951, 2949, 2946, 2942, 2941, 2940, 2938, 2937,
	2935, 2934, 2932, 2931, 2928, 2927, 2923, 2922, 171, 2909,
	142, 163, 2906, 2902, 2896, 2895, 2894, 206, 184, 47,
	2893, 38, 2892, 188, 2891, 114, 2888, 105, 2886, 2881,
	2880, 2878, 2876, 2875, 2874, 2873, 2872, 2871, 2870, 2867,
	69, 2866, 2865, 199, 161, 217, 1776, 216, 213, 154,
	137, 81, 2864, 2295, 2863, 128, 193, 122, 24, 2862,
	146, 2857, 119, 34, 26, 214, 106, 42, 133, 95,
	2856, 183, 70, 2855, 80, 2852, 2851, 222, 160, 2850,
	96, 2849, 2847, 2845, 2844, 157, 148, 2842, 2840, 97,
	2839, 2838, 91, 2837, 46, 162, 136, 159, 2836, 263,
	90, 87, 132, 2835, 2832, 75, 2831, 2829, 2828, 2827,
	147, 2826, 2825, 99, 68, 2824, 2823, 2822, 45, 2819,
	59, 2817, 53, 2816, 2815, 2814, 2812, 49, 2811, 2810,
	14, 21, 23, 2808, 19, 2807, 138, 2804, 2803, 2802,
	89, 2801, 2, 2800, 191, 54, 76, 117, 2797, 336,
	2795, 2793, 2792, 123, 2791, 361, 2790, 2789, 2788, 2785,
	2784, 5, 2782, 185, 37, 2781, 73, 100, 118, 168,
	172, 2780, 2779, 2778, 94, 84, 55, 0, 2777, 126,
	2776, 2775, 2767, 215, 2765, 195, 164, 129, 124, 218,
	189, 2764, 2763, 66, 2762, 125, 71, 101, 8, 2761,
	248, 2754, 322, 149, 2753, 169, 2752, 120, 1, 112,
	2751, 2750, 35, 221, 2749, 2747, 2746, 93, 2744, 2743,
	131, 111, 2742, 2740, 2737, 32, 2736, 29, 25, 2734,
	92, 2733, 224, 2732, 141, 103, 152, 140, 121, 190,
	197, 64, 60, 2730, 1301, 116, 74, 22, 2725, 194,
	2723, 220, 205, 2722, 182, 2721, 200, 327, 179, 2720,
	153, 10, 36, 27, 2716, 12, 2715, 108, 166, 2714,
	2712, 16, 2711, 18, 2709, 2708, 2705, 2704, 9, 2702,
	2701, 2700, 4, 7, 2699, 3, 165, 2698, 2696, 2694,
	2690, 41, 102, 2682, 115, 151, 2681, 2680, 72, 2678,
	2676, 2673, 1540, 2672, 2670, 2662, 2661, 2660, 2655, 2654,
	2649, 2647, 2646, 77, 43, 2644, 2643, 2642, 2640, 62,
	104, 2638, 2637, 2636, 2634, 31, 139, 2633, 20, 2629,
	30, 28, 33, 2628, 113, 2621, 15, 156, 2619, 2618,
	17, 2613, 2607, 11, 13, 2603, 2601, 88, 2598, 67,
	40, 134, 79, 2597, 65, 181, 110, 2592, 2591, 201,
	208, 170, 2590, 167, 198, 219, 2589, 180, 2586, 2582,
	2581, 2580, 2578, 2576, 876, 2575, 2566, 204, 44, 83,
	86, 2562, 2561, 2560, 63, 130, 85, 82, 174, 2559,
	155, 2558, 2551, 78, 2550, 2548, 2547, 2534, 2533, 158,
	2532, 2529, 2526, 2525, 202, 211, 2513,
}

//line mysql_sql.y:9460
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColposUnion() *tree.AlterColPos {
	v, _ := st.union.(*tree.AlterColPos)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 488, 492, 492, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 105, 486, 486, 486, 487, 487, 102, 122,
	121, 124, 124, 123, 123, 120, 120, 116, 119, 119,
	118, 118, 117, 112, 114, 114, 113, 115, 115, 103,
	91, 104, 436, 436, 435, 435, 434, 434, 389, 389,
	433, 433, 433, 432, 432, 432, 431, 431, 430, 430,
	429, 429, 427, 427, 428, 426, 425, 425, 425, 423,
	423, 423, 419, 419, 421, 420, 420, 422, 414, 414,
	417, 417, 415, 415, 415, 415, 418, 413, 413, 413,
	412, 412, 90, 90, 90, 336, 336, 89, 89, 350,
	350, 350, 350, 350, 348, 348, 348, 348, 348, 348,
	347, 347, 346, 346, 351, 351, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 81, 81, 81, 81,
	84, 84, 84, 85, 345, 345, 345, 82, 83, 83,
	335, 335, 340, 340, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 344, 344, 344, 342,
	342, 341, 341, 343, 343, 75, 75, 75, 78, 77,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 76,
	76, 76, 76, 76, 76, 71, 71, 71, 71, 71,
	70, 70, 72, 72, 332, 332, 331, 86, 86, 87,
	490, 490, 489, 491, 491, 491, 491, 88, 94, 94,
	94, 94, 94, 94, 94, 93, 93, 96, 96, 95,
	97, 80, 80, 80, 80, 80, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 460, 460, 460, 462, 462,
	271, 272, 493, 274, 270, 270, 270, 456, 456, 457,
	458, 459, 459, 459, 92, 11, 11, 11, 11, 11,
	11, 69, 74, 225, 225, 226, 226, 226, 226, 226,
	226, 226, 230, 230, 230, 229, 227, 227, 227, 227,
	227, 227, 228, 231, 231, 67, 73, 73, 473, 473,
	68, 480, 480, 392, 392, 285, 285, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 396, 397, 281, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 46, 45, 45, 45, 321, 321,
	44, 494, 494, 260, 260, 56, 55, 48, 57, 58,
	59, 60, 61, 62, 43, 54, 54, 54, 54, 54,
	54, 54, 54, 65, 65, 408, 408, 496, 496, 496,
	63, 64, 391, 391, 391, 53, 52, 51, 50, 49,
	49, 42, 42, 41, 41, 47, 128, 129, 278, 278,
	278, 280, 280, 276, 495, 495, 363, 363, 279, 279,
	40, 40, 40, 40, 66, 277, 277, 259, 275, 275,
	275, 12, 12, 10, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 23, 24, 26, 329,
	329, 326, 25, 18, 17, 20, 16, 19, 21, 22,
	22, 9, 9, 9, 9, 13, 13, 14, 140, 140,
	190, 190, 468, 468, 464, 464, 465, 465, 465, 466,
	466, 467, 467, 98, 402, 402, 402, 402, 402, 402,
	8, 163, 163, 162, 162, 401, 401, 401, 401, 401,
	401, 333, 333, 445, 445, 445, 446, 161, 161, 156,
	156, 403, 403, 299, 447, 447, 411, 411, 410, 410,
	409, 409, 159, 159, 160, 160, 143, 143, 108, 108,
	416, 416, 416, 416, 424, 424, 388, 388, 217, 217,
	254, 254, 255, 255, 133, 133, 134, 134, 134, 134,
	134, 134, 453, 453, 455, 455, 454, 158, 158, 154,
	154, 155, 155, 155, 153, 153, 152, 151, 151, 150,
	148, 148, 148, 149, 149, 149, 136, 136, 136, 135,
	135, 135, 135, 135, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 137, 137, 461, 461,
	461, 393, 393, 393, 399, 399, 236, 236, 237, 237,
	235, 235, 138, 138, 139, 139, 139, 139, 234, 234,
	233, 141, 141, 147, 146, 146, 142, 142, 142, 142,
	244, 244, 243, 243, 243, 243, 101, 106, 106, 107,
	166, 166, 242, 241, 241, 241, 165, 165, 164, 164,
	157, 157, 145, 145, 145, 145, 240, 144, 238, 485,
	485, 484, 484, 483, 481, 481, 481, 482, 482, 482,
	482, 438, 438, 438, 438, 438, 265, 265, 265, 269,
	269, 268, 268, 268, 268, 268, 273, 7, 7, 7,
	7, 7, 30, 30, 30, 30, 30, 30, 30, 30,
	36, 174, 175, 37, 176, 176, 177, 177, 178, 178,
	179, 180, 181, 181, 181, 181, 35, 167, 167, 168,
	168, 169, 169, 170, 171, 171, 171, 173, 172, 34,
	27, 469, 472, 470, 470, 474, 474, 474, 475, 475,
	475, 476, 476, 28, 125, 130, 130, 127, 132, 132,
	132, 132, 132, 126, 471, 477, 477, 477, 330, 330,
	327, 328, 328, 325, 324, 324, 324, 479, 479, 478,
	478, 478, 266, 266, 29, 320, 320, 322, 323, 323,
	323, 314, 314, 314, 314, 33, 318, 318, 319, 319,
	319, 319, 319, 315, 315, 317, 317, 313, 313, 313,
	313, 313, 32, 131, 131, 312, 312, 310, 310, 308,
	308, 309, 309, 307, 307, 307, 311, 311, 31, 31,
	31, 110, 109, 109, 109, 257, 257, 256, 256, 111,
	38, 202, 202, 377, 377, 377, 377, 377, 395, 395,
	395, 378, 378, 378, 379, 379, 379, 380, 380, 380,
	380, 380, 394, 394, 352, 352, 353, 353, 353, 356,
	356, 369, 369, 370, 370, 368, 368, 375, 375, 374,
	374, 373, 373, 372, 372, 371, 371, 371, 371, 366,
	366, 365, 365, 354, 354, 354, 354, 354, 355, 355,
	355, 364, 364, 367, 367, 208, 208, 209, 209, 209,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 443,
	443, 444, 211, 211, 211, 215, 215, 215, 215, 215,
	215, 210, 210, 212, 212, 191, 191, 189, 189, 182,
	182, 183, 183, 184, 184, 184, 188, 188, 187, 187,
	185, 185, 186, 186, 186, 186, 338, 338, 441, 441,
	442, 442, 437, 437, 437, 440, 440, 440, 440, 440,
	439, 439, 192, 252, 252, 252, 267, 267, 267, 267,
	251, 251, 251, 207, 207, 206, 206, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 337, 337, 282, 282, 283, 283, 224, 223,
	223, 223, 223, 223, 221, 222, 220, 220, 220, 220,
	220, 219, 219, 218, 218, 218, 316, 316, 216, 216,
	214, 214, 214, 213, 213, 213, 376, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 250, 291, 291, 296, 296, 452, 452, 451, 193,
	193, 193, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 203, 203, 203, 361, 361, 361, 361, 361, 362,
	362, 362, 359, 359, 360, 360, 300, 301, 301, 400,
	400, 357, 357, 358, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 407, 407, 407, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	463, 463, 463, 448, 448, 448, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 450, 450,
	450, 450, 450, 450, 450, 450, 450, 450, 450, 450,
	450, 450, 450, 450, 450, 248, 248, 248, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 302, 302, 303, 303, 404, 404, 404,
	404, 404, 404, 405, 405, 406, 406, 406, 406, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 289, 245,
	245, 245, 304, 297, 297, 298, 298, 292, 292, 292,
	292, 292, 292, 292, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 293, 293, 295, 295,
	306, 306, 306, 305, 305, 305, 305, 305, 305, 305,
	205, 205, 205, 205, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 195, 195, 195, 195, 199,
	199, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 200, 200, 200, 200, 198,
	198, 198, 198, 198, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	99, 100, 100, 197, 253, 253, 381, 381, 384, 384,
	382, 382, 383, 385, 385, 385, 386, 386, 386, 387,
	387, 387, 390, 390, 258, 258, 258, 264, 264, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 4, 6, 1, 1, 1, 2, 4, 6,
	1, 4, 1, 3, 3, 4, 4, 4, 3, 3,
	2, 4, 4, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 2, 2,
	0, 1, 4, 2, 4, 1, 5, 3, 2, 1,
	2, 2, 4, 4, 5, 2, 1, 3, 4, 4,
	1, 2, 9, 7, 1, 3, 3, 1, 1, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 2, 4, 3,
	3, 1, 1, 1, 1, 1, 2, 3, 4, 7,
	2, 3, 3, 4, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 2,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 7, 4, 1, 3, 2, 2, 2, 1, 3,
	3, 4, 0, 1, 2, 1, 2, 2, 1, 2,
	3, 2, 3, 1, 1, 7, 7, 8, 0, 4,
	7, 0, 3, 0, 2, 0, 1, 1, 1, 1,
	4, 2, 2, 3, 3, 4, 5, 3, 4, 4,
	2, 2, 2, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 2, 5, 5, 0, 2,
	7, 0, 1, 0, 1, 5, 5, 3, 3, 2,
	4, 4, 4, 4, 4, 1, 1, 1, 3, 3,
	1, 1, 1, 6, 8, 0, 1, 1, 1, 1,
	5, 5, 0, 1, 1, 3, 3, 3, 4, 6,
	7, 4, 4, 7, 8, 3, 3, 3, 0, 2,
	2, 0, 2, 2, 1, 1, 1, 1, 0, 1,
	4, 4, 5, 4, 3, 1, 3, 1, 1, 3,
	5, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 4, 1,
	3, 1, 4, 6, 4, 4, 4, 3, 6, 3,
	5, 1, 1, 2, 2, 11, 8, 9, 1, 3,
	2, 4, 0, 2, 0, 1, 1, 1, 1, 0,
	1, 0, 1, 4, 2, 1, 5, 4, 4, 2,
	5, 0, 2, 1, 3, 2, 1, 5, 4, 4,
	2, 0, 5, 0, 1, 3, 3, 1, 3, 1,
	3, 1, 3, 4, 0, 1, 0, 1, 1, 3,
	1, 1, 0, 4, 1, 3, 2, 1, 0, 8,
	0, 4, 7, 4, 0, 2, 0, 2, 0, 2,
	0, 4, 1, 3, 1, 1, 4, 3, 4, 5,
	4, 5, 2, 3, 1, 3, 6, 0, 3, 0,
	1, 2, 4, 4, 0, 1, 3, 1, 3, 3,
	0, 1, 1, 0, 2, 2, 3, 3, 3, 1,
	3, 3, 3, 3, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 7, 7, 1, 1,
	1, 0, 1, 1, 1, 1, 0, 2, 0, 3,
	0, 2, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 4, 4, 3,
	2, 2, 2, 3, 2, 3, 4, 1, 3, 4,
	0, 2, 1, 1, 2, 2, 0, 1, 2, 4,
	1, 3, 1, 3, 2, 3, 1, 4, 3, 0,
	1, 1, 2, 5, 2, 2, 2, 0, 2, 3,
	3, 0, 1, 3, 1, 3, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	7, 1, 1, 7, 1, 3, 0, 1, 1, 3,
	1, 3, 0, 1, 1, 1, 12, 1, 3, 0,
	1, 1, 3, 1, 1, 2, 4, 1, 1, 7,
	7, 1, 4, 1, 1, 3, 4, 3, 0, 1,
	1, 0, 2, 7, 8, 0, 2, 6, 0, 2,
	2, 3, 3, 4, 1, 0, 2, 2, 1, 3,
	2, 1, 3, 2, 1, 3, 2, 0, 1, 3,
	4, 3, 1, 1, 4, 1, 3, 1, 1, 1,
	1, 0, 1, 1, 1, 11, 0, 2, 3, 2,
	3, 1, 1, 1, 3, 3, 4, 0, 2, 2,
	2, 2, 6, 0, 4, 1, 1, 0, 3, 0,
	1, 1, 2, 4, 4, 4, 0, 1, 11, 9,
	11, 2, 2, 4, 5, 1, 3, 0, 3, 5,
	10, 0, 2, 0, 3, 2, 4, 3, 0, 2,
	1, 0, 2, 3, 0, 2, 3, 0, 3, 2,
	4, 3, 0, 1, 0, 6, 0, 3, 5, 0,
	4, 0, 3, 1, 3, 4, 5, 0, 3, 1,
	3, 2, 3, 1, 2, 0, 4, 6, 5, 0,
	2, 0, 2, 4, 5, 4, 5, 1, 5, 6,
	5, 0, 3, 0, 1, 0, 1, 1, 3, 2,
	3, 3, 4, 4, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 5, 4, 1,
	3, 3, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 0,
	1, 1, 3, 1, 1, 1, 1, 1, 7, 7,
	2, 1, 7, 7, 8, 5, 0, 1, 0, 1,
	1, 1, 1, 3, 3, 1, 1, 1, 1, 1,
	0, 1, 3, 1, 3, 5, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 2, 1, 2, 2,
	1, 1, 2, 2, 2, 2, 2, 1, 5, 6,
	4, 1, 1, 2, 0, 1, 1, 2, 5, 0,
	1, 1, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 2, 2, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 3, 5, 2, 2, 2, 2, 1,
	1, 2, 5, 6, 6, 6, 1, 1, 1, 1,
	1, 4, 0, 2, 0, 1, 1, 2, 4, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 5, 0, 1, 3, 0, 1, 0,
	2, 0, 1, 6, 8, 6, 5, 5, 6, 6,
	6, 6, 5, 6, 6, 6, 6, 6, 6, 6,
	6, 1, 1, 1, 4, 4, 6, 8, 6, 4,
	5, 4, 4, 4, 3, 4, 6, 6, 7, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 8, 4, 2,
	3, 2, 4, 2, 2, 4, 6, 2, 2, 4,
	6, 4, 2, 0, 1, 2, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 1, 3, 0, 1, 1, 3, 3, 3, 3,
	3, 2, 1, 1, 3, 4, 3, 4, 3, 4,
	3, 4, 3, 4, 1, 3, 4, 4, 5, 4,
	5, 3, 4, 5, 6, 1, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 1,
	2, 3, 5, 1, 1, 3, 0, 1, 0, 3,
	0, 3, 3, 0, 3, 5, 0, 3, 5, 0,
	1, 1, 0, 1, 1, 2, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var yyChk = [...]int{
	-1000, -488, -492, -2, -5, 552, -1, -4, -100, -75,
	-7, -102, -103, -8, -98, -9, -10, -12, -79, -93,
	-95, -97, -96, -39, -11, -92, -70, -71, -81, -86,
	-89, -90, -91, -104, -99, -101, -133, -105, 545, -76,
	-77, -78, -30, -29, -28, -27, -125, 551, 409, 12,
	457, -13, -14, -453, -15, 238, -270, -271, -272, -274,
	-493, -40, -41, -42, -49, -50, -51, -52, -53, -63,
	-64, -65, -43, -44, -45, -48, -46, -56, -55, -57,
	-58, -59, -60, -61, -62, -47, -128, -129, -66, -68,
	-67, -73, -69, -74, -127, 213, -72, 62, -82, -83,
	-84, -85, -87, -88, 340, 346, 399, 544, 47, -134,
	-136, 555, 141, 142, 144, 145, -31, -32, -33, -34,
	-35, -36, -38, -37, 209, 14, 490, -16, -19, -17,
	-20, -18, -25, -26, -24, -21, -23, -126, -22, 233,
	232, 37, 296, 297, 298, 344, 231, 210, 13, 30,
	41, 322, -135, 68, 211, -137, 10, 557, -6, -3,
	-2, -112, -116, -120, -123, -124, -121, -122, -4, -100,
	99, 223, 546, -267, 336, 547, 549, 548, 71, 79,
	-261, -263, 340, 346, 544, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 460, 531, 532, 533, 534, 320, 321, 487, 250,
	274, 370, 277, 284, 141, 160, 154, 182, 174, 149,
	254, 289, 255, 78, 144, 443, 89, 421, 396, 147,
	269, 271, 273, 276, 256, 170, 165, 268, 252, 163,
	257, 39, 258, 187, 259, 260, 492, 417, 319, 423,
	281, 394, 164, 418, 272, 420, 189, 193, 435, 158,
	159, 425, 437, 186, 230, 42, 489, 242, 438, 191,
	185, 181, 446, 285, 283, 184, 157, 180, 253, 51,
	195, 194, 196, 390, 391, 392, 393, 261, 262, 334,
	434, 177, 166, 324, 150, 22, 441, 237, 422, 347,
	263, 278, 286, 190, 192, 244, 249, 491, 398, 248,
	282, 439, 162, 241, 270, 236, 442, 151, 349, 264,
	145, 275, 436, 445, 50, 362, 156, 148, 227, 142,
	246, 251, 11, 265, 266, 267, 288, 287, 279, 178,
	243, 183, 168, 155, 179, 143, 245, 444, 363, 542,
	322, 379, 176, 173, 247, 220, 440, 424, 146, 383,
	364, 171, 290, 538, 539, 540, 335, 318, 291, 292,
	169, 234, 415, 416, 293, 295, 389, 311, 365, 397,
	371, 366, 202, 299, 427, 429, 188, 541, 300, 301,
	302, 419, 303, 304, 305, 306, -343, -341, -267, 544,
	346, 340, 322, -176, -267, 556, -143, 38, -189, -267,
	-143, -72, -14, -13, -135, -136, -189, 217, -275, 23,
	394, -80, 395, 213, 68, -267, -9, -8, -98, -70,
	-133, -273, -267, 296, 296, -273, 217, -267, 248, 378,
	-392, 223, -347, -320, 249, -346, -322, -349, -323, 31,
	209, 211, 210, 245, 14, 344, 219, 12, 10, 345,
	231, 24, 25, 27, 13, 346, 348, 28, 349, 352,
	353, 354, 41, 357, 358, 238, 71, 79, 74, 256,
	-175, -267, -298, -292, 96, 239, -294, -287, -288, -290,
	-433, -427, -286, 68, 123, 124, 131, 97, -289, -376,
	35, 99, 497, 458, -246, -247, -248, -249, -250, -267,
	-428, -426, 74, 80, 83, 86, 87, 85, 84, 167,
	82, 75, 135, 136, -136, 71, -448, 505, -262, 526,
	531, 532, 533, 534, 525, 47, -398, -406, 216, -404,
	134, 172, 234, 168, 12, 129, 389, 169, 502, 522,
	460, 506, 529, 499, 500, 494, 495, 496, 498, 507,
	509, 521, -407, 517, 527, 528, 515, 530, 73, 72,
	520, 519, 508, 503, 504, 510, 493, 501, 511, 512,
	518, 523, 524, 328, 89, 329, 330, 450, 323, 331,
	223, 394, 56, 332, 333, 334, 335, 336, 457, 337,
	57, 338, 327, 238, 379, 339, 171, 188, 462, 461,
	463, 454, 451, 449, 452, 453, 455, 456, 513, 514,
	516, -106, -107, 536, -152, -153, -239, 19, 6, 7,
	8, 9, -486, 396, 491, 146, 143, -334, 146, 95,
	151, 150, -334, 299, 244, 341, 220, 320, 379, 303,
	248, -314, -312, -394, 293, 289, 218, 228, 227, 90,
	450, 216, 355, -464, -465, 206, 207, 208, -455, 483,
	-454, -267, 330, 26, 217, 341, 244, 429, 427, 428,
	430, 431, 432, 433, -54, -408, -391, 424, 423, -279,
	416, 422, 414, 426, 417, 321, 305, 304, 209, 553,
	484, -258, 365, 397, 447, 448, 342, 398, 435, 436,
	418, 89, 175, 172, 220, 217, 320, 450, 379, 303,
	-464, 248, 378, 40, -340, 389, -339, -341, 435, 436,
	446, 72, 73, 434, -258, 89, 415, 415, -153, -239,
	-152, -134, -136, -101, -453, 218, 320, 379, 248, 219,
	217, 220, 450, 296, 341, 244, 303, -393, -461, 31,
	-399, 203, 204, 205, 32, 33, -1, 103, 557, -292,
	-292, -6, 558, -6, -292, -267, -267, 138, -195, -199,
	-196, -198, -197, -201, -200, 172, 173, 134, 176, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 30,
	188, 234, 168, 169, 170, 171, 189, 154, 174, 488,
	197, 155, 198, 156, 199, 157, 200, 158, 159, 201,
	160, 163, 164, 165, 162, 137, 68, 137, 74, -159,
	240, -189, 137, -159, -153, -152, -153, -189, -251, -267,
	396, 106, -80, -80, 395, -456, -457, -458, -460, 213,
	395, 394, 137, 15, -273, -273, 66, -189, -322, 248,
	-347, -320, 35, 65, 138, 221, 138, 65, 68, 342,
	320, 379, 343, 450, 217, 355, 220, 248, 356, 320,
	379, 217, 220, 450, 248, 320, 217, 220, 379, 248,
	356, 414, 415, 220, 26, 347, 350, 351, 415, -412,
	446, 138, 95, 92, 93, 94, -292, 113, -305, 106,
	107, 108, 109, 110, 111, 112, 120, 119, 130, 123,
	124, 125, 126, 127, 128, 129, 121, 122, 116, 96,
	114, 118, 115, 98, -136, -292, -298, 47, -290, -290,
	-290, -290, -376, -296, -292, 68, 68, 137, 74, -292,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, -405, 68, 68, -302, -303, 68, 68, -286,
	-251, 68, 74, 74, 68, 68, 68, 74, -303, -303,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, -153, 138,
	68, -108, 38, -155, 21, -137, -136, 20, 31, 32,
	31, 32, 31, 32, 31, 32, 80, 439, 490, 149,
	150, 151, -174, -267, -176, -167, -267, -310, 223, -310,
	-310, -310, -310, 219, -310, 217, 217, 217, -310, -466,
	153, 138, -455, -158, 68, -278, 114, 118, 23, 246,
	246, 246, -278, 283, -494, -495, 15, 116, -276, -495,
	-276, -276, -278, -496, 219, 425, 42, 247, 246, -154,
	-155, -154, 419, 415, -363, 420, 421, -280, -495, -279,
	-278, -278, -279, -278, -278, -278, 217, 220, 450, 303,
	554, -494, -494, 30, 30, -392, -189, -392, 484, -259,
	-267, -392, -392, -467, 222, -322, 248, 248, 138, 106,
	23, -342, 106, 117, -341, -341, -341, -342, -342, -210,
	40, -266, 134, -267, 74, -210, 40, -490, -489, -189,
	-154, -137, -136, 69, 69, 69, -392, -392, -392, -392,
	-392, -392, -392, -392, -273, -167, -176, 223, -392, -138,
	-139, 125, -292, -267, -138, -3, -114, -113, 100, 101,
	103, 547, 336, 546, 550, 544, -341, 40, -387, 363,
	362, -381, -383, 68, -382, 68, -382, -382, -382, 68,
	68, -384, 68, -384, -384, -381, -385, 68, -385, -386,
	68, -385, -267, -297, -298, -267, 38, -401, 47, -133,
	68, 30, 68, -267, -402, 47, -133, 68, 30, -154,
	-108, -155, 137, 80, 74, -80, 69, 138, -459, 86,
	87, -462, 186, 178, -267, -94, 74, -7, -8, -9,
	-10, -39, -70, -133, -429, -427, 68, 31, 388, 65,
	15, -348, 217, 450, 341, 244, 220, 320, -346, -329,
	-326, -324, -266, -322, -325, -324, -351, -251, 415, -109,
	400, 295, -292, -292, -292, -292, -292, 85, 96, 318,
	86, 87, -287, -306, 31, 291, 292, -288, -288, -288,
	-288, -288, -288, -288, -288, -288, -288, -288, -288, -295,
	-304, -376, 68, 116, 114, 118, 115, 98, -290, -290,
	-288, -288, 69, 138, -452, -451, 100, -292, -292, -267,
	-449, -450, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 332, 327, 333, 331, 323, 339, 334,
	335, 171, 481, 482, 475, 476, 477, 478, 479, 480,
	-297, -297, -292, -449, -297, -245, 32, 31, -298, -298,
	-298, 69, -292, -463, 316, 315, 317, -156, -267, -297,
	69, 69, 69, 80, -298, -298, -297, -288, -297, -450,
	-245, -245, -298, -298, -245, -245, -245, -245, 125, -245,
	-245, -245, -245, -245, -245, -245, -245, 69, -154, -107,
	-410, -409, -292, 40, 537, -108, -292, -151, -150, -292,
	-487, 74, 440, 441, 147, 150, 149, 34, 68, 68,
	137, -189, 96, -469, -267, -330, -327, -324, -267, -320,
	-267, -267, -310, -310, -310, -189, -467, -454, 34, -157,
	-267, -235, 16, -290, -290, -324, 248, -494, -278, -278,
	-260, -259, -280, -275, -280, -280, -235, -495, -278, -278,
	-280, -276, -235, -267, 415, -235, -235, -363, -277, -267,
	-277, -310, -259, -260, -260, -189, -225, -226, 214, 211,
	210, -232, 212, 360, 250, -311, 254, 78, 255, 396,
	256, 219, 258, 259, 260, 230, 261, 262, 263, 389,
	264, 265, 266, 267, 343, 6, 306, 40, -469, -469,
	30, -330, -267, -146, -141, -145, -142, -147, -238, -240,
	-144, 68, -189, -136, -267, 31, 388, -345, 388, 31,
	-320, -339, -335, 74, 389, -325, -344, 65, 134, -409,
	-342, -342, -342, -344, -344, 133, 138, -491, 439, 440,
	206, -108, -191, -189, -469, -329, -320, -267, -191, -191,
	-267, 68, 35, -267, -234, 138, -233, 15, -268, -267,
	34, 74, 137, -234, -115, -113, 102, -292, -6, 546,
	-292, -6, -6, -292, -6, -292, -390, 364, 80, 80,
	-253, 74, -253, 80, 80, 80, 69, 74, -333, 65,
	-403, -299, -447, 536, -161, 69, -156, -445, -446, -156,
	-160, -267, -403, -161, 69, -445, -108, -108, -267, 23,
	-80, -457, 137, 138, -157, -348, -328, -325, -350, 125,
	-267, -336, 138, 490, 559, 72, 221, -479, -478, 380,
	69, 138, -413, 222, 457, 74, 560, 202, 85, 318,
	86, 87, -376, -298, -295, -290, -290, -288, -288, -293,
	235, -293, 95, -292, -291, -451, 102, -292, 34, 138,
	66, 137, 69, 69, 15, 15, 69, -292, 69, 69,
	69, 69, 15, 15, -292, 69, 137, 69, 69, 69,
	69, 66, 69, 138, 69, 138, -298, -292, 69, 69,
	-292, -292, -292, -298, 69, -292, -292, -292, -292, -292,
	-292, -292, -292, -358, 410, 138, 69, 74, 138, 22,
	138, -148, 36, 37, 148, 151, 151, 150, -175, -177,
	-178, -179, -180, -181, 116, 139, 140, -168, -169, -170,
	-171, -195, -251, 173, 176, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 234, 168, 169, 170,
	171, 189, 154, 174, 155, 156, 157, 158, 159, 160,
	163, 164, 165, 162, -267, -158, 35, -472, 367, -480,
	138, 40, -478, 450, -313, 66, -131, 15, -189, -189,
	-189, -202, 34, 15, -140, -190, -267, 68, 69, 138,
	-292, -321, 66, -267, -260, -235, -235, -189, -267, -235,
	-235, -278, -280, -280, -276, 137, -259, -158, 138, -188,
	-192, 225, -185, -187, -251, -283, -186, 228, -442, 226,
	224, 90, 229, 280, 91, 219, -227, 219, 91, -267,
	225, 229, 224, -228, 219, 221, -264, 106, -264, -258,
	133, -264, -264, -264, -264, 257, 257, -264, -264, -264,
	-264, -264, -264, -264, -264, -264, -264, -264, -264, -264,
	-264, 68, -473, 367, 30, 326, -480, -132, 320, 30,
	-241, -242, -243, -244, 54, 58, 60, 55, 56, 57,
	61, 30, 138, -265, -269, 34, -267, 74, -265, -136,
	-141, -146, -265, 68, 221, 68, 106, -344, -344, -344,
	40, -266, -489, 446, 440, 138, 65, -168, -176, -235,
	-139, -141, -267, 74, -267, 125, -235, 103, -6, 101,
	-119, -118, -117, 104, 544, 550, 103, 103, 103, 69,
	69, 69, 138, 69, 69, 69, 138, 69, 138, -416,
	420, 39, 138, 68, 69, 138, 47, 138, 106, 69,
	138, 69, 47, 137, 396, -267, -427, 69, -350, 138,
	221, 137, 137, -326, 346, -266, -328, 20, 490, -251,
	38, -257, -256, 74, 560, 69, -293, -293, 95, -290,
	-287, 69, 103, -292, 101, -193, -195, 362, 363, -194,
	-200, 134, 172, 234, 171, 170, 168, 362, 363, -210,
	-267, -292, -292, 69, -292, -292, 15, -267, -210, -288,
	-292, -153, 69, -357, -358, -357, 69, 69, 69, 69,
	-357, 69, 69, 69, 69, 69, 69, 69, 69, 68,
	-409, -416, -292, -292, -150, -149, 43, 151, 354, 69,
	138, -251, 69, 138, -195, 34, -475, 422, 369, -264,
	-285, -284, 322, 41, -396, 389, 375, 376, -327, 248,
	-267, 65, 310, 311, 312, 313, -308, -309, -307, -311,
	-469, 68, 68, 68, -377, 300, -195, -189, -140, -267,
	15, 138, -468, 137, -1, -267, -320, -278, -235, -495,
	-235, -278, -278, -280, -267, 34, -226, -230, 44, 46,
	-192, -195, -186, -441, -442, -310, -267, 91, -441, 91,
	68, -267, -267, -267, 91, 91, -267, -229, -277, 80,
	80, -264, -264, 80, 74, 74, 74, -264, -264, 80,
	74, -269, 80, 80, 80, 80, 40, 74, -215, 40,
	268, 272, 269, 270, 271, 80, 40, 80, 40, 80,
	40, -267, 68, -443, -444, 74, -475, -264, 326, 106,
	-285, -130, 78, 31, -162, 214, 211, -469, -332, -331,
	-251, -145, -145, -145, -145, 54, 54, 54, 59, 54,
	59, 54, -243, -332, -147, -158, -269, 69, -485, -484,
	-483, -481, 62, 222, 63, -297, -328, -281, 74, -335,
	-189, -189, 69, -237, 17, 137, -237, 99, -6, -115,
	-117, -292, -6, -292, 546, 336, 547, 74, 80, 80,
	-424, 406, 401, 403, 91, -299, -411, -410, 47, -133,
	-156, -403, -446, -409, -267, 47, -133, -403, -267, 80,
	15, -325, -320, 125, 125, -267, 347, -336, 74, 368,
	74, 217, 561, 138, 106, -257, -287, -292, 69, -203,
	159, 158, -203, 69, -382, -382, -381, -384, -381, -203,
	-203, 69, 69, 23, 69, 69, 69, -292, 69, 69,
	138, -400, 459, -357, -357, -357, -357, -357, -357, -357,
	-357, -357, -357, -357, -357, -357, -301, -300, 240, -424,
	44, 45, 74, 74, -179, -195, 215, -170, 40, -133,
	-476, 78, -470, 74, -267, -477, 78, 370, 136, 324,
	40, 371, 372, 386, 319, 80, 80, 377, -471, -267,
	-163, 320, -189, -307, -258, 133, 259, 303, -182, -183,
	-184, -192, -185, -187, -182, -182, -378, 302, 20, 80,
	124, -159, 66, 137, -141, -190, -267, 125, 69, -235,
	-267, -235, -235, -278, -133, -251, -230, -207, -206, -204,
	85, 96, 40, 360, -205, 78, 133, 273, 251, 274,
	-224, -282, 65, 366, 224, 90, 91, 348, -283, -439,
	-267, -437, -439, -267, -437, -437, -310, -292, -267, -231,
	308, 309, -210, -210, 74, 74, -211, 251, -191, 69,
	138, 106, -476, -470, 106, 74, -477, 74, 138, -162,
	-162, -235, 138, 106, -165, -164, 65, 66, -166, 65,
	-164, 54, 54, -235, -483, -482, 23, -442, -442, -442,
	69, 69, -236, 18, 20, 125, -236, 103, 101, 103,
	103, -267, 69, 69, -388, 538, -420, -422, 401, 20,
	20, 13, 69, -403, -403, -320, -336, 389, -189, -256,
	74, 561, -292, 69, -292, 69, 74, -153, 20, -388,
	-172, -195, -286, 74, -474, 380, 74, 74, 80, 40,
	80, 136, 373, -397, -130, -162, 68, -264, -264, -264,
	-267, 69, 138, 69, 69, -379, 239, 80, 124, 80,
	124, 80, -265, -141, -267, -235, -468, 137, -235, -235,
	-204, 85, -288, 74, -212, -266, 134, -213, 40, 272,
	268, -214, 40, 252, 253, -216, 68, 280, 13, 91,
	91, -189, 68, 68, 66, 290, 68, 68, -439, 69,
	252, 253, 69, -444, 74, -474, 74, -469, -153, -331,
	-409, -292, 68, -292, 68, 54, 19, 17, -292, -298,
	223, -6, 547, 336, -217, 539, 74, 20, 74, -418,
	74, -332, -111, -414, -363, 69, 69, -357, -360, -359,
	-362, 407, 282, 413, -298, -217, 489, 20, 490, 323,
	40, 80, 40, 374, -315, -317, -251, 68, -210, -212,
	74, -208, -209, -232, -184, -110, -109, -208, -380, 142,
	80, 124, 80, 80, -235, -235, 80, 68, -404, -316,
	68, -315, -315, -440, 310, 311, 312, 314, 313, -440,
	-315, -315, 68, -338, -337, 281, 96, -154, -157, -438,
	-267, 224, 20, 20, -267, -267, -254, 540, 80, 74,
	403, -389, 541, -423, 406, -417, -415, 401, 402, 403,
	404, 69, -361, 98, 373, 377, -292, -254, -173, -267,
	74, 368, 74, 323, 69, 138, -381, -292, -352, 240,
	138, -232, -111, -352, -395, 150, 301, 490, 80, 124,
	80, -153, 69, -292, -302, -219, -218, 486, -315, 69,
	69, 69, 69, -315, 281, 69, 69, 138, 68, 20,
	74, -425, 222, -421, -422, 405, -415, 20, 403, 20,
	20, -361, 536, 411, 412, 411, 412, 34, 389, -318,
	-317, -148, 69, -353, 289, 20, -232, -353, 301, 80,
	124, 80, -154, 69, -223, -221, -222, 65, 418, 278,
	279, 69, -318, -318, -318, -318, 69, -267, 224, -255,
	-267, -418, -432, 68, 80, -420, -419, -421, 20, -418,
	20, -418, -418, 95, 74, -319, 230, 78, 490, 308,
	309, -148, 20, -354, 282, 283, -355, -367, 285, 80,
	-337, -222, 65, -221, 65, 14, 13, -224, 69, 138,
	-436, 30, 69, -431, -430, -252, -426, -267, 406, 407,
	74, -418, -361, -264, 74, 307, -251, 68, -365, 286,
	68, -363, 68, -363, 91, 311, -220, 275, 276, 30,
	150, -220, -267, -435, -434, -433, 69, 138, 137, 80,
	-267, -351, -356, 287, 80, -288, 68, -288, 68, -364,
	284, 68, 85, 40, 277, 138, 106, -430, -267, 69,
	-369, 68, 20, 69, -351, 69, -351, 68, 106, -288,
	-434, 40, -292, 137, -370, -368, 240, -355, 69, 69,
	69, -351, 80, 69, -267, 69, 138, -267, -366, 288,
	69, -368, -371, 47, 80, -375, -372, 68, -232, 242,
	116, -375, -232, -374, -373, 287, 243, 68, 69, 138,
	-267, 239, 68, -298, -373, -372, -298, 69, 69,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 245,
	246, 247, 757, 758, 759, 760, 761, 0, 0, 0,
	0, 531, 532, 0, 503, 0, 0, 0, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 335,
	336, 337, 338, 339, 340, 0, 270, 266, 206, 207,
	208, 209, 277, 278, 373, 0, 0, 0, 0, 614,
	-2, 53, 259, 0, 250, 250, 762, 763, 764, 765,
	766, 767, 768, 769, -2, 544, 0, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 324,
	325, 326, 320, 321, 323, 322, -2, 0, 544, 0,
	0, 0, 634, 0, 0, 649, 671, 23, 0, 7,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	0, 0, 19, 0, 19, 0, 0, 0, 1056, 1057,
	1058, 1059, -2, 1523, 1502, 1672, 1673, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 0, 243, 241, 1502,
	1523, 1583, 1616, 0, 774, 0, 592, 0, 597, 1017,
	592, 271, 533, 534, 634, 634, 501, 0, 306, 0,
	1515, 310, 0, 0, 0, 498, 301, 302, 303, 304,
	305, 0, 756, 0, 0, 297, 0, 265, 1574, 0,
	0, 0, 0, 0, 0, 150, 845, 152, 847, 156,
	163, 0, 0, 168, 169, 172, 173, 174, 175, 176,
	0, 180, 0, 182, 185, 0, 187, 188, 0, 191,
	192, 193, 0, 203, 204, 205, 848, 849, 850, -2,
	81, 772, 1440, 1335, 0, 1342, 1343, 1354, 1365, 1129,
	1130, 1131, 1132, 0, 0, 0, 0, 0, 1139, 1140,
	0, 1154, 1676, 0, 1146, 1147, 1148, 1149, 1150, 90,
	102, 103, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 0, 1308, 1116, 1056, 0, 1684, 0, 1704,
	1709, 1710, 1711, 1712, 1703, 0, 0, 1293, 0, 1283,
	0, 0, -2, -2, 0, 0, 1642, -2, 1681, 1700,
	1708, 1685, 1707, 1678, 1679, 1673, 1674, 1675, 1677, 1686,
	1688, 1699, 0, 1695, 1705, 1706, 0, 0, 104, 105,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1299, -2, 1301, 1302, 1304, 1305, 1306,
	1307, -2, 1310, 1311, 1312, -2, -2, 1315, 1316, 1317,
	1318, 1319, 1320, 1323, -2, 1325, -2, -2, 1295, 1296,
	1297, 1298, 1287, 1288, 1289, 1290, 1291, 1292, -2, -2,
	-2, 634, 707, 0, -2, 0, 0, 0, 654, 657,
	660, 663, 0, 54, 55, 260, 261, 249, 251, 0,
	255, 0, 248, 0, 0, 0, 877, 877, 877, 877,
	877, 0, 877, 0, 0, 0, 877, 852, 853, 854,
	875, 876, 923, 549, 545, 546, 547, 548, 622, 0,
	624, 627, 478, 425, 0, 0, 0, 478, 0, 439,
	431, 0, 0, 0, 478, 0, 0, 629, 629, 0,
	481, 488, 478, 478, -2, 478, 478, 478, 0, 0,
	445, 446, 447, 431, 431, 450, 451, 452, 463, 464,
	489, 1464, 0, 0, 373, 0, 373, 0, 373, 373,
	551, 1574, 0, 0, 217, 1642, 222, 0, 1522, 1588,
	1537, 0, 0, 1555, 0, -2, 0, 287, 629, 0,
	635, 0, 634, 0, 0, 373, 373, 373, 373, 373,
	373, 373, 373, 0, 0, 0, 373, 0, 0, 672,
	673, 668, 669, 670, 674, 675, 5, 6, 19, 0,
	0, 0, 0, 0, 0, 60, 59, 0, 1441, 1459,
	1396, 1397, 1398, 1446, 1400, 1450, 1450, 1450, 1450, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 0, 0,
	1439, 1419, 1448, 1448, 1448, 1446, 1443, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1453, 1453, 1456, 1453, 0, 1333, 0, 0, 0,
	0, 596, 0, 0, 629, -2, 0, 502, 307, 1060,
	0, 0, 311, 312, 0, 0, 327, 0, 330, 315,
	316, 317, 0, 0, 299, 300, 0, 0, 267, 0,
	0, 0, 374, 0, 0, 0, 0, 0, 0, 160,
	157, 164, 167, 177, 184, 0, 196, 198, 201, 158,
	165, 170, 171, 178, 199, 159, 161, 162, 166, 200,
	202, 179, 183, 197, 181, 186, 189, 190, 195, 0,
	131, 0, 0, 0, 0, 0, 1341, 0, 0, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 1335, 0, 0, 1135, 1136,
	1137, 1138, 1141, 0, 1155, 0, 0, 0, 1394, 0,
	1333, 1333, 0, 1333, 1329, 0, 0, 0, 0, 0,
	0, 1333, 1269, 0, 0, 1271, 1284, 0, 0, 1273,
	1274, 0, 1277, 1278, 1333, 0, 1333, 1282, 1265, 1266,
	0, 1329, 1329, 0, 0, 1329, 1329, 1329, 1329, 1329,
	1329, 1329, 1329, 1329, 1329, 1329, 1329, 0, 629, 0,
	0, 617, 0, 598, 0, 651, 653, 0, 655, 656,
	658, 659, 661, 662, 664, 665, 56, 0, 0, 253,
	0, 258, 0, 771, 0, 0, 787, 0, 0, 0,
	0, 0, 0, 0, 0, 877, 877, 877, 0, 551,
	550, 0, 623, 0, 0, 680, 0, 0, 0, 431,
	478, 478, 437, 438, 433, 432, 484, 485, 481, 0,
	481, 481, 680, 0, 457, 458, 459, 478, 478, 465,
	630, 466, 467, 481, 0, 486, 487, 680, 0, 0,
	680, 680, 0, 475, 476, 477, 0, 0, 877, 0,
	494, 433, 433, 1465, 1466, 0, 886, 0, 0, 0,
	497, 0, 0, 0, 552, 210, 0, 0, 0, 0,
	0, 0, 239, 240, 0, 0, 0, 0, 0, 230,
	233, 1011, 1012, 842, 843, 234, 235, 279, 280, 0,
	598, 650, 652, 646, 647, 648, 0, 0, 0, 0,
	0, 0, 0, 0, 527, 0, 529, 0, 0, 688,
	682, 684, 751, 90, 688, 8, 77, 74, 0, 19,
	0, 0, 19, 19, 0, 19, 244, 0, 1462, 1460,
	1461, 1399, 1447, 0, 1424, 0, 1425, 1426, 1427, 0,
	0, 1420, 0, 1421, 1422, 1423, 1415, 0, 1416, 1417,
	0, 1418, 242, 0, 1334, 775, 0, 571, 584, 566,
	0, 573, 0, 1018, 553, 584, 555, 0, 573, 598,
	620, 598, 0, 308, 0, 313, 0, 0, 329, 331,
	332, 333, 318, 319, 499, 295, 296, 288, 289, 290,
	291, 292, 293, 294, 298, 100, 0, 268, 269, 0,
	0, 0, 144, 145, 146, 147, 148, 149, 151, 135,
	519, 521, 834, 846, 0, 837, 0, 154, 194, 127,
	0, 0, 1336, 1337, 1338, 1339, 1340, 1344, 0, 1346,
	1348, 1350, 1352, 0, 1370, -2, -2, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1355,
	1368, 1369, 0, 0, 0, 0, 0, 0, 1366, 1366,
	1361, 0, 1133, 0, 1152, 1156, 0, 0, 0, 91,
	1328, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244,
	1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264,
	0, 0, 1335, 0, 0, 0, 1330, 1331, 0, 0,
	0, 1224, 0, 0, 1230, 1231, 1232, 0, 579, 0,
	1294, 1270, 1285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 706, 708,
	0, 588, 590, 591, 0, 618, 631, 636, 637, 640,
	52, 57, 262, 263, 0, 0, 257, 0, -2, 789,
	0, 627, 0, 0, 801, 371, 828, 0, 0, 844,
	867, 873, 0, 0, 0, 901, 0, 625, 0, 0,
	720, 424, 0, 479, 480, 428, 1574, 433, 680, 680,
	440, 434, 441, 483, 442, 443, 444, 0, 680, 680,
	478, 481, 468, 482, 481, 471, 472, 0, 490, 495,
	491, 0, 493, 448, 449, 627, 342, 343, 0, 0,
	0, 348, 0, 1467, 1467, 0, 1467, 1467, 1467, 1467,
	0, 0, 1467, 1467, 1467, 1467, 1467, 1467, 1467, 1467,
	1467, 1467, 1467, 1467, 1467, 1467, 0, 887, 368, 0,
	0, 371, 818, 693, 0, 694, 695, 691, 722, 746,
	746, 0, 746, 726, 1017, 211, 212, 0, 214, 215,
	216, 223, 218, 220, 0, 0, 224, 236, 237, 238,
	0, 0, 0, 228, 229, 0, 0, 282, 283, 285,
	0, 616, 516, 1015, 517, 518, 522, 0, 524, 525,
	526, 789, 0, 823, 680, 0, 689, 0, 685, 752,
	0, 754, 0, 680, 0, 75, 19, 0, 68, 65,
	0, 0, 0, 0, 0, 1442, 1395, 1463, 0, 0,
	0, 1444, 0, 0, 0, 0, 58, 600, 560, 0,
	565, 581, 0, 585, 0, 0, 577, 570, 574, 0,
	0, 594, 554, 0, 0, 559, 619, 621, 1061, 0,
	314, 328, 0, 0, 0, 0, 138, 831, 0, 139,
	143, 133, 0, 0, 0, 836, 0, 833, 838, 0,
	153, 0, 0, 128, 129, 892, 897, 0, 1345, 1347,
	1349, 1351, 1353, 0, 1356, 1366, 1366, 1362, 0, 1357,
	0, 1359, 0, 1336, 0, 1157, 0, 0, 0, 0,
	0, 0, 1214, 1215, 0, 0, 1219, 0, 1221, 1222,
	1223, 1225, 0, 0, 0, 1229, 0, 1268, 1286, 1272,
	1275, 0, 1279, 0, 1281, 0, 634, 0, 1191, 1191,
	0, 0, 0, 0, 1191, 0, 0, 0, 0, 0,
	0, 0, 0, 1151, 0, 0, 709, 600, 0, 0,
	0, 643, 641, 642, 264, 252, 254, 0, 0, 0,
	777, 778, 780, 0, 783, 784, 785, 0, 790, 791,
	793, 794, 0, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1507, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 788, 0, 878, 808, 1467, 375,
	0, 0, 830, 0, 0, 0, -2, 0, 0, 0,
	0, 903, 0, 0, 0, 538, 542, 23, 628, 0,
	681, 426, 0, 427, 478, 435, 436, 680, 1017, 460,
	461, 680, 478, 478, 481, 0, 492, 0, 886, 345,
	352, 0, 1026, 1027, 0, 0, 1031, 1038, 877, 1086,
	0, 1038, 0, 0, 1040, 1041, 346, 0, 0, 358,
	0, 0, 0, 347, 0, 0, 0, 1468, 0, 1467,
	1467, 0, 0, 0, 0, 1467, 1467, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 808, 1467, 0, 0, 375, 815, 0, 0,
	0, 0, 0, 0, 713, 0, 0, 712, 0, 0,
	0, 0, 0, 627, 747, 0, 749, 750, 724, -2,
	0, 693, 729, 1333, 0, 0, 0, 225, 226, 227,
	231, 232, 281, 284, 286, 0, 0, 0, 530, 678,
	683, 690, 753, 755, 91, 686, 678, 0, 78, 19,
	77, 69, 70, 0, 19, 0, 0, 0, 0, 1452,
	1451, 1437, 0, 1438, 1449, 1454, 0, 1457, 0, 604,
	0, 0, 584, 586, 0, 0, 584, 0, 0, 593,
	0, 0, 584, 0, 0, 500, 101, 334, 0, 0,
	0, 0, 0, 520, 0, 835, 135, 0, 0, 155,
	0, 0, 895, 0, 897, 1332, 1358, 1360, 0, 1367,
	1363, 1134, 1142, 1153, 0, 0, 1159, 1171, 1171, 0,
	1162, 1450, 1450, 1165, 1446, 1448, 1446, 1171, 1171, 0,
	92, 0, 0, 1220, 0, 0, 0, 580, 0, 0,
	0, 1189, 1191, 1196, 1192, 1197, 1191, 1191, 1191, 1191,
	1202, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1187,
	589, 604, 632, 633, 638, 639, 0, 256, 0, 0,
	782, 0, 0, 0, 795, 0, 811, 809, 810, 0,
	825, 376, 377, 378, 379, 0, 0, 0, 829, 0,
	561, 0, 868, 869, 870, 871, 872, -2, 881, 0,
	0, 1019, 1019, 1019, 911, 0, 902, 592, 0, -2,
	0, 0, 540, 0, 0, 721, 429, 680, 453, 0,
	469, 680, 680, 478, 496, 0, 344, 350, 353, 0,
	352, -2, 1030, 1050, 1039, 1050, 1087, 1050, 1050, 877,
	0, 356, 357, 359, 0, 361, 0, 349, 355, 970,
	971, 0, 0, 974, 975, 976, 977, 0, 0, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 1005,
	1006, 1007, 1008, 1009, 1010, 990, 991, 992, 993, 994,
	995, 1002, 0, 0, 999, 0, 811, 0, 0, 0,
	825, 817, 0, 819, 820, 0, 0, 563, 680, 274,
	0, 716, 710, 0, 699, 714, 715, 702, 0, 704,
	0, 700, 701, 680, 692, 723, 748, 725, 728, 730,
	731, 737, 0, 0, 0, 0, 213, 0, 395, 219,
	1016, 523, 528, 676, 0, 0, 676, 73, 76, 0,
	71, 0, 0, 0, 0, 63, 61, 1445, 0, 0,
	606, 115, 0, 0, 0, 582, 0, 587, 584, 569,
	578, 568, 575, 576, 595, 584, 558, 557, 1062, 309,
	0, 832, 135, 140, 141, 142, 136, 134, 839, 0,
	841, 0, 893, 897, 0, 0, 1364, 1158, 1143, 1160,
	1172, 1173, 1161, 1144, 1163, 1164, 1166, 1167, 1168, 1169,
	1170, 1145, 1216, 0, 1218, 1226, 1227, 0, 1276, 1280,
	0, 0, 0, 1195, 1198, 1199, 1200, 1201, 1203, 1204,
	1205, 1206, 1207, 1208, 1209, 1210, 634, 1188, 0, 606,
	644, 645, 770, 773, 779, 781, 0, 792, 0, 799,
	800, 0, 0, 803, 804, 813, 0, 0, 0, 381,
	382, 0, 0, 0, 394, 390, 391, 392, 372, 824,
	815, 0, 0, 882, 1467, 1467, 1467, 0, 0, 1020,
	1021, 1023, 1024, 1025, 0, 0, 914, 0, 0, 905,
	0, 746, 0, 0, 680, 539, 542, 543, 626, 430,
	680, 473, 470, 680, 341, 354, 351, 1052, -2, 1065,
	1067, 0, 0, 1070, 1071, 0, 0, 0, 0, 1108,
	1077, 0, 0, 1081, 0, 1382, 1383, 0, 1085, 0,
	1051, 0, 1042, 1051, 0, 0, 1050, 0, 360, 362,
	363, 364, 972, 973, 978, 979, 996, 0, 0, 998,
	0, 0, 365, 0, 0, 366, 370, 816, 0, 821,
	822, 634, 0, 0, 696, 717, 0, 0, 697, 0,
	698, 703, 705, 273, 732, 0, 0, 734, 735, 736,
	727, 221, 666, 0, 0, 687, 667, 0, 19, 0,
	0, 66, 1455, 1458, 608, 0, 605, 116, 0, 0,
	0, 0, 583, 567, 556, 137, 132, 840, 118, 896,
	898, 894, 0, 1228, 0, 1191, 1190, 1184, 0, 608,
	0, 798, 796, 812, 802, 0, 826, 827, 0, 383,
	384, 0, 387, 393, 814, 562, 0, 0, 0, 0,
	874, -2, 0, 0, -2, 917, 0, 912, 0, 904,
	0, 907, 680, 680, -2, 536, 541, 0, 454, 474,
	1066, 1068, 1069, 1072, 1073, 1013, 1014, 1074, 1113, 1114,
	1115, 1075, 1110, 1111, 1112, 1076, 0, 0, 0, 1380,
	1381, 1106, 0, 0, 0, 0, 0, 0, 0, 1036,
	1003, 1004, 997, 1000, 1001, 369, 367, 564, 629, 275,
	276, 718, 0, 711, 741, 738, 0, 0, 677, 679,
	67, 72, 0, 0, 610, 0, 607, 0, 601, 603,
	126, 572, 88, 109, 0, 1217, 1267, 1194, 0, 1185,
	0, 1179, 1180, 1181, 1186, 610, 0, 0, 0, 380,
	385, 0, 388, 389, 0, 863, 1446, 0, 883, 884,
	885, 924, -2, 967, 1022, 889, 118, 924, 908, 0,
	915, 0, 913, 906, 634, 537, 0, 0, 1283, 1101,
	0, 0, 0, 1043, 1045, 1046, 1047, 1048, 1049, 1044,
	0, 0, 0, 1035, 1037, 1082, 0, 272, 0, 0,
	742, 744, 739, 740, 62, 64, 79, 0, 609, 117,
	0, 80, 0, 106, 0, 119, 120, 0, 0, 0,
	0, 1193, 1182, 0, 0, 0, 0, 599, 0, 797,
	805, 0, 807, 386, 856, 0, 640, 0, 926, 0,
	886, 969, 891, 926, 900, 0, 910, 0, 919, 0,
	916, 629, 1109, 0, 1080, 1089, 1102, 0, 0, 856,
	856, 856, 856, 0, 1083, 719, 733, 0, 0, 0,
	89, 93, 0, 115, 112, 0, 121, 0, 0, 0,
	0, 0, 1174, 1175, 1177, 1176, 1178, 0, 806, 855,
	864, 865, 640, 888, 0, 963, 968, 890, 909, 918,
	0, 921, 535, 1078, 1088, 1090, 1091, 0, 1103, 1104,
	1105, 1107, 1028, 1029, 1032, 1033, 0, 743, 745, 0,
	612, 602, 82, 0, 0, 110, 111, 113, 0, 122,
	0, 124, 125, 0, 786, 857, 1467, 0, 0, 861,
	862, 866, 0, 951, 0, 0, 957, 0, 964, 920,
	1079, 1092, 0, 1093, 0, 0, 0, 1034, 611, 0,
	899, 0, 94, 0, 96, 98, 99, 1053, 107, 108,
	114, 123, 1183, 0, 859, 0, 927, 0, 929, 0,
	0, 0, 0, 0, 961, 0, 1094, 1096, 1097, 0,
	0, 1095, 613, 83, 84, 0, 95, 0, 0, 858,
	860, 0, 931, 0, 952, 0, 0, 0, 0, 0,
	0, 0, 1098, 1100, 1099, 0, 0, 97, 1054, 928,
	925, 0, 963, 953, 0, 955, 0, 0, 0, 0,
	85, 86, 87, 0, 0, 933, 0, 949, 954, 956,
	958, 0, 962, 960, 1055, 932, 0, 945, 930, 0,
	959, 934, -2, 0, 950, 935, -2, 0, 943, 0,
	0, 936, 944, 0, 939, 0, 0, 0, 938, 0,
	-2, 946, 0, 0, 940, -2, 0, 948, 947,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 97, 3, 3, 3, 128, 120, 3,
	68, 69, 125, 123, 138, 124, 137, 126, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 558, 557,
	107, 106, 108, 3, 559, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 130, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 560, 119, 561, 131,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 98, 99, 100, 101, 102, 103, 104,
	105, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 121, 122, 127, 129, 132, 133, 134, 135, 136,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:712
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:719
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:725
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:733
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:739
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:743
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:758
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:762
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:768
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:773
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:777
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:809
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:816
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:836
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:842
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:849
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:857
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:863
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:872
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:882
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:890
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:898
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:906
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:916
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:924
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:934
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:941
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:950
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:960
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:964
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:970
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:974
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:980
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:989
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:999
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1003
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1009
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1018
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1022
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1028
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1049
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1062
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1069
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1073
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1079
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1083
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1089
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1096
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1104
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1108
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1122
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1126
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1130
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1135
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1139
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1143
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1149
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1158
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1169
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1173
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1179
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1183
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1189
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1193
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1199
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1223
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1242
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1246
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1250
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1255
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1259
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1266
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1274
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1281
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1286
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1293
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1298
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1302
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1326
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1330
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1336
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1342
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1360
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1377
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1400
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1404
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1408
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1413
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1417
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1423
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1436
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1447
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1460
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1464
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1474
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1487
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1500
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1506
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1512
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1519
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1527
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1536
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1540
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1544
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1548
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1552
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1556
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1563
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1567
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1573
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1580
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1589
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1593
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1599
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1603
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1607
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1611
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1615
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1619
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1623
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1627
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1631
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1635
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1639
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1643
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1647
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1651
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1655
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1659
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1663
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1667
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1671
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1675
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1679
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1683
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1687
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1691
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1695
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1699
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1703
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1707
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1711
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1715
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1719
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1723
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1727
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1731
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1735
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1739
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1743
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1747
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1751
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1755
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1759
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1763
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1767
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1779
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1783
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1787
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1791
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1795
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1807
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1814
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1821
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1830
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1860
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1864
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1868
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1874
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1880
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1884
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1891
		{
			yyVAL.str = yyDollar[3].str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1897
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1901
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1907
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1915
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1924
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1932
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1940
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1963
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1986
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1993
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2000
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2008
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2015
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2022
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2031
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2035
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2039
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2045
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2049
		{
			yyVAL.str = yyDollar[1].str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2055
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2059
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2065
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2069
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2080
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2086
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2091
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2095
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2099
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2103
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2107
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2111
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2115
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2119
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2123
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2129
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2133
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2137
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2141
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2146
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2151
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2157
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2164
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2170
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2177
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2184
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2194
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2201
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2212
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2223
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2227
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2233
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2243
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2249
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2253
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2259
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2265
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2269
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2273
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2277
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2283
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2295
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2301
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2305
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2311
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2315
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2321
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2327
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2337
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2343
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2347
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2351
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2355
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2359
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2363
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2371
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2379
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2389
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2430
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2434
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2440
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2446
		{
			yyVAL.str = yyDollar[1].str
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2451
		{
			yyVAL.str = "true"
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2452
		{
			yyVAL.str = "false"
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2453
		{
			yyVAL.str = yyDollar[1].str
		}
	case 334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2458
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2473
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2484
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2493
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2497
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2503
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2510
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2514
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2518
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2522
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2526
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[2].columnTableDefUnion(),
					Pos:    yyDollar[3].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2535
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[3].columnTableDefUnion(),
					Pos:    yyDollar[4].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2545
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: -1,
			}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2551
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: 0,
			}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2557
		{
			yyLOCAL = &tree.AlterColPos{
				PreColName: yyDollar[2].unresolvedNameUnion(),
				Pos:        -2,
			}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2567
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2575
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2582
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2589
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2596
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2603
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2610
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2618
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2627
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2631
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2638
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2650
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2658
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2667
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2673
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2684
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2695
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2699
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2704
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2708
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2713
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2717
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2733
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2737
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2741
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2745
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2749
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2753
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2757
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2761
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2765
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2769
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2773
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2777
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2781
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2785
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2789
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2793
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2799
		{
			yyVAL.item = nil
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2804
		{
			yyVAL.item = nil
		}
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2843
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2848
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2852
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2856
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2865
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2869
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2875
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2880
		{
		}
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2884
		{
		}
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2889
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2899
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2909
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2917
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2923
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2929
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2935
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2941
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2947
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2953
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2962
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2966
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2970
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2974
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2978
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2982
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2986
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2990
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2996
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3003
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3013
		{
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3015
		{
		}
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3024
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3034
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3043
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3047
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3051
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3057
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3063
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3069
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3075
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3084
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3094
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3106
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3110
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3116
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3128
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3142
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3148
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3155
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3160
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3164
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3168
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3173
		{
			yyVAL.str = ""
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3177
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3183
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3196
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3200
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3206
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3211
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3215
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3219
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3225
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3231
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3235
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3241
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3247
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3251
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3255
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3261
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3265
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3288
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3297
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3306
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3315
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3319
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3325
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3334
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3343
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3353
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3359
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3365
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3371
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3377
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3386
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3393
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3404
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3409
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3416
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3432
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3445
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3456
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3460
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3466
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3471
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3478
		{
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3480
		{
		}
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3483
		{
		}
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3492
		{
		}
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3496
		{
		}
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3501
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3510
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3517
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3523
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3531
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3538
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3545
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3565
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3574
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3578
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3584
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3588
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3594
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3601
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3607
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3615
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3622
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3629
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3648
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3652
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3657
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3661
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3665
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3671
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3680
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3684
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3690
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3694
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3700
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3704
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3710
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3715
		{
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3719
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3726
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3730
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3737
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3742
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3746
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3752
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3756
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3762
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3766
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3771
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3775
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3788
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3795
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3802
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3820
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3839
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3845
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3852
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3856
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3869
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3873
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3878
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3882
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3889
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3894
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3901
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3907
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3911
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3915
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3919
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3923
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3927
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3933
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3940
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3949
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3953
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3959
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3967
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3971
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3976
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3980
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3986
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3990
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3994
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3999
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4003
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4009
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4015
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4019
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4025
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4030
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4034
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4038
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4043
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4047
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4051
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4057
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4061
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4065
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4079
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4083
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4093
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4103
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4113
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4125
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4133
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4141
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4150
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4158
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4166
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4174
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4182
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4190
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4198
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4206
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4214
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4224
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4235
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4249
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4253
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4257
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4262
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4266
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4270
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4279
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4283
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4288
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4292
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4297
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4301
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4307
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4311
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4317
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4321
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4326
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4330
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4335
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4343
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4349
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4357
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4365
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4375
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4381
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4390
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4399
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4408
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4418
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4422
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4432
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4436
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4440
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4444
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4450
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4460
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4464
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4470
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4476
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4480
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4486
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4492
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4496
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4500
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4506
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4510
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4516
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4520
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4526
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4530
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4536
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4540
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4550
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4563
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4569
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4575
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4588
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4599
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4606
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4610
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4616
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4626
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4630
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4634
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4639
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4643
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4647
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4651
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4656
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4660
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4664
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4668
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4672
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4677
		{
			yyVAL.str = ""
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4681
		{
			yyVAL.str = yyDollar[1].str
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4685
		{
			yyVAL.str = yyDollar[2].str
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4691
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4697
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4701
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4705
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4709
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4713
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4719
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 770:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4752
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4762
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4768
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 773:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4774
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4784
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4789
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4795
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4802
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4806
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:4812
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:4818
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4823
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4827
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4831
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4835
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4842
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4854
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4859
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4865
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4872
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4876
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4882
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4888
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4892
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4896
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4902
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4908
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4914
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4925
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4937
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4943
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4953
		{
			yyVAL.str = yyDollar[1].str
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4957
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4963
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4970
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4976
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4984
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4990
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4997
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5005
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5011
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5020
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5032
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				Accounts:    yyDollar[7].identifierListUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5043
		{
			yyVAL.str = ""
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5047
		{
			yyVAL.str = yyDollar[2].str
		}
	case 817:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5053
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5063
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5067
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5073
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5079
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5085
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5094
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5103
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5108
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5114
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5122
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5228
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5232
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5238
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5248
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5252
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5258
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5268
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5272
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5276
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5281
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5285
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5291
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5298
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5304
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5313
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5320
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5329
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5333
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5339
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5353
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5357
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5361
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5366
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5370
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5374
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5378
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5384
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5403
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5407
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5429
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5433
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5437
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5441
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5445
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5451
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5455
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5461
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5466
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5471
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5475
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5479
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5483
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5487
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5493
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5504
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5508
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5518
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5522
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5527
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5531
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5537
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5541
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5547
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5551
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5555
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5560
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5564
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5570
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5582
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5591
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5604
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5611
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5621
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5629
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5640
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5644
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5649
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5653
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5660
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5671
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5684
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5698
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5702
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5706
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5713
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5720
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5727
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5734
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5738
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5742
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5746
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5750
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5757
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5764
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5768
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5775
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5782
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5786
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5793
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5800
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5807
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5814
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5818
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5823
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5827
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5837
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5841
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5848
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5855
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5859
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5868
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5872
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5878
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5882
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5888
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5897
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5907
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5911
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5917
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5921
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5927
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5934
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5943
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5947
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5956
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5961
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5965
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5970
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5974
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5984
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5988
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5999
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6007
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6015
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6023
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6034
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6043
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6053
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6063
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6067
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6072
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6076
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6085
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6091
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6095
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6099
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6105
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6109
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6113
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6117
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6121
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6125
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6130
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6134
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6138
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6142
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6146
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6150
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6154
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6158
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6162
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6166
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6170
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6174
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6178
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6182
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6186
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6190
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6194
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6198
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6202
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6206
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6210
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6214
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6218
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6225
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6229
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6235
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6240
		{
			yyVAL.str = ""
		}
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6244
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6248
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6254
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6258
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6262
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6266
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6270
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6274
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6288
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6292
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6301
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6306
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6312
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6319
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6323
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6329
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6333
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6337
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6343
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6347
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6353
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6362
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6387
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6401
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6407
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6416
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6425
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6435
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6443
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6449
		{
			yyVAL.str = ""
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6453
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6463
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6469
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6475
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6489
		{
			yyVAL.str = ""
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6493
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6499
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6505
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6509
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6513
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6519
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6523
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6527
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6531
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6537
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6541
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6545
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6550
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6554
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6560
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6564
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6570
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6574
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6578
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6582
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6586
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6590
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6595
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6599
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6603
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6607
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6611
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6615
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6619
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6623
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6636
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6642
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6646
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6651
		{
			yyVAL.str = ""
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6655
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6661
		{
			yyVAL.str = ""
		}
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6665
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6671
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6683
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6690
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6697
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6704
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6711
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6720
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6726
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6732
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6736
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6740
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6744
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6748
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6753
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6760
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6764
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6768
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6773
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6777
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6782
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6786
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6802
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6808
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6812
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6816
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6820
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6824
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6828
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6832
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6836
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6840
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6844
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6848
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6852
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6856
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6862
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6866
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6870
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6874
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6878
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6882
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6886
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6890
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6894
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6898
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6902
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6906
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6911
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6919
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6924
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6928
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6937
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6941
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6945
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6949
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6953
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6959
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6968
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6972
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6977
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6981
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6987
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6991
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6997
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7006
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7018
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7035
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7052
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7065
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7078
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7090
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7104
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7119
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7134
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7151
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7166
		{
		}
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7172
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7176
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7180
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7186
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7190
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7198
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7202
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7206
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7212
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7219
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7232
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7239
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7244
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7248
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7253
		{
			yyVAL.str = ","
		}
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7257
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7262
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7269
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7279
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7290
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7300
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7309
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7318
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7328
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7338
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7348
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7358
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7368
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7378
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7388
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7398
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7408
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7418
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7428
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7438
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7455
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7463
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7471
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7479
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7487
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7497
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7505
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7514
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7522
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7530
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7538
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7546
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7557
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7567
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7579
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7590
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7612
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7648
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7660
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7672
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7683
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7691
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7698
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7705
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7717
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7725
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7735
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7745
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7753
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7764
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7773
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7782
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7790
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7800
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7808
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7818
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7822
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7828
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7832
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7851
		{
		}
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7853
		{
		}
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7894
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7905
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7909
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7913
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7919
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7924
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7928
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7934
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7938
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7945
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7949
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7953
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7961
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7965
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7969
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7973
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7979
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7983
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7987
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7991
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7995
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7999
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8003
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8007
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8011
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8015
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8023
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8027
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8031
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8035
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8039
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8043
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8047
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8051
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8055
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8059
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8069
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8075
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8079
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8086
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8090
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8094
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8100
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8104
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8108
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8112
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8116
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8120
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8124
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8130
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8134
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8138
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8142
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8148
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8152
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8165
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8170
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8174
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8178
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8182
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8186
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8190
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8204
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8208
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8215
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8226
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8231
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8237
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8249
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8261
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8273
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8286
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8299
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8312
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8325
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8338
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8351
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8364
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8377
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8390
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8403
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8418
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8445
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8487
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8535
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8552
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8564
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8584
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8604
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8624
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8640
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8653
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8666
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8679
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8692
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8704
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8716
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8728
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8740
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8752
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8764
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8776
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8788
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8800
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8813
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8826
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8841
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8849
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8858
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8868
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8891
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8896
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8902
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8909
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8913
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8918
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8922
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8928
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8934
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8941
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8948
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8957
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8964
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8971
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8980
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8984
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8988
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8994
		{
		}
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8996
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9006
		{
			yyVAL.str = ""
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9010
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
