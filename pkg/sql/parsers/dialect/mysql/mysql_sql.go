// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const LOWER_THAN_SET = 57366
const SET = 57367
const ALL = 57368
const DISTINCT = 57369
const DISTINCTROW = 57370
const AS = 57371
const EXISTS = 57372
const ASC = 57373
const DESC = 57374
const INTO = 57375
const DUPLICATE = 57376
const DEFAULT = 57377
const LOCK = 57378
const KEYS = 57379
const VALUES = 57380
const NEXT = 57381
const VALUE = 57382
const SHARE = 57383
const MODE = 57384
const SQL_NO_CACHE = 57385
const SQL_CACHE = 57386
const JOIN = 57387
const STRAIGHT_JOIN = 57388
const LEFT = 57389
const RIGHT = 57390
const INNER = 57391
const OUTER = 57392
const CROSS = 57393
const NATURAL = 57394
const USE = 57395
const FORCE = 57396
const ON = 57397
const USING = 57398
const SUBQUERY_AS_EXPR = 57399
const LOWER_THAN_STRING = 57400
const ID = 57401
const AT_ID = 57402
const AT_AT_ID = 57403
const STRING = 57404
const VALUE_ARG = 57405
const LIST_ARG = 57406
const COMMENT = 57407
const COMMENT_KEYWORD = 57408
const INTEGRAL = 57409
const HEX = 57410
const BIT_LITERAL = 57411
const FLOAT = 57412
const HEXNUM = 57413
const NULL = 57414
const TRUE = 57415
const FALSE = 57416
const LOWER_THAN_CHARSET = 57417
const CHARSET = 57418
const UNIQUE = 57419
const KEY = 57420
const OR = 57421
const PIPE_CONCAT = 57422
const XOR = 57423
const AND = 57424
const NOT = 57425
const BETWEEN = 57426
const CASE = 57427
const WHEN = 57428
const THEN = 57429
const ELSE = 57430
const END = 57431
const LE = 57432
const GE = 57433
const NE = 57434
const NULL_SAFE_EQUAL = 57435
const IS = 57436
const LIKE = 57437
const REGEXP = 57438
const IN = 57439
const ASSIGNMENT = 57440
const SHIFT_LEFT = 57441
const SHIFT_RIGHT = 57442
const DIV = 57443
const MOD = 57444
const UNARY = 57445
const COLLATE = 57446
const BINARY = 57447
const UNDERSCORE_BINARY = 57448
const INTERVAL = 57449
const BEGIN = 57450
const START = 57451
const TRANSACTION = 57452
const COMMIT = 57453
const ROLLBACK = 57454
const WORK = 57455
const CONSISTENT = 57456
const SNAPSHOT = 57457
const CHAIN = 57458
const NO = 57459
const RELEASE = 57460
const PRIORITY = 57461
const QUICK = 57462
const BIT = 57463
const TINYINT = 57464
const SMALLINT = 57465
const MEDIUMINT = 57466
const INT = 57467
const INTEGER = 57468
const BIGINT = 57469
const INTNUM = 57470
const REAL = 57471
const DOUBLE = 57472
const FLOAT_TYPE = 57473
const DECIMAL = 57474
const NUMERIC = 57475
const DECIMAL_VALUE = 57476
const TIME = 57477
const TIMESTAMP = 57478
const DATETIME = 57479
const YEAR = 57480
const CHAR = 57481
const VARCHAR = 57482
const BOOL = 57483
const CHARACTER = 57484
const VARBINARY = 57485
const NCHAR = 57486
const TEXT = 57487
const TINYTEXT = 57488
const MEDIUMTEXT = 57489
const LONGTEXT = 57490
const BLOB = 57491
const TINYBLOB = 57492
const MEDIUMBLOB = 57493
const LONGBLOB = 57494
const JSON = 57495
const ENUM = 57496
const GEOMETRY = 57497
const POINT = 57498
const LINESTRING = 57499
const POLYGON = 57500
const GEOMETRYCOLLECTION = 57501
const MULTIPOINT = 57502
const MULTILINESTRING = 57503
const MULTIPOLYGON = 57504
const INT1 = 57505
const INT2 = 57506
const INT3 = 57507
const INT4 = 57508
const INT8 = 57509
const SQL_SMALL_RESULT = 57510
const SQL_BIG_RESULT = 57511
const SQL_BUFFER_RESULT = 57512
const LOW_PRIORITY = 57513
const HIGH_PRIORITY = 57514
const DELAYED = 57515
const CREATE = 57516
const ALTER = 57517
const DROP = 57518
const RENAME = 57519
const ANALYZE = 57520
const ADD = 57521
const SCHEMA = 57522
const TABLE = 57523
const INDEX = 57524
const VIEW = 57525
const TO = 57526
const IGNORE = 57527
const IF = 57528
const PRIMARY = 57529
const COLUMN = 57530
const CONSTRAINT = 57531
const SPATIAL = 57532
const FULLTEXT = 57533
const FOREIGN = 57534
const KEY_BLOCK_SIZE = 57535
const SHOW = 57536
const DESCRIBE = 57537
const EXPLAIN = 57538
const DATE = 57539
const ESCAPE = 57540
const REPAIR = 57541
const OPTIMIZE = 57542
const TRUNCATE = 57543
const MAXVALUE = 57544
const PARTITION = 57545
const REORGANIZE = 57546
const LESS = 57547
const THAN = 57548
const PROCEDURE = 57549
const TRIGGER = 57550
const STATUS = 57551
const VARIABLES = 57552
const ROLE = 57553
const PROXY = 57554
const AVG_ROW_LENGTH = 57555
const STORAGE = 57556
const DISK = 57557
const MEMORY = 57558
const CHECKSUM = 57559
const COMPRESSION = 57560
const DATA = 57561
const DIRECTORY = 57562
const DELAY_KEY_WRITE = 57563
const ENCRYPTION = 57564
const ENGINE = 57565
const MAX_ROWS = 57566
const MIN_ROWS = 57567
const PACK_KEYS = 57568
const ROW_FORMAT = 57569
const STATS_AUTO_RECALC = 57570
const STATS_PERSISTENT = 57571
const STATS_SAMPLE_PAGES = 57572
const DYNAMIC = 57573
const COMPRESSED = 57574
const REDUNDANT = 57575
const COMPACT = 57576
const FIXED = 57577
const COLUMN_FORMAT = 57578
const AUTO_RANDOM = 57579
const RESTRICT = 57580
const CASCADE = 57581
const ACTION = 57582
const PARTIAL = 57583
const SIMPLE = 57584
const CHECK = 57585
const ENFORCED = 57586
const RANGE = 57587
const LIST = 57588
const ALGORITHM = 57589
const LINEAR = 57590
const PARTITIONS = 57591
const SUBPARTITION = 57592
const SUBPARTITIONS = 57593
const TYPE = 57594
const ANY = 57595
const SOME = 57596
const EXTERNAL = 57597
const LOCALFILE = 57598
const URL = 57599
const S3OPTION = 57600
const PREPARE = 57601
const DEALLOCATE = 57602
const PROPERTIES = 57603
const PARSER = 57604
const VISIBLE = 57605
const INVISIBLE = 57606
const BTREE = 57607
const HASH = 57608
const RTREE = 57609
const BSI = 57610
const ZONEMAP = 57611
const LEADING = 57612
const BOTH = 57613
const TRAILING = 57614
const UNKNOWN = 57615
const EXPIRE = 57616
const ACCOUNT = 57617
const UNLOCK = 57618
const DAY = 57619
const NEVER = 57620
const SECOND = 57621
const ASCII = 57622
const COALESCE = 57623
const COLLATION = 57624
const HOUR = 57625
const MICROSECOND = 57626
const MINUTE = 57627
const MONTH = 57628
const QUARTER = 57629
const REPEAT = 57630
const REVERSE = 57631
const ROW_COUNT = 57632
const WEEK = 57633
const REVOKE = 57634
const FUNCTION = 57635
const PRIVILEGES = 57636
const TABLESPACE = 57637
const EXECUTE = 57638
const SUPER = 57639
const GRANT = 57640
const OPTION = 57641
const REFERENCES = 57642
const REPLICATION = 57643
const SLAVE = 57644
const CLIENT = 57645
const USAGE = 57646
const RELOAD = 57647
const FILE = 57648
const TEMPORARY = 57649
const ROUTINE = 57650
const EVENT = 57651
const SHUTDOWN = 57652
const NULLX = 57653
const AUTO_INCREMENT = 57654
const APPROXNUM = 57655
const SIGNED = 57656
const UNSIGNED = 57657
const ZEROFILL = 57658
const USER = 57659
const IDENTIFIED = 57660
const CIPHER = 57661
const ISSUER = 57662
const X509 = 57663
const SUBJECT = 57664
const SAN = 57665
const REQUIRE = 57666
const SSL = 57667
const NONE = 57668
const PASSWORD = 57669
const MAX_QUERIES_PER_HOUR = 57670
const MAX_UPDATES_PER_HOUR = 57671
const MAX_CONNECTIONS_PER_HOUR = 57672
const MAX_USER_CONNECTIONS = 57673
const FORMAT = 57674
const VERBOSE = 57675
const CONNECTION = 57676
const LOAD = 57677
const INFILE = 57678
const TERMINATED = 57679
const OPTIONALLY = 57680
const ENCLOSED = 57681
const ESCAPED = 57682
const STARTING = 57683
const LINES = 57684
const DATABASES = 57685
const TABLES = 57686
const EXTENDED = 57687
const FULL = 57688
const PROCESSLIST = 57689
const FIELDS = 57690
const COLUMNS = 57691
const OPEN = 57692
const ERRORS = 57693
const WARNINGS = 57694
const INDEXES = 57695
const SCHEMAS = 57696
const NAMES = 57697
const GLOBAL = 57698
const SESSION = 57699
const ISOLATION = 57700
const LEVEL = 57701
const READ = 57702
const WRITE = 57703
const ONLY = 57704
const REPEATABLE = 57705
const COMMITTED = 57706
const UNCOMMITTED = 57707
const SERIALIZABLE = 57708
const LOCAL = 57709
const CURRENT_TIMESTAMP = 57710
const DATABASE = 57711
const CURRENT_TIME = 57712
const LOCALTIME = 57713
const LOCALTIMESTAMP = 57714
const UTC_DATE = 57715
const UTC_TIME = 57716
const UTC_TIMESTAMP = 57717
const REPLACE = 57718
const CONVERT = 57719
const SEPARATOR = 57720
const CURRENT_DATE = 57721
const CURRENT_USER = 57722
const CURRENT_ROLE = 57723
const SECOND_MICROSECOND = 57724
const MINUTE_MICROSECOND = 57725
const MINUTE_SECOND = 57726
const HOUR_MICROSECOND = 57727
const HOUR_SECOND = 57728
const HOUR_MINUTE = 57729
const DAY_MICROSECOND = 57730
const DAY_SECOND = 57731
const DAY_MINUTE = 57732
const DAY_HOUR = 57733
const YEAR_MONTH = 57734
const SQL_TSI_HOUR = 57735
const SQL_TSI_DAY = 57736
const SQL_TSI_WEEK = 57737
const SQL_TSI_MONTH = 57738
const SQL_TSI_QUARTER = 57739
const SQL_TSI_YEAR = 57740
const SQL_TSI_SECOND = 57741
const SQL_TSI_MINUTE = 57742
const RECURSIVE = 57743
const CONFIG = 57744
const MATCH = 57745
const AGAINST = 57746
const BOOLEAN = 57747
const LANGUAGE = 57748
const WITH = 57749
const QUERY = 57750
const EXPANSION = 57751
const ADDDATE = 57752
const BIT_AND = 57753
const BIT_OR = 57754
const BIT_XOR = 57755
const CAST = 57756
const COUNT = 57757
const APPROX_COUNT_DISTINCT = 57758
const APPROX_PERCENTILE = 57759
const CURDATE = 57760
const CURTIME = 57761
const DATE_ADD = 57762
const DATE_SUB = 57763
const EXTRACT = 57764
const GROUP_CONCAT = 57765
const MAX = 57766
const MID = 57767
const MIN = 57768
const NOW = 57769
const POSITION = 57770
const SESSION_USER = 57771
const STD = 57772
const STDDEV = 57773
const STDDEV_POP = 57774
const STDDEV_SAMP = 57775
const SUBDATE = 57776
const SUBSTR = 57777
const SUBSTRING = 57778
const SUM = 57779
const SYSDATE = 57780
const SYSTEM_USER = 57781
const TRANSLATE = 57782
const TRIM = 57783
const VARIANCE = 57784
const VAR_POP = 57785
const VAR_SAMP = 57786
const AVG = 57787
const JSON_EXTRACT = 57788
const ROW = 57789
const OUTFILE = 57790
const HEADER = 57791
const MAX_FILE_SIZE = 57792
const FORCE_QUOTE = 57793
const UNUSED = 57794

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"S3OPTION",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:6909

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 61,
	21, 407,
	-2, 388,
	-1, 66,
	199, 564,
	-2, 608,
	-1, 81,
	226, 273,
	227, 273,
	-2, 294,
	-1, 336,
	63, 1397,
	471, 1397,
	-2, 97,
	-1, 355,
	63, 733,
	471, 733,
	-2, 562,
	-1, 356,
	63, 555,
	471, 555,
	-2, 563,
	-1, 362,
	21, 408,
	-2, 371,
	-1, 435,
	94, 1278,
	105, 1278,
	124, 1278,
	-2, 1100,
	-1, 463,
	21, 408,
	-2, 371,
	-1, 615,
	58, 1430,
	-2, 1437,
	-1, 623,
	58, 1431,
	-2, 1445,
	-1, 625,
	58, 1427,
	-2, 1447,
	-1, 626,
	58, 1428,
	-2, 1448,
	-1, 631,
	58, 1429,
	-2, 1454,
	-1, 632,
	58, 1432,
	-2, 1455,
	-1, 633,
	58, 1433,
	-2, 1456,
	-1, 634,
	58, 863,
	-2, 1457,
	-1, 635,
	58, 864,
	-2, 1458,
	-1, 636,
	58, 865,
	-2, 1459,
	-1, 638,
	58, 1434,
	-2, 1461,
	-1, 639,
	58, 883,
	-2, 1462,
	-1, 640,
	58, 882,
	-2, 1463,
	-1, 643,
	58, 1435,
	-2, 1466,
	-1, 644,
	58, 1436,
	-2, 1467,
	-1, 650,
	58, 945,
	-2, 1278,
	-1, 651,
	58, 954,
	-2, 1303,
	-1, 652,
	58, 958,
	-2, 1342,
	-1, 653,
	58, 969,
	-2, 1402,
	-1, 654,
	58, 971,
	-2, 1412,
	-1, 655,
	58, 959,
	-2, 1417,
	-1, 656,
	58, 967,
	-2, 1421,
	-1, 657,
	58, 948,
	-2, 1422,
	-1, 809,
	1, 590,
	60, 590,
	470, 590,
	-2, 597,
	-1, 947,
	21, 407,
	-2, 791,
	-1, 994,
	124, 1110,
	-2, 1108,
	-1, 996,
	124, 504,
	-2, 1105,
	-1, 997,
	124, 505,
	-2, 1106,
	-1, 1186,
	1, 591,
	60, 591,
	470, 591,
	-2, 597,
	-1, 1274,
	58, 1012,
	-2, 1419,
	-1, 1275,
	58, 1013,
	-2, 1420,
	-1, 1438,
	56, 328,
	59, 328,
	-2, 697,
	-1, 1756,
	79, 597,
	120, 597,
	156, 597,
	159, 597,
	-2, 645,
	-1, 1758,
	260, 758,
	-2, 739,
	-1, 1783,
	56, 328,
	59, 328,
	-2, 698,
	-1, 1868,
	79, 597,
	120, 597,
	156, 597,
	159, 597,
	-2, 646,
	-1, 1896,
	260, 758,
	-2, 740,
	-1, 2309,
	59, 620,
	60, 620,
	-2, 597,
	-1, 2316,
	59, 620,
	60, 620,
	-2, 597,
	-1, 2331,
	59, 624,
	60, 624,
	-2, 597,
	-1, 2335,
	59, 625,
	60, 625,
	-2, 597,
}

const yyPrivate = 57344

const yyLast = 23545

var yyAct = [...]int{
	796, 2213, 1277, 2114, 2318, 2316, 2034, 2167, 2315, 2280,
	660, 2325, 1950, 2251, 2129, 679, 785, 658, 2266, 2217,
	1234, 2163, 1908, 2194, 2101, 2195, 2082, 98, 1864, 1926,
	2104, 1173, 315, 321, 1951, 321, 1750, 878, 2037, 594,
	844, 1916, 1230, 1925, 586, 2089, 1924, 1776, 1812, 363,
	325, 362, 1579, 1897, 1942, 1603, 814, 1474, 357, 357,
	433, 1915, 783, 1441, 1575, 527, 101, 97, 537, 390,
	1563, 1823, 1815, 614, 1453, 1827, 816, 1805, 1621, 838,
	1591, 691, 61, 1229, 864, 1421, 1584, 319, 22, 434,
	1651, 1179, 976, 1762, 1580, 1641, 1659, 98, 1630, 539,
	1516, 1193, 458, 991, 1573, 994, 985, 977, 1265, 857,
	1479, 307, 1361, 61, 986, 841, 659, 1452, 839, 780,
	332, 332, 669, 1216, 1278, 1347, 1415, 60, 318, 15,
	316, 6, 317, 5, 3, 1192, 1872, 460, 1187, 436,
	798, 438, 392, 823, 781, 661, 1276, 607, 1279, 861,
	1291, 824, 825, 880, 441, 29, 473, 308, 327, 1232,
	311, 914, 425, 883, 578, 1256, 389, 772, 329, 328,
	562, 1155, 440, 12, 2246, 2211, 61, 7, 4, 2313,
	2109, 2018, 22, 94, 511, 1162, 29, 1953, 1860, 490,
	1749, 793, 979, 320, 89, 595, 1397, 564, 93, 606,
	92, 2156, 93, 1564, 26, 83, 67, 1158, 93, 1416,
	26, 83, 67, 741, 2146, 93, 525, 359, 439, 1404,
	93, 556, 426, 15, 306, 6, 738, 5, 323, 457,
	445, 444, 560, 510, 1407, 387, 846, 847, 550, 551,
	411, 397, 827, 1542, 565, 788, 740, 2198, 2199, 29,
	90, 93, 505, 26, 83, 67, 90, 761, 2035, 2182,
	443, 548, 2180, 90, 547, 550, 551, 93, 90, 2221,
	1567, 501, 2117, 379, 2038, 2039, 2040, 2041, 1568, 2120,
	1569, 1956, 1751, 792, 1592, 1593, 1594, 1595, 1389, 476,
	1625, 467, 1622, 1724, 1424, 1422, 1419, 1423, 1425, 90,
	1418, 1417, 858, 1424, 1422, 1158, 1423, 1425, 447, 466,
	1160, 412, 1939, 1811, 1810, 90, 492, 1857, 1698, 1695,
	1696, 1697, 1913, 321, 1729, 98, 1728, 1727, 1725, 503,
	504, 502, 491, 2021, 1746, 496, 1794, 2208, 465, 1793,
	2184, 773, 2155, 322, 1624, 1484, 1269, 1270, 1790, 1268,
	1269, 1270, 2197, 2019, 2008, 364, 462, 464, 438, 463,
	1266, 1929, 1930, 497, 2302, 483, 442, 775, 2090, 2091,
	2092, 2094, 2093, 1427, 1428, 1429, 1430, 2326, 2226, 2127,
	2128, 2153, 2131, 66, 2179, 91, 1726, 2290, 2131, 390,
	381, 2233, 1971, 408, 61, 61, 440, 2002, 1970, 361,
	378, 377, 2103, 81, 1993, 1585, 1588, 2186, 2187, 557,
	1405, 2137, 2158, 2159, 574, 546, 545, 1997, 446, 499,
	2327, 372, 357, 2281, 2319, 528, 1959, 1791, 434, 434,
	434, 500, 549, 357, 357, 403, 526, 459, 529, 1596,
	531, 1517, 439, 478, 477, 437, 516, 494, 321, 610,
	610, 561, 476, 774, 2115, 563, 1401, 1243, 800, 495,
	498, 1166, 743, 530, 1588, 375, 487, 29, 29, 493,
	2067, 1747, 534, 469, 470, 2269, 532, 324, 591, 1472,
	759, 384, 385, 386, 332, 1807, 1806, 357, 357, 466,
	357, 849, 541, 1241, 1240, 588, 588, 1239, 568, 553,
	554, 850, 744, 1730, 1731, 566, 567, 1238, 357, 357,
	848, 414, 405, 415, 2297, 404, 481, 376, 786, 597,
	2255, 1786, 1610, 307, 1589, 1570, 1481, 371, 357, 1582,
	357, 1614, 809, 1583, 1586, 1442, 390, 1395, 1394, 815,
	61, 1388, 2185, 98, 1383, 542, 739, 402, 471, 1208,
	332, 805, 787, 61, 1171, 406, 2157, 832, 1152, 513,
	1483, 357, 61, 98, 1267, 515, 550, 551, 768, 550,
	551, 895, 1564, 609, 609, 357, 434, 2102, 357, 380,
	573, 859, 1589, 820, 2270, 1587, 747, 1181, 2245, 2210,
	830, 801, 332, 1161, 873, 584, 585, 489, 810, 1792,
	1398, 357, 357, 877, 98, 1789, 478, 477, 507, 767,
	892, 764, 68, 763, 1998, 1999, 68, 1995, 819, 593,
	403, 1994, 68, 833, 536, 881, 29, 790, 770, 68,
	828, 829, 750, 479, 68, 29, 306, 332, 596, 795,
	552, 605, 799, 555, 879, 821, 822, 802, 745, 736,
	581, 582, 583, 791, 766, 776, 784, 818, 765, 762,
	746, 1433, 437, 461, 332, 68, 949, 754, 755, 872,
	932, 882, 1556, 543, 789, 600, 601, 602, 603, 604,
	834, 68, 417, 2068, 2070, 2071, 2072, 2069, 804, 1558,
	1424, 1422, 540, 1423, 1425, 2292, 403, 405, 794, 1157,
	404, 826, 812, 865, 811, 2267, 2268, 577, 2276, 865,
	865, 450, 455, 456, 1281, 1280, 399, 2264, 401, 411,
	875, 1719, 860, 398, 396, 395, 407, 400, 837, 409,
	410, 419, 418, 855, 870, 871, 896, 1965, 856, 1557,
	579, 983, 983, 988, 2212, 947, 867, 868, 869, 1156,
	1354, 580, 416, 758, 935, 936, 937, 938, 939, 932,
	876, 757, 544, 1604, 1352, 1353, 1351, 2161, 996, 2141,
	1628, 1385, 815, 405, 1245, 391, 404, 468, 576, 874,
	1434, 950, 951, 952, 953, 1362, 1362, 1522, 948, 891,
	888, 439, 1413, 954, 1491, 803, 956, 888, 2004, 2003,
	1286, 98, 98, 1525, 922, 382, 1524, 889, 890, 891,
	888, 98, 1194, 1766, 997, 958, 1721, 1761, 1988, 2078,
	972, 93, 440, 26, 83, 67, 2289, 315, 1154, 889,
	890, 891, 888, 61, 1210, 1708, 88, 2305, 2191, 2311,
	420, 1176, 1178, 77, 2286, 881, 1289, 889, 890, 891,
	888, 1190, 357, 2076, 2077, 982, 1290, 2074, 1849, 966,
	889, 890, 891, 888, 49, 2243, 2288, 2227, 439, 90,
	452, 453, 454, 357, 930, 940, 941, 933, 934, 935,
	936, 937, 938, 939, 932, 610, 2064, 98, 2075, 413,
	2273, 882, 2073, 2169, 1261, 1848, 1263, 1199, 1200, 1201,
	975, 2113, 889, 890, 891, 888, 29, 995, 2112, 1151,
	2084, 1235, 1150, 2062, 332, 1287, 1288, 889, 890, 891,
	888, 2063, 2061, 1202, 2060, 2057, 1211, 1237, 2051, 989,
	1504, 990, 2048, 2047, 1954, 1250, 84, 85, 1947, 86,
	87, 1946, 1198, 1945, 1941, 1940, 1188, 1933, 1335, 1336,
	1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346,
	1253, 1165, 1772, 1356, 1357, 1771, 1255, 1892, 1770, 1204,
	1371, 1206, 1271, 1236, 1769, 1503, 1554, 748, 1203, 2249,
	972, 2164, 826, 1207, 1205, 806, 807, 808, 1373, 1865,
	2287, 2222, 865, 865, 865, 2331, 1189, 889, 890, 891,
	888, 2209, 66, 82, 91, 2207, 47, 2190, 2083, 609,
	1242, 2135, 2134, 1257, 1258, 1259, 1260, 1246, 1247, 1248,
	1960, 2111, 81, 76, 75, 2108, 1174, 1175, 2065, 2058,
	1874, 2107, 1254, 2054, 2053, 1284, 931, 930, 940, 941,
	933, 934, 935, 936, 937, 938, 939, 932, 1326, 2052,
	1990, 2300, 1377, 889, 890, 891, 888, 1282, 1283, 1955,
	1285, 1355, 1943, 1475, 1863, 1349, 1321, 1322, 1323, 1324,
	1325, 1715, 1861, 1331, 1332, 1333, 1334, 889, 890, 891,
	888, 1779, 1363, 1737, 1366, 1601, 1600, 78, 79, 1599,
	2166, 1598, 931, 930, 940, 941, 933, 934, 935, 936,
	937, 938, 939, 932, 707, 706, 1365, 1367, 1368, 1364,
	1376, 943, 1168, 946, 1167, 968, 1372, 929, 1374, 928,
	57, 749, 1375, 2165, 80, 2142, 58, 944, 945, 942,
	2261, 931, 930, 940, 941, 933, 934, 935, 936, 937,
	938, 939, 932, 940, 941, 933, 934, 935, 936, 937,
	938, 939, 932, 1390, 889, 890, 891, 888, 2028, 357,
	1878, 2024, 357, 59, 2023, 466, 1531, 357, 1852, 1487,
	1530, 1882, 1410, 1487, 2338, 1850, 931, 930, 940, 941,
	933, 934, 935, 936, 937, 938, 939, 932, 2330, 2329,
	1847, 1871, 1438, 1839, 1400, 1873, 1875, 1877, 1444, 1879,
	1880, 1881, 1883, 1884, 1885, 1887, 1888, 1889, 1890, 1449,
	2259, 1164, 2303, 1804, 466, 98, 98, 98, 98, 2299,
	2298, 1164, 2284, 1780, 1399, 1756, 466, 98, 1469, 1164,
	2283, 1739, 1436, 2254, 2253, 68, 2015, 2205, 1640, 1893,
	2015, 2200, 817, 1454, 357, 1412, 2033, 1170, 817, 1432,
	1252, 2188, 98, 98, 1615, 1454, 931, 930, 940, 941,
	933, 934, 935, 936, 937, 938, 939, 932, 889, 890,
	891, 888, 1534, 1891, 1470, 2177, 2176, 61, 1532, 1445,
	2015, 2151, 1529, 22, 1169, 1226, 1402, 1528, 1492, 1526,
	1870, 1627, 1477, 1478, 1408, 1409, 1496, 799, 1235, 1391,
	2015, 2150, 1493, 1396, 1446, 1886, 1447, 889, 890, 891,
	888, 1486, 1876, 1411, 933, 934, 935, 936, 937, 938,
	939, 932, 2013, 1188, 15, 1431, 6, 1437, 5, 1471,
	1443, 2015, 2149, 1455, 1456, 1457, 1458, 1948, 1450, 2015,
	2148, 1451, 1468, 1467, 889, 890, 891, 888, 1466, 1609,
	29, 1448, 1440, 1511, 1835, 1476, 2140, 2139, 1370, 889,
	890, 891, 888, 1473, 2032, 2031, 1369, 1834, 2030, 2029,
	1439, 1514, 1515, 2026, 2027, 1482, 889, 890, 891, 888,
	2026, 2025, 983, 598, 1546, 983, 1197, 2022, 1549, 889,
	890, 891, 888, 2275, 357, 1485, 2015, 2014, 357, 357,
	1487, 1713, 357, 1487, 1488, 1225, 1833, 1489, 1490, 1552,
	1487, 1699, 1487, 1495, 1440, 466, 899, 900, 901, 902,
	903, 904, 905, 897, 1487, 1494, 1378, 98, 889, 890,
	891, 888, 947, 1197, 1392, 1757, 466, 1387, 1386, 1226,
	98, 1194, 1158, 1613, 1578, 1740, 1498, 1499, 1500, 1501,
	1502, 886, 1506, 1381, 1380, 1553, 1507, 1508, 1509, 1510,
	1559, 1561, 61, 486, 1541, 1578, 1536, 1602, 1543, 1513,
	1548, 1197, 1196, 1521, 1349, 1545, 1226, 1512, 439, 1164,
	1163, 506, 1644, 487, 1519, 485, 1538, 1523, 1537, 1605,
	1606, 1547, 1550, 1736, 1551, 884, 1544, 752, 751, 93,
	1535, 484, 83, 67, 865, 485, 1597, 487, 1384, 1359,
	865, 1718, 1252, 1555, 1172, 889, 890, 891, 888, 1611,
	1153, 1562, 535, 1616, 1617, 575, 357, 93, 2007, 1626,
	1712, 326, 357, 889, 890, 891, 888, 2168, 1639, 1608,
	1607, 1711, 1612, 2332, 1638, 2263, 2257, 90, 1618, 2234,
	2231, 1735, 889, 890, 891, 888, 1635, 1527, 2229, 2099,
	1184, 357, 1710, 889, 890, 891, 888, 2087, 2085, 2080,
	1732, 1644, 482, 98, 1709, 90, 1734, 2042, 1705, 1814,
	2011, 2010, 1760, 2009, 889, 890, 891, 888, 588, 2006,
	358, 2239, 1717, 1704, 588, 2001, 889, 890, 891, 888,
	889, 890, 891, 888, 357, 1986, 357, 538, 1824, 1816,
	98, 1783, 1646, 1755, 1714, 889, 890, 891, 888, 1703,
	1828, 1723, 1700, 1742, 889, 890, 891, 888, 466, 1706,
	1707, 1831, 1821, 1738, 1716, 1741, 1189, 1820, 1702, 1800,
	1774, 889, 890, 891, 888, 2237, 1803, 1720, 1775, 1767,
	1764, 1350, 1733, 61, 1745, 90, 1435, 1454, 1414, 1754,
	889, 890, 891, 888, 1379, 2196, 588, 1851, 1777, 1758,
	1763, 1768, 1763, 1244, 1759, 1235, 1796, 1785, 438, 1765,
	1212, 1701, 1773, 2310, 1195, 1649, 974, 973, 1784, 1782,
	971, 970, 1781, 969, 967, 1787, 915, 964, 963, 1788,
	961, 960, 1797, 889, 890, 891, 888, 889, 890, 891,
	888, 1818, 1819, 931, 930, 940, 941, 933, 934, 935,
	936, 937, 938, 939, 932, 1822, 959, 957, 1826, 927,
	926, 1808, 925, 924, 1817, 923, 921, 920, 366, 367,
	368, 369, 1312, 919, 357, 357, 1648, 918, 98, 917,
	1825, 365, 916, 1798, 913, 1634, 1799, 1647, 466, 1801,
	912, 1869, 1917, 1919, 911, 1917, 1917, 1802, 889, 890,
	891, 888, 1829, 1840, 1832, 466, 1842, 910, 1844, 889,
	890, 891, 888, 909, 908, 907, 906, 1578, 1858, 1837,
	1358, 771, 599, 742, 488, 1631, 1632, 1426, 1841, 1251,
	1843, 815, 508, 1637, 1918, 1463, 1854, 1855, 1845, 1846,
	1464, 1914, 889, 890, 891, 888, 1856, 1213, 1461, 1636,
	1460, 1459, 1894, 1462, 1866, 1853, 1920, 1921, 1465, 1382,
	1222, 1223, 1922, 1836, 1565, 512, 1936, 1218, 1221, 1222,
	1223, 1219, 1572, 1220, 1224, 1182, 1838, 1785, 1218, 1221,
	1222, 1223, 1219, 1935, 1220, 1224, 836, 1937, 1931, 1932,
	1174, 1175, 1743, 48, 28, 865, 27, 1957, 1571, 1228,
	813, 1744, 2214, 1961, 1281, 1280, 1944, 522, 523, 520,
	521, 1308, 559, 1305, 518, 519, 558, 1307, 1304, 1306,
	1310, 1311, 1923, 303, 304, 1309, 305, 366, 367, 368,
	369, 1149, 514, 2258, 2173, 357, 2171, 2122, 2121, 2119,
	365, 1480, 2045, 2043, 98, 1862, 1795, 1753, 1989, 1752,
	1643, 517, 365, 1919, 1642, 817, 1962, 1963, 1497, 1966,
	1967, 1968, 1969, 1964, 1393, 1972, 1973, 1974, 1975, 1976,
	1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1914,
	1987, 480, 1991, 2240, 2005, 2241, 2240, 2241, 851, 1227,
	393, 34, 1, 533, 2012, 2046, 383, 1777, 1327, 524,
	756, 449, 475, 753, 1949, 2016, 474, 472, 1360, 1292,
	692, 2020, 978, 438, 984, 2079, 1293, 1294, 1295, 1296,
	1297, 1298, 1299, 1300, 1301, 1302, 1303, 1315, 1316, 1317,
	1318, 1319, 1320, 1313, 1314, 2081, 2250, 466, 2216, 769,
	466, 466, 466, 678, 1566, 2116, 466, 2059, 2036, 1406,
	2049, 2050, 1403, 509, 1539, 1540, 2055, 2056, 704, 695,
	962, 697, 737, 451, 694, 1934, 1623, 370, 448, 61,
	394, 1235, 1938, 2124, 1748, 2044, 1809, 1830, 2106, 1813,
	357, 357, 2017, 2088, 2095, 2324, 2096, 2097, 2098, 2105,
	2110, 2309, 2279, 2256, 2130, 2301, 2178, 2232, 2225, 2126,
	1958, 330, 2125, 852, 569, 2118, 423, 2100, 1590, 1420,
	1180, 98, 1159, 782, 331, 2154, 2086, 373, 466, 1183,
	374, 1186, 1185, 1272, 2132, 2133, 898, 1348, 965, 955,
	466, 1518, 612, 1520, 668, 662, 1620, 1619, 1909, 831,
	33, 32, 588, 588, 31, 887, 992, 693, 2138, 100,
	1209, 879, 931, 930, 940, 941, 933, 934, 935, 936,
	937, 938, 939, 932, 2147, 993, 2162, 2123, 1533, 2160,
	1952, 2218, 677, 676, 675, 674, 2152, 673, 2172, 1217,
	2174, 2175, 1215, 2170, 1214, 843, 842, 885, 2193, 2192,
	2144, 2145, 2181, 2183, 1859, 2000, 2066, 2189, 1996, 2220,
	1992, 2136, 1868, 1867, 1895, 1896, 1902, 1658, 2224, 2201,
	2202, 2203, 2204, 1654, 2219, 931, 930, 940, 941, 933,
	934, 935, 936, 937, 938, 939, 932, 1656, 2228, 1657,
	2230, 1655, 2223, 1722, 1650, 1576, 1577, 1574, 1633, 1629,
	2143, 2206, 980, 987, 797, 95, 2235, 840, 1928, 2238,
	2236, 11, 10, 2247, 760, 2252, 9, 14, 2242, 2244,
	466, 21, 466, 2248, 931, 930, 940, 941, 933, 934,
	935, 936, 937, 938, 939, 932, 2260, 20, 2262, 19,
	56, 55, 2265, 54, 2274, 2220, 2278, 53, 2272, 786,
	2271, 786, 18, 8, 466, 52, 51, 50, 17, 16,
	2219, 46, 44, 2282, 2277, 43, 42, 41, 2293, 2291,
	2285, 40, 39, 38, 45, 37, 2252, 36, 35, 2294,
	65, 64, 63, 786, 62, 2304, 23, 24, 2307, 25,
	74, 2306, 73, 70, 72, 71, 69, 30, 2314, 2308,
	13, 2, 2312, 0, 2320, 0, 0, 0, 0, 0,
	0, 2323, 0, 0, 0, 2322, 2321, 0, 2328, 0,
	0, 0, 2333, 0, 0, 2336, 0, 2335, 0, 2339,
	2323, 2337, 2334, 0, 0, 0, 1106, 1148, 0, 0,
	1093, 0, 1055, 1108, 1029, 1044, 1116, 1045, 1046, 1080,
	1008, 1064, 224, 1042, 0, 1096, 1000, 1032, 1033, 1002,
	1039, 1003, 1030, 1057, 169, 1028, 1067, 194, 1114, 0,
	0, 253, 208, 0, 0, 1060, 1098, 1062, 1085, 1054,
	1081, 1016, 1074, 1109, 1043, 1078, 1110, 0, 0, 0,
	0, 2296, 806, 807, 808, 0, 0, 0, 0, 151,
	0, 0, 0, 0, 0, 1077, 1103, 1041, 0, 154,
	1107, 1061, 1079, 0, 0, 1001, 1075, 0, 1006, 1009,
	1115, 1101, 1036, 1037, 0, 0, 0, 0, 0, 0,
	0, 1058, 1063, 1082, 1051, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1034, 0, 1071, 0, 0, 0,
	1011, 1007, 0, 1056, 0, 143, 258, 272, 152, 249,
	285, 157, 256, 148, 223, 245, 0, 1147, 145, 270,
	255, 205, 188, 189, 144, 0, 240, 167, 180, 164,
	221, 0, 1105, 297, 163, 288, 1010, 280, 147, 1142,
	279, 220, 267, 271, 206, 200, 146, 269, 204, 199,
	192, 171, 184, 232, 198, 233, 185, 210, 209, 211,
	1126, 1127, 1128, 1129, 1130, 1138, 1139, 0, 1143, 1144,
	1145, 1015, 0, 1035, 1083, 0, 999, 1091, 1099, 1053,
	282, 1102, 1050, 1049, 1133, 0, 1132, 257, 1134, 1135,
	193, 1097, 1031, 1040, 298, 1038, 243, 226, 1104, 1070,
	1146, 241, 196, 268, 234, 273, 259, 281, 237, 235,
	139, 260, 166, 207, 149, 150, 162, 168, 170, 172,
	173, 216, 217, 229, 248, 261, 262, 263, 165, 158,
	242, 159, 182, 160, 140, 250, 161, 141, 230, 266,
	1131, 178, 238, 203, 142, 202, 231, 265, 264, 289,
	295, 296, 299, 300, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1140, 0, 1141,
	294, 176, 998, 277, 0, 222, 1094, 1004, 1014, 1012,
	1047, 1072, 1073, 218, 293, 1087, 1090, 1088, 1117, 246,
	0, 0, 0, 0, 0, 187, 228, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1005,
	0, 254, 275, 287, 278, 1048, 1022, 1059, 286, 1025,
	1023, 1086, 1024, 1076, 1119, 212, 213, 214, 215, 179,
	0, 156, 1068, 1052, 1120, 1121, 1122, 1123, 1124, 1125,
	1027, 1100, 175, 181, 0, 183, 155, 227, 177, 284,
	190, 1092, 219, 186, 251, 191, 197, 239, 283, 225,
	244, 153, 274, 252, 201, 1021, 1026, 1020, 1065, 1066,
	1111, 1112, 1113, 1084, 1013, 1095, 1017, 1019, 1018, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1089, 0,
	1069, 138, 0, 195, 1118, 236, 174, 700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 670, 0, 0, 0, 169,
	0, 0, 194, 0, 0, 0, 253, 208, 0, 0,
	0, 0, 715, 721, 1136, 1137, 290, 291, 292, 276,
	0, 0, 0, 663, 0, 0, 0, 613, 707, 706,
	680, 689, 0, 0, 151, 681, 0, 688, 682, 686,
	685, 683, 684, 0, 650, 0, 0, 0, 0, 0,
	0, 611, 667, 0, 671, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 664, 665, 0, 0, 0,
	0, 701, 0, 666, 0, 0, 703, 0, 690, 0,
	143, 258, 272, 152, 249, 285, 157, 256, 148, 223,
	245, 0, 0, 145, 270, 255, 205, 188, 189, 144,
	0, 240, 167, 180, 164, 221, 687, 699, 656, 163,
	654, 698, 280, 147, 0, 279, 220, 267, 271, 206,
	200, 146, 269, 204, 199, 192, 171, 184, 232, 198,
	233, 185, 210, 209, 211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 696, 0, 0, 282, 0, 0, 714, 0,
	0, 0, 257, 0, 0, 193, 0, 0, 0, 657,
	0, 243, 226, 724, 0, 0, 241, 196, 268, 234,
	273, 259, 281, 237, 235, 139, 260, 166, 207, 149,
	150, 162, 168, 170, 172, 173, 216, 217, 229, 248,
	261, 262, 263, 165, 158, 242, 159, 182, 160, 140,
	250, 161, 141, 230, 266, 0, 178, 238, 203, 142,
	202, 231, 265, 264, 289, 295, 296, 299, 300, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1329, 1328, 1330, 294, 176, 0, 277, 712,
	222, 723, 708, 709, 710, 713, 716, 717, 652, 655,
	718, 720, 722, 725, 246, 0, 0, 0, 0, 0,
	187, 228, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 275, 287, 653,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 702,
	212, 213, 214, 215, 651, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 181, 0,
	183, 155, 227, 177, 284, 190, 0, 219, 186, 251,
	191, 197, 239, 283, 225, 244, 153, 274, 252, 201,
	731, 711, 730, 732, 733, 729, 734, 735, 719, 672,
	0, 727, 726, 728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 195, 0,
	236, 174, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 117, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 705, 0,
	0, 290, 291, 292, 276, 93, 0, 700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 670, 0, 0, 0, 169,
	0, 0, 194, 0, 0, 0, 253, 208, 0, 0,
	0, 0, 715, 721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 663, 0, 0, 0, 613, 707, 706,
	680, 689, 0, 0, 151, 681, 0, 688, 682, 686,
	685, 683, 684, 0, 650, 0, 0, 0, 0, 0,
	0, 611, 667, 0, 671, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 664, 665, 0, 0, 0,
	0, 701, 0, 666, 0, 0, 703, 0, 690, 0,
	143, 258, 272, 152, 249, 285, 157, 256, 148, 223,
	245, 0, 0, 145, 270, 255, 205, 188, 189, 144,
	0, 240, 167, 180, 164, 221, 687, 699, 656, 163,
	654, 698, 280, 147, 0, 279, 220, 267, 271, 206,
	200, 146, 269, 204, 199, 192, 171, 184, 232, 198,
	233, 185, 210, 209, 211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 696, 0, 0, 282, 0, 0, 714, 0,
	0, 0, 257, 0, 0, 193, 0, 0, 0, 657,
	0, 243, 226, 724, 0, 0, 241, 196, 268, 234,
	273, 259, 281, 237, 235, 139, 260, 166, 207, 149,
	150, 162, 168, 170, 172, 173, 216, 217, 229, 248,
	261, 262, 263, 165, 158, 242, 159, 182, 160, 140,
	250, 161, 141, 230, 266, 0, 178, 238, 203, 142,
	202, 231, 265, 264, 289, 295, 296, 299, 300, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 176, 0, 277, 712,
	222, 723, 708, 709, 710, 713, 716, 717, 652, 655,
	718, 720, 722, 725, 246, 0, 0, 0, 0, 0,
	187, 228, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 275, 287, 653,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 702,
	212, 213, 214, 215, 651, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 181, 0,
	183, 155, 227, 177, 284, 190, 0, 219, 186, 251,
	191, 197, 239, 283, 225, 244, 153, 274, 252, 201,
	731, 711, 730, 732, 733, 729, 734, 735, 719, 672,
	0, 727, 726, 728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 195, 68,
	236, 174, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 117, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 705, 700,
	0, 290, 291, 292, 276, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 670, 0, 0,
	0, 169, 866, 0, 194, 0, 0, 0, 253, 208,
	0, 0, 0, 0, 715, 721, 0, 0, 0, 0,
	0, 0, 862, 0, 0, 663, 0, 0, 0, 613,
	707, 706, 680, 689, 0, 0, 151, 681, 0, 688,
	682, 686, 685, 683, 684, 0, 650, 0, 0, 0,
	0, 0, 0, 611, 667, 0, 671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 664, 665, 0,
	0, 0, 0, 701, 0, 666, 0, 0, 863, 0,
	690, 0, 143, 258, 272, 152, 249, 285, 157, 256,
	148, 223, 245, 0, 0, 145, 270, 255, 205, 188,
	189, 144, 0, 240, 167, 180, 164, 221, 687, 699,
	656, 163, 654, 698, 280, 147, 0, 279, 220, 267,
	271, 206, 200, 146, 269, 204, 199, 192, 171, 184,
	232, 198, 233, 185, 210, 209, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 696, 0, 0, 282, 0, 0,
	714, 0, 0, 0, 257, 0, 0, 193, 0, 0,
	0, 657, 0, 243, 226, 724, 0, 0, 241, 196,
	268, 234, 273, 259, 281, 237, 235, 139, 260, 166,
	207, 149, 150, 162, 168, 170, 172, 173, 216, 217,
	229, 248, 261, 262, 263, 165, 158, 242, 159, 182,
	160, 140, 250, 161, 141, 230, 266, 0, 178, 238,
	203, 142, 202, 231, 265, 264, 289, 295, 296, 299,
	300, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 176, 0,
	277, 712, 222, 723, 708, 709, 710, 713, 716, 717,
	652, 655, 718, 720, 722, 725, 246, 0, 0, 0,
	0, 0, 187, 228, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 275,
	287, 653, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 702, 212, 213, 214, 215, 651, 0, 156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	181, 0, 183, 155, 227, 177, 284, 190, 0, 219,
	186, 251, 191, 197, 239, 283, 225, 244, 153, 274,
	252, 201, 731, 711, 730, 732, 733, 729, 734, 735,
	719, 672, 0, 727, 726, 728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	195, 0, 236, 174, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 117,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	705, 700, 0, 290, 291, 292, 276, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 670,
	0, 0, 0, 169, 2295, 0, 194, 0, 0, 0,
	253, 208, 0, 0, 0, 0, 715, 721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 663, 0, 0,
	0, 613, 707, 706, 680, 689, 0, 0, 151, 681,
	0, 688, 682, 686, 685, 683, 684, 0, 650, 0,
	0, 0, 0, 0, 0, 611, 667, 0, 671, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 664,
	665, 0, 0, 0, 0, 701, 0, 666, 0, 0,
	703, 0, 690, 0, 143, 258, 272, 152, 249, 285,
	157, 256, 148, 223, 245, 0, 0, 145, 270, 255,
	205, 188, 189, 144, 0, 240, 167, 180, 164, 221,
	687, 699, 656, 163, 654, 698, 280, 147, 0, 279,
	220, 267, 271, 206, 200, 146, 269, 204, 199, 192,
	171, 184, 232, 198, 233, 185, 210, 209, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 696, 0, 0, 282,
	0, 0, 714, 0, 0, 0, 257, 0, 0, 193,
	0, 0, 0, 657, 0, 243, 226, 724, 0, 0,
	241, 196, 268, 234, 273, 259, 281, 237, 235, 139,
	260, 166, 207, 149, 150, 162, 168, 170, 172, 173,
	216, 217, 229, 248, 261, 262, 263, 165, 158, 242,
	159, 182, 160, 140, 250, 161, 141, 230, 266, 0,
	178, 238, 203, 142, 202, 231, 265, 264, 289, 295,
	296, 299, 300, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	176, 0, 277, 712, 222, 723, 708, 709, 710, 713,
	716, 717, 652, 655, 718, 720, 722, 725, 246, 0,
	0, 0, 0, 0, 187, 228, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 275, 287, 653, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 702, 212, 213, 214, 215, 651, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 181, 0, 183, 155, 227, 177, 284, 190,
	0, 219, 186, 251, 191, 197, 239, 283, 225, 244,
	153, 274, 252, 201, 731, 711, 730, 732, 733, 729,
	734, 735, 719, 672, 0, 727, 726, 728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 195, 0, 236, 174, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 117, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 705, 700, 0, 290, 291, 292, 276, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 670, 0, 0, 0, 169, 866, 0, 194, 0,
	0, 0, 253, 208, 0, 0, 0, 0, 715, 721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 663,
	0, 0, 0, 613, 707, 706, 680, 689, 0, 0,
	151, 681, 0, 688, 682, 686, 685, 683, 684, 0,
	650, 0, 0, 0, 0, 0, 0, 611, 667, 0,
	671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 664, 665, 0, 0, 0, 0, 701, 0, 666,
	0, 0, 703, 0, 690, 0, 143, 258, 272, 152,
	249, 285, 157, 256, 148, 223, 245, 0, 0, 145,
	270, 255, 205, 188, 189, 144, 0, 240, 167, 180,
	164, 221, 687, 699, 656, 163, 654, 698, 280, 147,
	0, 279, 220, 267, 271, 206, 200, 146, 269, 204,
	199, 192, 171, 184, 232, 198, 233, 185, 210, 209,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 696, 0,
	0, 282, 0, 0, 714, 0, 0, 0, 257, 0,
	0, 193, 0, 0, 0, 657, 0, 243, 226, 724,
	0, 0, 241, 196, 268, 234, 273, 259, 281, 237,
	235, 139, 260, 166, 207, 149, 150, 162, 168, 170,
	172, 173, 216, 217, 229, 248, 261, 262, 263, 165,
	158, 242, 159, 182, 160, 140, 250, 161, 141, 230,
	266, 0, 178, 238, 203, 142, 202, 231, 265, 264,
	289, 295, 296, 299, 300, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 176, 0, 277, 712, 222, 723, 708, 709,
	710, 713, 716, 717, 652, 655, 718, 720, 722, 725,
	246, 0, 0, 0, 0, 0, 187, 228, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 275, 287, 653, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 702, 212, 213, 214, 215,
	651, 0, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 181, 0, 183, 155, 227, 177,
	284, 190, 0, 219, 186, 251, 191, 197, 239, 283,
	225, 244, 153, 274, 252, 201, 731, 711, 730, 732,
	733, 729, 734, 735, 719, 672, 0, 727, 726, 728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 195, 0, 236, 174, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 117, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 705, 0, 0, 290, 291, 292,
	276, 700, 0, 0, 1505, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 670,
	0, 0, 0, 169, 0, 0, 194, 0, 0, 0,
	253, 208, 0, 0, 0, 0, 715, 721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 663, 0, 0,
	0, 613, 707, 706, 680, 689, 0, 0, 151, 681,
	0, 688, 682, 686, 685, 683, 684, 0, 650, 0,
	0, 0, 0, 0, 0, 611, 667, 0, 671, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 664,
	665, 0, 0, 0, 0, 701, 0, 666, 0, 0,
	703, 0, 690, 0, 143, 258, 272, 152, 249, 285,
	157, 256, 148, 223, 245, 0, 0, 145, 270, 255,
	205, 188, 189, 144, 0, 240, 167, 180, 164, 221,
	687, 699, 656, 163, 654, 698, 280, 147, 0, 279,
	220, 267, 271, 206, 200, 146, 269, 204, 199, 192,
	171, 184, 232, 198, 233, 185, 210, 209, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 696, 0, 0, 282,
	0, 0, 714, 0, 0, 0, 257, 0, 0, 193,
	0, 0, 0, 657, 0, 243, 226, 724, 0, 0,
	241, 196, 268, 234, 273, 259, 281, 237, 235, 139,
	260, 166, 207, 149, 150, 162, 168, 170, 172, 173,
	216, 217, 229, 248, 261, 262, 263, 165, 158, 242,
	159, 182, 160, 140, 250, 161, 141, 230, 266, 0,
	178, 238, 203, 142, 202, 231, 265, 264, 289, 295,
	296, 299, 300, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	176, 0, 277, 712, 222, 723, 708, 709, 710, 713,
	716, 717, 652, 655, 718, 720, 722, 725, 246, 0,
	0, 0, 0, 0, 187, 228, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 275, 287, 653, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 702, 212, 213, 214, 215, 651, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 181, 0, 183, 155, 227, 177, 284, 190,
	0, 219, 186, 251, 191, 197, 239, 283, 225, 244,
	153, 274, 252, 201, 731, 711, 730, 732, 733, 729,
	734, 735, 719, 672, 0, 727, 726, 728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 195, 0, 236, 174, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 117, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 705, 700, 0, 290, 291, 292, 276, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 670, 0, 0, 0, 169, 0, 0, 194, 0,
	0, 0, 253, 208, 0, 0, 0, 0, 715, 721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 663,
	0, 0, 0, 613, 707, 706, 680, 689, 0, 0,
	151, 681, 0, 688, 682, 686, 685, 683, 684, 0,
	650, 0, 0, 0, 0, 0, 0, 611, 667, 0,
	671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 664, 665, 608, 0, 0, 0, 701, 0, 666,
	0, 0, 703, 0, 690, 0, 143, 258, 272, 152,
	249, 285, 157, 256, 148, 223, 245, 0, 0, 145,
	270, 255, 205, 188, 189, 144, 0, 240, 167, 180,
	164, 221, 687, 699, 656, 163, 654, 698, 280, 147,
	0, 279, 220, 267, 271, 206, 200, 146, 269, 204,
	199, 192, 171, 184, 232, 198, 233, 185, 210, 209,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 696, 0,
	0, 282, 0, 0, 714, 0, 0, 0, 257, 0,
	0, 193, 0, 0, 0, 657, 0, 243, 226, 724,
	0, 0, 241, 196, 268, 234, 273, 259, 281, 237,
	235, 139, 260, 166, 207, 149, 150, 162, 168, 170,
	172, 173, 216, 217, 229, 248, 261, 262, 263, 165,
	158, 242, 159, 182, 160, 140, 250, 161, 141, 230,
	266, 0, 178, 238, 203, 142, 202, 231, 265, 264,
	289, 295, 296, 299, 300, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 176, 0, 277, 712, 222, 723, 708, 709,
	710, 713, 716, 717, 652, 655, 718, 720, 722, 725,
	246, 0, 0, 0, 0, 0, 187, 228, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 275, 287, 653, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 702, 212, 213, 214, 215,
	651, 0, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 181, 0, 183, 155, 227, 177,
	284, 190, 0, 219, 186, 251, 191, 197, 239, 283,
	225, 244, 153, 274, 252, 201, 731, 711, 730, 732,
	733, 729, 734, 735, 719, 672, 0, 727, 726, 728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 195, 0, 236, 174, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 117, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 705, 700, 0, 290, 291, 292,
	276, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 670, 0, 0, 0, 169, 0, 0,
	194, 0, 0, 0, 253, 208, 0, 0, 0, 0,
	715, 721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 663, 0, 0, 0, 613, 707, 706, 680, 689,
	0, 0, 151, 681, 0, 688, 682, 686, 685, 683,
	684, 0, 650, 0, 0, 0, 0, 0, 0, 611,
	667, 0, 671, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 664, 665, 0, 0, 0, 0, 701,
	0, 666, 0, 0, 703, 0, 690, 0, 143, 258,
	272, 152, 249, 285, 157, 256, 148, 223, 245, 0,
	0, 145, 270, 255, 205, 188, 189, 144, 0, 240,
	167, 180, 164, 221, 687, 699, 656, 163, 654, 698,
	280, 147, 0, 279, 220, 267, 271, 206, 200, 146,
	269, 204, 199, 192, 171, 184, 232, 198, 233, 185,
	210, 209, 211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	696, 0, 0, 282, 0, 0, 714, 0, 0, 0,
	257, 0, 0, 193, 0, 0, 0, 657, 0, 243,
	226, 724, 0, 0, 241, 196, 268, 234, 273, 259,
	281, 237, 235, 139, 260, 166, 207, 149, 150, 162,
	168, 170, 172, 173, 216, 217, 229, 248, 261, 262,
	263, 165, 158, 242, 159, 182, 160, 140, 250, 161,
	141, 230, 266, 0, 178, 238, 203, 142, 202, 231,
	265, 264, 289, 295, 296, 299, 300, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 176, 0, 277, 712, 222, 723,
	708, 709, 710, 713, 716, 717, 652, 655, 718, 720,
	722, 725, 246, 0, 0, 0, 0, 0, 187, 228,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 275, 287, 653, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 702, 212, 213,
	214, 215, 651, 0, 156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 181, 0, 183, 155,
	227, 177, 284, 190, 0, 219, 186, 251, 191, 197,
	239, 283, 225, 244, 153, 274, 252, 201, 731, 711,
	730, 732, 733, 729, 734, 735, 719, 672, 0, 727,
	726, 728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 195, 0, 236, 174,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 117, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 705, 700, 0, 290,
	291, 292, 276, 0, 0, 0, 0, 224, 0, 0,
	0, 1273, 0, 0, 0, 670, 0, 0, 0, 169,
	0, 0, 194, 0, 0, 0, 253, 208, 0, 0,
	0, 0, 715, 721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 663, 0, 0, 0, 613, 707, 706,
	680, 689, 0, 0, 151, 681, 0, 688, 682, 686,
	685, 683, 684, 0, 650, 0, 0, 0, 0, 0,
	0, 0, 667, 0, 671, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 664, 665, 0, 0, 0,
	0, 701, 0, 666, 0, 0, 703, 0, 690, 0,
	143, 258, 272, 152, 249, 285, 157, 256, 148, 223,
	245, 0, 0, 145, 270, 255, 205, 188, 189, 144,
	0, 240, 167, 180, 164, 221, 687, 699, 656, 163,
	654, 698, 280, 147, 0, 279, 220, 267, 271, 206,
	200, 146, 269, 204, 199, 192, 171, 184, 232, 198,
	233, 185, 210, 209, 211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 696, 0, 0, 282, 0, 0, 714, 0,
	0, 0, 257, 0, 0, 193, 0, 0, 0, 657,
	0, 243, 226, 724, 0, 0, 241, 196, 268, 234,
	273, 259, 281, 237, 235, 139, 260, 166, 207, 149,
	150, 162, 168, 170, 172, 173, 216, 217, 229, 248,
	261, 262, 263, 165, 158, 242, 159, 182, 160, 140,
	250, 161, 141, 230, 266, 0, 178, 238, 203, 142,
	202, 231, 265, 264, 289, 1274, 1275, 299, 300, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 176, 0, 277, 712,
	222, 723, 708, 709, 710, 713, 716, 717, 652, 655,
	718, 720, 722, 725, 246, 0, 0, 0, 0, 0,
	187, 228, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 275, 287, 653,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 702,
	212, 213, 214, 215, 651, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 181, 0,
	183, 155, 227, 177, 284, 190, 0, 219, 186, 251,
	191, 197, 239, 283, 225, 244, 153, 274, 252, 201,
	731, 711, 730, 732, 733, 729, 734, 735, 719, 672,
	0, 727, 726, 728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 195, 0,
	236, 174, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 117, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 705, 700,
	0, 290, 291, 292, 276, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 670, 0, 0,
	0, 169, 0, 0, 194, 0, 0, 0, 253, 208,
	0, 0, 0, 0, 715, 721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 663, 0, 0, 0, 613,
	707, 706, 680, 689, 0, 0, 151, 681, 0, 688,
	682, 686, 685, 683, 684, 0, 650, 0, 0, 0,
	0, 0, 0, 0, 667, 0, 671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 664, 665, 0,
	0, 0, 0, 701, 0, 666, 0, 0, 703, 0,
	690, 0, 143, 258, 272, 152, 249, 285, 157, 256,
	148, 223, 245, 0, 0, 145, 270, 255, 205, 188,
	189, 144, 0, 240, 167, 180, 164, 221, 687, 699,
	656, 163, 654, 698, 280, 147, 0, 279, 220, 267,
	271, 206, 200, 146, 269, 204, 199, 192, 171, 184,
	232, 198, 233, 185, 210, 209, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 696, 0, 0, 282, 0, 0,
	714, 0, 0, 0, 257, 0, 0, 193, 0, 0,
	0, 657, 0, 243, 226, 724, 0, 0, 241, 196,
	268, 234, 273, 259, 281, 237, 235, 139, 260, 166,
	207, 149, 150, 162, 168, 170, 172, 173, 216, 217,
	229, 248, 261, 262, 263, 165, 158, 242, 159, 182,
	160, 140, 250, 161, 141, 230, 266, 0, 178, 238,
	203, 142, 202, 231, 265, 264, 289, 295, 296, 299,
	300, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 176, 0,
	277, 712, 222, 723, 708, 709, 710, 713, 716, 717,
	652, 655, 718, 720, 722, 725, 246, 0, 0, 0,
	0, 0, 187, 228, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 275,
	287, 653, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 702, 212, 213, 214, 215, 651, 0, 156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	181, 0, 183, 155, 227, 177, 284, 190, 0, 219,
	186, 251, 191, 197, 239, 283, 225, 244, 153, 274,
	252, 201, 731, 711, 730, 732, 733, 729, 734, 735,
	719, 672, 0, 727, 726, 728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	195, 0, 236, 174, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 117,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	705, 700, 0, 290, 291, 292, 276, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 670,
	0, 0, 0, 169, 0, 0, 194, 0, 0, 0,
	253, 208, 0, 0, 0, 0, 715, 721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 613, 707, 706, 680, 689, 0, 0, 151, 681,
	0, 688, 682, 686, 685, 683, 684, 0, 650, 0,
	0, 0, 0, 0, 0, 611, 667, 0, 671, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 664,
	665, 0, 0, 0, 0, 701, 0, 666, 0, 0,
	703, 0, 690, 0, 143, 258, 272, 152, 249, 285,
	157, 256, 148, 223, 245, 0, 0, 145, 270, 255,
	205, 188, 189, 144, 0, 240, 167, 180, 164, 221,
	687, 699, 656, 163, 654, 698, 280, 147, 0, 279,
	220, 267, 271, 206, 200, 146, 269, 204, 199, 192,
	171, 184, 232, 198, 233, 185, 210, 209, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 696, 0, 0, 282,
	0, 0, 714, 0, 0, 0, 257, 0, 0, 193,
	0, 0, 0, 657, 0, 243, 226, 724, 0, 0,
	241, 196, 268, 234, 273, 259, 281, 237, 235, 139,
	260, 166, 207, 149, 150, 162, 168, 170, 172, 173,
	216, 217, 229, 248, 261, 262, 263, 165, 158, 242,
	159, 182, 160, 140, 250, 161, 141, 230, 266, 0,
	178, 238, 203, 142, 202, 231, 265, 264, 289, 295,
	296, 299, 300, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	176, 0, 277, 712, 222, 723, 708, 709, 710, 713,
	716, 717, 652, 655, 718, 720, 722, 725, 246, 0,
	0, 0, 0, 0, 187, 228, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 275, 287, 653, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 702, 212, 213, 214, 215, 651, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 181, 0, 183, 155, 227, 177, 284, 190,
	0, 219, 186, 251, 191, 197, 239, 283, 225, 244,
	153, 274, 252, 201, 731, 711, 730, 732, 733, 729,
	734, 735, 719, 672, 0, 727, 726, 728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 195, 0, 236, 174, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 117, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 705, 0, 0, 290, 291, 292, 276, 342,
	0, 341, 345, 337, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 352, 194, 0, 0, 0,
	253, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 355, 0, 0, 356, 0, 0, 0, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 341, 345, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	352, 0, 0, 0, 143, 258, 272, 152, 249, 285,
	157, 256, 148, 223, 245, 0, 0, 145, 270, 255,
	205, 188, 189, 144, 0, 240, 167, 180, 164, 221,
	0, 0, 297, 163, 288, 0, 280, 147, 0, 279,
	220, 267, 271, 206, 200, 146, 269, 204, 199, 192,
	171, 184, 232, 198, 233, 185, 210, 209, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 334, 338, 0, 0, 0, 0, 0, 340, 282,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 193,
	344, 0, 0, 298, 0, 243, 226, 0, 0, 0,
	241, 196, 268, 234, 336, 259, 281, 237, 360, 139,
	260, 166, 207, 149, 150, 162, 168, 170, 172, 173,
	216, 217, 229, 248, 261, 262, 263, 165, 158, 242,
	159, 182, 160, 140, 250, 161, 141, 230, 266, 0,
	178, 238, 203, 142, 202, 231, 265, 264, 289, 295,
	296, 299, 300, 301, 302, 335, 334, 338, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 0, 294,
	176, 0, 277, 0, 222, 344, 0, 0, 0, 0,
	0, 0, 218, 293, 0, 0, 0, 0, 246, 777,
	0, 0, 339, 343, 346, 228, 347, 348, 0, 0,
	349, 350, 351, 0, 0, 353, 354, 0, 0, 0,
	254, 275, 287, 278, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 212, 213, 214, 215, 179, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 181, 0, 183, 155, 227, 177, 284, 190,
	0, 219, 186, 251, 191, 197, 239, 283, 225, 244,
	153, 274, 252, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 339, 343, 778,
	0, 347, 779, 0, 0, 349, 350, 351, 0, 0,
	353, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 195, 0, 236, 174, 102, 103, 104, 105,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 0, 0, 0, 290, 291, 292, 276, 342,
	0, 341, 345, 337, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 352, 194, 0, 0, 0,
	253, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 355, 0, 0, 356, 0, 0, 0, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 258, 272, 152, 249, 285,
	157, 256, 148, 223, 245, 0, 0, 145, 270, 255,
	205, 188, 189, 144, 0, 240, 167, 180, 164, 221,
	0, 0, 297, 163, 288, 0, 280, 147, 0, 279,
	220, 267, 271, 206, 200, 146, 269, 204, 199, 192,
	171, 184, 232, 198, 233, 185, 210, 209, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 334, 338, 0, 0, 0, 0, 0, 340, 282,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 193,
	344, 0, 0, 298, 0, 243, 226, 0, 0, 0,
	241, 196, 268, 234, 336, 259, 281, 237, 235, 139,
	260, 166, 207, 149, 150, 162, 168, 170, 172, 173,
	216, 217, 229, 248, 261, 262, 263, 165, 158, 242,
	159, 182, 160, 140, 250, 161, 141, 230, 266, 0,
	178, 238, 203, 142, 202, 231, 265, 264, 289, 295,
	296, 299, 300, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	176, 0, 277, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 218, 293, 0, 0, 0, 0, 246, 0,
	0, 0, 339, 343, 346, 228, 347, 348, 0, 0,
	349, 350, 351, 0, 0, 353, 354, 0, 0, 0,
	254, 275, 287, 278, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 212, 213, 214, 215, 179, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 181, 0, 183, 155, 227, 177, 284, 190,
	0, 219, 186, 251, 191, 197, 239, 283, 225, 244,
	153, 274, 252, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 195, 0, 236, 174, 102, 103, 104, 105,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 0, 0, 0, 290, 291, 292, 276, 93,
	0, 26, 83, 67, 0, 0, 0, 0, 0, 0,
	0, 224, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 194, 0, 0, 0,
	253, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 99, 0, 0, 0, 0, 0, 0, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 258, 272, 152, 249, 285,
	157, 256, 148, 223, 245, 0, 0, 145, 270, 255,
	205, 188, 189, 144, 0, 240, 167, 180, 164, 221,
	0, 0, 297, 163, 288, 0, 280, 147, 0, 279,
	220, 267, 271, 206, 200, 146, 269, 204, 199, 192,
	171, 184, 232, 198, 233, 185, 210, 209, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 193,
	0, 0, 0, 298, 0, 243, 226, 0, 0, 0,
	241, 196, 268, 234, 273, 259, 281, 237, 235, 139,
	260, 166, 207, 149, 150, 162, 168, 170, 172, 173,
	216, 217, 229, 248, 261, 262, 263, 165, 158, 242,
	159, 182, 160, 140, 250, 161, 141, 230, 266, 0,
	178, 238, 203, 142, 202, 231, 265, 264, 289, 295,
	296, 299, 300, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	176, 0, 277, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 218, 293, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 187, 228, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 275, 287, 278, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 212, 213, 214, 215, 310, 312,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 181, 0, 183, 155, 227, 177, 284, 190,
	0, 219, 186, 251, 191, 197, 239, 283, 225, 244,
	153, 274, 252, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 195, 68, 236, 174, 102, 103, 104, 105,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 224, 0, 0, 290, 291, 292, 276, 0,
	0, 0, 0, 0, 169, 0, 0, 194, 0, 0,
	0, 253, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 99, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	1585, 1588, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 258, 272, 152, 249,
	285, 157, 256, 148, 223, 245, 0, 0, 145, 270,
	255, 205, 188, 189, 144, 0, 240, 167, 180, 164,
	221, 0, 0, 297, 163, 288, 0, 280, 147, 0,
	279, 220, 267, 271, 206, 200, 146, 269, 204, 199,
	192, 171, 184, 232, 198, 233, 185, 210, 209, 211,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1589,
	282, 0, 0, 0, 1582, 0, 1581, 257, 1583, 1586,
	193, 0, 0, 0, 298, 0, 243, 226, 0, 0,
	0, 241, 196, 268, 234, 273, 259, 281, 237, 235,
	139, 260, 166, 207, 149, 150, 162, 168, 170, 172,
	173, 216, 217, 229, 248, 261, 262, 263, 165, 158,
	242, 159, 182, 160, 140, 250, 161, 141, 230, 266,
	1587, 178, 238, 203, 142, 202, 231, 265, 264, 289,
	295, 296, 299, 300, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 176, 0, 277, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 218, 293, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 187, 228, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 275, 287, 278, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 212, 213, 214, 215, 179,
	0, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 181, 0, 183, 155, 227, 177, 284,
	190, 0, 219, 186, 251, 191, 197, 239, 283, 225,
	244, 153, 274, 252, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 195, 0, 236, 174, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 224, 0, 0, 290, 291, 292, 276,
	893, 0, 0, 0, 0, 169, 0, 0, 194, 0,
	0, 0, 253, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 99, 0, 0, 894, 0, 0, 0,
	151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 0, 0, 889, 890, 891, 888, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 258, 272, 152,
	249, 285, 157, 256, 148, 223, 245, 0, 0, 145,
	270, 255, 205, 188, 189, 144, 0, 240, 167, 180,
	164, 221, 0, 0, 297, 163, 288, 0, 280, 147,
	0, 279, 220, 267, 271, 206, 200, 146, 269, 204,
	199, 192, 171, 184, 232, 198, 233, 185, 210, 209,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 193, 0, 0, 0, 298, 0, 243, 226, 0,
	0, 0, 241, 196, 268, 234, 273, 259, 281, 237,
	235, 139, 260, 166, 207, 149, 150, 162, 168, 170,
	172, 173, 216, 217, 229, 248, 261, 262, 263, 165,
	158, 242, 159, 182, 160, 140, 250, 161, 141, 230,
	266, 0, 178, 238, 203, 142, 202, 231, 265, 264,
	289, 295, 296, 299, 300, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 176, 0, 277, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 218, 293, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 187, 228, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 275, 287, 278, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 212, 213, 214, 215,
	179, 0, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 181, 0, 183, 155, 227, 177,
	284, 190, 0, 219, 186, 251, 191, 197, 239, 283,
	225, 244, 153, 274, 252, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 195, 0, 236, 174, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 224, 0, 0, 290, 291, 292,
	276, 0, 0, 0, 0, 0, 169, 422, 0, 194,
	0, 0, 0, 253, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 99, 430, 431, 0, 0, 0,
	0, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 258, 272,
	152, 249, 285, 157, 256, 148, 223, 245, 0, 0,
	145, 270, 255, 205, 188, 189, 144, 0, 240, 167,
	180, 164, 221, 0, 0, 297, 163, 288, 405, 280,
	147, 404, 279, 220, 267, 271, 206, 200, 146, 269,
	204, 199, 192, 171, 184, 232, 198, 233, 185, 210,
	209, 211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 193, 0, 0, 0, 298, 0, 243, 226,
	0, 0, 0, 241, 196, 268, 234, 273, 259, 281,
	421, 235, 139, 260, 166, 207, 149, 150, 162, 168,
	170, 172, 173, 216, 217, 229, 248, 261, 262, 263,
	165, 158, 242, 159, 182, 160, 140, 250, 161, 141,
	230, 266, 0, 178, 238, 203, 142, 202, 231, 265,
	264, 289, 295, 296, 299, 300, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 176, 0, 277, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 218, 293, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 187, 228, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 275, 287, 278, 0, 0, 0,
	286, 0, 0, 0, 0, 0, 424, 212, 213, 214,
	215, 179, 0, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 181, 0, 183, 155, 227,
	177, 284, 190, 0, 432, 427, 428, 191, 197, 239,
	283, 225, 244, 153, 274, 252, 429, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 195, 0, 236, 174, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 93, 0, 0, 290, 291,
	292, 276, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 194, 0, 0, 0, 253, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 90, 0, 981, 0, 99, 0, 0,
	0, 0, 0, 0, 151, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 258, 272, 152, 249, 285, 157, 256, 148, 223,
	245, 0, 0, 145, 270, 255, 205, 188, 189, 144,
	0, 240, 167, 180, 164, 221, 0, 0, 297, 163,
	288, 0, 280, 147, 0, 279, 220, 267, 271, 206,
	200, 146, 269, 204, 199, 192, 171, 184, 232, 198,
	233, 185, 210, 209, 211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 193, 0, 0, 0, 298,
	0, 243, 226, 0, 0, 0, 241, 196, 268, 234,
	273, 259, 281, 237, 235, 139, 260, 166, 207, 149,
	150, 162, 168, 170, 172, 173, 216, 217, 229, 248,
	261, 262, 263, 165, 158, 242, 159, 182, 160, 140,
	250, 161, 141, 230, 266, 0, 178, 238, 203, 142,
	202, 231, 265, 264, 289, 295, 296, 299, 300, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 176, 0, 277, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 218, 293,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	187, 228, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 275, 287, 278,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	212, 213, 214, 215, 179, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 181, 0,
	183, 155, 227, 177, 284, 190, 0, 219, 186, 251,
	191, 197, 239, 283, 225, 244, 153, 274, 252, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 195, 68,
	236, 174, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 224, 0,
	0, 290, 291, 292, 276, 0, 0, 0, 0, 0,
	169, 0, 0, 194, 0, 0, 0, 253, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 99, 430,
	431, 0, 0, 0, 0, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 258, 272, 152, 249, 285, 157, 256, 148,
	223, 245, 0, 0, 145, 270, 255, 205, 188, 189,
	144, 0, 240, 167, 180, 164, 221, 0, 0, 297,
	163, 288, 405, 280, 147, 404, 279, 220, 267, 271,
	206, 200, 146, 269, 204, 199, 192, 171, 184, 232,
	198, 233, 185, 210, 209, 211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 193, 0, 0, 0,
	298, 0, 243, 226, 0, 0, 0, 241, 196, 268,
	234, 273, 259, 281, 237, 235, 139, 260, 166, 207,
	149, 150, 162, 168, 170, 172, 173, 216, 217, 229,
	248, 261, 262, 263, 165, 158, 242, 159, 182, 160,
	140, 250, 161, 141, 230, 266, 0, 178, 238, 203,
	142, 202, 231, 265, 264, 289, 295, 296, 299, 300,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 176, 0, 277,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 218,
	293, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 187, 228, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 275, 287,
	278, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 212, 213, 214, 215, 179, 0, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 181,
	0, 183, 155, 227, 177, 284, 190, 0, 432, 427,
	428, 191, 197, 239, 283, 225, 244, 153, 274, 252,
	429, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 195,
	0, 236, 174, 102, 103, 104, 105, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 0,
	0, 0, 290, 291, 292, 276, 224, 0, 0, 0,
	570, 0, 0, 0, 0, 0, 0, 0, 169, 571,
	0, 194, 0, 0, 0, 253, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 355, 0, 0, 356,
	0, 0, 0, 151, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	258, 272, 152, 249, 285, 157, 256, 148, 223, 245,
	0, 0, 145, 270, 255, 205, 188, 189, 144, 0,
	240, 167, 180, 164, 221, 0, 0, 297, 163, 288,
	0, 280, 147, 0, 279, 220, 267, 271, 206, 200,
	146, 269, 204, 199, 192, 171, 184, 232, 198, 233,
	185, 210, 209, 211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 193, 0, 0, 0, 298, 0,
	243, 226, 0, 0, 0, 241, 196, 268, 234, 273,
	259, 281, 237, 235, 139, 260, 166, 207, 149, 150,
	162, 168, 170, 172, 173, 216, 217, 229, 248, 261,
	262, 263, 165, 158, 242, 159, 182, 160, 140, 250,
	161, 141, 230, 266, 0, 178, 238, 203, 142, 202,
	231, 265, 264, 289, 295, 296, 299, 300, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 176, 0, 277, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 218, 293, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 187,
	228, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 275, 287, 278, 0,
	0, 0, 286, 0, 0, 0, 0, 572, 0, 212,
	213, 214, 215, 179, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 181, 0, 183,
	155, 227, 177, 284, 190, 0, 219, 186, 251, 191,
	197, 239, 283, 225, 244, 153, 274, 252, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 195, 0, 236,
	174, 102, 103, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 0, 0, 0,
	290, 291, 292, 276, 224, 0, 0, 0, 854, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 194,
	0, 0, 0, 253, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 355, 0, 0, 356, 0, 0,
	0, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 258, 272,
	152, 249, 285, 157, 256, 148, 223, 245, 0, 0,
	145, 270, 255, 205, 188, 189, 144, 0, 240, 167,
	180, 164, 221, 0, 0, 297, 163, 288, 0, 280,
	147, 0, 279, 220, 267, 271, 206, 200, 146, 269,
	204, 199, 192, 171, 184, 232, 198, 233, 185, 210,
	209, 211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 193, 0, 0, 0, 298, 0, 243, 226,
	0, 0, 0, 241, 196, 268, 234, 273, 259, 281,
	237, 235, 139, 260, 166, 207, 149, 150, 162, 168,
	170, 172, 173, 216, 217, 229, 248, 261, 262, 263,
	165, 158, 242, 159, 182, 160, 140, 250, 161, 141,
	230, 266, 0, 178, 238, 203, 142, 202, 231, 265,
	264, 289, 295, 296, 299, 300, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 176, 0, 277, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 218, 293, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 187, 228, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 275, 287, 278, 0, 0, 0,
	286, 0, 0, 0, 0, 853, 0, 212, 213, 214,
	215, 179, 0, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 181, 0, 183, 155, 227,
	177, 284, 190, 0, 219, 186, 251, 191, 197, 239,
	283, 225, 244, 153, 274, 252, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 195, 0, 236, 174, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 224, 0, 0, 290, 291,
	292, 276, 0, 0, 0, 0, 0, 169, 592, 0,
	194, 0, 0, 0, 253, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 99, 0, 0, 590, 0,
	0, 0, 151, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 589, 0, 0, 0, 143, 258,
	272, 152, 249, 285, 157, 256, 148, 223, 245, 0,
	0, 145, 270, 255, 205, 188, 189, 144, 0, 240,
	167, 180, 164, 221, 0, 0, 297, 163, 288, 0,
	280, 147, 0, 279, 220, 267, 271, 206, 200, 146,
	269, 204, 199, 192, 171, 184, 232, 198, 233, 185,
	210, 209, 211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 193, 0, 0, 0, 298, 0, 243,
	226, 0, 0, 0, 241, 196, 268, 234, 273, 259,
	281, 237, 235, 139, 260, 166, 207, 149, 150, 162,
	168, 170, 172, 173, 216, 217, 229, 248, 261, 262,
	263, 165, 158, 242, 159, 182, 160, 140, 250, 161,
	141, 230, 266, 0, 178, 238, 203, 142, 202, 231,
	265, 264, 289, 295, 296, 299, 300, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 176, 0, 277, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 218, 293, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 187, 228,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 275, 287, 278, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 212, 213,
	214, 215, 179, 0, 156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 181, 0, 183, 155,
	227, 177, 284, 190, 0, 219, 186, 251, 191, 197,
	239, 283, 225, 244, 153, 274, 252, 201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 195, 0, 236, 174,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 224, 0, 0, 290,
	291, 292, 276, 0, 0, 0, 0, 0, 169, 587,
	0, 194, 0, 0, 0, 253, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 99, 0, 0, 590,
	0, 0, 0, 151, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 589, 0, 0, 0, 143,
	258, 272, 152, 249, 285, 157, 256, 148, 223, 245,
	0, 0, 145, 270, 255, 205, 188, 189, 144, 0,
	240, 167, 180, 164, 221, 0, 0, 297, 163, 288,
	0, 280, 147, 0, 279, 220, 267, 271, 206, 200,
	146, 269, 204, 199, 192, 171, 184, 232, 198, 233,
	185, 210, 209, 211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 193, 0, 0, 0, 298, 0,
	243, 226, 0, 0, 0, 241, 196, 268, 234, 273,
	259, 281, 237, 235, 139, 260, 166, 207, 149, 150,
	162, 168, 170, 172, 173, 216, 217, 229, 248, 261,
	262, 263, 165, 158, 242, 159, 182, 160, 140, 250,
	161, 141, 230, 266, 0, 178, 238, 203, 142, 202,
	231, 265, 264, 289, 295, 296, 299, 300, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 176, 0, 277, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 218, 293, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 187,
	228, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 275, 287, 278, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 212,
	213, 214, 215, 179, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 181, 0, 183,
	155, 227, 177, 284, 190, 0, 219, 186, 251, 191,
	197, 239, 283, 225, 244, 153, 274, 252, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 195, 0, 236,
	174, 102, 103, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 224, 0, 0,
	290, 291, 292, 276, 0, 0, 0, 0, 0, 169,
	0, 0, 194, 0, 0, 0, 253, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2215, 0, 99, 707, 0,
	0, 0, 0, 0, 151, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 258, 272, 152, 249, 285, 157, 256, 148, 223,
	245, 0, 0, 145, 270, 255, 205, 188, 189, 144,
	0, 240, 167, 180, 164, 221, 0, 0, 297, 163,
	288, 0, 280, 147, 0, 279, 220, 267, 271, 206,
	200, 146, 269, 204, 199, 192, 171, 184, 232, 198,
	233, 185, 210, 209, 211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 193, 0, 0, 0, 298,
	0, 243, 226, 0, 0, 0, 241, 196, 268, 234,
	273, 259, 281, 237, 235, 139, 260, 166, 207, 149,
	150, 162, 168, 170, 172, 173, 216, 217, 229, 248,
	261, 262, 263, 165, 158, 242, 159, 182, 160, 140,
	250, 161, 141, 230, 266, 0, 178, 238, 203, 142,
	202, 231, 265, 264, 289, 295, 296, 299, 300, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 176, 0, 277, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 218, 293,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	187, 228, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 275, 287, 278,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	212, 213, 214, 215, 179, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 181, 0,
	183, 155, 227, 177, 284, 190, 0, 219, 186, 251,
	191, 197, 239, 283, 225, 244, 153, 274, 252, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 195, 0,
	236, 174, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 224, 0,
	0, 290, 291, 292, 276, 0, 0, 0, 0, 0,
	169, 0, 0, 194, 0, 0, 0, 253, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 99, 0,
	0, 590, 0, 0, 0, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 589, 0, 0,
	0, 143, 258, 272, 152, 249, 285, 157, 256, 148,
	223, 245, 0, 0, 145, 270, 255, 205, 188, 189,
	144, 0, 240, 167, 180, 164, 221, 0, 0, 297,
	163, 288, 0, 280, 147, 0, 279, 220, 267, 271,
	206, 200, 146, 269, 204, 199, 192, 171, 184, 232,
	198, 233, 185, 210, 209, 211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 193, 0, 0, 0,
	298, 0, 243, 226, 0, 0, 0, 241, 196, 268,
	234, 273, 259, 281, 237, 235, 139, 260, 166, 207,
	149, 150, 162, 168, 170, 172, 173, 216, 217, 229,
	248, 261, 262, 263, 165, 158, 242, 159, 182, 160,
	140, 250, 161, 141, 230, 266, 0, 178, 238, 203,
	142, 202, 231, 265, 264, 289, 295, 296, 299, 300,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 176, 0, 277,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 218,
	293, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 187, 228, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 275, 287,
	278, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 212, 213, 214, 215, 179, 0, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 181,
	0, 183, 155, 227, 177, 284, 190, 0, 219, 186,
	251, 191, 197, 239, 283, 225, 244, 153, 274, 252,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 195,
	0, 236, 174, 102, 103, 104, 105, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 224,
	0, 0, 290, 291, 292, 276, 0, 0, 0, 0,
	0, 169, 0, 0, 194, 0, 0, 0, 253, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 99,
	0, 0, 590, 0, 0, 0, 151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1778, 0,
	0, 0, 143, 258, 272, 152, 249, 285, 157, 256,
	148, 223, 245, 0, 0, 145, 270, 255, 205, 188,
	189, 144, 0, 240, 167, 180, 164, 221, 0, 0,
	297, 163, 288, 0, 280, 147, 0, 279, 220, 267,
	271, 206, 200, 146, 269, 204, 199, 192, 171, 184,
	232, 198, 233, 185, 210, 209, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 193, 0, 0,
	0, 298, 0, 243, 226, 0, 0, 0, 241, 196,
	268, 234, 273, 259, 281, 237, 235, 139, 260, 166,
	207, 149, 150, 162, 168, 170, 172, 173, 216, 217,
	229, 248, 261, 262, 263, 165, 158, 242, 159, 182,
	160, 140, 250, 161, 141, 230, 266, 0, 178, 238,
	203, 142, 202, 231, 265, 264, 289, 295, 296, 299,
	300, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 176, 0,
	277, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	218, 293, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 187, 228, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 275,
	287, 278, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 212, 213, 214, 215, 179, 0, 156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	181, 0, 183, 155, 227, 177, 284, 190, 0, 219,
	186, 251, 191, 197, 239, 283, 225, 244, 153, 274,
	252, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	195, 0, 236, 174, 102, 103, 104, 105, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	224, 0, 0, 290, 291, 292, 276, 0, 0, 0,
	0, 0, 169, 0, 0, 194, 0, 0, 0, 253,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	99, 0, 0, 590, 0, 0, 0, 151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 258, 272, 152, 249, 285, 157,
	256, 148, 223, 245, 0, 0, 145, 270, 255, 205,
	188, 189, 144, 0, 240, 167, 180, 164, 221, 0,
	0, 297, 163, 288, 0, 280, 147, 0, 279, 220,
	267, 271, 206, 200, 146, 269, 204, 199, 192, 171,
	184, 232, 198, 233, 185, 210, 209, 211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 193, 0,
	0, 0, 298, 0, 243, 226, 0, 0, 0, 241,
	196, 268, 234, 273, 259, 281, 237, 235, 139, 260,
	166, 207, 149, 150, 162, 168, 170, 172, 173, 216,
	217, 229, 248, 261, 262, 263, 165, 158, 242, 159,
	182, 160, 140, 250, 161, 141, 230, 266, 0, 178,
	238, 203, 142, 202, 231, 265, 264, 289, 295, 296,
	299, 300, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 176,
	0, 277, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 218, 293, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 187, 228, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	275, 287, 278, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 1560, 212, 213, 214, 215, 179, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 181, 0, 183, 155, 227, 177, 284, 190, 0,
	219, 186, 251, 191, 197, 239, 283, 225, 244, 153,
	274, 252, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 195, 0, 236, 174, 102, 103, 104, 105, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 224, 0, 0, 290, 291, 292, 276, 0, 0,
	0, 0, 0, 169, 1249, 0, 194, 0, 0, 0,
	253, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 99, 0, 0, 590, 0, 0, 0, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 258, 272, 152, 249, 285,
	157, 256, 148, 223, 245, 0, 0, 145, 270, 255,
	205, 188, 189, 144, 0, 240, 167, 180, 164, 221,
	0, 0, 297, 163, 288, 0, 280, 147, 0, 279,
	220, 267, 271, 206, 200, 146, 269, 204, 199, 192,
	171, 184, 232, 198, 233, 185, 210, 209, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 193,
	0, 0, 0, 298, 0, 243, 226, 0, 0, 0,
	241, 196, 268, 234, 273, 259, 281, 237, 235, 139,
	260, 166, 207, 149, 150, 162, 168, 170, 172, 173,
	216, 217, 229, 248, 261, 262, 263, 165, 158, 242,
	159, 182, 160, 140, 250, 161, 141, 230, 266, 0,
	178, 238, 203, 142, 202, 231, 265, 264, 289, 295,
	296, 299, 300, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	176, 0, 277, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 218, 293, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 187, 228, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 275, 287, 278, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 212, 213, 214, 215, 179, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 181, 0, 183, 155, 227, 177, 284, 190,
	0, 219, 186, 251, 191, 197, 239, 283, 225, 244,
	153, 274, 252, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 195, 0, 236, 174, 102, 103, 104, 105,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 224, 0, 0, 290, 291, 292, 276, 0,
	0, 0, 0, 0, 169, 0, 0, 194, 0, 0,
	0, 253, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 99, 707, 0, 0, 0, 0, 0, 151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 258, 272, 152, 249,
	285, 157, 256, 148, 223, 245, 0, 0, 145, 270,
	255, 205, 188, 189, 144, 0, 240, 167, 180, 164,
	221, 0, 0, 297, 163, 288, 0, 280, 147, 0,
	279, 220, 267, 271, 206, 200, 146, 269, 204, 199,
	192, 171, 184, 232, 198, 233, 185, 210, 209, 211,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	193, 0, 0, 0, 298, 0, 243, 226, 0, 0,
	0, 241, 196, 268, 234, 273, 259, 281, 237, 235,
	139, 260, 166, 207, 149, 150, 162, 168, 170, 172,
	173, 216, 217, 229, 248, 261, 262, 263, 165, 158,
	242, 159, 182, 160, 140, 250, 161, 141, 230, 266,
	0, 178, 238, 203, 142, 202, 231, 265, 264, 289,
	295, 296, 299, 300, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 176, 0, 277, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 218, 293, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 187, 228, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 275, 287, 278, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 212, 213, 214, 215, 179,
	0, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 181, 0, 183, 155, 227, 177, 284,
	190, 0, 219, 186, 251, 191, 197, 239, 283, 225,
	244, 153, 274, 252, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 195, 0, 236, 174, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 224, 0, 0, 290, 291, 292, 276,
	0, 0, 0, 0, 0, 169, 0, 0, 194, 0,
	0, 0, 253, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1927,
	0, 0, 0, 99, 0, 0, 0, 0, 0, 0,
	151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 258, 272, 152,
	249, 285, 157, 256, 148, 223, 245, 0, 0, 145,
	270, 255, 205, 188, 189, 144, 0, 240, 167, 180,
	164, 221, 0, 0, 297, 163, 288, 0, 280, 147,
	0, 279, 220, 267, 271, 206, 200, 146, 269, 204,
	199, 192, 171, 184, 232, 198, 233, 185, 210, 209,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 193, 0, 0, 0, 298, 0, 243, 226, 0,
	0, 0, 241, 196, 268, 234, 273, 259, 281, 237,
	235, 139, 260, 166, 207, 149, 150, 162, 168, 170,
	172, 173, 216, 217, 229, 248, 261, 262, 263, 165,
	158, 242, 159, 182, 160, 140, 250, 161, 141, 230,
	266, 0, 178, 238, 203, 142, 202, 231, 265, 264,
	289, 295, 296, 299, 300, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 176, 0, 277, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 218, 293, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 187, 228, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 275, 287, 278, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 212, 213, 214, 215,
	179, 0, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 181, 0, 183, 155, 227, 177,
	284, 190, 0, 219, 186, 251, 191, 197, 239, 283,
	225, 244, 153, 274, 252, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 195, 0, 236, 174, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 224, 0, 0, 290, 291, 292,
	276, 0, 0, 0, 0, 0, 169, 0, 0, 194,
	0, 0, 0, 253, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 99, 0, 0, 590, 0, 0,
	0, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 258, 272,
	152, 249, 285, 157, 256, 148, 223, 245, 0, 0,
	145, 270, 255, 205, 188, 189, 144, 0, 240, 167,
	180, 164, 221, 0, 0, 297, 163, 288, 0, 280,
	147, 0, 279, 220, 267, 271, 206, 200, 146, 269,
	204, 199, 192, 171, 184, 232, 198, 233, 185, 210,
	209, 211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 193, 0, 0, 0, 298, 0, 243, 226,
	0, 0, 0, 241, 196, 268, 234, 273, 259, 281,
	237, 235, 139, 260, 166, 207, 149, 150, 162, 168,
	170, 172, 173, 216, 217, 229, 248, 261, 262, 263,
	165, 158, 242, 159, 182, 160, 140, 250, 161, 141,
	230, 266, 0, 178, 238, 203, 142, 202, 231, 265,
	264, 289, 295, 296, 299, 300, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 176, 0, 277, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 218, 293, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 187, 228, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 275, 287, 278, 0, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 212, 213, 214,
	215, 179, 0, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 181, 0, 183, 155, 227,
	177, 284, 190, 0, 219, 186, 251, 191, 197, 239,
	283, 225, 244, 153, 274, 252, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 195, 0, 236, 174, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 224, 0, 0, 290, 291,
	292, 276, 0, 0, 0, 0, 0, 169, 0, 0,
	194, 0, 0, 0, 253, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 99, 0, 0, 0, 0,
	0, 0, 151, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1614, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 258,
	272, 152, 249, 285, 157, 256, 148, 223, 245, 0,
	0, 145, 270, 255, 205, 188, 189, 144, 0, 240,
	167, 180, 164, 221, 0, 0, 297, 163, 288, 0,
	280, 147, 0, 279, 220, 267, 271, 206, 200, 146,
	269, 204, 199, 192, 171, 184, 232, 198, 233, 185,
	210, 209, 211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 193, 0, 0, 0, 298, 0, 243,
	226, 0, 0, 0, 241, 196, 268, 234, 273, 259,
	281, 237, 235, 139, 260, 166, 207, 149, 150, 162,
	168, 170, 172, 173, 216, 217, 229, 248, 261, 262,
	263, 165, 158, 242, 159, 182, 160, 140, 250, 161,
	141, 230, 266, 0, 178, 238, 203, 142, 202, 231,
	265, 264, 289, 295, 296, 299, 300, 301, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 176, 0, 277, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 218, 293, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 187, 228,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 275, 287, 278, 0, 0,
	0, 286, 0, 0, 0, 0, 0, 0, 212, 213,
	214, 215, 179, 0, 156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 181, 0, 183, 155,
	227, 177, 284, 190, 0, 219, 186, 251, 191, 197,
	239, 283, 225, 244, 153, 274, 252, 201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 195, 0, 236, 174,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 224, 0, 0, 290,
	291, 292, 276, 0, 0, 0, 0, 0, 169, 0,
	0, 194, 0, 0, 0, 253, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 845, 0, 0, 0, 99, 0, 0, 0,
	0, 0, 0, 151, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	258, 272, 152, 249, 285, 157, 256, 148, 223, 245,
	0, 0, 145, 270, 255, 205, 188, 189, 144, 0,
	240, 167, 180, 164, 221, 0, 0, 297, 163, 288,
	0, 280, 147, 0, 279, 220, 267, 271, 206, 200,
	146, 269, 204, 199, 192, 171, 184, 232, 198, 233,
	185, 210, 209, 211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 193, 0, 0, 0, 298, 0,
	243, 226, 0, 0, 0, 241, 196, 268, 234, 273,
	259, 281, 237, 235, 139, 260, 166, 207, 149, 150,
	162, 168, 170, 172, 173, 216, 217, 229, 248, 261,
	262, 263, 165, 158, 242, 159, 182, 160, 140, 250,
	161, 141, 230, 266, 0, 178, 238, 203, 142, 202,
	231, 265, 264, 289, 295, 296, 299, 300, 301, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 176, 0, 277, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 218, 293, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 187,
	228, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 275, 287, 278, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 212,
	213, 214, 215, 179, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 181, 0, 183,
	155, 227, 177, 284, 190, 0, 219, 186, 251, 191,
	197, 239, 283, 225, 244, 153, 274, 252, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 195, 0, 236,
	174, 102, 103, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 224, 0, 0,
	290, 291, 292, 276, 0, 0, 0, 0, 0, 169,
	0, 0, 194, 0, 0, 0, 253, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 99, 0, 0,
	0, 0, 0, 0, 151, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 258, 272, 152, 249, 285, 157, 256, 148, 223,
	245, 0, 0, 145, 270, 255, 205, 188, 189, 144,
	0, 240, 167, 180, 164, 221, 0, 0, 297, 163,
	288, 0, 280, 147, 0, 279, 220, 267, 271, 206,
	200, 146, 269, 204, 199, 192, 171, 184, 232, 198,
	233, 185, 210, 209, 211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 193, 0, 0, 0, 298,
	0, 243, 226, 0, 0, 0, 241, 196, 268, 234,
	273, 259, 281, 237, 235, 139, 260, 166, 207, 149,
	150, 162, 168, 170, 172, 173, 216, 217, 229, 248,
	261, 262, 263, 165, 158, 242, 159, 182, 160, 140,
	250, 161, 141, 230, 266, 0, 178, 238, 203, 142,
	202, 231, 265, 264, 289, 295, 296, 299, 300, 301,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 176, 0, 277, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 218, 293,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	187, 228, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 275, 287, 278,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	212, 213, 214, 215, 179, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 181, 0,
	183, 155, 227, 177, 284, 190, 0, 219, 186, 251,
	191, 197, 239, 283, 225, 244, 153, 274, 252, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 195, 0,
	236, 174, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 224, 0,
	0, 290, 291, 292, 276, 0, 0, 0, 0, 0,
	169, 0, 0, 194, 0, 0, 0, 253, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 99, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 258, 272, 152, 249, 285, 157, 256, 148,
	223, 245, 0, 0, 145, 270, 255, 205, 188, 189,
	144, 0, 240, 167, 180, 164, 221, 0, 0, 297,
	163, 288, 0, 280, 147, 0, 279, 220, 267, 271,
	206, 200, 146, 269, 204, 199, 192, 171, 184, 232,
	198, 233, 185, 210, 209, 211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 193, 0, 0, 0,
	298, 0, 243, 226, 0, 0, 0, 241, 196, 268,
	234, 273, 259, 281, 237, 235, 139, 260, 166, 207,
	149, 150, 162, 168, 170, 172, 173, 216, 217, 229,
	248, 261, 262, 263, 165, 158, 242, 159, 182, 160,
	140, 250, 161, 141, 230, 266, 0, 178, 238, 203,
	142, 202, 231, 265, 264, 289, 295, 296, 299, 300,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 176, 0, 277,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 218,
	293, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 187, 228, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 275, 287,
	278, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 212, 213, 214, 215, 179, 0, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 181,
	0, 183, 155, 227, 177, 284, 190, 0, 219, 186,
	251, 191, 197, 239, 283, 225, 244, 153, 274, 252,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 195,
	0, 236, 174, 102, 103, 104, 105, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 224,
	0, 0, 290, 291, 292, 276, 0, 0, 0, 0,
	0, 169, 0, 0, 194, 0, 0, 0, 253, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 99,
	0, 0, 1262, 0, 0, 0, 151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 258, 272, 152, 249, 285, 157, 256,
	148, 223, 245, 0, 0, 145, 270, 255, 205, 188,
	189, 144, 0, 240, 167, 180, 164, 221, 0, 0,
	297, 163, 288, 0, 280, 147, 0, 279, 220, 267,
	271, 206, 200, 146, 269, 204, 199, 192, 171, 184,
	232, 198, 233, 185, 210, 209, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 193, 0, 0,
	0, 298, 0, 243, 226, 0, 0, 0, 241, 196,
	268, 234, 273, 259, 281, 237, 235, 139, 260, 166,
	207, 149, 150, 162, 168, 170, 172, 173, 216, 217,
	229, 248, 261, 262, 263, 165, 158, 242, 159, 182,
	160, 140, 250, 161, 141, 230, 266, 0, 178, 238,
	203, 142, 202, 231, 265, 264, 289, 295, 296, 299,
	300, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 176, 0,
	277, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	218, 293, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 187, 228, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 275,
	287, 278, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 212, 213, 214, 215, 179, 0, 156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	181, 0, 183, 155, 227, 177, 284, 190, 0, 219,
	186, 251, 191, 197, 239, 283, 225, 244, 153, 274,
	252, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	195, 0, 236, 174, 102, 103, 104, 105, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	224, 0, 0, 290, 291, 292, 276, 0, 0, 0,
	0, 0, 169, 0, 0, 194, 0, 0, 0, 253,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	355, 0, 0, 356, 0, 0, 0, 151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 258, 272, 152, 249, 285, 157,
	256, 148, 223, 245, 0, 0, 145, 270, 255, 205,
	188, 189, 144, 0, 240, 167, 180, 164, 221, 0,
	0, 297, 163, 288, 0, 280, 147, 0, 279, 220,
	267, 271, 206, 200, 146, 269, 204, 199, 192, 171,
	184, 232, 198, 233, 185, 210, 209, 211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 193, 0,
	0, 0, 298, 0, 243, 226, 0, 0, 0, 241,
	196, 268, 234, 273, 259, 281, 237, 235, 139, 260,
	166, 207, 149, 150, 162, 168, 170, 172, 173, 216,
	217, 229, 248, 261, 262, 263, 165, 158, 242, 159,
	182, 160, 140, 250, 161, 141, 230, 266, 0, 178,
	238, 203, 142, 202, 231, 265, 264, 289, 295, 296,
	299, 300, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 176,
	0, 277, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 218, 293, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 187, 228, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	275, 287, 278, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 212, 213, 214, 215, 179, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 181, 0, 183, 155, 227, 177, 284, 190, 0,
	219, 186, 251, 191, 197, 239, 283, 225, 244, 153,
	274, 252, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 195, 0, 236, 174, 102, 103, 104, 105, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 1191, 0, 0, 290, 291, 292, 276, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 194, 0, 0, 0, 253, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 99, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 258, 272, 152, 249, 285, 157, 256, 148,
	223, 245, 0, 0, 145, 270, 255, 205, 188, 189,
	144, 0, 240, 167, 180, 164, 221, 0, 0, 297,
	163, 288, 0, 280, 147, 0, 279, 220, 267, 271,
	206, 200, 146, 269, 204, 199, 192, 171, 184, 232,
	198, 233, 185, 210, 209, 211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 193, 0, 0, 0,
	298, 0, 243, 226, 0, 0, 0, 241, 196, 268,
	234, 273, 259, 281, 237, 235, 139, 260, 166, 207,
	149, 150, 162, 168, 170, 172, 173, 216, 217, 229,
	248, 261, 262, 263, 165, 158, 242, 159, 182, 160,
	140, 250, 161, 141, 230, 266, 0, 178, 238, 203,
	142, 202, 231, 265, 264, 289, 295, 296, 299, 300,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 176, 0, 277,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 218,
	293, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 187, 228, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 275, 287,
	278, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 212, 213, 214, 215, 179, 0, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 181,
	0, 183, 155, 227, 177, 284, 190, 0, 219, 186,
	251, 191, 197, 239, 283, 225, 244, 153, 274, 252,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 195,
	0, 236, 174, 102, 103, 104, 105, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 224,
	0, 0, 290, 291, 292, 276, 0, 0, 0, 0,
	0, 169, 0, 0, 194, 0, 0, 0, 253, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 99,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 258, 272, 152, 249, 285, 157, 256,
	148, 223, 245, 0, 0, 145, 270, 255, 205, 188,
	189, 144, 0, 240, 167, 180, 164, 221, 0, 0,
	297, 163, 288, 0, 280, 147, 0, 279, 220, 267,
	271, 206, 200, 146, 269, 204, 199, 192, 171, 184,
	232, 198, 233, 185, 210, 209, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	1177, 0, 0, 0, 257, 0, 0, 193, 0, 0,
	0, 298, 0, 243, 226, 0, 0, 0, 241, 196,
	268, 234, 273, 259, 281, 237, 235, 139, 260, 166,
	207, 149, 150, 162, 168, 170, 172, 173, 216, 217,
	229, 248, 261, 262, 263, 165, 158, 242, 159, 182,
	160, 140, 250, 161, 141, 230, 266, 0, 178, 238,
	203, 142, 202, 231, 265, 264, 289, 295, 296, 299,
	300, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 176, 0,
	277, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	218, 293, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 187, 228, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 275,
	287, 278, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 212, 213, 214, 215, 179, 0, 156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	181, 0, 183, 155, 227, 177, 284, 190, 0, 219,
	186, 251, 191, 197, 239, 283, 225, 244, 153, 274,
	252, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	195, 0, 236, 174, 102, 103, 104, 105, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	224, 0, 0, 290, 291, 292, 276, 0, 0, 0,
	0, 0, 169, 0, 0, 194, 0, 0, 0, 253,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	99, 0, 0, 590, 0, 0, 0, 151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 258, 272, 152, 249, 285, 157,
	256, 148, 223, 245, 0, 0, 145, 270, 255, 205,
	188, 189, 144, 0, 240, 167, 180, 164, 221, 0,
	0, 297, 163, 288, 0, 280, 147, 0, 279, 220,
	267, 271, 206, 200, 146, 269, 204, 199, 192, 171,
	184, 232, 198, 233, 185, 210, 209, 211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 193, 0,
	0, 0, 298, 0, 243, 226, 0, 0, 0, 241,
	196, 268, 234, 273, 259, 281, 237, 235, 139, 260,
	166, 207, 149, 150, 162, 168, 170, 172, 173, 216,
	217, 229, 248, 261, 262, 263, 165, 158, 242, 159,
	182, 160, 140, 250, 161, 141, 230, 266, 0, 178,
	238, 203, 142, 202, 231, 265, 264, 289, 295, 296,
	299, 300, 301, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 176,
	0, 277, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 218, 293, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 187, 228, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	275, 287, 835, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 212, 213, 214, 215, 179, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 181, 0, 183, 155, 227, 177, 284, 190, 0,
	219, 186, 251, 191, 197, 239, 283, 225, 244, 153,
	274, 252, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 195, 0, 236, 174, 102, 103, 104, 105, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 224, 0, 0, 290, 291, 292, 276, 0, 0,
	0, 0, 0, 169, 0, 0, 194, 0, 0, 0,
	253, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 99, 0, 0, 0, 0, 0, 0, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 258, 272, 152, 249, 285,
	157, 256, 148, 223, 245, 0, 0, 145, 270, 255,
	205, 188, 189, 144, 0, 240, 167, 180, 164, 221,
	0, 0, 297, 163, 288, 0, 280, 147, 0, 279,
	220, 267, 271, 206, 200, 146, 269, 204, 199, 192,
	171, 184, 232, 198, 233, 185, 210, 209, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 193,
	0, 0, 0, 298, 0, 243, 226, 0, 0, 0,
	241, 196, 268, 234, 273, 259, 281, 237, 235, 139,
	260, 166, 207, 149, 150, 162, 168, 170, 172, 173,
	216, 217, 229, 248, 261, 262, 263, 165, 158, 242,
	159, 182, 160, 140, 250, 161, 141, 230, 266, 0,
	178, 238, 203, 142, 202, 231, 265, 264, 289, 295,
	296, 299, 300, 301, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	176, 0, 277, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 218, 293, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 187, 228, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 275, 287, 278, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 212, 213, 214, 215, 179, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 181, 0, 183, 155, 227, 177, 284, 190,
	0, 219, 186, 251, 191, 197, 239, 283, 225, 244,
	153, 274, 252, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	138, 0, 195, 0, 236, 174, 102, 103, 104, 105,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 224, 0, 0, 290, 291, 292, 276, 0,
	0, 0, 0, 96, 169, 0, 0, 194, 0, 0,
	0, 253, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 99, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 258, 272, 152, 249,
	285, 157, 256, 148, 223, 245, 0, 0, 145, 270,
	255, 205, 188, 189, 144, 0, 240, 167, 180, 164,
	221, 0, 0, 297, 163, 288, 0, 280, 147, 0,
	279, 220, 267, 271, 206, 200, 146, 269, 204, 199,
	192, 171, 184, 232, 198, 233, 185, 210, 209, 211,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	193, 0, 0, 0, 298, 0, 243, 226, 0, 0,
	0, 241, 196, 268, 234, 273, 259, 281, 237, 235,
	139, 260, 166, 207, 149, 150, 162, 168, 170, 172,
	173, 216, 217, 229, 248, 261, 262, 263, 165, 158,
	242, 159, 182, 160, 140, 250, 161, 141, 230, 266,
	0, 178, 238, 203, 142, 202, 231, 265, 264, 289,
	295, 296, 299, 300, 301, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 176, 0, 277, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 218, 293, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 187, 228, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 275, 287, 278, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 212, 213, 214, 215, 179,
	0, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 181, 0, 183, 155, 227, 177, 284,
	190, 0, 219, 186, 251, 191, 197, 239, 283, 225,
	244, 153, 274, 252, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 195, 0, 236, 174, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 224, 0, 0, 290, 291, 292, 276,
	0, 0, 0, 0, 0, 169, 0, 0, 194, 0,
	0, 0, 253, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 99, 0, 0, 0, 0, 0, 0,
	151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 258, 272, 152,
	249, 285, 157, 256, 148, 223, 245, 0, 0, 145,
	270, 255, 205, 188, 189, 144, 0, 240, 167, 180,
	164, 221, 0, 0, 297, 163, 288, 0, 280, 147,
	0, 279, 220, 267, 271, 206, 200, 146, 269, 204,
	199, 192, 171, 184, 232, 198, 233, 185, 210, 209,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 193, 0, 0, 0, 298, 0, 243, 226, 0,
	0, 0, 241, 196, 268, 234, 273, 259, 281, 237,
	235, 139, 260, 166, 207, 149, 150, 162, 168, 170,
	172, 173, 216, 217, 229, 248, 261, 262, 263, 165,
	158, 242, 159, 182, 160, 140, 250, 161, 141, 230,
	266, 0, 178, 238, 203, 142, 202, 231, 265, 264,
	289, 295, 296, 299, 300, 301, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 176, 0, 277, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 218, 293, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 187, 228, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 275, 287, 278, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 212, 213, 214, 215,
	179, 0, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 181, 0, 183, 155, 227, 177,
	284, 190, 0, 219, 186, 251, 191, 197, 239, 283,
	225, 244, 153, 274, 252, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 195, 0, 236, 174, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 224, 0, 0, 290, 291, 292,
	276, 1231, 0, 0, 0, 0, 169, 0, 0, 194,
	0, 0, 0, 253, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 806, 807, 808, 1233, 0, 0,
	0, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 258, 272,
	152, 249, 285, 157, 256, 148, 223, 245, 0, 0,
	145, 270, 255, 205, 188, 189, 144, 0, 240, 167,
	180, 164, 221, 0, 0, 297, 163, 288, 0, 280,
	147, 0, 279, 220, 267, 271, 206, 200, 146, 269,
	204, 199, 192, 171, 184, 232, 198, 233, 185, 210,
	209, 211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 193, 0, 0, 0, 298, 0, 243, 226,
	0, 0, 0, 241, 196, 268, 234, 273, 259, 281,
	237, 235, 139, 260, 166, 207, 149, 150, 162, 168,
	170, 172, 173, 216, 217, 229, 248, 261, 262, 263,
	165, 158, 242, 159, 182, 160, 140, 250, 161, 141,
	230, 266, 0, 178, 238, 203, 142, 202, 231, 265,
	264, 289, 295, 296, 299, 300, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 176, 0, 277, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 218, 293, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 187, 228, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 275, 287, 278, 0, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 212, 213, 214,
	215, 179, 0, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 181, 0, 183, 155, 227,
	177, 284, 190, 0, 219, 186, 251, 191, 197, 239,
	283, 225, 244, 153, 274, 252, 201, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 194, 0, 0, 0, 253, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 195, 0, 236, 174, 806,
	807, 808, 1233, 0, 0, 0, 151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 291,
	292, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 258, 272, 152, 249, 285, 157, 256,
	148, 223, 245, 0, 0, 145, 270, 255, 205, 188,
	189, 144, 0, 240, 167, 180, 164, 221, 0, 0,
	297, 163, 288, 0, 280, 147, 0, 279, 220, 267,
	271, 206, 200, 146, 269, 204, 199, 192, 171, 184,
	232, 198, 233, 185, 210, 209, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 193, 0, 0,
	0, 298, 0, 243, 226, 0, 0, 0, 241, 196,
	268, 234, 273, 259, 281, 237, 235, 139, 260, 166,
	207, 149, 150, 162, 168, 170, 172, 173, 216, 217,
	229, 248, 261, 262, 263, 165, 158, 242, 159, 182,
	160, 140, 250, 161, 141, 230, 266, 0, 178, 238,
	203, 142, 202, 231, 265, 264, 289, 295, 296, 299,
	300, 301, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 176, 0,
	277, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	218, 293, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 187, 228, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 275,
	287, 278, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 212, 213, 214, 215, 179, 0, 156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	181, 0, 183, 155, 227, 177, 284, 190, 0, 219,
	186, 251, 191, 197, 239, 283, 225, 244, 153, 274,
	252, 201, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 194,
	0, 0, 0, 253, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	195, 0, 236, 174, 806, 807, 808, 0, 0, 0,
	0, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 291, 292, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 258, 272,
	152, 249, 285, 157, 256, 148, 223, 245, 0, 0,
	145, 270, 255, 205, 188, 189, 144, 0, 240, 167,
	180, 164, 221, 0, 0, 297, 163, 288, 0, 280,
	147, 0, 279, 220, 267, 271, 206, 200, 146, 269,
	204, 199, 192, 171, 184, 232, 198, 233, 185, 210,
	209, 211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 193, 0, 0, 0, 298, 0, 243, 226,
	0, 0, 0, 241, 196, 268, 234, 273, 259, 281,
	237, 235, 139, 260, 166, 207, 149, 150, 162, 168,
	170, 172, 173, 216, 217, 229, 248, 261, 262, 263,
	165, 158, 242, 159, 182, 160, 140, 250, 161, 141,
	230, 266, 0, 178, 238, 203, 142, 202, 231, 265,
	264, 289, 295, 296, 299, 300, 301, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 176, 0, 277, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 218, 293, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 187, 228, 1674,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 275, 287, 278, 0, 0, 0,
	286, 889, 890, 891, 888, 0, 0, 212, 213, 214,
	215, 179, 0, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 181, 0, 183, 155, 227,
	177, 284, 190, 0, 219, 186, 251, 191, 197, 239,
	283, 225, 244, 153, 274, 252, 201, 0, 1674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1312, 1662, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 195, 0, 236, 174, 0,
	0, 0, 1681, 1685, 1687, 1689, 1691, 1692, 1694, 0,
	1698, 1695, 1696, 1697, 0, 0, 1676, 1677, 1678, 1679,
	1660, 1661, 1682, 0, 1663, 0, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1680, 0, 290, 291,
	292, 276, 0, 0, 1684, 1686, 1688, 1690, 1693, 0,
	0, 0, 0, 0, 1662, 1892, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1681, 1685, 1687, 1689, 1691, 1692, 1694, 1675, 1698,
	1695, 1696, 1697, 0, 1189, 1676, 1677, 1678, 1679, 1660,
	1661, 1682, 0, 1663, 0, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1680, 0, 2317, 0, 1892,
	0, 0, 0, 1684, 1686, 1688, 1690, 1693, 1874, 0,
	0, 0, 0, 1308, 0, 1305, 0, 0, 0, 1307,
	1304, 1306, 1310, 1311, 1900, 0, 0, 1309, 1189, 0,
	0, 0, 0, 0, 0, 0, 0, 1675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1903, 0,
	0, 0, 1874, 0, 1898, 0, 0, 0, 0, 1911,
	1912, 0, 0, 0, 0, 1899, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1652, 1653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1904,
	0, 0, 0, 0, 0, 0, 0, 0, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1315,
	1316, 1317, 1318, 1319, 1320, 1313, 1314, 0, 1878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1871,
	0, 0, 0, 1873, 1875, 1877, 1683, 1879, 1880, 1881,
	1883, 1884, 1885, 1887, 1888, 1889, 1890, 0, 0, 0,
	0, 0, 1878, 1910, 0, 1581, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1893, 0, 0,
	1906, 0, 0, 1871, 0, 0, 0, 1873, 1875, 1877,
	0, 1879, 1880, 1881, 1883, 1884, 1885, 1887, 1888, 1889,
	1890, 0, 1905, 1907, 0, 1683, 0, 0, 0, 0,
	0, 1891, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 0,
	0, 1893, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1886, 0, 0, 0, 0, 0, 0,
	1876, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1891, 1913, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1901, 0,
	0, 0, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1886, 0, 0,
	0, 0, 0, 0, 1876,
}

var yyPact = [...]int{
	811, -1000, -287, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 21050, -1000, -1000, 1489,
	-1000, 8669, 21491, 67, 21491, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 279, -1000, 21491,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 8209, 7749, 163,
	-1000, 1891, -1000, -1000, -1000, -1000, 193, 293, 20609, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 356, -23, 293, 381, 386, 597, 597, 9992, 1891,
	210, 32, -1000, 685, 811, 217, 21491, -1000, 539, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1891, 1891, 21491, -60,
	683, -1000, 241, 198, 257, 509, -1000, -1000, -1000, -1000,
	1936, -1000, 21491, 1516, 21491, -1000, 1446, 1448, -1000, -1000,
	1736, -1000, 126, 21, -9, 135, -1000, -1000, 191, -1000,
	-1000, -1000, -1000, -1000, 71, -1000, 15, -1000, 10, -1000,
	-1000, -1000, -109, -1000, -1000, -1000, -1000, -1000, 1426, 407,
	1747, -151, 1802, 1881, 1517, 1901, 1858, 1853, 1851, -1000,
	18, 222, 222, 264, 222, 278, -1000, -1000, -1000, -1000,
	-1000, -1000, 335, -1000, -1000, -1000, -1000, 1463, 21491, -1000,
	1549, 590, 590, 658, 189, -1000, -1000, -100, -123, 590,
	590, -123, 23, -1000, 1861, 1857, -1000, -1000, -1000, -1000,
	-1000, -1000, 248, 253, -1000, -180, -1000, 372, -1000, 363,
	-1000, 11334, 186, 1466, 684, -1000, 646, 21491, 21491, 21491,
	646, 646, 12664, 12223, 495, -1000, 1881, 1517, -1000, 1323,
	1732, 1517, 248, 248, 248, 248, 248, 21491, 5481, 5481,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 188, 1735,
	-1000, 21491, 1881, 1802, 1881, -1000, 462, 907, 1056, -1000,
	-1000, 241, 1438, -1000, 591, -1000, -1000, -1000, -1000, 21491,
	192, -1000, 1041, 1733, 143, 7834, 16192, 18838, 21491, 16192,
	-1000, -1000, -1000, -1000, -1000, -116, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 143, 16192, 16192, -70,
	-1000, -1000, -274, 1802, 5933, -1000, -1000, 5933, -1000, -1000,
	-1000, -1000, -1000, -1000, 258, 222, -1000, 16192, 709, 18838,
	923, 21491, 222, 253, -1000, 21491, 1463, 1841, 21491, 1909,
	6837, 1909, 21491, -1000, -1000, 590, 590, -1000, 658, 658,
	-1000, -1000, -119, 1909, 1909, -127, 21491, 222, -1000, -1000,
	20168, 1826, 17074, -1000, -142, 379, 357, 368, -1000, -1000,
	1951, -1000, -1000, 1424, 11782, 10886, 237, 16192, 3667, -1000,
	-1000, 646, 646, 646, 3667, 3667, 549, -1000, -1000, -1000,
	-1000, -1000, -1000, 21491, 1802, -1000, -1000, -1000, -1000, -1000,
	16192, 18838, 21491, 21491, 22662, -1000, 1436, -1000, -1000, 9551,
	447, 5933, 1322, 1728, -1000, -1000, 1727, 1726, 1725, 1719,
	1706, 1702, 1696, -1000, 1638, -1000, -1000, 1694, 1691, 1689,
	1685, -1000, -1000, -1000, -1000, -1000, -1000, 1679, -1000, -1000,
	-1000, 1678, 1638, -1000, -1000, 1677, 1675, 1674, 1672, 1671,
	-1000, -1000, -1000, -1000, -1000, -1000, 1054, 1052, 1025, -1000,
	-1000, -1000, -1000, 3215, 6837, 6837, 6837, 6837, -1000, -1000,
	1597, 5933, 1669, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	7289, -1000, 1668, 1643, 1642, 1640, 1639, 1638, 1636, 1050,
	1635, 1633, 1632, 6837, 1629, 1628, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1436, -1000, -272, -1000,
	10445, 21491, 21491, -1000, 1802, -1000, 1802, 2340, -1000, 1878,
	-1000, 241, 94, -1000, -1000, -1000, -1000, -1000, -1000, 434,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1461,
	-1000, 21491, 637, -1000, -1000, -1000, -1000, -1000, 15, 10,
	1383, -1000, -25, 122, -1000, 1420, -1000, -1000, -1000, 637,
	1383, 260, 1049, 1047, -1000, 1225, 430, 1455, -1000, 995,
	19727, 21491, 246, 1815, 1424, 1504, -1000, -1000, -1000, 1601,
	21491, 19286, -1000, 1626, 1412, -1000, -1000, 5933, -1000, -1000,
	1909, 1909, 1909, 590, 22662, 658, 21491, 658, -1000, -1000,
	658, -1000, 425, 21491, 246, 1622, -1000, 1792, 1380, -1000,
	-1000, -1000, -1000, 1840, 21932, 210, -1000, -1000, 375, 362,
	359, 18838, 256, -1000, -1000, 1424, -1000, -1000, -1000, 1615,
	680, -1000, -1000, 6837, -1000, 1072, -1000, 3667, 3667, 3667,
	-1000, -1000, 14869, -1000, -1000, 1383, 1424, 1744, 1453, -1000,
	-1000, -1000, -1000, 1909, 5481, -1000, 17074, -1000, 5933, 5933,
	5933, 5933, -1000, 18397, -1000, 17956, -1000, 274, 6385, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 5933, 1848, 1848, 1848,
	5933, 688, 5933, 5933, -1000, 786, 1587, 1848, 1848, 1848,
	1848, 1848, -1000, 2755, 1848, 1848, 1848, 1848, -1000, -1000,
	6837, 6837, 6837, 6837, 6837, 6837, 6837, 6837, 6837, 6837,
	6837, 6837, 1593, 662, 6837, 6837, 6837, 1732, 1730, 1450,
	-1000, -1000, -1000, -1000, -1000, 696, 1072, 5933, 22919, 5933,
	5933, 5933, -1000, 1306, 1298, -1000, -1000, 5933, -1000, 5933,
	6837, 5933, -1000, 1848, 1045, 1909, 1367, -1000, 1606, -1000,
	1394, 1791, -1000, 420, 1449, -1000, 677, 1378, -1000, -1000,
	-1000, -1000, 417, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -63,
	-1000, -1000, 21491, 1041, 1374, 1919, 414, 413, 16192, -1000,
	176, 16192, -1000, -1000, 21491, 255, 16192, 17, -131, 5933,
	5933, 21491, 5933, -1000, -1000, -1000, 1549, 706, 1600, -215,
	-1000, -42, -1000, 1742, 91, -1000, 1601, -1000, 541, -1000,
	1598, 21491, 1355, -1000, 411, 811, -1000, 21491, 1072, -1000,
	-1000, -1000, 1909, -1000, 590, -1000, 590, 658, 21491, -1000,
	-1000, -215, 1281, 21491, 17074, 17074, 17074, 17074, -1000, 1776,
	1775, -1000, 1773, 1760, 1783, 21491, 17074, 21491, -1000, -1000,
	-1000, 22297, -1000, -1000, -1000, -1000, 1269, 1891, -1000, -1000,
	-1000, 344, 1424, 16192, 998, 237, -1000, -1000, -1000, -1000,
	-1000, 21491, 21491, 1894, -1000, 1417, 1803, -1000, 705, 705,
	712, -1000, -1000, 402, -1000, -1000, 270, -1000, -1000, -1000,
	-1000, -1000, 1597, -1000, -1000, -1000, 1251, 1344, 1072, 5933,
	-1000, -1000, 5933, 5933, 765, 5933, 1242, 1365, 1353, -1000,
	1236, 1913, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 5933, 5933, 5933, 5933, 5933, 915, 5029, -1000, -1000,
	-1000, 5933, 5933, 5933, 5933, 1035, 767, -1000, 642, 642,
	553, 553, 553, 553, 553, 1204, 1204, -1000, -1000, -1000,
	3215, 1593, 6837, 6837, 6837, 226, 2128, 2016, -1000, 5933,
	695, -1000, 5933, 747, -1000, 1229, 1542, 1227, 1222, -1000,
	-1000, 1110, 1218, 2079, 1212, 5933, 1407, 1894, -272, 4571,
	205, 21491, -272, 21491, 21491, 4571, -1000, 21491, 2340, 906,
	-1000, -1000, -1000, 16192, 560, 627, -1000, 14428, 16192, -1000,
	-1000, 16192, 148, 1801, -1000, -1000, -89, -76, 1072, 1072,
	401, -1000, 1839, 1812, 9110, -1000, -61, -1000, -1000, -1000,
	354, -1000, 1026, 1024, 1021, 1020, 21491, -1000, -1000, -1000,
	-1000, -1000, 669, 669, 669, 9110, 217, 1293, 398, 17074,
	21491, -1000, 16633, 1194, -1000, -1000, 1909, 1909, 590, -1000,
	0, -45, 1232, -1000, 676, 1740, 1700, 1740, -1000, -1000,
	-1000, -1000, 1774, -1000, 1758, -1000, -1000, 1232, -1000, 1549,
	-1000, -1000, -1000, 1383, 1178, -1000, -1000, -1000, -1000, 1906,
	1900, 17515, -1000, -1000, -1000, -1000, -1000, 5933, 1697, 1686,
	1625, 22954, 1351, -1000, -1000, -1000, -1000, 5933, 1621, 1578,
	1559, 1533, 1518, -1000, 5933, 5933, 820, 1514, 1502, 1481,
	1470, 1341, -1000, 226, 2128, 986, -1000, 6837, 6837, 1451,
	628, -1000, 5933, 725, 172, 13546, -1000, 5933, -1000, -1000,
	-1000, 13546, -1000, 6837, -1000, 1433, 1018, 1906, -1000, 1171,
	1386, -1000, -272, -1000, -1000, 1367, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1383, -1000, -1000, -1000, -1000,
	16192, 1842, 246, -1000, 19, 273, -276, -72, 1899, 1897,
	21491, 210, 21491, 1165, 1376, -1000, -1000, -1000, 23023, 325,
	-1000, 21491, 736, 383, 222, 383, 732, 1591, -1000, -1000,
	-61, -1000, 904, 898, 895, 892, -33, -1000, -1000, -1000,
	-1000, -1000, 1582, 13546, -1000, 13987, 1016, 1163, 21932, 17074,
	16633, 1226, -1000, 397, -1000, -1000, -1000, -1000, 1909, -1000,
	0, -1000, 312, 304, 45, 1896, 1903, 21491, 5933, -1000,
	-1000, 5933, 1581, -1000, 5933, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 5933, 5933, -1000, -1000, 1072, -1000, -1000, -1000,
	1153, -1000, 343, 343, -18, -1000, -1000, -1000, 1521, -1000,
	1551, 1551, 1521, 1521, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1579, 1574, -1000, 1521, 1550, 1550, 1521,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1562, 1562, 1573, 1562, -1000,
	1346, -1000, -1000, -1000, -1000, -1000, 1307, 1294, 5933, -1000,
	-1000, -1000, -1000, -1000, -1000, 6837, -1000, -1000, -1000, -1000,
	1072, 5933, 1133, -1000, 1521, 1551, -1000, 1521, 1550, 1521,
	343, 343, 1130, 835, 1115, 1607, -1000, 1108, -1000, -1000,
	4571, 1367, -1000, 16192, 16192, -221, 1, 21491, -279, 1007,
	-1000, 1895, 999, 924, -1000, 1549, 23193, 9110, 23189, -1000,
	-1000, 21491, 21491, -1000, 21491, 21491, 222, 5933, -1000, -1000,
	-1000, -1000, -1000, -1000, 15751, -1000, -1000, -1000, -1000, -1000,
	88, 1909, 1226, 397, -1000, -1000, 419, -1000, -1000, -1000,
	-1000, 877, -1000, -1000, -1000, 998, 1881, -1000, 1072, 1072,
	21491, 1072, 1072, 1344, -1000, -1000, -1000, -1000, -1000, -21,
	-1000, -1000, -1000, -1000, 875, -1000, 874, -1000, -1000, -1000,
	997, 997, -1000, -1000, 873, -1000, -1000, -1000, 871, -1000,
	-1000, 868, -1000, -1000, -1000, -1000, 1277, -1000, 1072, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 5933,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -127, -281,
	864, -1000, 994, -75, -1000, -1000, 1838, 206, 961, -1000,
	669, 669, 617, 669, 669, 669, 669, 161, 155, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 669, 669, 1547, -1000, -1000, 23189, -1000, -1000, 743,
	6837, -1000, -1000, 985, 13987, 369, 382, 1537, -1000, 137,
	718, 717, -1000, 21491, -1000, 1531, 1472, 85, 1525, -1000,
	1523, 1522, 21491, 1262, 1337, -1000, 1521, 5933, -1000, -291,
	78, 1903, -1000, 39, -1000, -1000, -1000, 1327, -1000, -1000,
	1104, 1101, 1321, -1000, 1314, 1098, 1309, 1305, -1000, 1186,
	-101, -80, -1000, 1519, -1000, -1000, 1893, 210, -1000, 1892,
	23193, -1000, 863, 862, 669, 669, 858, 984, 969, 968,
	669, 669, 855, 964, 22297, 854, 852, 843, 851, 963,
	435, 822, 818, 784, 21491, 1511, 943, -1000, -1000, 2128,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 840, 1510, -1000, -1000, 1509, 15751, 86, 86, 15751,
	15751, 15751, 1501, 316, -1000, 15751, 1829, 971, 960, -292,
	1881, -1000, -1000, -1000, -1000, -1000, 956, -1000, -1000, -1000,
	838, -1000, 831, -1000, 252, -86, -80, -1000, 1889, -77,
	1888, 1887, 21491, 924, -1000, 117, -1000, -1000, -1000, 13546,
	13546, -1000, -1000, -1000, -1000, 947, 946, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 180,
	21491, 1297, -1000, 675, 1065, 5933, -206, 15751, 1280, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1272, 1241, 1221, 15751,
	-1000, -1000, -1000, 120, 132, -1000, -1000, 1829, 673, 916,
	-1000, -1000, 1063, 1030, 1479, 823, -72, 1886, -1000, 924,
	1884, 924, 924, 1216, -1000, -1000, 118, 204, 201, -1000,
	259, -1000, -1000, -1000, -1000, -1000, -1000, 175, 1191, -1000,
	943, 942, -1000, 778, 1610, -1000, -11, 1181, -1000, -1000,
	-1000, -1000, 1177, -1000, -1000, 669, 940, 58, -1000, -1000,
	-1000, 936, 116, -1000, 650, -1000, -1000, 1847, 13105, -90,
	-1000, 926, -1000, 924, -1000, -1000, -1000, 21491, 111, 797,
	6837, 1500, 6837, 1492, 127, 1491, -1000, -1000, -1000, -1000,
	-1000, 316, -1000, -1000, 1590, 1536, 1942, -1000, -1000, -1000,
	-1000, 132, 132, 132, 132, 5, 795, -1000, 923, 115,
	-127, 916, 914, -1000, 21491, -1000, 1174, -1000, -1000, -1000,
	396, -1000, -1000, -1000, -1000, 1488, 1883, -1000, 1150, 21491,
	1070, 21491, 1487, 623, 6837, -1000, -1000, 1944, -1000, 1939,
	450, 450, -1000, -1000, -1000, -127, 825, -101, -1000, -1000,
	1334, -1000, 614, -1000, 15310, 21491, -1000, 203, 123, -1000,
	1170, -1000, 1162, 21491, 774, 930, -1000, -1000, -1000, 791,
	130, -1000, -101, 601, 252, 21491, 4119, -1000, 390, 1160,
	-1000, 989, 96, -1000, -1000, 1152, -1000, -1000, -1000, -1000,
	-1000, 252, 772, 1479, -1000, -1000, 1072, 21491, -1000, 203,
	1645, -1000, 769, -1000, 1479, -294, 1847, -1000, -1000, 23139,
	202, -1000, 1847, -127, -1000, -1000, 23139, 110, -1000, 197,
	-1000, -101, -1000, -1000, 1129, -1000, 933, 1485, 252, -1000,
	110, 23193, 5933, 1479, -1000, 23193, 1114, 1847, -1000, -1000,
}

var yyPgo = [...]int{
	0, 134, 2311, 178, 132, 130, 177, 2310, 1866, 1864,
	2307, 2306, 2305, 2304, 2303, 2302, 2300, 2299, 2297, 2296,
	2294, 2292, 2291, 2290, 173, 2288, 2287, 2285, 2284, 2283,
	2282, 2281, 2277, 2276, 2275, 2272, 2271, 128, 2269, 1863,
	2268, 2267, 2266, 2265, 2263, 160, 2262, 2257, 2253, 2251,
	2250, 2249, 2247, 2231, 2227, 2226, 2224, 2222, 2221, 184,
	2218, 87, 127, 194, 81, 200, 199, 147, 79, 135,
	165, 118, 2217, 2215, 115, 31, 140, 2214, 51, 49,
	39, 195, 114, 56, 68, 102, 2213, 2212, 98, 2209,
	2208, 104, 2207, 64, 2206, 94, 40, 101, 37, 2205,
	2204, 2203, 90, 2201, 2199, 2197, 2183, 96, 2177, 77,
	53, 2176, 2175, 2174, 2173, 2172, 44, 2171, 47, 2170,
	2168, 2166, 2165, 2164, 2161, 2160, 18, 23, 25, 2159,
	2158, 22, 4, 2157, 163, 76, 95, 110, 2156, 355,
	2155, 2154, 2152, 123, 2149, 148, 2147, 2145, 2144, 2143,
	2142, 29, 2141, 54, 2140, 2137, 21, 2136, 2135, 60,
	2120, 2119, 2117, 105, 66, 55, 103, 2116, 2115, 83,
	159, 20, 62, 0, 153, 42, 2114, 2111, 2110, 193,
	157, 152, 2109, 99, 241, 143, 57, 2108, 52, 78,
	2107, 2106, 2105, 108, 73, 17, 2104, 116, 2103, 124,
	100, 2102, 125, 2099, 146, 2, 107, 2098, 161, 2097,
	2096, 2093, 138, 2092, 2091, 65, 136, 2090, 2089, 2087,
	46, 2086, 43, 30, 2085, 158, 168, 2084, 2083, 2082,
	144, 119, 91, 2080, 2079, 85, 2078, 126, 80, 74,
	117, 752, 109, 70, 24, 2077, 162, 2076, 222, 164,
	149, 2074, 2073, 169, 1531, 167, 2071, 171, 16, 2070,
	2069, 14, 2068, 34, 2067, 2066, 2065, 2064, 9, 2063,
	2062, 2061, 5, 11, 2055, 8, 122, 48, 72, 2049,
	71, 75, 2047, 2046, 2044, 2042, 2040, 232, 2038, 2037,
	2036, 2035, 2034, 2033, 2032, 92, 2031, 2030, 2029, 2028,
	84, 2025, 2024, 2023, 2022, 12, 38, 2019, 2018, 28,
	2015, 36, 6, 2014, 3, 15, 145, 2013, 2009, 19,
	2008, 7, 10, 13, 2006, 1, 61, 41, 45, 93,
	86, 2005, 26, 1984, 106, 1982, 1980, 150, 1979, 112,
	1978, 154, 166, 235, 1977, 156, 1976, 1973, 1972, 1971,
	1970, 1969, 1968, 805, 1966, 1963, 170, 63, 1962, 1961,
	1960, 151, 1959,
}

//line mysql_sql.y:6909
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.LoadParam {
	v, _ := st.union.(*tree.LoadParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 358, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 53, 325, 325, 324, 324, 323,
	323, 322, 322, 322, 321, 321, 321, 320, 320, 319,
	319, 318, 318, 316, 316, 317, 315, 314, 314, 312,
	312, 310, 310, 311, 311, 305, 305, 308, 308, 306,
	306, 306, 306, 309, 304, 304, 304, 303, 303, 52,
	52, 52, 243, 243, 51, 51, 257, 257, 257, 257,
	257, 255, 255, 255, 255, 254, 254, 253, 253, 258,
	258, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 46, 46, 46, 46, 49, 50,
	251, 251, 251, 251, 251, 252, 252, 252, 47, 48,
	48, 242, 242, 247, 247, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 250, 250, 250,
	249, 249, 248, 248, 40, 40, 40, 43, 42, 241,
	241, 241, 241, 241, 241, 241, 241, 41, 41, 41,
	41, 41, 41, 38, 38, 37, 37, 39, 39, 240,
	240, 239, 56, 56, 56, 56, 56, 56, 56, 55,
	55, 58, 58, 57, 45, 45, 45, 45, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 348, 348, 348,
	350, 350, 177, 178, 359, 176, 176, 176, 344, 344,
	345, 346, 347, 347, 347, 54, 7, 36, 36, 287,
	287, 190, 190, 191, 191, 189, 189, 189, 189, 189,
	189, 290, 291, 186, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 28, 28, 35, 360, 360,
	360, 33, 34, 286, 286, 286, 32, 31, 30, 29,
	29, 27, 27, 26, 26, 183, 183, 185, 185, 181,
	361, 361, 263, 263, 184, 184, 25, 25, 182, 182,
	160, 180, 180, 180, 6, 10, 10, 10, 10, 10,
	10, 16, 15, 13, 12, 11, 14, 5, 5, 5,
	5, 8, 8, 9, 69, 69, 97, 97, 357, 357,
	353, 353, 354, 354, 354, 355, 355, 356, 356, 4,
	294, 294, 294, 294, 294, 294, 333, 333, 333, 334,
	87, 87, 82, 82, 295, 295, 206, 335, 335, 302,
	302, 301, 301, 300, 300, 85, 85, 86, 86, 73,
	73, 59, 59, 307, 307, 307, 307, 313, 313, 284,
	284, 123, 123, 154, 154, 155, 155, 61, 61, 62,
	62, 62, 62, 62, 62, 341, 341, 343, 343, 342,
	84, 84, 80, 80, 81, 81, 81, 79, 79, 78,
	77, 77, 76, 75, 75, 75, 64, 64, 63, 63,
	63, 63, 63, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 65, 65, 349, 349, 349, 288, 288,
	288, 293, 293, 136, 136, 137, 137, 135, 135, 66,
	66, 67, 67, 67, 67, 134, 134, 133, 68, 68,
	74, 70, 70, 72, 72, 72, 72, 144, 144, 143,
	143, 143, 143, 90, 90, 142, 141, 141, 141, 89,
	89, 88, 88, 83, 83, 71, 71, 140, 362, 362,
	138, 169, 169, 169, 175, 175, 168, 168, 168, 168,
	168, 179, 174, 174, 170, 170, 171, 171, 171, 3,
	3, 3, 19, 19, 19, 19, 23, 23, 351, 351,
	17, 237, 237, 236, 236, 238, 238, 238, 238, 232,
	232, 233, 233, 233, 233, 234, 234, 234, 235, 235,
	235, 235, 231, 231, 230, 228, 228, 228, 229, 229,
	229, 229, 229, 229, 172, 172, 18, 225, 225, 226,
	226, 226, 227, 227, 219, 219, 219, 219, 22, 223,
	223, 224, 224, 224, 224, 224, 220, 220, 222, 222,
	218, 218, 218, 218, 218, 21, 217, 217, 215, 215,
	213, 213, 214, 214, 212, 212, 212, 216, 216, 20,
	20, 60, 60, 60, 157, 157, 156, 156, 289, 289,
	259, 259, 262, 262, 269, 269, 270, 270, 268, 268,
	275, 275, 274, 274, 273, 273, 272, 272, 271, 271,
	266, 266, 265, 265, 260, 260, 260, 260, 260, 261,
	261, 264, 264, 267, 267, 114, 114, 115, 115, 115,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 331,
	331, 332, 117, 117, 117, 121, 121, 121, 121, 121,
	121, 116, 116, 118, 118, 98, 98, 96, 96, 91,
	91, 92, 92, 93, 93, 94, 94, 95, 95, 95,
	95, 95, 95, 245, 245, 329, 329, 330, 330, 326,
	326, 326, 328, 328, 328, 328, 328, 327, 327, 99,
	152, 152, 152, 173, 173, 173, 151, 151, 151, 113,
	113, 112, 112, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 244, 244, 187, 187,
	188, 188, 131, 129, 129, 130, 130, 130, 130, 127,
	128, 126, 126, 126, 126, 126, 125, 125, 124, 124,
	124, 221, 221, 122, 122, 120, 120, 120, 119, 119,
	119, 276, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 198, 198, 203, 203,
	340, 340, 339, 100, 100, 100, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 109, 109, 109, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 299, 299, 299, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 150, 352,
	352, 352, 336, 336, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 338, 338, 338, 338,
	338, 338, 338, 338, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 148, 148, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 207, 207,
	208, 208, 296, 296, 296, 296, 296, 296, 297, 297,
	298, 298, 298, 298, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 196, 145, 145, 145, 209, 204, 204, 205,
	205, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 201, 201, 201, 201, 201, 193, 193, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 200, 200, 202,
	202, 211, 211, 211, 210, 210, 210, 210, 210, 210,
	210, 111, 111, 111, 111, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 102, 102, 102, 102, 106,
	106, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 107, 107, 107, 107, 105,
	105, 105, 105, 105, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 103, 103, 103, 103, 103, 103, 104,
	153, 153, 277, 277, 280, 280, 278, 278, 279, 281,
	281, 281, 282, 282, 282, 283, 283, 283, 285, 285,
	159, 159, 159, 165, 165, 158, 158, 166, 166, 167,
	167, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 14, 0, 2, 1, 3, 3,
	3, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 0,
	3, 0, 3, 0, 3, 0, 2, 1, 2, 3,
	4, 3, 3, 1, 0, 1, 1, 0, 1, 9,
	4, 7, 0, 3, 7, 4, 1, 3, 3, 3,
	1, 0, 1, 1, 1, 1, 3, 1, 4, 1,
	3, 1, 2, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 3, 6,
	3, 1, 1, 1, 1, 1, 1, 1, 2, 4,
	6, 1, 4, 1, 3, 3, 4, 4, 4, 3,
	3, 2, 4, 4, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 2, 2, 0,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 2, 4, 3, 1, 1, 1, 1, 2, 3,
	4, 7, 2, 3, 3, 4, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	2, 1, 1, 1, 1, 6, 1, 7, 9, 0,
	2, 0, 1, 1, 2, 2, 2, 1, 4, 2,
	2, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 5, 1, 1,
	1, 5, 5, 0, 1, 1, 2, 2, 3, 6,
	7, 4, 4, 7, 8, 0, 2, 0, 2, 2,
	1, 1, 1, 1, 0, 1, 4, 5, 1, 3,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 6, 4, 4, 3, 1, 1, 2,
	2, 11, 8, 9, 1, 3, 2, 4, 0, 2,
	0, 1, 1, 1, 1, 0, 1, 0, 1, 4,
	2, 1, 5, 4, 4, 2, 0, 1, 3, 3,
	1, 3, 1, 3, 1, 3, 4, 0, 1, 0,
	1, 1, 3, 1, 1, 0, 4, 1, 3, 2,
	1, 0, 8, 0, 4, 7, 4, 0, 2, 0,
	2, 0, 2, 0, 4, 1, 3, 1, 1, 4,
	3, 4, 5, 4, 5, 2, 3, 1, 3, 6,
	0, 3, 0, 1, 2, 4, 4, 0, 1, 3,
	1, 3, 2, 0, 1, 1, 3, 3, 1, 3,
	3, 3, 3, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 1, 7, 7, 1, 1, 1, 0, 1,
	1, 1, 1, 0, 2, 0, 3, 0, 2, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 4, 4, 3, 2, 2, 2,
	3, 2, 3, 0, 2, 1, 1, 2, 2, 0,
	1, 2, 4, 1, 3, 1, 4, 3, 0, 1,
	2, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 8, 11, 0, 1,
	6, 0, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 2, 2, 2, 2, 1, 3, 2, 2, 2,
	2, 2, 1, 3, 2, 1, 3, 2, 0, 3,
	3, 5, 5, 4, 1, 1, 4, 1, 3, 1,
	3, 2, 1, 1, 0, 1, 1, 1, 11, 0,
	2, 3, 2, 3, 1, 1, 1, 3, 3, 4,
	0, 2, 2, 2, 2, 5, 1, 1, 0, 3,
	0, 1, 1, 2, 4, 4, 4, 0, 1, 10,
	9, 11, 15, 10, 1, 3, 0, 3, 0, 1,
	0, 6, 0, 4, 0, 3, 1, 3, 4, 5,
	0, 3, 1, 3, 2, 3, 1, 2, 0, 6,
	0, 2, 0, 2, 4, 5, 4, 5, 1, 6,
	5, 0, 3, 0, 1, 0, 1, 1, 3, 2,
	3, 3, 4, 4, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 5, 4, 1,
	3, 3, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 0,
	1, 1, 3, 1, 1, 2, 1, 7, 7, 7,
	7, 8, 5, 0, 1, 0, 1, 1, 1, 1,
	3, 3, 1, 1, 1, 1, 1, 0, 1, 3,
	1, 3, 5, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 2, 1, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 5, 6, 1, 2, 0, 1,
	1, 2, 5, 0, 1, 1, 1, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 2, 2,
	2, 0, 3, 0, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 3, 5,
	2, 2, 2, 2, 1, 1, 2, 5, 6, 6,
	6, 1, 1, 1, 1, 1, 0, 2, 0, 1,
	1, 2, 4, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 2, 2, 2, 0, 1, 1, 5, 4,
	4, 5, 5, 5, 5, 4, 5, 5, 5, 5,
	5, 5, 5, 1, 1, 1, 4, 4, 6, 8,
	6, 4, 5, 5, 4, 6, 6, 7, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 4, 2, 3, 2, 4,
	6, 2, 2, 4, 6, 4, 2, 2, 0, 1,
	2, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 1, 3, 0, 1, 1,
	3, 3, 3, 3, 3, 2, 3, 4, 3, 4,
	1, 3, 4, 3, 4, 1, 1, 1, 3, 4,
	4, 5, 3, 4, 5, 6, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 1,
	1, 3, 0, 1, 0, 3, 0, 3, 3, 0,
	3, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var yyChk = [...]int{
	-1000, -358, -2, -1, -3, -4, -5, -6, -44, -55,
	-57, -58, -24, -7, -54, -37, -38, -40, -46, -51,
	-52, -53, -61, -19, -18, -17, 12, -8, -9, -341,
	-10, -176, -177, -178, -359, -25, -26, -27, -29, -30,
	-31, -32, -33, -34, -35, -28, -36, 195, -39, 53,
	-41, -42, -43, -47, -48, -49, -50, 309, 315, 352,
	-62, -64, -20, -21, -22, -23, 191, 14, 424, -11,
	-14, -12, -13, -15, -16, 213, 212, 32, 276, 277,
	313, 211, 192, 13, 125, 126, 128, 129, 25, -63,
	58, 193, -65, 10, 470, -73, 33, -96, -173, 62,
	-161, -164, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 460, 461, 462, 421, 230,
	254, 257, 264, 125, 144, 138, 166, 158, 133, 234,
	235, 69, 128, 381, 79, 366, 351, 131, 249, 251,
	253, 256, 236, 154, 149, 248, 232, 147, 237, 34,
	238, 171, 239, 240, 426, 362, 291, 368, 261, 349,
	148, 363, 252, 365, 172, 176, 373, 315, 142, 143,
	370, 375, 170, 210, 37, 423, 222, 376, 174, 169,
	165, 384, 265, 263, 168, 141, 164, 233, 42, 178,
	177, 179, 345, 346, 347, 348, 241, 242, 303, 372,
	161, 150, 295, 134, 22, 379, 217, 367, 316, 243,
	258, 266, 173, 175, 224, 229, 425, 228, 262, 377,
	146, 221, 250, 216, 380, 135, 309, 318, 244, 129,
	255, 374, 383, 41, 331, 140, 132, 207, 126, 226,
	231, 245, 246, 247, 268, 267, 259, 162, 223, 167,
	139, 163, 127, 225, 382, 332, 469, 293, 334, 160,
	157, 227, 200, 378, 369, 130, 338, 333, 155, 269,
	466, 467, 468, 304, 290, 270, 271, 153, 214, 272,
	273, 274, 275, -39, -9, -8, -63, -64, -180, 23,
	349, -45, 350, 195, 58, -173, -5, -4, -37, -61,
	-179, -173, 276, -179, 198, -173, -254, -225, -253, -226,
	-256, -227, -172, 26, 192, 191, 225, 14, 193, 313,
	199, 12, 10, 314, 211, 13, 315, 317, 318, 321,
	322, 323, 36, 326, 327, 62, 65, -173, -254, -225,
	229, 236, -78, -79, -139, 19, 6, 7, 8, 9,
	-289, 334, 228, -219, -217, 272, 324, 208, 207, 80,
	386, 197, -353, -354, 188, 189, 190, -343, 418, -342,
	-173, 419, -159, -360, -286, 369, 368, -184, 367, 360,
	371, 362, 191, 79, 159, 156, 199, 370, 37, 373,
	374, 363, 334, -353, 130, 127, -241, 85, 135, 134,
	-241, 228, 35, -247, 344, -246, -248, 373, 374, 384,
	63, 64, 372, -159, -173, 79, -79, -139, -78, -62,
	-64, -341, 334, 228, 199, 198, 386, 276, -288, -349,
	26, -293, 185, 186, 187, 27, 28, -1, -85, 220,
	-96, 124, -79, -78, -79, -151, -173, 351, 94, -45,
	-45, 350, -344, -345, -346, -348, 195, 350, 349, 124,
	15, -179, 56, -96, 55, 59, 15, 59, 58, 471,
	63, 311, 325, 334, 312, 324, 200, 228, 325, 228,
	360, 200, 316, 319, 320, 361, 55, 201, 55, -303,
	384, -59, 33, -81, 21, -65, -64, 20, 26, 27,
	26, 27, 26, 27, -351, 198, 418, -215, 203, -215,
	199, -215, 198, -355, 137, 59, -343, -84, 58, -183,
	102, -183, -361, 15, 104, 227, 226, 364, 361, -263,
	365, 366, -184, -183, -183, -184, 198, 386, 25, 25,
	-287, 203, -356, 202, 377, 424, 133, 134, 135, -251,
	26, 35, 343, -225, 228, 59, 94, 23, -249, 94,
	105, -248, -248, -248, -249, -249, -116, 35, -172, 121,
	65, -116, 35, 124, -80, -81, -65, -64, 60, 60,
	-287, -287, -287, -287, -287, -179, -66, -67, 112, -199,
	-173, 86, -201, 62, -194, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
	79, 349, 303, 334, 155, 304, 153, 214, -195, -197,
	-322, -316, -192, 58, 110, 111, 118, 87, -196, -276,
	30, 89, 394, -146, -147, -148, -149, -150, -317, -315,
	65, 70, 73, 76, 77, 75, 74, 151, 72, 66,
	123, -64, -336, -162, -292, -298, 197, -296, 156, 152,
	12, 116, 344, 121, -299, 463, 64, 63, 297, 298,
	299, 386, 294, 300, 203, 47, 301, 302, 305, 393,
	306, 48, 307, 296, 218, 308, 397, 396, 398, 390,
	387, 385, 388, 389, 391, 392, -66, -294, 38, -61,
	58, 25, 58, -173, -80, -59, -81, 124, 70, 65,
	-45, 60, 59, -347, 76, 77, -350, 170, 162, -173,
	-56, 65, -3, -4, -5, -6, -24, -37, -61, -318,
	-316, 58, -255, 198, 310, 224, -253, 225, 315, 318,
	-231, -230, -228, -172, -226, -258, -151, -172, 361, -255,
	-231, -230, 353, 465, -59, -199, -173, -77, -76, -199,
	200, -215, -231, 86, -225, -171, 62, 63, 64, -173,
	-215, -356, -342, 29, -83, -173, -135, 16, -197, -135,
	-96, -183, -183, -185, -361, -181, -361, 361, -135, -135,
	-263, -182, -173, -215, -231, 334, 30, -70, -68, -71,
	-72, -74, -138, -140, -96, 58, 378, 379, 131, 134,
	133, 7, -252, 343, 26, -225, -246, -242, 65, 344,
	-230, -250, 55, 121, -300, -199, 35, -249, -249, -249,
	-250, -250, 120, -173, -59, -231, -225, -173, -98, -96,
	-174, -171, -164, -134, 59, -133, 15, -168, 85, 82,
	83, 84, -173, 29, 65, 124, -199, 101, -210, 94,
	95, 96, 97, 98, 99, 100, 58, 58, 58, 58,
	58, 58, 58, 58, -208, 58, 58, 58, 58, 58,
	58, 58, -208, 58, 58, 58, 58, 58, 65, 65,
	107, 106, 117, 110, 111, 112, 113, 114, 115, 116,
	108, 109, 104, 86, 102, 103, 88, -64, -199, -205,
	-197, -197, -197, -197, -276, -203, -199, 58, -199, 58,
	58, 58, -297, 58, 58, -207, -208, 58, 65, 58,
	58, 58, -197, 58, 58, -134, -295, -206, -335, 464,
	-87, 60, -82, -173, -333, -334, -82, -86, -173, -59,
	-59, -166, -167, -158, -163, -170, -171, -164, 292, 196,
	26, 85, 29, 31, 297, 329, 88, 121, 20, 89,
	156, 120, 299, 394, 298, 191, 51, 396, 398, 397,
	387, 385, 336, 340, 342, 339, 386, 360, 35, 14,
	32, 212, 27, 28, 114, 193, 92, 93, 215, 30,
	213, 77, 23, 54, 15, 17, 18, 300, 335, 203,
	202, 104, 353, 199, 49, 12, 123, 33, 101, 337,
	45, 81, 47, 102, 21, 388, 389, 36, 352, 420,
	219, 116, 301, 302, 52, 86, 343, 75, 55, 82,
	19, 50, 103, 194, 393, 48, 341, 305, 307, 418,
	306, 197, 371, 10, 296, 395, 25, 211, 46, 198,
	361, 91, 201, 76, 218, 152, 6, 80, 13, 53,
	56, 390, 391, 392, 38, 90, 16, 308, 424, 344,
	354, 355, 356, 357, 358, 359, 180, 181, 182, 183,
	184, 260, 206, 204, 208, 209, 464, 465, 185, 186,
	287, 289, 159, 188, 189, 190, 220, 137, 7, 23,
	-45, -345, 124, 59, -83, -257, 112, 62, 59, -229,
	335, 471, 63, 60, 59, -257, 201, 65, 65, 59,
	22, 124, 59, -75, 31, 32, -96, 203, -96, -232,
	-233, 341, 30, -218, 56, -213, -214, -212, -216, 35,
	-96, 15, -69, -97, -173, 58, 60, 59, -199, -135,
	-135, -135, -183, -174, -185, -180, -185, -181, 124, -160,
	-173, -232, 58, 25, -141, -142, -143, -144, 45, 49,
	51, 46, 47, 48, 52, 25, 59, -362, 29, -169,
	-175, 29, -170, 65, -171, -164, -62, -64, 132, 135,
	135, 134, -225, 201, 58, 94, -250, -250, -250, 35,
	-172, 55, 59, -135, -67, -68, -70, -199, -199, -199,
	-199, -173, 65, -173, 112, -193, 86, 290, 75, 76,
	77, -194, -211, 26, 270, 271, -204, -205, -199, -145,
	27, 26, -145, -145, -199, -145, 112, -205, -205, 60,
	70, -337, -338, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 301, 296, 302, 300, 294, 308,
	303, 304, 155, 416, 417, 410, 411, 412, 413, 414,
	415, -145, -145, -145, -145, -145, -199, -352, 288, 287,
	289, -145, -145, -145, -145, -195, -195, -195, -195, -195,
	-195, -195, -195, -195, -195, -195, -195, -202, -209, -276,
	58, 104, 102, 103, 88, -197, -195, -195, 60, 59,
	-340, -339, 90, -199, -337, -204, -199, -204, -204, 60,
	60, -205, -204, -195, -204, -145, 65, -135, 59, 58,
	60, 59, 38, 124, 59, 94, 60, 59, 124, 351,
	-173, -316, 60, 15, 124, 124, -230, 20, 424, -172,
	-151, 201, -231, -304, 202, 393, -307, 365, -199, -199,
	-173, -76, -84, 86, 58, -237, 424, 343, 342, 338,
	-234, -235, 337, 339, 336, 340, 55, 282, 283, 284,
	285, -212, -159, 120, 239, 58, -96, -69, -173, 15,
	59, -357, 124, -1, -173, -135, -183, -183, -185, -173,
	-237, 60, -240, -239, -151, -71, -71, -71, -71, 45,
	45, 45, 50, 45, 50, 45, -143, -240, -74, -173,
	-175, 60, 135, -231, -186, 65, -242, -96, -96, -137,
	17, 124, -193, 290, 75, -276, 60, 59, -199, -199,
	-199, 29, -205, 60, 60, 60, 60, 15, -199, -199,
	-199, -199, -199, 60, 15, 15, -199, -199, -199, -199,
	-199, -205, -202, -197, -195, -195, -200, 215, 85, -199,
	-198, -339, 92, -199, 59, 56, 60, 15, 60, 60,
	60, 56, 60, 59, 60, -199, 59, -137, -206, -302,
	-301, -300, 38, -61, -82, -295, -173, -334, -300, -173,
	-166, -163, -171, -164, 70, -231, 112, 112, 62, -172,
	344, -172, -231, -243, 424, 33, -313, 359, 354, 356,
	124, 29, 30, -91, -92, -93, -99, -94, -151, -188,
	-95, 206, 204, 208, -330, 80, 209, 260, 81, 199,
	-236, -238, 345, 346, 347, 348, 85, -235, 65, 65,
	65, 65, -96, -165, 94, -165, -165, -91, -85, 56,
	124, -68, -97, -173, 112, 60, -135, -135, -183, -190,
	-191, -189, 292, -290, 344, 335, -135, 59, 94, -89,
	-88, 55, 56, -90, 55, -88, 45, 45, -135, -84,
	60, -136, 18, 20, -173, 112, -199, 60, 60, 60,
	-100, -102, 331, 332, -106, -103, -105, -104, -108, -107,
	156, 157, 121, 160, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 25, 214, 152, 153, 154, 155,
	172, 138, 158, 422, 180, 139, 181, 140, 182, 141,
	183, 142, 143, 184, 144, 147, 148, 149, 146, 60,
	-199, 60, 60, 60, 60, 60, -199, -199, 15, 60,
	60, 60, 60, 60, -200, 85, -197, -194, 60, 93,
	-199, 91, -101, -107, 121, 156, 214, 155, 154, 152,
	331, 332, -116, -199, -116, -195, 60, 65, -136, 60,
	59, -295, -172, 20, 29, -232, 315, 198, -284, 466,
	-311, 354, 20, 20, -61, -96, 60, 59, -102, -95,
	-173, 81, -329, -330, -215, -329, 81, 58, -238, 70,
	70, 70, 70, -235, 58, -116, -118, -172, 121, 65,
	60, -169, -68, -173, -135, -357, 124, -135, -189, 293,
	36, 123, 295, 35, 291, 20, -79, -239, -199, -199,
	58, -199, -199, -205, 60, -109, 143, 142, -109, -283,
	332, 331, -277, -279, 58, -278, 58, -278, -277, -277,
	58, 58, -277, -280, 58, -280, -277, -281, 58, -281,
	-282, 58, -281, 60, 60, 60, -199, -194, -199, 60,
	-277, -278, -277, -280, -277, -109, -109, 60, 60, 23,
	60, 60, 60, -300, -172, -172, -243, 316, -96, -123,
	467, 65, 20, 65, -309, 65, -84, -114, -115, -132,
	329, 230, -216, 234, 69, 235, 351, 236, 199, 238,
	239, 240, 210, 241, 242, 243, 344, 244, 245, 246,
	247, 312, 6, 278, -93, -113, -112, -110, 75, 86,
	35, 329, -111, 69, 120, 253, 231, 254, -131, -187,
	204, 80, 81, 317, -188, -326, -327, -173, -327, -173,
	-326, -326, -215, -199, -220, -222, -151, 58, -60, 273,
	274, -135, -135, 70, -291, -186, -80, -83, -285, 333,
	70, 70, -153, 65, -153, 70, 70, 70, 60, -199,
	-305, -263, -154, 468, 70, 65, 356, 29, -259, 220,
	59, -132, -165, -165, -159, 120, -165, -165, -165, -165,
	237, 237, -165, -165, -165, -165, -165, -165, -165, -165,
	-165, -165, -165, -165, -165, -165, 58, -110, 75, -195,
	65, -118, -119, 35, 252, 248, -120, 35, 232, 233,
	-122, 58, 260, 81, 81, -96, 58, 56, 269, 58,
	58, 58, -327, 60, 60, 59, -277, -199, 472, 275,
	-79, 294, 60, 60, 60, 60, 59, 60, 60, 60,
	59, 60, 59, 60, -312, 359, -308, -306, 354, 355,
	356, 357, 58, 20, -61, 20, -132, 70, 70, -165,
	-165, 70, 65, 65, 65, -165, -165, 70, 65, -175,
	70, 70, 70, 70, 35, 65, -121, 35, 248, 252,
	249, 250, 251, 70, 35, 70, 35, 70, 35, -173,
	58, -331, -332, 65, 70, 58, -221, 58, -220, -328,
	282, 283, 284, 286, 285, -328, -220, -220, -220, 58,
	-245, -244, 261, 86, -223, -222, -75, 60, 65, 472,
	-80, 65, 70, 70, -314, 202, -310, 358, -306, 20,
	356, 20, 20, -155, -173, -309, -260, 262, 263, -261,
	-267, 265, -116, -116, 65, 65, -117, 231, -98, 60,
	59, 94, 60, -199, -125, -124, 420, -220, 60, 60,
	60, 60, -220, 261, -224, 210, 69, 424, 280, 281,
	-75, 94, -157, -156, 65, 60, 60, -321, 58, 70,
	-311, 20, -309, 20, -309, -309, 60, 59, -265, 266,
	58, -263, 58, -263, 81, 283, 232, 233, 60, -332,
	65, 60, -129, -130, -127, -128, 55, 363, 258, 259,
	60, -223, -223, -223, -223, 60, -165, 65, 279, 65,
	473, 59, 94, -325, 25, 60, -320, -319, -152, -315,
	-173, 359, 65, -309, -173, -262, 267, 70, -195, 58,
	-195, 58, -264, 264, 58, -244, -128, 55, -127, 55,
	14, 13, -131, 70, -171, 473, 59, -305, -156, 65,
	-324, -323, -322, 60, 59, 124, -269, 58, 20, 60,
	-258, 60, -258, 58, 94, -195, -126, 255, 256, 25,
	134, -126, -305, 65, -312, 59, 94, -319, -173, -270,
	-268, 220, -261, 60, 60, -258, 70, 60, 75, 35,
	257, -312, 94, -314, -323, 35, -199, 124, 60, 59,
	62, -266, 268, 60, -314, 65, -321, -173, -268, -271,
	38, 70, -321, 473, -325, -275, -272, 58, -132, 222,
	-325, -305, -275, -132, -274, -273, 267, 223, -312, 60,
	59, 62, 58, -314, -273, -272, -205, -321, 60, -325,
}

var yyDef = [...]int{
	23, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 509, 510, 511, 0, 317, 318, 0,
	304, 0, 0, 0, 0, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 236, 0, 185, 184,
	164, 165, 166, 124, 125, 126, 127, 0, 0, 0,
	387, -2, 512, 513, 514, 515, -2, 330, 0, 305,
	306, 307, 308, 309, 310, 225, 226, 227, 222, 223,
	224, -2, 0, 330, 177, 0, 169, 169, 0, 407,
	0, 0, 418, 438, 23, 365, 0, 370, 697, 733,
	734, 735, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 186, 319, 320, 407, 407, 208, 0,
	1303, 212, 0, 0, 0, 301, 204, 205, 206, 207,
	0, 501, 0, 201, 0, 183, 0, 0, 85, 557,
	87, 559, 0, 91, 93, 94, -2, 98, 99, 100,
	101, 102, 103, 104, 0, 106, 1311, 108, 1371, 111,
	112, 113, 0, 122, 123, -2, -2, 554, 0, 0,
	1359, 67, -2, 0, 0, 0, 423, 426, 429, 432,
	518, 588, 588, 0, 588, 0, 609, 565, 566, 567,
	586, 587, 335, 331, 332, 333, 334, 395, 0, 397,
	400, 285, 285, 0, 0, 276, 277, 0, 294, 285,
	285, 294, 0, 1100, 0, 0, 268, 269, 270, 274,
	275, 295, 239, 337, 178, 179, 168, 0, 173, 0,
	167, 1361, 0, 138, 0, 143, 0, 1310, 1375, 1325,
	0, 0, 1343, 0, 162, -2, 402, 0, 408, 0,
	407, 0, 239, 239, 239, 239, 239, 0, 0, 0,
	439, 440, 435, 436, 437, 441, 442, 3, 0, 0,
	369, 0, 402, -2, 0, 209, 736, 0, 0, 213,
	214, 0, 0, 228, 0, 231, 217, 218, 219, 0,
	0, 203, 0, 0, 81, 0, 0, 0, 0, 0,
	561, 92, 121, 95, 96, 0, 116, 118, 120, 119,
	105, 117, 107, 109, 110, 115, 81, 0, 0, 0,
	68, 390, 0, 371, 0, 420, 422, 0, 424, 425,
	427, 428, 430, 431, 0, 588, 519, 0, 0, 0,
	0, 0, 588, 337, 336, 0, 396, 0, 0, 447,
	0, 447, 0, 290, 291, 285, 285, 278, 287, 0,
	292, 293, 0, 447, 447, 0, 0, 588, 1101, 1102,
	0, 0, 0, 338, 0, 0, 171, 0, 176, 128,
	133, 131, 132, 134, 0, 0, 0, 0, 0, 160,
	161, 0, 0, 0, 0, 0, 151, 154, 691, 692,
	555, 155, 156, 0, 371, 403, 419, 421, 416, 417,
	0, 0, 0, 0, 0, 316, 455, 449, 451, 496,
	31, 0, 990, 733, 995, -2, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, -2, 1446, -2, -2, 1449, 1450, 1451,
	1453, -2, -2, -2, -2, -2, -2, 1460, -2, -2,
	-2, 1464, 1465, -2, -2, 1468, 1469, 1470, 1471, 1472,
	-2, -2, -2, -2, -2, -2, -2, -2, 1006, 804,
	805, 806, 807, 0, 0, 0, 0, 0, 814, 815,
	0, 828, 0, 821, 822, 823, 824, 825, 43, 44,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	953, 791, 0, 0, 0, 938, 0, 928, 0, 966,
	0, 0, 0, 0, 0, 0, 45, 46, 944, 946,
	947, 949, 950, 951, 952, 955, 956, 957, 960, 961,
	962, 963, 964, 965, 968, 970, 940, 941, 942, 943,
	932, 933, 934, 935, 936, 937, 455, 339, 357, 341,
	0, 346, 0, 698, 371, 393, 371, 0, 210, 0,
	215, 0, 0, 230, 232, 233, 234, 220, 221, 302,
	199, 200, 192, 193, 194, 195, 196, 197, 198, 202,
	41, 0, 0, 82, 83, 84, 86, 97, 0, 0,
	75, 542, 548, 545, 558, 0, 89, 560, 114, 0,
	70, 0, 0, 0, 391, 404, 31, 409, 410, 413,
	0, 0, 529, 0, 556, 580, 506, 507, 508, -2,
	0, 0, 398, 0, 0, 483, 265, 0, 286, 266,
	447, 447, 447, 285, 0, 287, 0, 287, 281, 282,
	0, 296, 298, 0, 529, 1402, 240, 460, 0, 461,
	462, 458, 485, 488, 491, 0, 180, 181, 0, 0,
	175, 0, 0, 135, 136, 137, 144, 139, 141, 0,
	0, 145, 157, 158, 159, 363, 364, 0, 0, 0,
	149, 150, 0, 163, 389, 311, 312, 0, 314, 695,
	315, 502, 503, 447, 0, 456, 0, 452, 0, 0,
	0, 0, 497, 0, 499, 0, 985, 0, 0, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 977, 973, 973, 973,
	0, 973, 0, 0, 913, 0, 0, 973, 973, 973,
	973, 973, 914, 0, 973, 973, 973, 973, 927, 921,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 979, 0,
	810, 811, 812, 813, 816, 0, 829, 0, 0, 977,
	977, 977, 916, 0, 0, 918, 929, 0, 922, 977,
	0, 977, 926, 973, 0, 447, 340, 354, 0, 358,
	0, 0, 350, 352, 345, 347, 0, 0, 367, 392,
	394, 737, 0, 1107, -2, 1109, -2, -2, 1111, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 0,
	216, 229, 0, 0, 0, 0, 76, 80, 0, 544,
	0, 0, 547, 88, 0, 0, 0, 64, 373, 0,
	0, 0, 0, 412, 414, 415, 400, 0, 0, 521,
	530, 0, 589, 0, 0, 585, -2, 592, 0, 598,
	0, 0, 0, 324, 328, 23, 401, 0, 448, 267,
	271, 272, 447, 288, 285, 289, 285, 287, 0, 297,
	300, 521, 0, 0, 0, 0, 0, 0, 476, 0,
	0, 475, 0, 0, 0, 0, 0, 0, 489, 490,
	492, 0, 494, 495, 504, 505, 0, 407, 182, 170,
	172, 0, 130, 0, 0, 0, 146, 147, 148, 152,
	153, 0, 0, 445, 450, 457, 460, 981, 982, 983,
	984, 498, 500, 32, 453, 986, 0, 988, 991, 996,
	997, 993, 0, 1011, -2, -2, 0, 978, 979, 0,
	974, 975, 0, 0, 0, 0, 0, 0, 0, 930,
	0, 0, 884, 885, 886, 887, 888, 889, 890, 891,
	892, 893, 894, 895, 896, 897, 898, 899, 900, 901,
	902, 903, 904, 905, 906, 907, 908, 909, 910, 911,
	912, 0, 0, 0, 0, 0, 0, 0, 879, 880,
	881, 0, 0, 0, 0, 792, 793, 794, 795, 796,
	797, 798, 799, 800, 801, 802, 803, 998, 1009, 1010,
	0, 0, 0, 0, 0, 1007, 1002, 0, 808, 0,
	826, 830, 0, 0, 972, 0, 979, 0, 0, 939,
	917, 0, 0, 0, 0, 0, 0, 445, 357, 359,
	0, 0, 357, 0, 0, 0, 366, 0, 0, 0,
	303, 42, 235, 0, 0, 0, 543, 0, 0, 546,
	90, 0, 72, 0, 65, 66, 377, 0, 405, 406,
	32, 411, 0, 0, 699, 520, 0, 531, 532, 533,
	534, 535, 0, 0, 0, 0, 0, 581, 582, 583,
	584, 593, 1103, 1103, 1103, 699, 365, 0, -2, 0,
	0, 326, 0, 0, 484, 279, 447, 447, 285, 299,
	241, 0, 447, 189, 0, 479, 473, 0, 466, 477,
	478, 469, 0, 471, 0, 467, 468, 447, 459, 400,
	493, 487, 174, 129, 0, 253, 140, 313, 696, 443,
	0, 0, 987, 989, 992, 994, 866, 0, 0, 0,
	0, 0, 0, 855, 849, 850, 931, 0, 0, 0,
	0, 0, 0, 874, 0, 0, 0, 0, 0, 0,
	0, 0, 999, 1007, 1003, 0, 1000, 0, 0, 980,
	0, 831, 0, 0, 0, 0, 867, 0, 871, 915,
	919, 0, 923, 0, 925, 0, 0, 443, 355, 0,
	360, 361, 357, 344, 351, 343, 353, 348, 349, 368,
	738, 1108, 1105, 1106, 211, 74, 77, 78, 79, 549,
	0, 550, 529, 71, 0, 0, 379, 53, 0, 0,
	0, 0, 0, 0, 700, 701, 703, 704, 0, 0,
	706, 760, 0, 715, 588, 715, 0, 0, 717, 718,
	522, 523, 0, 0, 0, 0, 0, 537, 538, 539,
	540, 541, 0, 0, 1104, 0, 0, 0, 491, 0,
	0, 447, 325, 328, 329, 399, 283, 280, 447, 237,
	242, 243, 0, 247, 0, 0, 407, 0, 0, 463,
	480, 0, 0, 464, 0, 465, 470, 472, 188, 486,
	142, 433, 0, 0, 33, 454, 980, 851, 852, 853,
	0, 833, 845, 845, 1095, 1036, 1037, 1038, 1082, 1040,
	1086, 1086, 1082, 1082, 1068, 1069, 1070, 1071, 1072, 1073,
	1074, 1075, 1076, 0, 0, 1059, 1082, 1084, 1084, 1082,
	1079, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049,
	1050, 1051, 1052, 1053, 1054, 1089, 1089, 1092, 1089, 854,
	0, 873, 856, 857, 860, 858, 0, 0, 0, 872,
	861, 862, 848, 976, 1001, 0, 1008, 1004, 809, 817,
	827, 0, 0, 836, 1082, 1086, 839, 1082, 1084, 1082,
	845, 845, 0, 0, 0, 0, 859, 0, 434, 356,
	0, 342, 553, 0, 0, 72, 0, 0, 381, 0,
	378, 0, 0, 0, 516, 400, -2, 0, -2, 705,
	761, 727, 727, 716, 727, 727, 588, 0, 524, 525,
	526, 527, 528, 536, 0, 594, 595, 693, 694, 596,
	0, 447, 447, -2, 322, 327, 0, 284, 244, 245,
	246, 0, 249, 250, 252, 0, 402, 190, 191, 481,
	0, 474, 444, 446, 818, 834, 846, 847, 835, 1098,
	1096, 1097, 1039, 1083, 0, 1064, 0, 1065, 1066, 1067,
	0, 0, 1060, 1061, 0, 1062, 1063, 1055, 0, 1056,
	1057, 0, 1058, 870, 875, 876, 0, 1005, 832, 819,
	837, 838, 840, 841, 842, 843, 844, 820, 868, 0,
	920, 924, 878, 362, 551, 552, 69, 73, 55, 383,
	0, 380, 0, 374, 376, 63, 0, 610, -2, 647,
	1103, 1103, 0, 1103, 1103, 1103, 1103, 0, 0, 1103,
	1103, 1103, 1103, 1103, 1103, 1103, 1103, 1103, 1103, 1103,
	1103, 1103, 1103, 0, 702, 729, -2, 741, 743, 0,
	0, 746, 747, 0, 0, 0, 0, 783, 753, 0,
	0, 1023, 1024, 0, 759, 0, 719, 728, 0, 728,
	0, 0, 727, 0, 0, 576, 1082, 0, 600, 0,
	0, 407, 323, 0, 251, 238, 187, 0, 1035, 1099,
	0, 0, 0, 1080, 0, 0, 0, 0, 877, 0,
	49, 0, 372, 0, 382, 54, 0, 0, 599, 0,
	597, 649, 0, 0, 1103, 1103, 0, 0, 0, 0,
	1103, 1103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 742, 744, 745,
	748, 749, 750, 788, 789, 790, 751, 785, 786, 787,
	752, 0, 0, 1021, 1022, 781, 0, 0, 0, 0,
	0, 0, 0, 713, 569, 0, 413, 0, 0, 0,
	402, 248, 482, 1088, 1087, 1077, 0, 1078, 1085, 1090,
	0, 1093, 0, 869, 47, 51, 56, 57, 0, 0,
	0, 0, 0, 0, 517, 643, 648, 650, 651, 0,
	0, 654, 655, 656, 657, 0, 0, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 685, 686, 687,
	688, 689, 690, 670, 671, 672, 673, 674, 675, 682,
	0, 0, 679, 0, 0, 0, 776, 0, 0, 720,
	722, 723, 724, 725, 726, 721, 0, 0, 0, 0,
	712, 714, 756, 0, 568, 577, 578, 413, 0, 606,
	321, 1081, 0, 0, 34, 0, 53, 0, 58, 0,
	0, 0, 0, 0, 385, 375, 632, 0, 0, 638,
	0, 644, 652, 653, 658, 659, 676, 0, 0, 678,
	0, 0, 784, 0, 763, 777, 0, 0, 569, 569,
	569, 569, 0, 757, 570, 1103, 0, 0, 574, 575,
	579, 0, 0, 604, 0, 1091, 1094, 25, 0, 0,
	50, 0, 59, 0, 61, 62, 384, 0, 612, 0,
	0, 0, 0, 0, 641, 0, 683, 684, 677, 680,
	681, 754, 762, 764, 765, 766, 0, 778, 779, 780,
	782, 707, 708, 709, 710, 0, 0, 572, 0, 0,
	55, 606, 0, 24, 0, 35, 0, 37, 39, 40,
	730, 48, 52, 60, 386, 614, 0, 633, 0, 0,
	0, 0, 0, 0, 0, 755, 767, 0, 768, 0,
	0, 0, 711, 571, 573, 55, 0, 49, 605, 607,
	26, 27, 0, 36, 0, 0, 611, 0, 643, 634,
	0, 636, 0, 0, 0, 0, 769, 771, 772, 0,
	0, 770, 49, 0, 47, 0, 0, 38, 731, 0,
	616, 0, 630, 635, 637, 0, 642, 640, 773, 775,
	774, 47, 0, 34, 28, 29, 30, 0, 615, 0,
	628, 613, 0, 639, 34, 0, 25, 732, 617, -2,
	0, 631, 25, 55, 603, 618, -2, 0, 626, 0,
	601, 49, 619, 627, 0, 622, 0, 0, 47, 621,
	0, -2, 0, 34, 623, -2, 0, 25, 629, 602,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 87, 3, 3, 3, 115, 107, 3,
	58, 60, 112, 110, 59, 111, 124, 113, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 470,
	95, 94, 96, 3, 471, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 117, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 472, 106, 473, 118,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 88, 89, 90, 91, 92, 93, 97, 98,
	99, 100, 101, 102, 103, 104, 105, 108, 109, 114,
	116, 119, 120, 121, 122, 123, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:520
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:526
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:552
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:556
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 24:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:562
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				File:              yyDollar[5].str,
				DuplicateHandling: yyDollar[6].duplicateKeyUnion(),
				Table:             yyDollar[9].tableNameUnion(),
				Fields:            yyDollar[10].fieldsUnion(),
				Lines:             yyDollar[11].linesUnion(),
				IgnoredLines:      uint64(yyDollar[12].int64ValUnion()),
				ColumnList:        yyDollar[13].loadColumnsUnion(),
				Assignments:       yyDollar[14].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 25:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:577
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 26:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:581
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:587
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:591
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:597
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:604
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:613
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:617
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:621
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:626
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:630
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:634
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:640
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:649
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:660
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:664
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:670
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:674
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:680
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:684
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:690
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:714
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//        	yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:733
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:737
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:742
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:746
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:754
		{
			yyVAL.str = ""
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:758
		{
			yyVAL.str = yyDollar[3].str
		}
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:763
		{
			yyVAL.str = "\n"
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:767
		{
			yyVAL.str = yyDollar[3].str
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:772
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:776
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:800
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:804
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:810
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:816
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:834
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:851
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:874
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:878
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:882
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:887
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:891
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:897
		{
			yyLOCAL = &tree.Grant{
				Privileges:  yyDollar[2].privilegesUnion(),
				ObjType:     yyDollar[4].objectTypeUnion(),
				Level:       yyDollar[5].privilegeLevelUnion(),
				Users:       yyDollar[7].usersUnion(),
				GrantOption: yyDollar[9].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:907
		{
			yyLOCAL = &tree.Grant{
				IsGrantRole:      true,
				RolesInGrantRole: yyDollar[2].rolesUnion(),
				Users:            yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:915
		{
			yyLOCAL = &tree.Grant{
				IsProxy:     true,
				ProxyUser:   yyDollar[4].userUnion(),
				Users:       yyDollar[6].usersUnion(),
				GrantOption: yyDollar[7].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:925
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:929
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:939
		{
			yyLOCAL = &tree.Revoke{
				Privileges: yyDollar[2].privilegesUnion(),
				ObjType:    yyDollar[4].objectTypeUnion(),
				Level:      yyDollar[5].privilegeLevelUnion(),
				Users:      yyDollar[7].usersUnion(),
				Roles:      nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:949
		{
			yyLOCAL = &tree.Revoke{
				IsRevokeRole:      true,
				RolesInRevokeRole: yyDollar[2].rolesUnion(),
				Users:             yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:959
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_DATABASE,
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:965
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_GLOBAL,
			}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:971
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:978
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:986
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:994
		{
			yyLOCAL = tree.OBJECT_TYPE_NONE
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:998
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1002
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1006
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1012
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1016
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1022
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1029
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1038
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1042
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1048
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1052
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1056
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1060
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1064
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1068
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1072
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1076
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1080
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1084
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1088
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1092
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1096
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1100
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1104
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1108
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1112
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1116
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1120
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1124
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1128
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1132
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1136
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1140
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1144
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1148
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1152
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1156
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1160
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1164
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1168
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1172
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1176
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1188
		{
			yyLOCAL = yyDollar[3].setRoleUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1194
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1202
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL_EXCEPT, Roles: yyDollar[3].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1206
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_DEFAULT, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1210
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1214
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1218
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1224
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1228
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1232
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1238
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1244
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1248
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1255
		{
			yyVAL.str = yyDollar[3].str
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1261
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1265
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1271
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1279
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1288
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1296
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1304
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1327
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1350
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1357
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1364
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1372
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1379
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1386
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1395
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1399
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1403
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1409
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1413
		{
			yyVAL.str = yyDollar[1].str
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1420
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1431
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1437
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1442
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1446
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1450
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1454
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1458
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1462
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1466
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1470
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1476
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1480
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1484
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1488
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1493
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1498
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1504
		{
			yyLOCAL = &tree.Use{Name: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1508
		{
			yyLOCAL = &tree.Use{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1515
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1522
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1533
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: yyDollar[4].tableExprsUnion(),
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1544
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1548
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1554
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1566
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1572
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1576
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1582
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1586
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1592
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1601
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1607
		{
			st := &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
			yyLOCAL = tree.NewExplainStmt(st, "")
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1612
		{
			st := &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
			yyLOCAL = tree.NewExplainStmt(st, "")
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1617
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1621
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1625
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1629
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1637
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1645
		{
			explainStmt := tree.NewExplainStmt(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1655
		{
			explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
			explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1687
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1691
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1703
		{
			yyVAL.str = yyDollar[1].str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1708
		{
			yyVAL.str = "true"
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1709
		{
			yyVAL.str = "false"
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1710
		{
			yyVAL.str = yyDollar[1].str
		}
	case 235:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1715
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1725
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:   yyDollar[3].boolValUnion(),
				IsUserFunc: false,
				Users:      yyDollar[4].usersUnion(),
				TlsOpts:    yyDollar[5].tlsOptionsUnion(),
				ResOpts:    yyDollar[6].resourceOptionsUnion(),
				MiscOpts:   yyDollar[7].userMiscOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1736
		{
			auth := &tree.User{
				AuthString: yyDollar[9].str,
				ByAuth:     true,
			}
			yyLOCAL = &tree.AlterUser{
				IfExists:   yyDollar[3].boolValUnion(),
				IsUserFunc: true,
				UserFunc:   auth,
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1749
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1753
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1758
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1762
		{
			yyLOCAL = yyDollar[1].userMiscOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1768
		{
			yyLOCAL = []tree.UserMiscOption{yyDollar[1].userMiscOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1772
		{
			yyLOCAL = append(yyDollar[1].userMiscOptionsUnion(), yyDollar[2].userMiscOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1778
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1782
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1786
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1790
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1794
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1798
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1804
		{
			yyVAL.item = nil
		}
	case 252:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1809
		{
			yyVAL.item = nil
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1831
		{
			yyLOCAL = &tree.ShowTarget{Target: yyDollar[2].str, Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1835
		{
			yyLOCAL = &tree.ShowTarget{Target: "charset", Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1841
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[4].tableNameUnion(),
				Where:     yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1855
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1865
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1874
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1878
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1882
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1888
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1894
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1900
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1906
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1916
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1928
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1932
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1938
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1950
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:1963
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:1967
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1972
		{
			yyVAL.str = ""
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:1976
		{
			yyVAL.str = yyDollar[2].str
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1982
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1995
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1999
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2005
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2009
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2015
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2019
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2028
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2032
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2036
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2053
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2062
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2071
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2081
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2087
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2093
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2101
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2106
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2113
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2129
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: yyDollar[7].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2142
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: yyDollar[8].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2153
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2157
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2163
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2168
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2175
		{
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2177
		{
		}
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2180
		{
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2189
		{
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2193
		{
		}
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2198
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2207
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2214
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2220
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2228
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2235
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2242
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2261
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2265
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2269
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2275
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2284
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2288
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2294
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2298
		{
			yyVAL.str = yyDollar[3].str
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2304
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2308
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2314
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2319
		{
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2323
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2330
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2334
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2341
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2346
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2350
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2356
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2360
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2366
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2370
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2375
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2379
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2392
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2399
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2406
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2424
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2443
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2449
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2456
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2460
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2473
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2477
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2482
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2486
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2493
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2498
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2505
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2511
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2515
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2519
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2523
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2527
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2531
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2537
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:2544
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2553
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:2557
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:2563
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2571
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2575
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2580
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2584
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2590
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2594
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2598
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2603
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2607
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2613
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2619
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2623
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:2629
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2634
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2638
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2642
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2649
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2653
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2659
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2663
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2673
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2683
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2693
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2705
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2713
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2721
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2730
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2738
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2746
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2754
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2762
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2770
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2778
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2788
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2799
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2817
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2821
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2825
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2834
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2838
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:2843
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:2847
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2852
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2856
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:2862
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:2866
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2872
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2876
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2880
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2884
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:2889
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:2897
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:2903
		{
			yyLOCAL = &tree.From{
				Tables: yyDollar[2].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2911
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2915
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2928
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2937
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2947
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2956
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2966
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2970
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2980
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2984
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2988
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2992
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2998
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3002
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3008
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3014
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3018
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3022
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3028
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3032
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3038
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3042
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3048
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3052
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3058
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3062
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
					Cols:  yyDollar[4].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3075
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3080
		{
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3081
		{
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3085
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3097
		{
			yyVAL.str = ""
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3101
		{
			yyVAL.str = yyDollar[1].str
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3105
		{
			yyVAL.str = yyDollar[2].str
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3114
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3118
		{
			yyVAL.str = yyDollar[1].str
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3122
		{
			yyVAL.str = yyDollar[2].str
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3126
		{
			yyVAL.str = yyDollar[1].str
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3130
		{
			yyVAL.str = yyDollar[2].str
		}
	case 516:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3163
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3173
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3184
		{
		}
	case 520:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3189
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Users:       yyDollar[4].usersUnion(),
				TlsOpts:     yyDollar[5].tlsOptionsUnion(),
				ResOpts:     yyDollar[6].resourceOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:3199
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:3203
		{
			yyLOCAL = yyDollar[2].resourceOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:3209
		{
			yyLOCAL = []tree.ResourceOption{yyDollar[1].resourceOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:3213
		{
			yyLOCAL = append(yyDollar[1].resourceOptionsUnion(), yyDollar[2].resourceOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:3219
		{
			yyLOCAL = &tree.ResourceOptionMaxQueriesPerHour{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:3223
		{
			yyLOCAL = &tree.ResourceOptionMaxUpdatesPerHour{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:3227
		{
			yyLOCAL = &tree.ResourceOptionMaxConnectionPerHour{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:3231
		{
			yyLOCAL = &tree.ResourceOptionMaxUserConnections{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:3237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:3244
		{
			t := &tree.TlsOptionNone{}
			yyLOCAL = []tree.TlsOption{t}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:3249
		{
			t := &tree.TlsOptionSSL{}
			yyLOCAL = []tree.TlsOption{t}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:3254
		{
			t := &tree.TlsOptionX509{}
			yyLOCAL = []tree.TlsOption{t}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:3259
		{
			yyLOCAL = yyDollar[2].tlsOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:3265
		{
			yyLOCAL = []tree.TlsOption{yyDollar[1].tlsOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:3269
		{
			yyLOCAL = append(yyDollar[1].tlsOptionsUnion(), yyDollar[3].tlsOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:3273
		{
			yyLOCAL = append(yyDollar[1].tlsOptionsUnion(), yyDollar[2].tlsOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:3279
		{
			yyLOCAL = &tree.TlsOptionIssuer{Issuer: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:3283
		{
			yyLOCAL = &tree.TlsOptionSubject{Subject: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:3287
		{
			yyLOCAL = &tree.TlsOptionCipher{Cipher: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:3291
		{
			yyLOCAL = &tree.TlsOptionSan{San: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3297
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3301
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3307
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthPlugin: yyDollar[2].authRecordUnion().AuthPlugin,
				AuthString: yyDollar[2].authRecordUnion().AuthString,
				HashString: yyDollar[2].authRecordUnion().HashString,
				ByAuth:     yyDollar[2].authRecordUnion().ByAuth,
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3320
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3324
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:3328
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:3333
		{
			yyLOCAL = &tree.AuthRecord{}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:3337
		{
			yyLOCAL = &tree.AuthRecord{
				AuthString: yyDollar[3].str,
				ByAuth:     true,
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:3344
		{
			yyLOCAL = &tree.AuthRecord{
				AuthPlugin: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:3350
		{
			yyLOCAL = &tree.AuthRecord{
				AuthPlugin: yyDollar[3].str,
				AuthString: yyDollar[5].str,
				ByAuth:     true,
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:3358
		{
			yyLOCAL = &tree.AuthRecord{
				AuthPlugin: yyDollar[3].str,
				HashString: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:3365
		{
			yyLOCAL = &tree.AuthRecord{
				HashString: yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3377
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3386
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3390
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3396
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str, HostName: "%"}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3400
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str, HostName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3404
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str, HostName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3413
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3417
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3421
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:3425
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3431
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3450
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3454
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3476
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3480
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3484
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3488
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3492
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3498
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3502
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:3508
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:3513
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3518
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3522
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3526
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3530
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3534
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3540
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3554
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3558
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3563
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3567
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3573
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3577
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3583
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3587
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3591
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3596
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3600
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3606
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3617
		{
			yyLOCAL = &tree.CreateTable{
				Table: *yyDollar[5].tableNameUnion(),
				Defs:  yyDollar[7].tableDefsUnion(),
				Param: yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL *tree.LoadParam
//line mysql_sql.y:3627
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.LoadParam{
				Filepath:     yyDollar[5].str,
				LoadType:     tree.LOCAL,
				CompressType: tree.AUTO,
				Fields:       yyDollar[7].fieldsUnion(),
				Lines:        yyDollar[8].linesUnion(),
				IgnoredLines: uint64(yyDollar[9].int64ValUnion()),
				ColumnList:   yyDollar[10].loadColumnsUnion(),
				Assignments:  yyDollar[11].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-15 : yypt+1]
		var yyLOCAL *tree.LoadParam
//line mysql_sql.y:3644
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.LoadParam{
				Filepath:     yyDollar[5].str,
				LoadType:     tree.LOCAL,
				CompressType: yyDollar[9].str,
				Fields:       yyDollar[11].fieldsUnion(),
				Lines:        yyDollar[12].linesUnion(),
				IgnoredLines: uint64(yyDollar[13].int64ValUnion()),
				ColumnList:   yyDollar[14].loadColumnsUnion(),
				Assignments:  yyDollar[15].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.LoadParam
//line mysql_sql.y:3661
		{
			yyLOCAL = &tree.LoadParam{
				LoadType:     tree.S3,
				S3options:    yyDollar[4].strsUnion(),
				Fields:       yyDollar[6].fieldsUnion(),
				Lines:        yyDollar[7].linesUnion(),
				IgnoredLines: uint64(yyDollar[8].int64ValUnion()),
				ColumnList:   yyDollar[9].loadColumnsUnion(),
				Assignments:  yyDollar[10].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3675
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3679
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
			fmt.Println("wangjian test1 is", yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3685
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3689
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3695
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3699
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:3704
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:3708
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3718
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3722
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:3731
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:3735
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:3741
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:3745
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:3751
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:3760
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:3770
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:3774
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:3780
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:3784
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:3790
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:3797
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3806
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3810
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:3815
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:3819
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3824
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3828
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3838
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3842
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3853
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3861
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3869
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3877
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3888
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3898
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3908
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3912
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3917
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3921
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3926
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3930
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3936
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3940
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3944
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3950
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3954
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3958
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3962
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3966
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3970
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3974
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3978
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3982
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3986
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3990
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3994
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3998
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4002
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4006
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4010
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4014
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4018
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4022
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4026
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4030
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4034
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4038
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4042
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4046
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4050
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4054
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4058
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4062
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4069
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4073
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4079
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4084
		{
			yyVAL.str = ""
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4088
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4092
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4098
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4102
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4106
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4110
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4114
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4118
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4132
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4136
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4145
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4150
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4156
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4163
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4167
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4173
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4177
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4183
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4193
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4199
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4208
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4217
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4240
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4249
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:4259
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4267
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4273
		{
			yyVAL.str = ""
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4277
		{
			yyVAL.str = yyDollar[1].str
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4287
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4293
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4299
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4313
		{
			yyVAL.str = ""
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:4320
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4326
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4330
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4334
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4345
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4349
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:4353
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4358
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4362
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4368
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:4372
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4378
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4382
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4386
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4390
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4394
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4398
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4402
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4406
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4410
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4414
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4418
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4422
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4426
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4436
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4440
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4445
		{
			yyVAL.str = ""
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4449
		{
			yyVAL.str = yyDollar[1].str
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4455
		{
			yyVAL.str = ""
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4459
		{
			yyVAL.str = yyDollar[2].str
		}
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:4465
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4476
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4486
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4493
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4500
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:4507
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4516
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4522
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4528
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4532
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4536
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4540
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:4544
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4549
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4556
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4560
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4564
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4569
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4573
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4578
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4582
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:4598
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4604
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4608
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4612
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4616
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4620
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4624
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4628
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4632
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4636
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4640
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4644
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4648
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4652
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4658
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4662
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4666
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4670
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4674
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4678
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4682
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4686
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4690
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4694
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4698
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4702
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4707
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4715
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4719
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4723
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4732
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4736
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4740
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4744
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4748
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4753
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4757
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4762
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4766
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:4772
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:4776
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:4782
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4792
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4809
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4826
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4839
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4852
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4864
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4878
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4893
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4908
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4925
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4940
		{
		}
	case 848:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4946
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4955
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4963
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4971
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4980
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4989
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4998
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5007
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5016
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5025
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5034
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5043
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5052
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5061
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5070
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5086
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5094
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5102
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5110
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5118
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5127
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5135
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5144
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5153
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5161
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5169
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5178
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5188
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			a1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			a2 := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{a1, a2},
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5209
		{
			yyVAL.str = yyDollar[1].str
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5245
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5257
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5271
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5279
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5286
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5293
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5305
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5313
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5324
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5333
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5342
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5350
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5360
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5368
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5376
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5386
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5390
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5396
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5400
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5419
		{
		}
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5421
		{
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5461
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:5471
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:5475
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:5479
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:5485
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5490
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5494
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5500
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5504
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5511
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5515
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5519
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5527
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5531
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5535
		{
			yyLOCAL = tree.NewComparisonExpr(tree.EQUAL, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5539
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_EQUAL, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5543
		{
			arg := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), "", false, tree.P_char)
			yyLOCAL = tree.NewComparisonExpr(tree.EQUAL, yyDollar[1].exprUnion(), arg)
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5548
		{
			arg := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), "", false, tree.P_char)
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_EQUAL, yyDollar[1].exprUnion(), arg)
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5553
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5559
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5563
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5567
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5571
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5578
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5582
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5588
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5592
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5596
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5600
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5604
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5608
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5612
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5616
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5622
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5626
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5632
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5636
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5643
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5647
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5651
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5657
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5661
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5665
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5669
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5673
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5677
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:5681
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5687
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5691
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5695
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5699
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5705
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5709
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5722
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5727
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5731
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5735
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5739
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_hexnum)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5753
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5757
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5771
		{
			yyLOCAL = tree.NewParamExpr(yyp)
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5777
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5788
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5793
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5799
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5811
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5823
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5835
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5848
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5861
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5874
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5887
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5900
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5913
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5926
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5939
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5952
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5965
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5980
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6003
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 53 {
				yylex.Error("For float(M), M must between 0 and 53.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6040
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 18 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6088
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6105
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6117
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6132
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6152
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6172
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6188
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6201
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6214
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6227
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6240
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6252
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6264
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6276
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6288
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6300
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6312
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6324
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6336
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6348
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6361
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6376
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6399
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6404
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6410
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6417
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6421
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6426
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6430
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:6436
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6442
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6449
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6456
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6465
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 10, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6472
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:6479
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6488
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6492
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6496
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6502
		{
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6504
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6514
		{
			yyVAL.str = ""
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6518
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
