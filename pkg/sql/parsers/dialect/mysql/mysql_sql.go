// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const VALUES = 57389
const NEXT = 57390
const VALUE = 57391
const SHARE = 57392
const MODE = 57393
const SQL_NO_CACHE = 57394
const SQL_CACHE = 57395
const JOIN = 57396
const STRAIGHT_JOIN = 57397
const LEFT = 57398
const RIGHT = 57399
const INNER = 57400
const OUTER = 57401
const CROSS = 57402
const NATURAL = 57403
const USE = 57404
const FORCE = 57405
const LOWER_THAN_ON = 57406
const ON = 57407
const USING = 57408
const SUBQUERY_AS_EXPR = 57409
const LOWER_THAN_STRING = 57410
const ID = 57411
const AT_ID = 57412
const AT_AT_ID = 57413
const STRING = 57414
const VALUE_ARG = 57415
const LIST_ARG = 57416
const COMMENT = 57417
const COMMENT_KEYWORD = 57418
const QUOTE_ID = 57419
const INTEGRAL = 57420
const HEX = 57421
const BIT_LITERAL = 57422
const FLOAT = 57423
const HEXNUM = 57424
const NULL = 57425
const TRUE = 57426
const FALSE = 57427
const LOWER_THAN_CHARSET = 57428
const CHARSET = 57429
const UNIQUE = 57430
const KEY = 57431
const OR = 57432
const PIPE_CONCAT = 57433
const XOR = 57434
const AND = 57435
const NOT = 57436
const BETWEEN = 57437
const CASE = 57438
const WHEN = 57439
const THEN = 57440
const ELSE = 57441
const END = 57442
const ELSEIF = 57443
const LOWER_THAN_EQ = 57444
const LE = 57445
const GE = 57446
const NE = 57447
const NULL_SAFE_EQUAL = 57448
const IS = 57449
const LIKE = 57450
const REGEXP = 57451
const IN = 57452
const ASSIGNMENT = 57453
const ILIKE = 57454
const SHIFT_LEFT = 57455
const SHIFT_RIGHT = 57456
const DIV = 57457
const MOD = 57458
const UNARY = 57459
const COLLATE = 57460
const BINARY = 57461
const UNDERSCORE_BINARY = 57462
const INTERVAL = 57463
const OUT = 57464
const INOUT = 57465
const BEGIN = 57466
const START = 57467
const TRANSACTION = 57468
const COMMIT = 57469
const ROLLBACK = 57470
const WORK = 57471
const CONSISTENT = 57472
const SNAPSHOT = 57473
const CHAIN = 57474
const NO = 57475
const RELEASE = 57476
const PRIORITY = 57477
const QUICK = 57478
const BIT = 57479
const TINYINT = 57480
const SMALLINT = 57481
const MEDIUMINT = 57482
const INT = 57483
const INTEGER = 57484
const BIGINT = 57485
const INTNUM = 57486
const REAL = 57487
const DOUBLE = 57488
const FLOAT_TYPE = 57489
const DECIMAL = 57490
const NUMERIC = 57491
const DECIMAL_VALUE = 57492
const TIME = 57493
const TIMESTAMP = 57494
const DATETIME = 57495
const YEAR = 57496
const CHAR = 57497
const VARCHAR = 57498
const BOOL = 57499
const CHARACTER = 57500
const VARBINARY = 57501
const NCHAR = 57502
const TEXT = 57503
const TINYTEXT = 57504
const MEDIUMTEXT = 57505
const LONGTEXT = 57506
const BLOB = 57507
const TINYBLOB = 57508
const MEDIUMBLOB = 57509
const LONGBLOB = 57510
const JSON = 57511
const ENUM = 57512
const UUID = 57513
const GEOMETRY = 57514
const POINT = 57515
const LINESTRING = 57516
const POLYGON = 57517
const GEOMETRYCOLLECTION = 57518
const MULTIPOINT = 57519
const MULTILINESTRING = 57520
const MULTIPOLYGON = 57521
const INT1 = 57522
const INT2 = 57523
const INT3 = 57524
const INT4 = 57525
const INT8 = 57526
const S3OPTION = 57527
const SQL_SMALL_RESULT = 57528
const SQL_BIG_RESULT = 57529
const SQL_BUFFER_RESULT = 57530
const LOW_PRIORITY = 57531
const HIGH_PRIORITY = 57532
const DELAYED = 57533
const CREATE = 57534
const ALTER = 57535
const DROP = 57536
const RENAME = 57537
const ANALYZE = 57538
const ADD = 57539
const RETURNS = 57540
const SCHEMA = 57541
const TABLE = 57542
const SEQUENCE = 57543
const INDEX = 57544
const VIEW = 57545
const TO = 57546
const IGNORE = 57547
const IF = 57548
const PRIMARY = 57549
const COLUMN = 57550
const CONSTRAINT = 57551
const SPATIAL = 57552
const FULLTEXT = 57553
const FOREIGN = 57554
const KEY_BLOCK_SIZE = 57555
const SHOW = 57556
const DESCRIBE = 57557
const EXPLAIN = 57558
const DATE = 57559
const ESCAPE = 57560
const REPAIR = 57561
const OPTIMIZE = 57562
const TRUNCATE = 57563
const MAXVALUE = 57564
const PARTITION = 57565
const REORGANIZE = 57566
const LESS = 57567
const THAN = 57568
const PROCEDURE = 57569
const TRIGGER = 57570
const STATUS = 57571
const VARIABLES = 57572
const ROLE = 57573
const PROXY = 57574
const AVG_ROW_LENGTH = 57575
const STORAGE = 57576
const DISK = 57577
const MEMORY = 57578
const CHECKSUM = 57579
const COMPRESSION = 57580
const DATA = 57581
const DIRECTORY = 57582
const DELAY_KEY_WRITE = 57583
const ENCRYPTION = 57584
const ENGINE = 57585
const MAX_ROWS = 57586
const MIN_ROWS = 57587
const PACK_KEYS = 57588
const ROW_FORMAT = 57589
const STATS_AUTO_RECALC = 57590
const STATS_PERSISTENT = 57591
const STATS_SAMPLE_PAGES = 57592
const DYNAMIC = 57593
const COMPRESSED = 57594
const REDUNDANT = 57595
const COMPACT = 57596
const FIXED = 57597
const COLUMN_FORMAT = 57598
const AUTO_RANDOM = 57599
const RESTRICT = 57600
const CASCADE = 57601
const ACTION = 57602
const PARTIAL = 57603
const SIMPLE = 57604
const CHECK = 57605
const ENFORCED = 57606
const RANGE = 57607
const LIST = 57608
const ALGORITHM = 57609
const LINEAR = 57610
const PARTITIONS = 57611
const SUBPARTITION = 57612
const SUBPARTITIONS = 57613
const CLUSTER = 57614
const TYPE = 57615
const ANY = 57616
const SOME = 57617
const EXTERNAL = 57618
const LOCALFILE = 57619
const URL = 57620
const PREPARE = 57621
const DEALLOCATE = 57622
const RESET = 57623
const EXTENSION = 57624
const INCREMENT = 57625
const CYCLE = 57626
const MINVALUE = 57627
const PUBLICATION = 57628
const SUBSCRIPTIONS = 57629
const PUBLICATIONS = 57630
const PROPERTIES = 57631
const PARSER = 57632
const VISIBLE = 57633
const INVISIBLE = 57634
const BTREE = 57635
const HASH = 57636
const RTREE = 57637
const BSI = 57638
const ZONEMAP = 57639
const LEADING = 57640
const BOTH = 57641
const TRAILING = 57642
const UNKNOWN = 57643
const EXPIRE = 57644
const ACCOUNT = 57645
const ACCOUNTS = 57646
const UNLOCK = 57647
const DAY = 57648
const NEVER = 57649
const PUMP = 57650
const MYSQL_COMPATIBILITY_MODE = 57651
const SECOND = 57652
const ASCII = 57653
const COALESCE = 57654
const COLLATION = 57655
const HOUR = 57656
const MICROSECOND = 57657
const MINUTE = 57658
const MONTH = 57659
const QUARTER = 57660
const REPEAT = 57661
const REVERSE = 57662
const ROW_COUNT = 57663
const WEEK = 57664
const REVOKE = 57665
const FUNCTION = 57666
const PRIVILEGES = 57667
const TABLESPACE = 57668
const EXECUTE = 57669
const SUPER = 57670
const GRANT = 57671
const OPTION = 57672
const REFERENCES = 57673
const REPLICATION = 57674
const SLAVE = 57675
const CLIENT = 57676
const USAGE = 57677
const RELOAD = 57678
const FILE = 57679
const TEMPORARY = 57680
const ROUTINE = 57681
const EVENT = 57682
const SHUTDOWN = 57683
const NULLX = 57684
const AUTO_INCREMENT = 57685
const APPROXNUM = 57686
const SIGNED = 57687
const UNSIGNED = 57688
const ZEROFILL = 57689
const ENGINES = 57690
const LOW_CARDINALITY = 57691
const ADMIN_NAME = 57692
const RANDOM = 57693
const SUSPEND = 57694
const ATTRIBUTE = 57695
const HISTORY = 57696
const REUSE = 57697
const CURRENT = 57698
const OPTIONAL = 57699
const FAILED_LOGIN_ATTEMPTS = 57700
const PASSWORD_LOCK_TIME = 57701
const UNBOUNDED = 57702
const SECONDARY = 57703
const USER = 57704
const IDENTIFIED = 57705
const CIPHER = 57706
const ISSUER = 57707
const X509 = 57708
const SUBJECT = 57709
const SAN = 57710
const REQUIRE = 57711
const SSL = 57712
const NONE = 57713
const PASSWORD = 57714
const MAX_QUERIES_PER_HOUR = 57715
const MAX_UPDATES_PER_HOUR = 57716
const MAX_CONNECTIONS_PER_HOUR = 57717
const MAX_USER_CONNECTIONS = 57718
const FORMAT = 57719
const VERBOSE = 57720
const CONNECTION = 57721
const TRIGGERS = 57722
const PROFILES = 57723
const LOAD = 57724
const INFILE = 57725
const TERMINATED = 57726
const OPTIONALLY = 57727
const ENCLOSED = 57728
const ESCAPED = 57729
const STARTING = 57730
const LINES = 57731
const ROWS = 57732
const IMPORT = 57733
const MODUMP = 57734
const OVER = 57735
const PRECEDING = 57736
const FOLLOWING = 57737
const GROUPS = 57738
const DATABASES = 57739
const TABLES = 57740
const SEQUENCES = 57741
const EXTENDED = 57742
const FULL = 57743
const PROCESSLIST = 57744
const FIELDS = 57745
const COLUMNS = 57746
const OPEN = 57747
const ERRORS = 57748
const WARNINGS = 57749
const INDEXES = 57750
const SCHEMAS = 57751
const NODE = 57752
const LOCKS = 57753
const ROLES = 57754
const TABLE_NUMBER = 57755
const COLUMN_NUMBER = 57756
const TABLE_VALUES = 57757
const TABLE_SIZE = 57758
const NAMES = 57759
const GLOBAL = 57760
const SESSION = 57761
const ISOLATION = 57762
const LEVEL = 57763
const READ = 57764
const WRITE = 57765
const ONLY = 57766
const REPEATABLE = 57767
const COMMITTED = 57768
const UNCOMMITTED = 57769
const SERIALIZABLE = 57770
const LOCAL = 57771
const EVENTS = 57772
const PLUGINS = 57773
const CURRENT_TIMESTAMP = 57774
const DATABASE = 57775
const CURRENT_TIME = 57776
const LOCALTIME = 57777
const LOCALTIMESTAMP = 57778
const UTC_DATE = 57779
const UTC_TIME = 57780
const UTC_TIMESTAMP = 57781
const REPLACE = 57782
const CONVERT = 57783
const SEPARATOR = 57784
const TIMESTAMPDIFF = 57785
const CURRENT_DATE = 57786
const CURRENT_USER = 57787
const CURRENT_ROLE = 57788
const SECOND_MICROSECOND = 57789
const MINUTE_MICROSECOND = 57790
const MINUTE_SECOND = 57791
const HOUR_MICROSECOND = 57792
const HOUR_SECOND = 57793
const HOUR_MINUTE = 57794
const DAY_MICROSECOND = 57795
const DAY_SECOND = 57796
const DAY_MINUTE = 57797
const DAY_HOUR = 57798
const YEAR_MONTH = 57799
const SQL_TSI_HOUR = 57800
const SQL_TSI_DAY = 57801
const SQL_TSI_WEEK = 57802
const SQL_TSI_MONTH = 57803
const SQL_TSI_QUARTER = 57804
const SQL_TSI_YEAR = 57805
const SQL_TSI_SECOND = 57806
const SQL_TSI_MINUTE = 57807
const RECURSIVE = 57808
const CONFIG = 57809
const DRAINER = 57810
const MATCH = 57811
const AGAINST = 57812
const BOOLEAN = 57813
const LANGUAGE = 57814
const WITH = 57815
const QUERY = 57816
const EXPANSION = 57817
const ADDDATE = 57818
const BIT_AND = 57819
const BIT_OR = 57820
const BIT_XOR = 57821
const CAST = 57822
const COUNT = 57823
const APPROX_COUNT_DISTINCT = 57824
const APPROX_PERCENTILE = 57825
const CURDATE = 57826
const CURTIME = 57827
const DATE_ADD = 57828
const DATE_SUB = 57829
const EXTRACT = 57830
const GROUP_CONCAT = 57831
const MAX = 57832
const MID = 57833
const MIN = 57834
const NOW = 57835
const POSITION = 57836
const SESSION_USER = 57837
const STD = 57838
const STDDEV = 57839
const MEDIAN = 57840
const STDDEV_POP = 57841
const STDDEV_SAMP = 57842
const SUBDATE = 57843
const SUBSTR = 57844
const SUBSTRING = 57845
const SUM = 57846
const SYSDATE = 57847
const SYSTEM_USER = 57848
const TRANSLATE = 57849
const TRIM = 57850
const VARIANCE = 57851
const VAR_POP = 57852
const VAR_SAMP = 57853
const AVG = 57854
const RANK = 57855
const NEXTVAL = 57856
const SETVAL = 57857
const CURRVAL = 57858
const LASTVAL = 57859
const ARROW = 57860
const ROW = 57861
const OUTFILE = 57862
const HEADER = 57863
const MAX_FILE_SIZE = 57864
const FORCE_QUOTE = 57865
const PARALLEL = 57866
const UNUSED = 57867
const BINDINGS = 57868
const DO = 57869
const DECLARE = 57870
const LOOP = 57871
const WHILE = 57872
const LEAVE = 57873
const ITERATE = 57874
const UNTIL = 57875
const CALL = 57876
const SPBEGIN = 57877
const BACKEND = 57878
const SERVERS = 57879
const KILL = 57880
const QUERY_RESULT = 57881

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:9428

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 109,
	21, 633,
	-2, 614,
	-1, 123,
	219, 850,
	-2, 921,
	-1, 145,
	42, 454,
	219, 454,
	246, 461,
	247, 461,
	425, 454,
	-2, 487,
	-1, 181,
	558, 1580,
	-2, 373,
	-1, 500,
	295, 130,
	400, 130,
	-2, 1494,
	-1, 563,
	68, 1300,
	-2, 1634,
	-1, 564,
	68, 1318,
	-2, 1605,
	-1, 568,
	68, 1319,
	-2, 1633,
	-1, 591,
	68, 1230,
	-2, 1695,
	-1, 592,
	68, 1231,
	-2, 1694,
	-1, 593,
	68, 1232,
	-2, 1684,
	-1, 594,
	68, 1659,
	-2, 1679,
	-1, 595,
	68, 1660,
	-2, 1680,
	-1, 596,
	68, 1661,
	-2, 1686,
	-1, 597,
	68, 1662,
	-2, 1669,
	-1, 598,
	68, 1663,
	-2, 1677,
	-1, 599,
	68, 1664,
	-2, 1687,
	-1, 600,
	68, 1665,
	-2, 1688,
	-1, 601,
	68, 1666,
	-2, 1693,
	-1, 602,
	68, 1667,
	-2, 1698,
	-1, 603,
	68, 1668,
	-2, 1699,
	-1, 605,
	68, 1297,
	-2, 1486,
	-1, 612,
	68, 1306,
	-2, 1512,
	-1, 616,
	68, 1310,
	-2, 1551,
	-1, 617,
	68, 1311,
	-2, 1629,
	-1, 625,
	68, 1321,
	-2, 1614,
	-1, 627,
	68, 1323,
	-2, 1624,
	-1, 628,
	68, 1324,
	-2, 1649,
	-1, 639,
	68, 1208,
	-2, 1689,
	-1, 640,
	68, 1209,
	-2, 1690,
	-1, 641,
	68, 1210,
	-2, 1691,
	-1, 645,
	21, 634,
	-2, 597,
	-1, 714,
	420, 487,
	421, 487,
	-2, 455,
	-1, 756,
	106, 1486,
	117, 1486,
	137, 1486,
	-2, 1461,
	-1, 856,
	21, 634,
	-2, 597,
	-1, 956,
	21, 633,
	-2, 1113,
	-1, 1297,
	68, 1368,
	-2, 1631,
	-1, 1298,
	68, 1369,
	-2, 1632,
	-1, 1430,
	69, 775,
	-2, 781,
	-1, 1754,
	69, 1447,
	138, 1447,
	-2, 1616,
	-1, 1755,
	69, 1447,
	138, 1447,
	-2, 1615,
	-1, 1756,
	69, 1425,
	138, 1425,
	-2, 1602,
	-1, 1757,
	69, 1426,
	138, 1426,
	-2, 1607,
	-1, 1758,
	69, 1427,
	138, 1427,
	-2, 1539,
	-1, 1759,
	69, 1428,
	138, 1428,
	-2, 1533,
	-1, 1760,
	69, 1429,
	138, 1429,
	-2, 1477,
	-1, 1761,
	69, 1430,
	138, 1430,
	-2, 1604,
	-1, 1762,
	69, 1431,
	138, 1431,
	-2, 1537,
	-1, 1763,
	69, 1432,
	138, 1432,
	-2, 1532,
	-1, 1764,
	69, 1433,
	138, 1433,
	-2, 1525,
	-1, 1766,
	69, 1436,
	138, 1436,
	-2, 1649,
	-1, 1767,
	69, 1416,
	138, 1416,
	-2, 1634,
	-1, 1768,
	69, 1445,
	138, 1445,
	-2, 1605,
	-1, 1769,
	69, 1445,
	138, 1445,
	-2, 1633,
	-1, 1770,
	69, 1445,
	138, 1445,
	-2, 1495,
	-1, 1771,
	69, 1443,
	138, 1443,
	-2, 1624,
	-1, 1772,
	69, 1440,
	138, 1440,
	-2, 1517,
	-1, 1773,
	68, 1398,
	69, 1398,
	138, 1398,
	362, 1398,
	363, 1398,
	364, 1398,
	-2, 1476,
	-1, 1774,
	68, 1399,
	69, 1399,
	138, 1399,
	362, 1399,
	363, 1399,
	364, 1399,
	-2, 1478,
	-1, 1775,
	68, 1402,
	69, 1402,
	138, 1402,
	362, 1402,
	363, 1402,
	364, 1402,
	-2, 1606,
	-1, 1776,
	68, 1404,
	69, 1404,
	138, 1404,
	362, 1404,
	363, 1404,
	364, 1404,
	-2, 1589,
	-1, 1777,
	68, 1406,
	69, 1406,
	138, 1406,
	362, 1406,
	363, 1406,
	364, 1406,
	-2, 1538,
	-1, 1778,
	68, 1408,
	69, 1408,
	138, 1408,
	362, 1408,
	363, 1408,
	364, 1408,
	-2, 1521,
	-1, 1779,
	68, 1409,
	69, 1409,
	138, 1409,
	362, 1409,
	363, 1409,
	364, 1409,
	-2, 1522,
	-1, 1780,
	68, 1411,
	69, 1411,
	138, 1411,
	362, 1411,
	363, 1411,
	364, 1411,
	-2, 1475,
	-1, 1781,
	69, 1450,
	138, 1450,
	362, 1450,
	363, 1450,
	364, 1450,
	-2, 1500,
	-1, 1782,
	69, 1450,
	138, 1450,
	362, 1450,
	363, 1450,
	364, 1450,
	-2, 1513,
	-1, 1783,
	69, 1453,
	138, 1453,
	362, 1453,
	363, 1453,
	364, 1453,
	-2, 1496,
	-1, 1784,
	69, 1450,
	138, 1450,
	362, 1450,
	363, 1450,
	364, 1450,
	-2, 1574,
	-1, 1797,
	89, 885,
	133, 885,
	172, 885,
	175, 885,
	259, 885,
	-2, 878,
	-1, 1909,
	21, 633,
	-2, 725,
	-1, 2087,
	89, 885,
	133, 885,
	172, 885,
	175, 885,
	259, 885,
	-2, 879,
	-1, 2099,
	66, 541,
	138, 541,
	-2, 1016,
	-1, 2118,
	280, 1081,
	-2, 1060,
	-1, 2383,
	280, 1081,
	-2, 1061,
	-1, 2516,
	89, 885,
	133, 885,
	172, 885,
	175, 885,
	-2, 964,
	-1, 2519,
	89, 885,
	133, 885,
	172, 885,
	175, 885,
	-2, 964,
	-1, 2529,
	66, 541,
	138, 541,
	-2, 1017,
	-1, 2628,
	89, 885,
	133, 885,
	172, 885,
	175, 885,
	-2, 965,
	-1, 2918,
	69, 936,
	138, 936,
	-2, 885,
	-1, 2922,
	69, 936,
	138, 936,
	-2, 885,
	-1, 2936,
	69, 940,
	138, 940,
	-2, 885,
	-1, 2941,
	69, 941,
	138, 941,
	-2, 885,
}

const yyPrivate = 57344

const yyLast = 35347

var yyAct = [...]int{
	530, 1216, 1492, 2921, 2922, 2622, 172, 2930, 1278, 2901,
	511, 509, 2812, 2860, 2852, 532, 2595, 2772, 2830, 2600,
	2688, 2395, 2771, 2660, 1732, 2739, 1090, 2471, 2755, 2759,
	2621, 2682, 2620, 2472, 646, 987, 2704, 1451, 2598, 417,
	1207, 2672, 2649, 560, 1453, 2102, 2627, 2357, 423, 1281,
	428, 428, 2590, 2540, 2185, 1550, 428, 444, 453, 2186,
	2499, 453, 157, 1525, 2171, 1141, 2384, 2178, 2407, 2181,
	1992, 1274, 2469, 1642, 1752, 513, 2457, 2184, 1838, 2207,
	2440, 1835, 1903, 1611, 2332, 2329, 2355, 464, 1563, 2327,
	1049, 2237, 1991, 1856, 2406, 1750, 1806, 458, 1203, 1742,
	2276, 850, 1412, 1638, 1198, 1620, 502, 508, 503, 1619,
	1612, 2220, 1942, 1215, 2088, 1496, 755, 1585, 1543, 1904,
	1528, 1526, 2070, 761, 1637, 1065, 692, 1892, 2066, 1479,
	2120, 1836, 1831, 1488, 6, 53, 1099, 168, 8, 167,
	7, 1438, 1805, 1420, 1959, 1208, 805, 1272, 2033, 417,
	36, 1670, 1639, 512, 1172, 1748, 422, 1150, 1547, 1098,
	108, 1461, 1790, 1311, 1079, 501, 2034, 1327, 1462, 1263,
	440, 1649, 172, 26, 172, 15, 796, 797, 14, 1618,
	32, 35, 867, 1615, 520, 503, 759, 1575, 1179, 13,
	1601, 1271, 747, 1911, 1437, 1125, 643, 437, 691, 510,
	1333, 1332, 1023, 467, 466, 1091, 23, 450, 16, 1133,
	158, 1047, 151, 452, 1067, 154, 1171, 1075, 10, 689,
	2270, 748, 709, 988, 2270, 1656, 1994, 1533, 2464, 1948,
	449, 1943, 445, 645, 792, 448, 794, 446, 1646, 1946,
	1945, 1186, 1277, 1182, 793, 788, 447, 789, 789, 789,
	156, 424, 1111, 1184, 2588, 925, 926, 927, 924, 2233,
	416, 2231, 721, 1590, 2678, 2673, 433, 925, 926, 927,
	924, 2591, 2470, 1416, 456, 982, 2748, 427, 427, 1614,
	644, 654, 888, 435, 2714, 155, 1979, 2613, 765, 1039,
	1643, 787, 155, 155, 8, 2612, 7, 1987, 155, 2723,
	462, 155, 155, 49, 147, 124, 2299, 155, 2803, 463,
	1654, 1794, 1230, 762, 896, 1923, 155, 898, 49, 147,
	124, 922, 1223, 155, 155, 49, 147, 124, 2715, 1227,
	2252, 1424, 1425, 1107, 764, 2245, 1108, 1924, 903, 1220,
	1040, 904, 1960, 152, 107, 899, 2068, 1561, 2848, 1087,
	1229, 152, 2846, 820, 1096, 1097, 152, 731, 504, 152,
	1222, 107, 1475, 1280, 634, 152, 633, 635, 636, 906,
	637, 638, 920, 647, 152, 915, 655, 758, 757, 1094,
	1248, 152, 152, 1093, 1096, 1097, 736, 2749, 2750, 735,
	2775, 2776, 1725, 2834, 2835, 1264, 2473, 2680, 1268, 2067,
	2741, 2741, 925, 926, 927, 924, 2683, 2684, 2685, 2686,
	2608, 2239, 2238, 2240, 2744, 2676, 2473, 892, 870, 1110,
	1974, 861, 1267, 1544, 2754, 2482, 2500, 428, 1536, 1283,
	1650, 1259, 2618, 2507, 2343, 2333, 1883, 428, 860, 1789,
	894, 901, 2696, 859, 1598, 2058, 2265, 1192, 1191, 2073,
	918, 919, 897, 900, 2402, 453, 453, 808, 428, 1984,
	2802, 798, 2263, 1185, 1183, 917, 891, 2589, 855, 857,
	2348, 2232, 740, 2175, 1888, 1885, 893, 828, 832, 834,
	836, 838, 839, 841, 2699, 845, 842, 843, 844, 737,
	799, 823, 824, 825, 826, 806, 807, 829, 1269, 809,
	902, 810, 811, 812, 813, 814, 815, 816, 817, 818,
	819, 821, 827, 2615, 2337, 123, 958, 153, 2841, 1266,
	831, 833, 835, 837, 840, 760, 1085, 870, 790, 791,
	2774, 854, 2354, 795, 1282, 2607, 2341, 145, 2805, 2806,
	2361, 2609, 1540, 2850, 2711, 1655, 2764, 895, 739, 883,
	2650, 2651, 2652, 2654, 2653, 2415, 2416, 822, 856, 2095,
	455, 1120, 860, 2561, 454, 2760, 1109, 992, 2931, 913,
	914, 905, 1289, 1292, 1293, 1659, 1661, 1662, 2915, 765,
	1559, 1560, 497, 1290, 2845, 499, 2869, 2814, 2338, 2339,
	498, 1074, 450, 450, 2880, 2082, 2083, 2084, 2085, 872,
	871, 461, 2876, 2340, 762, 2553, 2810, 2811, 2730, 2814,
	2335, 874, 863, 864, 2422, 449, 449, 445, 445, 738,
	448, 448, 446, 446, 2662, 764, 2855, 2156, 1265, 2079,
	908, 447, 447, 909, 1644, 1866, 1865, 991, 1644, 2566,
	2567, 1129, 1644, 2486, 1128, 1089, 1088, 2269, 2544, 881,
	765, 1113, 1072, 2548, 852, 1071, 2902, 2932, 732, 2938,
	2705, 911, 851, 880, 858, 1045, 423, 1048, 876, 877,
	2315, 2521, 1671, 2586, 2926, 762, 1050, 1020, 462, 2738,
	1841, 1126, 789, 789, 789, 879, 865, 1980, 2209, 2211,
	451, 692, 1914, 789, 2713, 2712, 764, 789, 1855, 789,
	1096, 1097, 2352, 1647, 1096, 1097, 964, 1944, 872, 871,
	1854, 1657, 451, 1844, 1055, 960, 961, 962, 963, 1187,
	2804, 2751, 2752, 888, 2268, 1645, 1059, 2334, 2323, 1095,
	2072, 2344, 1086, 907, 1058, 1092, 2697, 428, 1545, 1122,
	2266, 734, 1057, 644, 733, 1658, 2856, 457, 50, 1427,
	417, 417, 417, 2278, 2277, 1145, 1145, 2614, 428, 1051,
	1052, 1053, 1054, 2851, 1056, 125, 2619, 1988, 1060, 912,
	50, 882, 125, 125, 1062, 453, 1048, 423, 125, 1175,
	1175, 125, 125, 2076, 2077, 1537, 1152, 125, 1260, 2057,
	172, 1736, 910, 1000, 1001, 1043, 125, 2075, 2336, 417,
	2925, 1738, 1737, 125, 125, 1291, 887, 760, 1660, 2661,
	1428, 830, 1041, 1042, 1840, 771, 766, 770, 772, 1842,
	1735, 1147, 1046, 686, 687, 688, 1143, 1143, 2353, 1426,
	2937, 656, 657, 2635, 732, 2881, 684, 1076, 1080, 1080,
	1080, 1845, 776, 2366, 923, 1193, 769, 1214, 2210, 1217,
	2437, 1792, 1025, 660, 1225, 2157, 2159, 2160, 2161, 2158,
	1076, 2433, 1076, 1027, 928, 2549, 2550, 1081, 1082, 1745,
	1843, 2853, 2854, 957, 1246, 2944, 2546, 888, 1860, 2943,
	2545, 966, 1231, 925, 926, 927, 924, 645, 1145, 2100,
	1145, 860, 1746, 1747, 774, 1962, 1279, 1702, 2517, 1539,
	1701, 777, 1578, 971, 659, 2934, 2916, 1121, 662, 661,
	1064, 1196, 1073, 1199, 1200, 2101, 1726, 734, 767, 1083,
	733, 1241, 1242, 1205, 1206, 2911, 1979, 1101, 1102, 2297,
	1104, 1105, 1106, 1168, 1100, 2905, 1454, 1103, 1454, 775,
	1902, 1112, 2904, 1114, 923, 2885, 1127, 2063, 923, 1791,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1139, 1140, 1118, 2862, 1322, 1323, 2824, 923,
	1331, 1136, 1137, 1138, 2935, 1652, 1153, 768, 433, 1370,
	1371, 1372, 1367, 1380, 741, 1151, 765, 1167, 1166, 1210,
	765, 1213, 1386, 1276, 2912, 1387, 1176, 2782, 648, 2777,
	1177, 1221, 1681, 2732, 1652, 1228, 2731, 1394, 1395, 1389,
	2728, 1652, 2101, 1245, 1652, 648, 450, 780, 785, 786,
	1188, 1244, 1261, 2060, 2727, 1576, 1255, 2726, 925, 926,
	927, 924, 1257, 2725, 2863, 2700, 1237, 2825, 1294, 449,
	1077, 445, 1967, 885, 448, 2568, 446, 1410, 773, 1254,
	428, 1251, 1436, 1145, 1440, 447, 1442, 1443, 1902, 1232,
	2437, 428, 1925, 1233, 692, 1250, 2701, 1452, 2701, 1901,
	2424, 1145, 2733, 1643, 1680, 1810, 1122, 1828, 1413, 2701,
	645, 444, 1253, 1731, 1252, 1730, 1362, 1363, 1379, 1366,
	1706, 1270, 1275, 2701, 1249, 886, 2701, 1381, 2204, 2039,
	1474, 1995, 2701, 1977, 2701, 1971, 1262, 1634, 1480, 1480,
	1388, 1122, 1390, 1122, 1925, 1122, 886, 923, 428, 1557,
	1436, 1436, 1063, 1478, 1145, 1523, 1535, 1969, 1467, 1435,
	1273, 417, 1325, 1145, 1021, 1313, 1964, 1174, 1174, 2425,
	1957, 1078, 1441, 1473, 1955, 1953, 1476, 1477, 1444, 1445,
	1446, 1951, 1320, 1321, 1130, 925, 926, 927, 924, 428,
	1436, 1145, 853, 1568, 428, 428, 1571, 1902, 923, 2506,
	923, 1574, 1810, 1556, 1965, 1580, 1365, 1902, 2899, 2864,
	2532, 2367, 172, 2222, 2103, 172, 172, 1809, 172, 782,
	783, 784, 1727, 1982, 1981, 940, 1970, 1519, 1520, 1973,
	1482, 1729, 1710, 1391, 1709, 1965, 1700, 1825, 1076, 1958,
	1697, 1691, 1690, 1956, 1952, 1682, 1633, 1541, 1411, 2371,
	1952, 1468, 1689, 1380, 1380, 1622, 1583, 1432, 1417, 888,
	1380, 1380, 1080, 1651, 1234, 1629, 1546, 1565, 1481, 1463,
	1238, 1465, 1466, 1913, 1589, 969, 873, 1592, 1593, 1567,
	1595, 853, 1569, 1570, 1471, 2260, 1810, 1448, 848, 1452,
	1472, 1726, 1449, 1145, 1641, 846, 1369, 1368, 1455, 1456,
	2765, 923, 658, 923, 1484, 923, 1485, 1433, 1464, 1483,
	923, 923, 1284, 1285, 1286, 1287, 1288, 1460, 1447, 1459,
	2636, 923, 2524, 1068, 2522, 1439, 1635, 1069, 1554, 1555,
	2894, 2362, 1652, 1469, 1470, 1077, 1134, 2882, 1857, 1239,
	2438, 1623, 853, 1457, 2766, 2429, 1664, 1135, 1522, 1524,
	2462, 2426, 2271, 1542, 1132, 2176, 1329, 1330, 1617, 1968,
	1668, 1669, 1364, 1916, 2637, 1617, 2525, 1117, 2523, 1119,
	1374, 1123, 1124, 862, 1943, 1486, 1551, 1552, 1553, 2002,
	1937, 1328, 1566, 1677, 1180, 1562, 1587, 1587, 765, 1328,
	1400, 2363, 2224, 1434, 1584, 765, 1439, 1586, 1158, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 927, 924, 2799, 1170,
	924, 1414, 2556, 762, 2879, 1418, 1564, 663, 1421, 450,
	762, 1564, 1564, 1603, 1707, 943, 944, 945, 946, 947,
	940, 1714, 2555, 1273, 764, 2364, 1078, 1131, 2241, 1631,
	1626, 764, 449, 1624, 445, 2132, 2537, 448, 2131, 446,
	2126, 2124, 1632, 1319, 1384, 2920, 2616, 2011, 447, 2878,
	502, 1636, 860, 1785, 1627, 1385, 1628, 1753, 2504, 1316,
	1318, 1315, 2167, 1317, 2165, 428, 428, 428, 2908, 1807,
	765, 925, 926, 927, 924, 845, 842, 843, 844, 1814,
	1122, 2016, 2465, 2015, 2014, 2012, 2617, 2870, 497, 1818,
	2865, 499, 2163, 1672, 2179, 762, 498, 2328, 2505, 1665,
	1663, 2815, 2166, 1122, 2164, 2790, 925, 926, 927, 924,
	860, 1849, 1414, 2767, 1676, 1834, 764, 1947, 1414, 1414,
	1313, 925, 926, 927, 924, 1816, 2153, 545, 109, 2716,
	2463, 2674, 2162, 109, 1819, 1820, 1666, 1667, 941, 942,
	943, 944, 945, 946, 947, 940, 2642, 2013, 2639, 2638,
	2526, 1906, 1906, 1535, 1906, 2503, 2342, 1829, 2256, 1588,
	2236, 2235, 1591, 2151, 2150, 1594, 2152, 2149, 1596, 2146,
	860, 2140, 2137, 2136, 1606, 992, 1605, 1145, 428, 1786,
	1604, 434, 1600, 1599, 109, 931, 932, 933, 934, 935,
	936, 937, 929, 860, 423, 1235, 1724, 1175, 1753, 1535,
	1038, 2840, 1932, 2596, 1934, 2836, 2800, 2736, 172, 1858,
	2698, 1861, 1862, 1863, 1864, 1739, 1910, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1793, 1827, 1859, 1908, 1080, 1912, 2675, 2626, 2594,
	1929, 1815, 2592, 2572, 2570, 991, 2172, 2026, 1921, 1936,
	2539, 2502, 1822, 2501, 1975, 1823, 2498, 1641, 925, 926,
	927, 924, 1931, 1824, 1145, 2491, 1145, 2004, 1145, 2485,
	1938, 1826, 2769, 860, 1993, 2017, 2018, 2447, 1989, 2432,
	763, 2430, 2420, 2419, 109, 2320, 2319, 2290, 765, 2267,
	2718, 2234, 1799, 1800, 1801, 925, 926, 927, 924, 109,
	2215, 109, 1145, 2020, 1674, 1886, 1821, 1678, 925, 926,
	927, 924, 2154, 762, 2147, 2143, 1817, 1939, 2027, 925,
	926, 927, 924, 1145, 925, 926, 927, 924, 1181, 2142,
	1917, 1918, 1919, 2289, 764, 1922, 2029, 1985, 2687, 925,
	926, 927, 924, 1693, 2141, 1728, 1688, 1180, 1927, 1608,
	1928, 1930, 590, 589, 1695, 1602, 925, 926, 927, 924,
	1423, 1236, 2031, 999, 995, 860, 994, 2019, 970, 849,
	2061, 2519, 1708, 1143, 2006, 1711, 1712, 1713, 1733, 1734,
	1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 2028, 2518,
	2516, 2490, 1986, 2477, 1143, 2468, 2467, 1692, 2456, 2455,
	2372, 2000, 2050, 2758, 2295, 1151, 2288, 2280, 1976, 1978,
	2275, 1983, 1145, 2219, 2062, 2080, 2059, 2602, 1954, 1436,
	925, 926, 927, 924, 1950, 2099, 925, 926, 927, 924,
	1949, 2105, 1715, 1811, 925, 926, 927, 924, 1996, 1997,
	925, 926, 927, 924, 1705, 1703, 2114, 2010, 2064, 1699,
	1698, 860, 925, 926, 927, 924, 1834, 1696, 155, 1687,
	2123, 147, 124, 1684, 1685, 1683, 1607, 1409, 2128, 2129,
	1383, 2130, 1382, 1373, 1157, 2133, 1480, 1155, 2933, 2035,
	1200, 155, 2108, 2893, 2040, 2887, 2110, 2877, 1205, 1206,
	1906, 1999, 2874, 2051, 2601, 2054, 2090, 2872, 2096, 2789,
	2168, 2734, 989, 2069, 1195, 2658, 1273, 2646, 2643, 1436,
	860, 1535, 1535, 1535, 1535, 2187, 152, 925, 926, 927,
	924, 2106, 860, 1535, 2580, 2578, 1906, 2187, 2563, 2118,
	1414, 1414, 1414, 2089, 2562, 1145, 2121, 2559, 2558, 152,
	2121, 925, 926, 927, 924, 2552, 428, 428, 1210, 2122,
	1213, 2511, 1204, 2078, 1197, 1174, 1066, 2169, 2127, 2093,
	172, 2092, 2091, 2104, 1209, 172, 8, 2098, 7, 109,
	109, 763, 1212, 2138, 2139, 2109, 2200, 1201, 2049, 2144,
	2145, 1963, 2116, 2117, 1915, 1881, 1380, 2119, 1380, 1808,
	1314, 2251, 2125, 152, 2255, 1572, 1431, 2174, 1430, 1258,
	1145, 1224, 1202, 2262, 2113, 2135, 1392, 1393, 1022, 2148,
	1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 2225, 1019, 1018, 1017, 1016, 2229, 1015, 2177,
	1014, 2173, 2188, 2189, 2190, 2191, 2820, 2565, 1013, 1413,
	1012, 1011, 956, 2201, 2250, 2203, 1010, 2212, 2199, 2202,
	2107, 1009, 2097, 645, 1439, 2216, 2003, 2111, 2112, 2213,
	925, 926, 927, 924, 2021, 2022, 1008, 1007, 2223, 1006,
	2248, 1005, 2024, 2025, 2227, 2283, 2254, 2285, 2226, 1004,
	2264, 1003, 1002, 998, 860, 2030, 2244, 997, 2259, 1753,
	2331, 2247, 996, 2242, 993, 986, 985, 2249, 983, 982,
	2346, 981, 428, 2258, 980, 1414, 979, 2272, 2052, 2053,
	1421, 978, 860, 860, 860, 977, 976, 1834, 1834, 1834,
	765, 1535, 1807, 975, 2370, 2488, 2273, 765, 974, 2279,
	2374, 973, 972, 1679, 2284, 2246, 2281, 2282, 2286, 2287,
	968, 2405, 2253, 2408, 2293, 2408, 2408, 967, 925, 926,
	927, 924, 2413, 890, 847, 2560, 2322, 2441, 2442, 1145,
	1145, 1813, 2292, 2316, 1796, 2446, 878, 925, 926, 927,
	924, 2818, 2373, 2217, 2218, 1028, 2375, 2376, 2773, 2324,
	2321, 2444, 2081, 1926, 2368, 925, 926, 927, 924, 1610,
	428, 925, 926, 927, 924, 2331, 889, 2196, 2193, 2358,
	2359, 2300, 2197, 1436, 1436, 2301, 2302, 2303, 2304, 2404,
	2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2369, 2365,
	2403, 765, 2350, 2089, 2417, 2418, 2351, 2194, 2192, 1998,
	1143, 1143, 2195, 2583, 425, 2582, 2326, 2411, 95, 2409,
	2410, 2919, 2198, 2020, 1898, 1899, 2380, 1972, 2381, 2056,
	2436, 2291, 2466, 939, 938, 948, 949, 941, 942, 943,
	944, 945, 946, 947, 940, 2448, 1966, 52, 1518, 51,
	2581, 765, 2434, 2435, 925, 926, 927, 924, 2423, 2325,
	2428, 1189, 2431, 2427, 1961, 429, 2378, 1990, 1154, 428,
	1024, 2445, 430, 434, 939, 938, 948, 949, 941, 942,
	943, 944, 945, 946, 947, 940, 2449, 1218, 2452, 2453,
	2454, 2317, 2318, 1704, 1733, 1734, 1787, 109, 1573, 884,
	2461, 431, 2228, 432, 2230, 2753, 2115, 2065, 1803, 2349,
	939, 938, 948, 949, 941, 942, 943, 944, 945, 946,
	947, 940, 1414, 1450, 1429, 1369, 1368, 1414, 2377, 2478,
	1036, 1037, 2827, 2481, 1034, 1035, 2479, 1032, 1033, 1030,
	1031, 2484, 916, 1884, 1521, 2480, 2048, 1116, 2492, 1436,
	1115, 649, 650, 651, 652, 2515, 2451, 1630, 109, 1070,
	1026, 2888, 109, 2274, 648, 648, 1906, 1535, 2529, 925,
	926, 927, 924, 109, 2808, 2796, 2794, 1353, 2761, 2746,
	2745, 2047, 860, 109, 2743, 2294, 2735, 2535, 2669, 2494,
	2668, 2593, 1145, 2493, 2475, 2474, 2459, 1564, 2496, 2538,
	2046, 2497, 1029, 428, 925, 926, 927, 924, 649, 650,
	651, 652, 2405, 2530, 1156, 2509, 2531, 2458, 2510, 2533,
	2221, 648, 2534, 925, 926, 927, 924, 1454, 2257, 1798,
	2528, 2822, 2821, 2821, 1436, 1686, 875, 479, 860, 478,
	485, 475, 2822, 2187, 2554, 2512, 2513, 2514, 2527, 2045,
	2536, 482, 483, 2476, 484, 488, 159, 3, 470, 1084,
	60, 2585, 2, 2541, 172, 2403, 1558, 1149, 493, 1,
	1422, 2574, 925, 926, 927, 924, 653, 860, 2205, 2044,
	2564, 2206, 2187, 2450, 2043, 2208, 2412, 1648, 1882, 2571,
	2569, 1788, 2345, 1061, 2576, 2610, 2483, 2575, 497, 685,
	1375, 499, 925, 926, 927, 924, 498, 925, 926, 927,
	924, 2573, 860, 1145, 1145, 1243, 779, 869, 860, 2629,
	1240, 868, 2629, 1834, 866, 1326, 2587, 547, 1613, 1349,
	2170, 2597, 2665, 1346, 2826, 2859, 2788, 1348, 1345, 1347,
	1351, 1352, 533, 542, 2829, 1350, 1256, 2611, 534, 531,
	541, 535, 539, 538, 536, 537, 2737, 2679, 2792, 860,
	860, 2681, 2599, 860, 860, 2630, 2633, 2625, 2632, 1653,
	921, 2243, 2640, 2641, 705, 2531, 583, 558, 2624, 1452,
	984, 2666, 2042, 1226, 1143, 2541, 2041, 1219, 2298, 2670,
	2671, 2647, 2648, 1673, 781, 2656, 2657, 557, 2644, 2508,
	2074, 2663, 2710, 543, 2655, 925, 926, 927, 924, 925,
	926, 927, 924, 2695, 674, 778, 2664, 939, 938, 948,
	949, 941, 942, 943, 944, 945, 946, 947, 940, 706,
	2557, 2707, 1597, 1534, 2677, 540, 471, 473, 472, 2603,
	1190, 1211, 1194, 2038, 2634, 2520, 477, 860, 2360, 2487,
	2094, 2929, 2918, 2693, 2900, 2886, 2489, 2813, 481, 860,
	2914, 2844, 2875, 2702, 2606, 496, 925, 926, 927, 924,
	2709, 2708, 474, 2037, 2604, 2717, 465, 2605, 2868, 2724,
	2720, 1356, 1357, 1358, 1359, 1360, 1361, 1354, 1355, 109,
	2809, 2729, 109, 109, 468, 109, 925, 926, 927, 924,
	1538, 415, 860, 745, 2659, 1609, 469, 1812, 2801, 2762,
	2747, 2645, 672, 2742, 2740, 938, 948, 949, 941, 942,
	943, 944, 945, 946, 947, 940, 1795, 2757, 673, 2087,
	763, 2086, 2756, 1295, 2783, 2786, 930, 763, 1312, 2763,
	2313, 2314, 965, 507, 2768, 1675, 109, 519, 2071, 2396,
	2214, 59, 2787, 58, 2778, 2779, 2780, 2781, 57, 56,
	2795, 1579, 2797, 2798, 180, 549, 2793, 2791, 179, 2785,
	2831, 476, 480, 486, 529, 487, 489, 528, 527, 490,
	491, 492, 526, 2807, 494, 495, 525, 1893, 1891, 2817,
	2833, 1890, 1530, 2816, 1529, 2819, 1577, 1414, 2414, 2379,
	2577, 2134, 1853, 2579, 2823, 2832, 1846, 1487, 2770, 860,
	2036, 2721, 2722, 2837, 2842, 2551, 2155, 2584, 2547, 2543,
	2838, 2421, 956, 2628, 2382, 2383, 2858, 2389, 1802, 804,
	2847, 2849, 680, 925, 926, 927, 924, 2857, 2861, 800,
	802, 803, 2866, 2032, 860, 801, 2009, 2005, 1833, 1279,
	1832, 2356, 2867, 1744, 1743, 1741, 1740, 1044, 2871, 2694,
	2873, 2495, 1751, 1749, 2833, 2884, 925, 926, 927, 924,
	2443, 2439, 2347, 860, 1621, 860, 1419, 2055, 1279, 2832,
	1279, 2890, 2883, 2892, 1531, 1527, 951, 1887, 955, 2895,
	1797, 86, 2861, 85, 860, 2896, 2839, 93, 136, 1279,
	2910, 2903, 2907, 2913, 952, 954, 950, 46, 953, 939,
	938, 948, 949, 941, 942, 943, 944, 945, 946, 947,
	940, 2924, 2917, 164, 163, 2928, 2927, 166, 2023, 165,
	162, 1940, 2936, 1941, 161, 2939, 1178, 160, 2631, 2924,
	2942, 2941, 642, 2940, 2928, 37, 155, 33, 49, 147,
	124, 925, 926, 927, 924, 12, 11, 34, 682, 21,
	677, 22, 667, 20, 1247, 2692, 148, 2387, 19, 679,
	678, 25, 31, 140, 30, 102, 155, 149, 49, 147,
	124, 101, 2703, 107, 29, 2001, 665, 100, 99, 98,
	671, 97, 2397, 28, 18, 41, 148, 40, 96, 39,
	9, 1324, 2719, 140, 152, 2390, 92, 149, 925, 926,
	927, 924, 2385, 107, 2909, 90, 27, 2400, 2401, 91,
	88, 89, 87, 2386, 925, 926, 927, 924, 96, 71,
	70, 676, 69, 83, 152, 675, 82, 81, 80, 79,
	1909, 664, 78, 77, 704, 670, 68, 67, 2692, 66,
	65, 64, 75, 1353, 84, 925, 926, 927, 924, 76,
	2391, 74, 668, 1889, 939, 938, 948, 949, 941, 942,
	943, 944, 945, 946, 947, 940, 73, 111, 112, 72,
	113, 114, 63, 666, 62, 61, 1534, 1894, 1897, 1898,
	1899, 1895, 121, 1896, 1900, 109, 122, 683, 1894, 1897,
	1898, 1899, 1895, 120, 1896, 1900, 119, 111, 112, 118,
	113, 114, 117, 116, 115, 42, 43, 44, 45, 132,
	131, 669, 133, 135, 137, 134, 129, 127, 130, 128,
	2891, 126, 54, 17, 1353, 948, 949, 941, 942, 943,
	944, 945, 946, 947, 940, 123, 146, 153, 24, 94,
	4, 2399, 0, 1839, 0, 0, 0, 0, 2692, 1516,
	0, 0, 0, 0, 0, 0, 0, 145, 139, 138,
	0, 0, 0, 0, 55, 123, 146, 153, 2393, 94,
	939, 938, 948, 949, 941, 942, 943, 944, 945, 946,
	947, 940, 681, 1518, 2889, 0, 0, 145, 139, 138,
	2392, 2394, 0, 0, 55, 1349, 0, 0, 0, 1346,
	0, 0, 0, 1348, 1345, 1347, 1351, 1352, 0, 0,
	0, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1498, 141, 142, 143, 0, 0, 0, 0, 0,
	0, 2898, 0, 0, 939, 938, 948, 949, 941, 942,
	943, 944, 945, 946, 947, 940, 0, 0, 150, 0,
	0, 0, 141, 142, 143, 0, 0, 2296, 0, 0,
	0, 0, 0, 0, 0, 2402, 103, 0, 0, 0,
	144, 0, 104, 0, 0, 0, 1349, 2388, 150, 0,
	1346, 2706, 0, 2398, 1348, 1345, 1347, 1351, 1352, 0,
	0, 0, 1350, 0, 0, 0, 103, 0, 0, 0,
	144, 0, 104, 0, 0, 0, 109, 939, 938, 948,
	949, 941, 942, 943, 944, 945, 946, 947, 940, 0,
	0, 0, 0, 0, 0, 105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 48, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1356, 1357, 1358,
	1359, 1360, 1361, 1354, 1355, 105, 0, 0, 0, 0,
	0, 0, 1502, 0, 0, 48, 0, 0, 0, 0,
	0, 0, 0, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 50, 0, 0, 0, 0, 1534, 1534,
	1534, 1534, 0, 1495, 0, 0, 0, 1497, 1499, 1501,
	1534, 1503, 1504, 1505, 1507, 1508, 1509, 1511, 1512, 1513,
	1514, 0, 0, 50, 0, 0, 125, 1334, 1335, 1336,
	1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1356, 1357,
	1358, 1359, 1360, 1361, 1354, 1355, 0, 109, 0, 0,
	0, 0, 109, 0, 0, 0, 125, 0, 0, 1517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 109,
	106, 38, 0, 0, 0, 0, 0, 47, 5, 0,
	0, 110, 0, 0, 0, 0, 1515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 565, 0,
	106, 38, 0, 1494, 0, 0, 0, 47, 314, 0,
	0, 110, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 521, 0, 0, 0, 260, 0, 0, 284, 0,
	0, 0, 1510, 556, 0, 0, 343, 298, 0, 1500,
	0, 0, 613, 621, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 514, 0, 0, 546, 590, 589,
	533, 542, 0, 109, 242, 178, 534, 0, 541, 535,
	539, 538, 536, 537, 0, 605, 0, 0, 0, 0,
	0, 0, 505, 518, 2689, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 515,
	516, 0, 0, 109, 0, 566, 0, 517, 0, 0,
	561, 543, 544, 0, 0, 0, 0, 233, 348, 364,
	243, 339, 377, 248, 346, 238, 313, 336, 0, 0,
	235, 362, 345, 295, 278, 279, 234, 0, 331, 258,
	271, 255, 311, 540, 564, 568, 254, 627, 562, 372,
	237, 0, 371, 310, 358, 363, 296, 290, 236, 360,
	294, 289, 282, 262, 628, 275, 322, 288, 323, 276,
	300, 299, 301, 0, 0, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 559, 0, 0, 0, 374, 0, 0, 611,
	0, 0, 0, 347, 0, 0, 283, 0, 0, 0,
	563, 0, 334, 316, 624, 506, 0, 332, 286, 359,
	324, 365, 349, 373, 328, 325, 228, 350, 257, 297,
	239, 241, 253, 259, 261, 263, 264, 306, 307, 319,
	338, 352, 353, 354, 256, 249, 333, 250, 273, 251,
	229, 340, 252, 231, 320, 357, 0, 269, 329, 293,
	232, 292, 321, 356, 355, 240, 381, 387, 388, 393,
	0, 394, 0, 0, 0, 402, 407, 408, 409, 411,
	412, 413, 414, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 386, 267, 225, 226, 421, 609,
	312, 0, 0, 623, 604, 606, 607, 610, 614, 615,
	616, 617, 618, 620, 622, 626, 420, 0, 0, 0,
	0, 0, 419, 318, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 367,
	379, 397, 400, 0, 0, 0, 230, 399, 0, 2690,
	0, 0, 0, 2691, 1534, 625, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 567, 302, 303, 304, 305,
	612, 0, 247, 398, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 392, 266, 272, 410, 274, 246, 317, 268,
	376, 280, 0, 403, 0, 404, 0, 0, 0, 0,
	309, 277, 341, 281, 287, 330, 375, 315, 335, 244,
	366, 342, 291, 0, 0, 634, 608, 633, 635, 636,
	632, 637, 638, 619, 524, 0, 571, 630, 629, 631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 285, 0, 326, 265, 597,
	576, 577, 578, 523, 579, 574, 575, 598, 569, 594,
	595, 548, 572, 580, 593, 581, 596, 599, 600, 639,
	640, 587, 641, 584, 601, 592, 591, 582, 570, 602,
	603, 555, 550, 585, 586, 573, 588, 551, 552, 553,
	554, 351, 565, 0, 382, 383, 384, 406, 368, 0,
	418, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 521, 0, 0, 0, 260,
	0, 0, 284, 0, 0, 0, 0, 556, 0, 0,
	343, 298, 0, 0, 0, 0, 613, 621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 514, 0,
	0, 546, 590, 589, 533, 542, 0, 0, 242, 178,
	534, 0, 541, 535, 539, 538, 536, 537, 0, 605,
	0, 0, 0, 0, 0, 0, 505, 518, 0, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 515, 516, 0, 0, 0, 0, 566,
	0, 517, 0, 0, 561, 543, 544, 0, 0, 0,
	0, 233, 348, 364, 243, 339, 377, 248, 346, 238,
	313, 336, 0, 0, 235, 362, 345, 295, 278, 279,
	234, 0, 331, 258, 271, 255, 311, 540, 564, 568,
	254, 627, 562, 372, 237, 0, 371, 310, 358, 363,
	296, 290, 236, 360, 294, 289, 282, 262, 628, 275,
	322, 288, 323, 276, 300, 299, 301, 0, 0, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 559, 0, 0, 0,
	374, 0, 0, 611, 0, 0, 0, 347, 0, 0,
	283, 0, 0, 0, 563, 0, 334, 316, 624, 506,
	0, 332, 286, 359, 324, 365, 349, 373, 328, 325,
	228, 350, 257, 297, 239, 241, 253, 259, 261, 263,
	264, 306, 307, 319, 338, 352, 353, 354, 256, 249,
	333, 250, 273, 251, 229, 340, 252, 231, 320, 357,
	0, 269, 329, 293, 232, 292, 321, 356, 355, 240,
	381, 387, 388, 393, 0, 394, 0, 0, 0, 402,
	407, 408, 409, 411, 412, 413, 414, 0, 0, 0,
	0, 396, 0, 0, 0, 1377, 1376, 1378, 386, 267,
	225, 226, 421, 609, 312, 0, 0, 623, 604, 606,
	607, 610, 614, 615, 616, 617, 618, 620, 622, 626,
	420, 0, 0, 0, 0, 0, 419, 318, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 367, 379, 397, 400, 0, 0, 0,
	230, 399, 0, 0, 0, 0, 0, 0, 0, 625,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 567,
	302, 303, 304, 305, 612, 0, 247, 398, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 392, 266, 272, 410,
	274, 246, 317, 268, 376, 280, 0, 403, 0, 404,
	0, 0, 0, 0, 309, 277, 341, 281, 287, 330,
	375, 315, 335, 244, 366, 342, 291, 0, 0, 634,
	608, 633, 635, 636, 632, 637, 638, 619, 524, 0,
	571, 630, 629, 631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 285,
	0, 326, 265, 597, 576, 577, 578, 523, 579, 574,
	575, 598, 569, 594, 595, 548, 572, 580, 593, 581,
	596, 599, 600, 639, 640, 587, 641, 584, 601, 592,
	591, 582, 570, 602, 603, 555, 550, 585, 586, 573,
	588, 551, 552, 553, 554, 351, 565, 0, 382, 383,
	384, 406, 368, 0, 418, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 521,
	0, 0, 0, 260, 0, 0, 284, 0, 0, 0,
	0, 556, 0, 0, 343, 298, 0, 0, 0, 0,
	613, 621, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 514, 0, 0, 546, 590, 589, 533, 542,
	0, 0, 242, 178, 534, 0, 541, 535, 539, 538,
	536, 537, 0, 605, 0, 0, 0, 0, 0, 0,
	505, 518, 0, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 515, 516, 0,
	0, 0, 0, 566, 0, 517, 0, 0, 561, 543,
	544, 0, 0, 0, 0, 233, 348, 364, 243, 339,
	377, 248, 346, 238, 313, 336, 0, 0, 235, 362,
	345, 295, 278, 279, 234, 0, 331, 258, 271, 255,
	311, 540, 564, 568, 254, 627, 562, 372, 237, 0,
	371, 310, 358, 363, 296, 290, 236, 360, 294, 289,
	282, 262, 628, 275, 322, 288, 323, 276, 300, 299,
	301, 0, 0, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	559, 0, 0, 0, 374, 0, 0, 611, 0, 0,
	0, 347, 0, 0, 283, 0, 0, 0, 563, 0,
	334, 316, 624, 506, 0, 332, 286, 359, 324, 365,
	349, 373, 328, 325, 228, 350, 257, 297, 239, 241,
	253, 259, 261, 263, 264, 306, 307, 319, 338, 352,
	353, 354, 256, 249, 333, 250, 273, 251, 229, 340,
	252, 231, 320, 357, 0, 269, 329, 293, 232, 292,
	321, 356, 355, 240, 381, 387, 388, 393, 0, 394,
	0, 0, 0, 402, 407, 408, 409, 411, 412, 413,
	414, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 386, 267, 225, 226, 421, 609, 312, 0,
	0, 623, 604, 606, 607, 610, 614, 615, 616, 617,
	618, 620, 622, 626, 420, 0, 0, 0, 0, 0,
	419, 318, 0, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 367, 379, 397,
	400, 0, 0, 0, 230, 399, 0, 2690, 0, 0,
	0, 2691, 0, 625, 0, 0, 0, 378, 0, 0,
	0, 0, 0, 567, 302, 303, 304, 305, 612, 0,
	247, 398, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	392, 266, 272, 410, 274, 246, 317, 268, 376, 280,
	0, 403, 0, 404, 0, 0, 0, 0, 309, 277,
	341, 281, 287, 330, 375, 315, 335, 244, 366, 342,
	291, 0, 0, 634, 608, 633, 635, 636, 632, 637,
	638, 619, 524, 0, 571, 630, 629, 631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 285, 0, 326, 265, 597, 576, 577,
	578, 523, 579, 574, 575, 598, 569, 594, 595, 548,
	572, 580, 593, 581, 596, 599, 600, 639, 640, 587,
	641, 584, 601, 592, 591, 582, 570, 602, 603, 555,
	550, 585, 586, 573, 588, 551, 552, 553, 554, 351,
	565, 0, 382, 383, 384, 406, 368, 0, 418, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 521, 0, 0, 0, 260, 1415, 0,
	284, 0, 0, 0, 0, 556, 0, 0, 343, 298,
	0, 0, 0, 0, 613, 621, 0, 0, 0, 0,
	0, 0, 0, 1548, 0, 0, 514, 0, 0, 546,
	590, 589, 533, 542, 0, 0, 242, 178, 534, 0,
	541, 535, 539, 538, 536, 537, 0, 605, 0, 0,
	0, 0, 0, 0, 505, 518, 0, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 515, 516, 0, 0, 0, 0, 566, 0, 517,
	0, 0, 1549, 543, 544, 0, 0, 0, 0, 233,
	348, 364, 243, 339, 377, 248, 346, 238, 313, 336,
	0, 0, 235, 362, 345, 295, 278, 279, 234, 0,
	331, 258, 271, 255, 311, 540, 564, 568, 254, 627,
	562, 372, 237, 0, 371, 310, 358, 363, 296, 290,
	236, 360, 294, 289, 282, 262, 628, 275, 322, 288,
	323, 276, 300, 299, 301, 0, 0, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 559, 0, 0, 0, 374, 0,
	0, 611, 0, 0, 0, 347, 0, 0, 283, 0,
	0, 0, 563, 0, 334, 316, 624, 506, 0, 332,
	286, 359, 324, 365, 349, 373, 328, 325, 228, 350,
	257, 297, 239, 241, 253, 259, 261, 263, 264, 306,
	307, 319, 338, 352, 353, 354, 256, 249, 333, 250,
	273, 251, 229, 340, 252, 231, 320, 357, 0, 269,
	329, 293, 232, 292, 321, 356, 355, 240, 381, 387,
	388, 393, 0, 394, 0, 0, 0, 402, 407, 408,
	409, 411, 412, 413, 414, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 386, 267, 225, 226,
	421, 609, 312, 0, 0, 623, 604, 606, 607, 610,
	614, 615, 616, 617, 618, 620, 622, 626, 420, 0,
	0, 0, 0, 0, 419, 318, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 367, 379, 397, 400, 0, 0, 0, 230, 399,
	0, 0, 0, 0, 0, 0, 0, 625, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 567, 302, 303,
	304, 305, 612, 0, 247, 398, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 392, 266, 272, 410, 274, 246,
	317, 268, 376, 280, 0, 403, 0, 404, 0, 0,
	0, 0, 309, 277, 341, 281, 287, 330, 375, 315,
	335, 244, 366, 342, 291, 0, 0, 634, 608, 633,
	635, 636, 632, 637, 638, 619, 524, 0, 571, 630,
	629, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 285, 0, 326,
	265, 597, 576, 577, 578, 523, 579, 574, 575, 598,
	569, 594, 595, 548, 572, 580, 593, 581, 596, 599,
	600, 639, 640, 587, 641, 584, 601, 592, 591, 582,
	570, 602, 603, 555, 550, 585, 586, 573, 588, 551,
	552, 553, 554, 155, 351, 565, 382, 383, 384, 406,
	368, 0, 418, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 521, 0,
	0, 0, 260, 0, 0, 284, 0, 0, 0, 0,
	959, 0, 0, 343, 298, 0, 0, 0, 0, 613,
	621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 514, 0, 0, 546, 590, 589, 533, 542, 0,
	0, 242, 178, 534, 0, 541, 535, 539, 538, 536,
	537, 0, 605, 0, 0, 0, 0, 0, 0, 505,
	518, 0, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 515, 516, 0, 0,
	0, 0, 566, 0, 517, 0, 0, 561, 543, 544,
	0, 0, 0, 0, 233, 348, 364, 243, 339, 377,
	248, 346, 238, 313, 336, 0, 0, 235, 362, 345,
	295, 278, 279, 234, 0, 331, 258, 271, 255, 311,
	540, 564, 568, 254, 627, 562, 372, 237, 0, 371,
	310, 358, 363, 296, 290, 236, 360, 294, 289, 282,
	262, 628, 275, 322, 288, 323, 276, 300, 299, 301,
	0, 0, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 559,
	0, 0, 0, 374, 0, 0, 611, 0, 0, 0,
	347, 0, 0, 283, 0, 0, 0, 563, 0, 334,
	316, 624, 506, 0, 332, 286, 359, 324, 365, 349,
	373, 328, 325, 228, 350, 257, 297, 239, 241, 253,
	259, 261, 263, 264, 306, 307, 319, 338, 352, 353,
	354, 256, 249, 333, 250, 273, 251, 229, 340, 252,
	231, 320, 357, 0, 269, 329, 293, 232, 292, 321,
	356, 355, 240, 381, 387, 388, 393, 0, 394, 0,
	0, 0, 402, 407, 408, 409, 411, 412, 413, 414,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 386, 267, 225, 226, 421, 609, 312, 0, 0,
	623, 604, 606, 607, 610, 614, 615, 616, 617, 618,
	620, 622, 626, 420, 0, 0, 0, 0, 0, 419,
	318, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 367, 379, 397, 400,
	0, 0, 0, 230, 399, 0, 0, 0, 0, 0,
	0, 0, 625, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 567, 302, 303, 304, 305, 612, 0, 247,
	398, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 392,
	266, 272, 410, 274, 246, 317, 268, 376, 280, 0,
	403, 0, 404, 0, 0, 0, 0, 309, 277, 341,
	281, 287, 330, 375, 315, 335, 244, 366, 342, 291,
	0, 0, 634, 608, 633, 635, 636, 632, 637, 638,
	619, 524, 0, 571, 630, 629, 631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 285, 125, 326, 265, 597, 576, 577, 578,
	523, 579, 574, 575, 598, 569, 594, 595, 548, 572,
	580, 593, 581, 596, 599, 600, 639, 640, 587, 641,
	584, 601, 592, 591, 582, 570, 602, 603, 555, 550,
	585, 586, 573, 588, 551, 552, 553, 554, 351, 565,
	0, 382, 383, 384, 406, 368, 0, 418, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 521, 0, 0, 0, 260, 2897, 0, 284,
	0, 0, 0, 0, 556, 0, 0, 343, 298, 0,
	0, 0, 0, 613, 621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 514, 0, 0, 546, 590,
	589, 533, 542, 0, 0, 242, 178, 534, 0, 541,
	535, 539, 538, 536, 537, 0, 605, 0, 0, 0,
	0, 0, 0, 505, 518, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	515, 516, 0, 0, 0, 0, 566, 0, 517, 0,
	0, 561, 543, 544, 0, 0, 0, 0, 233, 348,
	364, 243, 339, 377, 248, 346, 238, 313, 336, 0,
	0, 235, 362, 345, 295, 278, 279, 234, 0, 331,
	258, 271, 255, 311, 540, 564, 568, 254, 627, 562,
	372, 237, 0, 371, 310, 358, 363, 296, 290, 236,
	360, 294, 289, 282, 262, 628, 275, 322, 288, 323,
	276, 300, 299, 301, 0, 0, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 559, 0, 0, 0, 374, 0, 0,
	611, 0, 0, 0, 347, 0, 0, 283, 0, 0,
	0, 563, 0, 334, 316, 624, 506, 0, 332, 286,
	359, 324, 365, 349, 373, 328, 325, 228, 350, 257,
	297, 239, 241, 253, 259, 261, 263, 264, 306, 307,
	319, 338, 352, 353, 354, 256, 249, 333, 250, 273,
	251, 229, 340, 252, 231, 320, 357, 0, 269, 329,
	293, 232, 292, 321, 356, 355, 240, 381, 387, 388,
	393, 0, 394, 0, 0, 0, 402, 407, 408, 409,
	411, 412, 413, 414, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 386, 267, 225, 226, 421,
	609, 312, 0, 0, 623, 604, 606, 607, 610, 614,
	615, 616, 617, 618, 620, 622, 626, 420, 0, 0,
	0, 0, 0, 419, 318, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	367, 379, 397, 400, 0, 0, 0, 230, 399, 0,
	0, 0, 0, 0, 0, 0, 625, 0, 0, 0,
	378, 0, 0, 0, 0, 0, 567, 302, 303, 304,
	305, 612, 0, 247, 398, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 392, 266, 272, 410, 274, 246, 317,
	268, 376, 280, 0, 403, 0, 404, 0, 0, 0,
	0, 309, 277, 341, 281, 287, 330, 375, 315, 335,
	244, 366, 342, 291, 0, 0, 634, 608, 633, 635,
	636, 632, 637, 638, 619, 524, 0, 571, 630, 629,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 285, 0, 326, 265,
	597, 576, 577, 578, 523, 579, 574, 575, 598, 569,
	594, 595, 548, 572, 580, 593, 581, 596, 599, 600,
	639, 640, 587, 641, 584, 601, 592, 591, 582, 570,
	602, 603, 555, 550, 585, 586, 573, 588, 551, 552,
	553, 554, 351, 565, 0, 382, 383, 384, 406, 368,
	0, 418, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 521, 0, 0, 0,
	260, 1415, 0, 284, 0, 0, 0, 0, 556, 0,
	0, 343, 298, 0, 0, 0, 0, 613, 621, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 514,
	0, 0, 546, 590, 589, 533, 542, 0, 0, 242,
	178, 534, 0, 541, 535, 539, 538, 536, 537, 0,
	605, 0, 0, 0, 0, 0, 0, 505, 518, 0,
	522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 515, 516, 0, 0, 0, 0,
	566, 0, 517, 0, 0, 561, 543, 544, 0, 0,
	0, 0, 233, 348, 364, 243, 339, 377, 248, 346,
	238, 313, 336, 0, 0, 235, 362, 345, 295, 278,
	279, 234, 0, 331, 258, 271, 255, 311, 540, 564,
	568, 254, 627, 562, 372, 237, 0, 371, 310, 358,
	363, 296, 290, 236, 360, 294, 289, 282, 262, 628,
	275, 322, 288, 323, 276, 300, 299, 301, 0, 0,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 0, 0,
	0, 374, 0, 0, 611, 0, 0, 0, 347, 0,
	0, 283, 0, 0, 0, 563, 0, 334, 316, 624,
	506, 0, 332, 286, 359, 324, 365, 349, 373, 328,
	325, 228, 350, 257, 297, 239, 241, 253, 259, 261,
	263, 264, 306, 307, 319, 338, 352, 353, 354, 256,
	249, 333, 250, 273, 251, 229, 340, 252, 231, 320,
	357, 0, 269, 329, 293, 232, 292, 321, 356, 355,
	240, 381, 387, 388, 393, 0, 394, 0, 0, 0,
	402, 407, 408, 409, 411, 412, 413, 414, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 386,
	267, 225, 226, 421, 609, 312, 0, 0, 623, 604,
	606, 607, 610, 614, 615, 616, 617, 618, 620, 622,
	626, 420, 0, 0, 0, 0, 0, 419, 318, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 367, 379, 397, 400, 0, 0,
	0, 230, 399, 0, 0, 0, 0, 0, 0, 0,
	625, 0, 0, 0, 378, 0, 0, 0, 0, 0,
	567, 302, 303, 304, 305, 612, 0, 247, 398, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 392, 266, 272,
	410, 274, 246, 317, 268, 376, 280, 0, 403, 0,
	404, 0, 0, 0, 0, 309, 277, 341, 281, 287,
	330, 375, 315, 335, 244, 366, 342, 291, 0, 0,
	634, 608, 633, 635, 636, 632, 637, 638, 619, 524,
	0, 571, 630, 629, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	285, 0, 326, 265, 597, 576, 577, 578, 523, 579,
	574, 575, 598, 569, 594, 595, 548, 572, 580, 593,
	581, 596, 599, 600, 639, 640, 587, 641, 584, 601,
	592, 591, 582, 570, 602, 603, 555, 550, 585, 586,
	573, 588, 551, 552, 553, 554, 351, 565, 0, 382,
	383, 384, 406, 368, 0, 418, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	521, 0, 0, 0, 260, 0, 0, 284, 0, 0,
	0, 0, 556, 0, 0, 343, 298, 0, 0, 0,
	0, 613, 621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 0, 0, 546, 590, 589, 533,
	542, 0, 0, 242, 178, 534, 0, 541, 535, 539,
	538, 536, 537, 0, 605, 0, 0, 0, 0, 0,
	0, 505, 518, 0, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 515, 516,
	1173, 0, 0, 0, 566, 0, 517, 0, 0, 561,
	543, 544, 0, 0, 0, 0, 233, 348, 364, 243,
	339, 377, 248, 346, 238, 313, 336, 0, 0, 235,
	362, 345, 295, 278, 279, 234, 0, 331, 258, 271,
	255, 311, 540, 564, 568, 254, 627, 562, 372, 237,
	0, 371, 310, 358, 363, 296, 290, 236, 360, 294,
	289, 282, 262, 628, 275, 322, 288, 323, 276, 300,
	299, 301, 0, 0, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 374, 0, 0, 611, 0,
	0, 0, 347, 0, 0, 283, 0, 0, 0, 563,
	0, 334, 316, 624, 506, 0, 332, 286, 359, 324,
	365, 349, 373, 328, 325, 228, 350, 257, 297, 239,
	241, 253, 259, 261, 263, 264, 306, 307, 319, 338,
	352, 353, 354, 256, 249, 333, 250, 273, 251, 229,
	340, 252, 231, 320, 357, 0, 269, 329, 293, 232,
	292, 321, 356, 355, 240, 381, 387, 388, 393, 0,
	394, 0, 0, 0, 402, 407, 408, 409, 411, 412,
	413, 414, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 386, 267, 225, 226, 421, 609, 312,
	0, 0, 623, 604, 606, 607, 610, 614, 615, 616,
	617, 618, 620, 622, 626, 420, 0, 0, 0, 0,
	0, 419, 318, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 367, 379,
	397, 400, 0, 0, 0, 230, 399, 0, 0, 0,
	0, 0, 0, 0, 625, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 567, 302, 303, 304, 305, 612,
	0, 247, 398, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 392, 266, 272, 410, 274, 246, 317, 268, 376,
	280, 0, 403, 0, 404, 0, 0, 0, 0, 309,
	277, 341, 281, 287, 330, 375, 315, 335, 244, 366,
	342, 291, 0, 0, 634, 608, 633, 635, 636, 632,
	637, 638, 619, 524, 0, 571, 630, 629, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 285, 0, 326, 265, 597, 576,
	577, 578, 523, 579, 574, 575, 598, 569, 594, 595,
	548, 572, 580, 593, 581, 596, 599, 600, 639, 640,
	587, 641, 584, 601, 592, 591, 582, 570, 602, 603,
	555, 550, 585, 586, 573, 588, 551, 552, 553, 554,
	0, 0, 0, 382, 383, 384, 406, 368, 0, 418,
	351, 565, 0, 0, 1694, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 521, 0, 0, 0, 260, 0,
	0, 284, 0, 0, 0, 0, 556, 0, 0, 343,
	298, 0, 0, 0, 0, 613, 621, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 514, 0, 0,
	546, 590, 589, 533, 542, 0, 0, 242, 178, 534,
	0, 541, 535, 539, 538, 536, 537, 0, 605, 0,
	0, 0, 0, 0, 0, 505, 518, 0, 522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 515, 516, 0, 0, 0, 0, 566, 0,
	517, 0, 0, 561, 543, 544, 0, 0, 0, 0,
	233, 348, 364, 243, 339, 377, 248, 346, 238, 313,
	336, 0, 0, 235, 362, 345, 295, 278, 279, 234,
	0, 331, 258, 271, 255, 311, 540, 564, 568, 254,
	627, 562, 372, 237, 0, 371, 310, 358, 363, 296,
	290, 236, 360, 294, 289, 282, 262, 628, 275, 322,
	288, 323, 276, 300, 299, 301, 0, 0, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 559, 0, 0, 0, 374,
	0, 0, 611, 0, 0, 0, 347, 0, 0, 283,
	0, 0, 0, 563, 0, 334, 316, 624, 506, 0,
	332, 286, 359, 324, 365, 349, 373, 328, 325, 228,
	350, 257, 297, 239, 241, 253, 259, 261, 263, 264,
	306, 307, 319, 338, 352, 353, 354, 256, 249, 333,
	250, 273, 251, 229, 340, 252, 231, 320, 357, 0,
	269, 329, 293, 232, 292, 321, 356, 355, 240, 381,
	387, 388, 393, 0, 394, 0, 0, 0, 402, 407,
	408, 409, 411, 412, 413, 414, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 386, 267, 225,
	226, 421, 609, 312, 0, 0, 623, 604, 606, 607,
	610, 614, 615, 616, 617, 618, 620, 622, 626, 420,
	0, 0, 0, 0, 0, 419, 318, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 367, 379, 397, 400, 0, 0, 0, 230,
	399, 0, 0, 0, 0, 0, 0, 0, 625, 0,
	0, 0, 378, 0, 0, 0, 0, 0, 567, 302,
	303, 304, 305, 612, 0, 247, 398, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 391, 392, 266, 272, 410, 274,
	246, 317, 268, 376, 280, 0, 403, 0, 404, 0,
	0, 0, 0, 309, 277, 341, 281, 287, 330, 375,
	315, 335, 244, 366, 342, 291, 0, 0, 634, 608,
	633, 635, 636, 632, 637, 638, 619, 524, 0, 571,
	630, 629, 631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 285, 0,
	326, 265, 597, 576, 577, 578, 523, 579, 574, 575,
	598, 569, 594, 595, 548, 572, 580, 593, 581, 596,
	599, 600, 639, 640, 587, 641, 584, 601, 592, 591,
	582, 570, 602, 603, 555, 550, 585, 586, 573, 588,
	551, 552, 553, 554, 351, 565, 0, 382, 383, 384,
	406, 368, 0, 418, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 521, 0,
	0, 0, 260, 0, 0, 284, 0, 0, 0, 0,
	556, 0, 0, 343, 298, 0, 0, 0, 0, 613,
	621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 514, 0, 0, 546, 590, 589, 533, 542, 0,
	0, 242, 178, 534, 0, 541, 535, 539, 538, 536,
	537, 0, 605, 0, 0, 0, 0, 0, 0, 505,
	518, 0, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 515, 516, 0, 0,
	0, 0, 566, 0, 517, 0, 0, 561, 543, 544,
	0, 0, 0, 0, 233, 348, 364, 243, 339, 377,
	248, 346, 238, 313, 336, 0, 0, 235, 362, 345,
	295, 278, 279, 234, 0, 331, 258, 271, 255, 311,
	540, 564, 568, 254, 627, 562, 372, 237, 0, 371,
	310, 358, 363, 296, 290, 236, 360, 294, 289, 282,
	262, 628, 275, 322, 288, 323, 276, 300, 299, 301,
	0, 0, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 559,
	0, 0, 0, 374, 0, 0, 611, 0, 0, 0,
	347, 0, 0, 283, 0, 0, 0, 563, 0, 334,
	316, 624, 506, 0, 332, 286, 359, 324, 365, 349,
	373, 328, 325, 228, 350, 257, 297, 239, 241, 253,
	259, 261, 263, 264, 306, 307, 319, 338, 352, 353,
	354, 256, 249, 333, 250, 273, 251, 229, 340, 252,
	231, 320, 357, 0, 269, 329, 293, 232, 292, 321,
	356, 355, 240, 381, 387, 388, 393, 0, 394, 0,
	0, 0, 402, 407, 408, 409, 411, 412, 413, 414,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 386, 267, 225, 226, 421, 609, 312, 0, 0,
	623, 604, 606, 607, 610, 614, 615, 616, 617, 618,
	620, 622, 626, 420, 0, 0, 0, 0, 0, 419,
	318, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 367, 379, 397, 400,
	0, 0, 0, 230, 399, 0, 0, 0, 0, 0,
	0, 0, 625, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 567, 302, 303, 304, 305, 612, 0, 247,
	398, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 392,
	266, 272, 410, 274, 246, 317, 268, 376, 280, 0,
	403, 0, 404, 0, 0, 0, 0, 309, 277, 341,
	281, 287, 330, 375, 315, 335, 244, 366, 342, 291,
	0, 0, 634, 608, 633, 635, 636, 632, 637, 638,
	619, 524, 0, 571, 630, 629, 631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 285, 0, 326, 265, 597, 576, 577, 578,
	523, 579, 574, 575, 598, 569, 594, 595, 548, 572,
	580, 593, 581, 596, 599, 600, 639, 640, 587, 641,
	584, 601, 592, 591, 582, 570, 602, 603, 555, 550,
	585, 586, 573, 588, 551, 552, 553, 554, 351, 565,
	0, 382, 383, 384, 406, 368, 0, 418, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 1296, 0,
	0, 0, 521, 0, 0, 0, 260, 0, 0, 284,
	0, 0, 0, 0, 556, 0, 0, 343, 298, 0,
	0, 0, 0, 613, 621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 514, 0, 0, 546, 590,
	589, 533, 542, 0, 0, 242, 178, 534, 0, 541,
	535, 539, 538, 536, 537, 0, 605, 0, 0, 0,
	0, 0, 0, 0, 518, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	515, 516, 0, 0, 0, 0, 566, 0, 517, 0,
	0, 561, 543, 544, 0, 0, 0, 0, 233, 348,
	364, 243, 339, 377, 248, 346, 238, 313, 336, 0,
	0, 235, 362, 345, 295, 278, 279, 234, 0, 331,
	258, 271, 255, 311, 540, 564, 568, 254, 627, 562,
	372, 237, 0, 371, 310, 358, 363, 296, 290, 236,
	360, 294, 289, 282, 262, 628, 275, 322, 288, 323,
	276, 300, 299, 301, 0, 0, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 559, 0, 0, 0, 374, 0, 0,
	611, 0, 0, 0, 347, 0, 0, 283, 0, 0,
	0, 563, 0, 334, 316, 624, 0, 0, 332, 286,
	359, 324, 365, 349, 373, 328, 325, 228, 350, 257,
	297, 239, 241, 253, 259, 261, 263, 264, 306, 307,
	319, 338, 352, 353, 354, 256, 249, 333, 250, 273,
	251, 229, 340, 252, 231, 320, 357, 0, 269, 329,
	293, 232, 292, 321, 356, 355, 240, 381, 1297, 1298,
	393, 0, 394, 0, 0, 0, 402, 407, 408, 409,
	411, 412, 413, 414, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 386, 267, 225, 226, 421,
	609, 312, 0, 0, 623, 604, 606, 607, 610, 614,
	615, 616, 617, 618, 620, 622, 626, 420, 0, 0,
	0, 0, 0, 419, 318, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	367, 379, 397, 400, 0, 0, 0, 230, 399, 0,
	0, 0, 0, 0, 0, 0, 625, 0, 0, 0,
	378, 0, 0, 0, 0, 0, 567, 302, 303, 304,
	305, 612, 0, 247, 398, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 392, 266, 272, 410, 274, 246, 317,
	268, 376, 280, 0, 403, 0, 404, 0, 0, 0,
	0, 309, 277, 341, 281, 287, 330, 375, 315, 335,
	244, 366, 342, 291, 0, 0, 634, 608, 633, 635,
	636, 632, 637, 638, 619, 524, 0, 571, 630, 629,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 285, 0, 326, 265,
	597, 576, 577, 578, 523, 579, 574, 575, 598, 569,
	594, 595, 548, 572, 580, 593, 581, 596, 599, 600,
	639, 640, 587, 641, 584, 601, 592, 591, 582, 570,
	602, 603, 555, 550, 585, 586, 573, 588, 551, 552,
	553, 554, 351, 565, 0, 382, 383, 384, 406, 368,
	0, 418, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 521, 0, 0, 0,
	260, 0, 0, 284, 0, 0, 0, 0, 556, 0,
	0, 343, 298, 0, 0, 0, 0, 613, 621, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 590, 589, 533, 542, 0, 0, 242,
	178, 534, 0, 541, 535, 539, 538, 536, 537, 0,
	605, 0, 0, 0, 0, 0, 0, 505, 518, 0,
	522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 515, 516, 0, 0, 0, 0,
	566, 0, 517, 0, 0, 561, 543, 544, 0, 0,
	0, 0, 233, 348, 364, 243, 339, 377, 248, 346,
	238, 313, 336, 0, 0, 235, 362, 345, 295, 278,
	279, 234, 0, 331, 258, 271, 255, 311, 540, 564,
	568, 254, 627, 562, 372, 237, 0, 371, 310, 358,
	363, 296, 290, 236, 360, 294, 289, 282, 262, 628,
	275, 322, 288, 323, 276, 300, 299, 301, 0, 0,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 0, 0,
	0, 374, 0, 0, 611, 0, 0, 0, 347, 0,
	0, 283, 0, 0, 0, 563, 0, 334, 316, 624,
	506, 0, 332, 286, 359, 324, 365, 349, 373, 328,
	325, 228, 350, 257, 297, 239, 241, 253, 259, 261,
	263, 264, 306, 307, 319, 338, 352, 353, 354, 256,
	249, 333, 250, 273, 251, 229, 340, 252, 231, 320,
	357, 0, 269, 329, 293, 232, 292, 321, 356, 355,
	240, 381, 387, 388, 393, 0, 394, 0, 0, 0,
	402, 407, 408, 409, 411, 412, 413, 414, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 386,
	267, 225, 226, 421, 609, 312, 0, 0, 623, 604,
	606, 607, 610, 614, 615, 616, 617, 618, 620, 622,
	626, 420, 0, 0, 0, 0, 0, 419, 318, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 367, 379, 397, 400, 0, 0,
	0, 230, 399, 0, 0, 0, 0, 0, 0, 0,
	625, 0, 0, 0, 378, 0, 0, 0, 0, 0,
	567, 302, 303, 304, 305, 612, 0, 247, 398, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 392, 266, 272,
	410, 274, 246, 317, 268, 376, 280, 0, 403, 0,
	404, 0, 0, 0, 0, 309, 277, 341, 281, 287,
	330, 375, 315, 335, 244, 366, 342, 291, 0, 0,
	634, 608, 633, 635, 636, 632, 637, 638, 619, 524,
	0, 571, 630, 629, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	285, 0, 326, 265, 597, 576, 577, 578, 523, 579,
	574, 575, 598, 569, 594, 595, 548, 572, 580, 593,
	581, 596, 599, 600, 639, 640, 587, 641, 584, 601,
	592, 591, 582, 570, 602, 603, 555, 550, 585, 586,
	573, 588, 551, 552, 553, 554, 351, 565, 0, 382,
	383, 384, 406, 368, 0, 418, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	521, 0, 0, 0, 260, 0, 0, 284, 0, 0,
	0, 0, 556, 0, 0, 343, 298, 0, 0, 0,
	0, 613, 621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 0, 0, 546, 590, 589, 533,
	542, 0, 0, 242, 178, 534, 0, 541, 535, 539,
	538, 536, 537, 0, 605, 0, 0, 0, 0, 0,
	0, 0, 518, 0, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 515, 516,
	0, 0, 0, 0, 566, 0, 517, 0, 0, 561,
	543, 544, 0, 0, 0, 0, 233, 348, 364, 243,
	339, 377, 248, 346, 238, 313, 336, 0, 0, 235,
	362, 345, 295, 278, 279, 234, 0, 331, 258, 271,
	255, 311, 540, 564, 568, 254, 627, 562, 372, 237,
	0, 371, 310, 358, 363, 296, 290, 236, 360, 294,
	289, 282, 262, 628, 275, 322, 288, 323, 276, 300,
	299, 301, 0, 0, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 374, 0, 0, 611, 0,
	0, 0, 347, 0, 0, 283, 0, 0, 0, 563,
	0, 334, 316, 624, 0, 0, 332, 286, 359, 324,
	365, 349, 373, 328, 325, 228, 350, 257, 297, 239,
	241, 253, 259, 261, 263, 264, 306, 307, 319, 338,
	352, 353, 354, 256, 249, 333, 250, 273, 251, 229,
	340, 252, 231, 320, 357, 0, 269, 329, 293, 232,
	292, 321, 356, 355, 240, 381, 387, 388, 393, 0,
	394, 0, 0, 0, 402, 407, 408, 409, 411, 412,
	413, 414, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 386, 267, 225, 226, 421, 609, 312,
	0, 0, 623, 604, 606, 607, 610, 614, 615, 616,
	617, 618, 620, 622, 626, 420, 0, 0, 0, 0,
	0, 419, 318, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 367, 379,
	397, 400, 0, 0, 0, 230, 399, 0, 0, 0,
	0, 0, 0, 0, 625, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 567, 302, 303, 304, 305, 612,
	0, 247, 398, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 392, 266, 272, 410, 274, 246, 317, 268, 376,
	280, 0, 403, 0, 404, 0, 0, 0, 0, 309,
	277, 341, 281, 287, 330, 375, 315, 335, 244, 366,
	342, 291, 0, 0, 634, 608, 633, 635, 636, 632,
	637, 638, 619, 524, 0, 571, 630, 629, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 285, 0, 326, 265, 597, 576,
	577, 578, 523, 579, 574, 575, 598, 569, 594, 595,
	548, 572, 580, 593, 581, 596, 599, 600, 639, 640,
	587, 641, 584, 601, 592, 591, 582, 570, 602, 603,
	555, 550, 585, 586, 573, 588, 551, 552, 553, 554,
	0, 0, 0, 382, 383, 384, 406, 368, 0, 418,
	155, 351, 49, 147, 124, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	148, 0, 0, 0, 0, 0, 0, 140, 0, 260,
	0, 149, 284, 0, 0, 0, 0, 107, 0, 0,
	343, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 152, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 242, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 348, 364, 243, 339, 377, 248, 346, 238,
	313, 336, 0, 0, 235, 362, 345, 295, 278, 279,
	234, 0, 331, 258, 271, 255, 311, 0, 361, 389,
	254, 380, 0, 372, 237, 0, 371, 310, 358, 363,
	296, 290, 236, 360, 294, 289, 282, 262, 405, 275,
	322, 288, 323, 276, 300, 299, 301, 0, 0, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 0, 123,
	146, 153, 0, 94, 0, 0, 0, 0, 0, 0,
	374, 0, 0, 170, 0, 0, 0, 347, 0, 0,
	283, 145, 139, 138, 390, 0, 334, 316, 55, 0,
	0, 332, 286, 359, 324, 365, 349, 373, 328, 325,
	228, 350, 257, 297, 239, 241, 253, 259, 261, 263,
	264, 306, 307, 319, 338, 352, 353, 354, 256, 249,
	333, 250, 273, 251, 229, 340, 252, 231, 320, 357,
	0, 269, 329, 293, 232, 292, 321, 356, 355, 240,
	381, 387, 388, 393, 0, 394, 141, 142, 143, 402,
	407, 408, 409, 411, 412, 413, 414, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 386, 267,
	225, 226, 369, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 385, 173, 0, 0, 0,
	181, 0, 0, 0, 144, 0, 182, 318, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 367, 379, 397, 400, 0, 0, 0,
	230, 399, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 395,
	302, 303, 304, 305, 270, 0, 247, 398, 327, 105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 48,
	0, 0, 0, 0, 0, 391, 392, 266, 272, 410,
	274, 246, 317, 268, 376, 280, 0, 403, 0, 404,
	0, 0, 0, 0, 309, 277, 341, 281, 287, 330,
	375, 315, 335, 244, 366, 342, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 50, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 285,
	125, 326, 265, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 0, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	0, 221, 222, 223, 224, 0, 0, 0, 382, 383,
	384, 406, 368, 351, 183, 38, 171, 174, 176, 175,
	0, 47, 5, 0, 314, 110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 343, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	990, 0, 0, 177, 0, 0, 533, 542, 0, 0,
	242, 178, 534, 0, 541, 535, 539, 538, 536, 537,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 0, 0,
	0, 0, 0, 233, 348, 364, 243, 339, 377, 248,
	346, 238, 313, 336, 0, 0, 235, 362, 345, 295,
	278, 279, 234, 0, 331, 258, 271, 255, 311, 540,
	361, 389, 254, 380, 0, 372, 237, 0, 371, 310,
	358, 363, 296, 290, 236, 360, 294, 289, 282, 262,
	405, 275, 322, 288, 323, 276, 300, 299, 301, 0,
	0, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 283, 0, 0, 0, 390, 0, 334, 316,
	0, 0, 0, 332, 286, 359, 324, 365, 349, 373,
	328, 325, 228, 350, 257, 297, 239, 241, 253, 259,
	261, 263, 264, 306, 307, 319, 338, 352, 353, 354,
	256, 249, 333, 250, 273, 251, 229, 340, 252, 231,
	320, 357, 0, 269, 329, 293, 232, 292, 321, 356,
	355, 240, 381, 387, 388, 393, 0, 394, 0, 0,
	0, 402, 407, 408, 409, 411, 412, 413, 414, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	386, 267, 225, 226, 421, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 385, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 419, 318,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 367, 379, 397, 400, 0,
	0, 0, 230, 399, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 395, 302, 303, 304, 305, 270, 0, 247, 398,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 392, 266,
	272, 410, 274, 246, 317, 268, 376, 280, 0, 403,
	0, 404, 0, 0, 0, 0, 309, 277, 341, 281,
	287, 330, 375, 315, 335, 244, 366, 342, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 285, 0, 326, 265, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 0, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 0, 221, 222, 223, 224, 0, 0, 0,
	382, 383, 384, 406, 368, 0, 418, 155, 351, 49,
	147, 124, 0, 0, 0, 0, 0, 0, 0, 314,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 284,
	0, 0, 0, 0, 0, 0, 0, 343, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 443, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 242, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 348,
	364, 243, 339, 377, 248, 346, 238, 313, 336, 0,
	0, 235, 362, 345, 295, 278, 279, 234, 0, 331,
	258, 271, 255, 311, 0, 361, 389, 254, 380, 0,
	372, 237, 0, 371, 310, 358, 363, 296, 290, 236,
	360, 294, 289, 282, 262, 405, 275, 322, 288, 323,
	276, 300, 299, 301, 0, 0, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 0, 0, 374, 0, 0,
	0, 0, 0, 0, 347, 0, 0, 283, 0, 0,
	0, 390, 0, 334, 316, 0, 0, 0, 332, 286,
	359, 324, 365, 349, 373, 328, 325, 228, 350, 257,
	297, 239, 241, 253, 259, 261, 263, 264, 306, 307,
	319, 338, 352, 353, 354, 256, 249, 333, 250, 273,
	251, 229, 340, 252, 231, 320, 357, 0, 269, 329,
	293, 232, 292, 321, 356, 355, 240, 381, 387, 388,
	393, 0, 394, 0, 0, 0, 402, 407, 408, 409,
	411, 412, 413, 414, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 386, 267, 225, 226, 421,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 385, 0, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 419, 318, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	367, 379, 397, 400, 0, 0, 0, 230, 399, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	378, 0, 0, 0, 0, 0, 395, 302, 303, 304,
	305, 439, 441, 247, 398, 327, 451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 392, 266, 272, 410, 274, 246, 317,
	268, 376, 280, 0, 403, 0, 404, 0, 0, 0,
	0, 309, 277, 341, 281, 287, 330, 375, 315, 335,
	244, 366, 342, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 50, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 285, 125, 326, 265,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 0, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 0, 221, 222,
	223, 224, 351, 0, 0, 382, 383, 384, 406, 368,
	0, 418, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 820, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 284, 0, 0, 0, 0, 0, 0,
	0, 343, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 242,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 808, 0, 0, 0, 0,
	0, 0, 233, 348, 364, 243, 339, 377, 248, 346,
	238, 313, 336, 0, 0, 1773, 1775, 1776, 1777, 1778,
	1779, 1780, 0, 1784, 1781, 1782, 1783, 311, 0, 1768,
	1769, 1770, 1771, 806, 1754, 1774, 0, 1755, 310, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1772, 322, 288, 323, 276, 300, 299, 301, 831, 833,
	835, 837, 840, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 0, 0, 0, 0, 0, 347, 0,
	0, 283, 0, 0, 0, 1767, 0, 334, 316, 0,
	0, 0, 332, 286, 359, 324, 365, 349, 373, 328,
	325, 228, 350, 257, 297, 239, 241, 253, 259, 261,
	263, 264, 306, 307, 319, 338, 352, 353, 354, 256,
	249, 333, 250, 273, 251, 229, 340, 252, 231, 320,
	357, 0, 269, 329, 293, 232, 292, 321, 356, 355,
	240, 381, 387, 388, 393, 0, 394, 0, 0, 0,
	402, 407, 408, 409, 411, 412, 413, 414, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 386,
	267, 225, 226, 421, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 385, 0, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 419, 318, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 367, 379, 397, 400, 0, 0,
	0, 230, 399, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 378, 0, 0, 0, 0, 0,
	395, 302, 303, 304, 305, 270, 0, 247, 398, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 392, 266, 272,
	410, 274, 246, 317, 268, 376, 280, 0, 403, 0,
	404, 0, 0, 0, 0, 309, 277, 341, 281, 287,
	330, 375, 315, 335, 244, 366, 342, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 830,
	285, 0, 326, 265, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 0, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 0, 221, 222, 223, 224, 351, 0, 0, 382,
	383, 384, 406, 368, 0, 418, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 343, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 242, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 1841, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 348, 364, 243,
	339, 377, 248, 346, 238, 313, 336, 0, 0, 235,
	362, 345, 295, 278, 279, 234, 0, 331, 258, 271,
	255, 311, 0, 361, 389, 254, 380, 0, 372, 237,
	0, 371, 310, 358, 363, 296, 290, 236, 360, 294,
	289, 282, 262, 405, 275, 322, 288, 323, 276, 300,
	299, 301, 0, 0, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 374, 0, 0, 0, 1840,
	1830, 1839, 347, 1837, 1842, 283, 0, 0, 0, 390,
	0, 334, 316, 0, 0, 0, 332, 286, 359, 324,
	365, 349, 373, 328, 325, 228, 350, 257, 297, 239,
	241, 253, 259, 261, 263, 264, 306, 307, 319, 338,
	352, 353, 354, 256, 249, 333, 250, 273, 251, 229,
	340, 252, 231, 320, 357, 1843, 269, 329, 293, 232,
	292, 321, 356, 355, 240, 381, 387, 388, 393, 0,
	394, 0, 0, 0, 402, 407, 408, 409, 411, 412,
	413, 414, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 386, 267, 225, 226, 421, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	385, 0, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 419, 318, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 367, 379,
	397, 400, 0, 0, 0, 230, 399, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 395, 302, 303, 304, 305, 270,
	0, 247, 398, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 392, 266, 272, 410, 274, 246, 317, 268, 376,
	280, 0, 403, 0, 404, 0, 0, 0, 0, 309,
	277, 341, 281, 287, 330, 375, 315, 335, 244, 366,
	342, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 285, 0, 326, 265, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	0, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 0, 221, 222, 223, 224,
	351, 0, 0, 382, 383, 384, 406, 368, 0, 418,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 284, 0, 0, 0, 0, 0, 0, 0, 343,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 242, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 1841,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 348, 364, 243, 339, 377, 248, 346, 238, 313,
	336, 0, 0, 235, 362, 345, 295, 278, 279, 234,
	0, 331, 258, 271, 255, 311, 0, 361, 389, 254,
	380, 0, 372, 237, 0, 371, 310, 358, 363, 296,
	290, 236, 360, 294, 289, 282, 262, 405, 275, 322,
	288, 323, 276, 300, 299, 301, 0, 0, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 374,
	0, 0, 0, 1840, 0, 1839, 347, 1837, 1842, 283,
	0, 0, 0, 390, 0, 334, 316, 0, 0, 0,
	332, 286, 359, 324, 365, 349, 373, 328, 325, 228,
	350, 257, 297, 239, 241, 253, 259, 261, 263, 264,
	306, 307, 319, 338, 352, 353, 354, 256, 249, 333,
	250, 273, 251, 229, 340, 252, 231, 320, 357, 1843,
	269, 329, 293, 232, 292, 321, 356, 355, 240, 381,
	387, 388, 393, 0, 394, 0, 0, 0, 402, 407,
	408, 409, 411, 412, 413, 414, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 386, 267, 225,
	226, 421, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 385, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 419, 318, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 367, 379, 397, 400, 0, 0, 0, 230,
	399, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 378, 0, 0, 0, 0, 0, 395, 302,
	303, 304, 305, 270, 0, 247, 398, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 391, 392, 266, 272, 410, 274,
	246, 317, 268, 376, 280, 0, 403, 0, 404, 0,
	0, 0, 0, 309, 277, 341, 281, 287, 330, 375,
	315, 335, 244, 366, 342, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 285, 0,
	326, 265, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 0, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 0,
	221, 222, 223, 224, 351, 0, 0, 382, 383, 384,
	406, 368, 0, 418, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1581, 0, 0,
	0, 0, 260, 0, 0, 284, 0, 0, 0, 0,
	0, 0, 0, 343, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 1582, 0, 0,
	0, 242, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 925, 926, 927, 924, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 348, 364, 243, 339, 377,
	248, 346, 238, 313, 336, 0, 0, 235, 362, 345,
	295, 278, 279, 234, 0, 331, 258, 271, 255, 311,
	0, 361, 389, 254, 380, 0, 372, 237, 0, 371,
	310, 358, 363, 296, 290, 236, 360, 294, 289, 282,
	262, 405, 275, 322, 288, 323, 276, 300, 299, 301,
	0, 0, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 0, 0, 0,
	347, 0, 0, 283, 0, 0, 0, 390, 0, 334,
	316, 0, 0, 0, 332, 286, 359, 324, 365, 349,
	373, 328, 325, 228, 350, 257, 297, 239, 241, 253,
	259, 261, 263, 264, 306, 307, 319, 338, 352, 353,
	354, 256, 249, 333, 250, 273, 251, 229, 340, 252,
	231, 320, 357, 0, 269, 329, 293, 232, 292, 321,
	356, 355, 240, 381, 387, 388, 393, 0, 394, 0,
	0, 0, 402, 407, 408, 409, 411, 412, 413, 414,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 386, 267, 225, 226, 421, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 385, 0,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 419,
	318, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 367, 379, 397, 400,
	0, 0, 0, 230, 399, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 395, 302, 303, 304, 305, 270, 0, 247,
	398, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 392,
	266, 272, 410, 274, 246, 317, 268, 376, 280, 0,
	403, 0, 404, 0, 0, 0, 0, 309, 277, 341,
	281, 287, 330, 375, 315, 335, 244, 366, 342, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 285, 0, 326, 265, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 0, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 0, 221, 222, 223, 224, 351, 0,
	0, 382, 383, 384, 406, 368, 0, 418, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 744, 0, 284,
	0, 0, 0, 0, 0, 0, 0, 343, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 752,
	753, 0, 0, 0, 0, 242, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 348,
	364, 243, 339, 377, 248, 346, 238, 313, 336, 0,
	0, 235, 362, 345, 295, 278, 279, 234, 0, 331,
	258, 271, 255, 311, 0, 361, 389, 254, 380, 734,
	372, 237, 733, 371, 310, 358, 363, 296, 290, 236,
	360, 294, 289, 282, 262, 405, 275, 322, 288, 323,
	276, 300, 299, 301, 0, 0, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 0,
	0, 0, 0, 0, 347, 0, 0, 283, 0, 0,
	0, 390, 0, 334, 316, 0, 0, 0, 332, 286,
	359, 324, 365, 349, 373, 742, 325, 228, 350, 257,
	297, 239, 241, 253, 259, 261, 263, 264, 306, 307,
	319, 338, 352, 353, 354, 256, 249, 333, 250, 273,
	251, 229, 340, 252, 231, 320, 357, 0, 269, 329,
	293, 232, 292, 321, 356, 355, 240, 381, 387, 388,
	393, 0, 394, 0, 0, 0, 402, 407, 408, 409,
	411, 412, 413, 414, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 386, 267, 225, 226, 421,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 385, 0, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 419, 318, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	367, 379, 397, 400, 0, 0, 0, 230, 399, 0,
	0, 0, 0, 0, 0, 743, 370, 0, 0, 0,
	378, 0, 0, 0, 0, 0, 746, 302, 303, 304,
	305, 270, 0, 247, 398, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 392, 266, 272, 410, 274, 246, 317,
	268, 376, 280, 0, 403, 0, 404, 0, 0, 0,
	0, 754, 749, 750, 281, 287, 330, 375, 315, 335,
	244, 366, 342, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 285, 0, 326, 265,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 0, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 0, 221, 222,
	223, 224, 351, 0, 0, 382, 383, 384, 406, 368,
	0, 418, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 284, 0, 0, 0, 0, 0, 0,
	0, 343, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 242,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 348, 364, 243, 339, 377, 248, 346,
	238, 313, 336, 0, 0, 235, 362, 345, 295, 278,
	279, 234, 0, 331, 258, 271, 255, 311, 0, 361,
	389, 254, 380, 0, 372, 237, 0, 371, 310, 358,
	363, 296, 290, 236, 360, 294, 289, 282, 262, 405,
	275, 322, 288, 323, 276, 300, 299, 301, 0, 0,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 374, 0, 0, 0, 1852, 1850, 0, 347, 0,
	1851, 283, 0, 0, 0, 390, 0, 334, 316, 0,
	0, 0, 332, 286, 359, 324, 365, 349, 373, 328,
	325, 228, 350, 257, 297, 239, 241, 253, 259, 261,
	263, 264, 306, 307, 319, 338, 352, 353, 354, 256,
	249, 333, 250, 273, 251, 229, 340, 252, 231, 320,
	357, 0, 269, 329, 293, 232, 292, 321, 356, 355,
	240, 381, 387, 388, 393, 0, 394, 0, 0, 0,
	402, 407, 408, 409, 411, 412, 413, 414, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 386,
	267, 225, 226, 421, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 385, 0, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 419, 318, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 367, 379, 397, 400, 0, 0,
	0, 230, 399, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 378, 0, 0, 0, 0, 0,
	395, 302, 303, 304, 305, 270, 0, 247, 398, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 392, 266, 272,
	410, 274, 246, 317, 268, 376, 280, 0, 403, 0,
	404, 0, 0, 0, 0, 309, 277, 341, 281, 287,
	330, 375, 315, 335, 244, 366, 342, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	285, 0, 326, 265, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 0, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 0, 221, 222, 223, 224, 155, 351, 0, 382,
	383, 384, 406, 368, 0, 418, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 284, 0,
	0, 0, 0, 107, 0, 0, 343, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 1625, 0, 177, 0, 0,
	0, 0, 0, 0, 242, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 348, 364,
	243, 339, 377, 248, 346, 238, 313, 336, 0, 0,
	235, 362, 345, 295, 278, 279, 234, 0, 331, 258,
	271, 255, 311, 0, 361, 389, 254, 380, 0, 372,
	237, 0, 371, 310, 358, 363, 296, 290, 236, 360,
	294, 289, 282, 262, 405, 275, 322, 288, 323, 276,
	300, 299, 301, 0, 0, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 283, 0, 0, 0,
	390, 0, 334, 316, 0, 0, 0, 332, 286, 359,
	324, 365, 349, 373, 328, 325, 228, 350, 257, 297,
	239, 241, 253, 259, 261, 263, 264, 306, 307, 319,
	338, 352, 353, 354, 256, 249, 333, 250, 273, 251,
	229, 340, 252, 231, 320, 357, 0, 269, 329, 293,
	232, 292, 321, 356, 355, 240, 381, 387, 388, 393,
	0, 394, 0, 0, 0, 402, 407, 408, 409, 411,
	412, 413, 414, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 386, 267, 225, 226, 421, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 385, 0, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 419, 318, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 367,
	379, 397, 400, 0, 0, 0, 230, 399, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 395, 302, 303, 304, 305,
	270, 0, 247, 398, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 392, 266, 272, 410, 274, 246, 317, 268,
	376, 280, 0, 403, 0, 404, 0, 0, 0, 0,
	309, 277, 341, 281, 287, 330, 375, 315, 335, 244,
	366, 342, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 285, 125, 326, 265, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 0, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 0, 221, 222, 223,
	224, 155, 351, 0, 382, 383, 384, 406, 368, 0,
	418, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 284, 0, 0, 0, 0, 107, 0,
	0, 343, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	1616, 0, 177, 0, 0, 0, 0, 0, 0, 242,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 348, 364, 243, 339, 377, 248, 346,
	238, 313, 336, 0, 0, 235, 362, 345, 295, 278,
	279, 234, 0, 331, 258, 271, 255, 311, 0, 361,
	389, 254, 380, 0, 372, 237, 0, 371, 310, 358,
	363, 296, 290, 236, 360, 294, 289, 282, 262, 405,
	275, 322, 288, 323, 276, 300, 299, 301, 0, 0,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 0, 0, 0, 0, 0, 347, 0,
	0, 283, 0, 0, 0, 390, 0, 334, 316, 0,
	0, 0, 332, 286, 359, 324, 365, 349, 373, 328,
	325, 228, 350, 257, 297, 239, 241, 253, 259, 261,
	263, 264, 306, 307, 319, 338, 352, 353, 354, 256,
	249, 333, 250, 273, 251, 229, 340, 252, 231, 320,
	357, 0, 269, 329, 293, 232, 292, 321, 356, 355,
	240, 381, 387, 388, 393, 0, 394, 0, 0, 0,
	402, 407, 408, 409, 411, 412, 413, 414, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 386,
	267, 225, 226, 421, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 385, 0, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 419, 318, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 367, 379, 397, 400, 0, 0,
	0, 230, 399, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 378, 0, 0, 0, 0, 0,
	395, 302, 303, 304, 305, 270, 0, 247, 398, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 392, 266, 272,
	410, 274, 246, 317, 268, 376, 280, 0, 403, 0,
	404, 0, 0, 0, 0, 309, 277, 341, 281, 287,
	330, 375, 315, 335, 244, 366, 342, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	285, 125, 326, 265, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 0, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 0, 221, 222, 223, 224, 155, 351, 0, 382,
	383, 384, 406, 368, 0, 418, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 284, 0,
	0, 0, 0, 107, 0, 0, 343, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1532, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 242, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 348, 364,
	243, 339, 377, 248, 346, 238, 313, 336, 0, 0,
	235, 362, 345, 295, 278, 279, 234, 0, 331, 258,
	271, 255, 311, 0, 361, 389, 254, 380, 0, 372,
	237, 0, 371, 310, 358, 363, 296, 290, 236, 360,
	294, 289, 282, 262, 405, 275, 322, 288, 323, 276,
	300, 299, 301, 0, 0, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 283, 0, 0, 0,
	390, 0, 334, 316, 0, 0, 0, 332, 286, 359,
	324, 365, 349, 373, 328, 325, 228, 350, 257, 297,
	239, 241, 253, 259, 261, 263, 264, 306, 307, 319,
	338, 352, 353, 354, 256, 249, 333, 250, 273, 251,
	229, 340, 252, 231, 320, 357, 0, 269, 329, 293,
	232, 292, 321, 356, 355, 240, 381, 387, 388, 393,
	0, 394, 0, 0, 0, 402, 407, 408, 409, 411,
	412, 413, 414, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 386, 267, 225, 226, 421, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 385, 0, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 419, 318, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 367,
	379, 397, 400, 0, 0, 0, 230, 399, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 395, 302, 303, 304, 305,
	270, 0, 247, 398, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 392, 266, 272, 410, 274, 246, 317, 268,
	376, 280, 0, 403, 0, 404, 0, 0, 0, 0,
	309, 277, 341, 281, 287, 330, 375, 315, 335, 244,
	366, 342, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 285, 125, 326, 265, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 0, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 0, 221, 222, 223,
	224, 351, 0, 0, 382, 383, 384, 406, 368, 0,
	418, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 284, 0, 0, 0, 0, 0, 0, 0,
	343, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 752, 753, 0, 0, 0, 0, 242, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 348, 364, 243, 339, 377, 248, 346, 238,
	313, 336, 0, 0, 235, 362, 345, 295, 278, 279,
	234, 0, 331, 258, 271, 255, 311, 0, 361, 389,
	254, 380, 734, 372, 237, 733, 371, 310, 358, 363,
	296, 290, 236, 360, 294, 289, 282, 262, 405, 275,
	322, 288, 323, 276, 300, 299, 301, 0, 0, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	283, 0, 0, 0, 390, 0, 334, 316, 0, 0,
	0, 332, 286, 359, 324, 365, 349, 373, 328, 325,
	228, 350, 257, 297, 239, 241, 253, 259, 261, 263,
	264, 306, 307, 319, 338, 352, 353, 354, 256, 249,
	333, 250, 273, 251, 229, 340, 252, 231, 320, 357,
	0, 269, 329, 293, 232, 292, 321, 356, 355, 240,
	381, 387, 388, 393, 0, 394, 0, 0, 0, 402,
	407, 408, 409, 411, 412, 413, 414, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 386, 267,
	225, 226, 421, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 385, 0, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 419, 318, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 367, 379, 397, 400, 0, 0, 0,
	230, 399, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 395,
	302, 303, 304, 305, 270, 0, 247, 398, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 392, 266, 272, 410,
	274, 246, 317, 268, 376, 280, 0, 403, 0, 404,
	0, 0, 0, 0, 754, 749, 750, 281, 287, 330,
	375, 315, 335, 244, 366, 342, 751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 285,
	0, 326, 265, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 0, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	0, 221, 222, 223, 224, 351, 0, 0, 382, 383,
	384, 406, 368, 0, 418, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 2180, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 284, 0, 0, 0,
	0, 0, 0, 0, 343, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 242, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 348, 364, 243, 339,
	377, 248, 346, 238, 313, 336, 0, 0, 235, 362,
	345, 295, 278, 279, 234, 0, 331, 258, 271, 255,
	311, 0, 361, 389, 254, 380, 0, 372, 237, 0,
	371, 310, 358, 363, 296, 290, 236, 360, 294, 289,
	282, 262, 405, 275, 322, 288, 323, 276, 300, 299,
	301, 0, 0, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 2183, 0, 0, 2182, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 283, 0, 0, 0, 390, 0,
	334, 316, 0, 0, 0, 332, 286, 359, 324, 365,
	349, 373, 328, 325, 228, 350, 257, 297, 239, 241,
	253, 259, 261, 263, 264, 306, 307, 319, 338, 352,
	353, 354, 256, 249, 333, 250, 273, 251, 229, 340,
	252, 231, 320, 357, 0, 269, 329, 293, 232, 292,
	321, 356, 355, 240, 381, 387, 388, 393, 0, 394,
	0, 0, 0, 402, 407, 408, 409, 411, 412, 413,
	414, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 386, 267, 225, 226, 421, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 385,
	0, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	419, 318, 0, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 367, 379, 397,
	400, 0, 0, 0, 230, 399, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 0, 378, 0, 0,
	0, 0, 0, 395, 302, 303, 304, 305, 270, 0,
	247, 398, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	392, 266, 272, 410, 274, 246, 317, 268, 376, 280,
	0, 403, 0, 404, 0, 0, 0, 0, 309, 277,
	341, 281, 287, 330, 375, 315, 335, 244, 366, 342,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 285, 0, 326, 265, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 0,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 0, 221, 222, 223, 224, 351,
	0, 0, 382, 383, 384, 406, 368, 0, 418, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 1148, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 343, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 1146, 0, 0, 0, 242, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1144, 0, 0, 0, 0, 0, 0, 233,
	348, 364, 243, 339, 377, 248, 346, 238, 313, 336,
	0, 0, 235, 362, 345, 295, 278, 279, 234, 0,
	331, 258, 271, 255, 311, 0, 361, 389, 254, 380,
	0, 372, 237, 0, 371, 310, 358, 363, 296, 290,
	236, 360, 294, 289, 282, 262, 405, 275, 322, 288,
	323, 276, 300, 299, 301, 0, 0, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 283, 0,
	0, 0, 390, 0, 334, 316, 0, 0, 0, 332,
	286, 359, 324, 365, 349, 373, 328, 325, 228, 350,
	257, 297, 239, 241, 253, 259, 261, 263, 264, 306,
	307, 319, 338, 352, 353, 354, 256, 249, 333, 250,
	273, 251, 229, 340, 252, 231, 320, 357, 0, 269,
	329, 293, 232, 292, 321, 356, 355, 240, 381, 387,
	388, 393, 0, 394, 0, 0, 0, 402, 407, 408,
	409, 411, 412, 413, 414, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 386, 267, 225, 226,
	421, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 385, 0, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 419, 318, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 367, 379, 397, 400, 0, 0, 0, 230, 399,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 395, 302, 303,
	304, 305, 270, 0, 247, 398, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 392, 266, 272, 410, 274, 246,
	317, 268, 376, 280, 0, 403, 0, 404, 0, 0,
	0, 0, 309, 277, 341, 281, 287, 330, 375, 315,
	335, 244, 366, 342, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 285, 0, 326,
	265, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 0, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 0, 221,
	222, 223, 224, 351, 0, 0, 382, 383, 384, 406,
	368, 0, 418, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 1142, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 343, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 1146, 0, 0, 0,
	242, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1144, 0, 0, 0,
	0, 0, 0, 233, 348, 364, 243, 339, 377, 248,
	346, 238, 313, 336, 0, 0, 235, 362, 345, 295,
	278, 279, 234, 0, 331, 258, 271, 255, 311, 0,
	361, 389, 254, 380, 0, 372, 237, 0, 371, 310,
	358, 363, 296, 290, 236, 360, 294, 289, 282, 262,
	405, 275, 322, 288, 323, 276, 300, 299, 301, 0,
	0, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 283, 0, 0, 0, 390, 0, 334, 316,
	0, 0, 0, 332, 286, 359, 324, 365, 349, 373,
	328, 325, 228, 350, 257, 297, 239, 241, 253, 259,
	261, 263, 264, 306, 307, 319, 338, 352, 353, 354,
	256, 249, 333, 250, 273, 251, 229, 340, 252, 231,
	320, 357, 0, 269, 329, 293, 232, 292, 321, 356,
	355, 240, 381, 387, 388, 393, 0, 394, 0, 0,
	0, 402, 407, 408, 409, 411, 412, 413, 414, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	386, 267, 225, 226, 421, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 385, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 419, 318,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 367, 379, 397, 400, 0,
	0, 0, 230, 399, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 395, 302, 303, 304, 305, 270, 0, 247, 398,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 392, 266,
	272, 410, 274, 246, 317, 268, 376, 280, 0, 403,
	0, 404, 0, 0, 0, 0, 309, 277, 341, 281,
	287, 330, 375, 315, 335, 244, 366, 342, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 285, 0, 326, 265, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 0, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 0, 221, 222, 223, 224, 351, 0, 0,
	382, 383, 384, 406, 368, 0, 418, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 284, 0,
	0, 0, 0, 0, 0, 0, 343, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2828, 0, 177, 590, 0,
	0, 0, 0, 0, 242, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 348, 364,
	243, 339, 377, 248, 346, 238, 313, 336, 0, 0,
	235, 362, 345, 295, 278, 279, 234, 0, 331, 258,
	271, 255, 311, 0, 361, 389, 254, 380, 0, 372,
	237, 0, 371, 310, 358, 363, 296, 290, 236, 360,
	294, 289, 282, 262, 405, 275, 322, 288, 323, 276,
	300, 299, 301, 0, 0, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 283, 0, 0, 0,
	390, 0, 334, 316, 0, 0, 0, 332, 286, 359,
	324, 365, 349, 373, 328, 325, 228, 350, 257, 297,
	239, 241, 253, 259, 261, 263, 264, 306, 307, 319,
	338, 352, 353, 354, 256, 249, 333, 250, 273, 251,
	229, 340, 252, 231, 320, 357, 0, 269, 329, 293,
	232, 292, 321, 356, 355, 240, 381, 387, 388, 393,
	0, 394, 0, 0, 0, 402, 407, 408, 409, 411,
	412, 413, 414, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 386, 267, 225, 226, 421, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 385, 0, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 419, 318, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 367,
	379, 397, 400, 0, 0, 0, 230, 399, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 395, 302, 303, 304, 305,
	270, 0, 247, 398, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 392, 266, 272, 410, 274, 246, 317, 268,
	376, 280, 0, 403, 0, 404, 0, 0, 0, 0,
	309, 277, 341, 281, 287, 330, 375, 315, 335, 244,
	366, 342, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 285, 0, 326, 265, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 0, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 0, 221, 222, 223,
	224, 351, 0, 0, 382, 383, 384, 406, 368, 0,
	418, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 284, 0, 0, 0, 0, 0, 0, 0,
	343, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 1146, 0, 0, 0, 242, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2542, 0, 0, 0, 0, 0,
	0, 233, 348, 364, 243, 339, 377, 248, 346, 238,
	313, 336, 0, 0, 235, 362, 345, 295, 278, 279,
	234, 0, 331, 258, 271, 255, 311, 0, 361, 389,
	254, 380, 0, 372, 237, 0, 371, 310, 358, 363,
	296, 290, 236, 360, 294, 289, 282, 262, 405, 275,
	322, 288, 323, 276, 300, 299, 301, 0, 0, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	283, 0, 0, 0, 390, 0, 334, 316, 0, 0,
	0, 332, 286, 359, 324, 365, 349, 373, 328, 325,
	228, 350, 257, 297, 239, 241, 253, 259, 261, 263,
	264, 306, 307, 319, 338, 352, 353, 354, 256, 249,
	333, 250, 273, 251, 229, 340, 252, 231, 320, 357,
	0, 269, 329, 293, 232, 292, 321, 356, 355, 240,
	381, 387, 388, 393, 0, 394, 0, 0, 0, 402,
	407, 408, 409, 411, 412, 413, 414, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 386, 267,
	225, 226, 421, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 385, 0, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 419, 318, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 367, 379, 397, 400, 0, 0, 0,
	230, 399, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 395,
	302, 303, 304, 305, 270, 0, 247, 398, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 392, 266, 272, 410,
	274, 246, 317, 268, 376, 280, 0, 403, 0, 404,
	0, 0, 0, 0, 309, 277, 341, 281, 287, 330,
	375, 315, 335, 244, 366, 342, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 285,
	0, 326, 265, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 0, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	0, 221, 222, 223, 224, 351, 0, 0, 382, 383,
	384, 406, 368, 0, 418, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 284, 0, 0, 0,
	0, 0, 0, 0, 343, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 1146, 0,
	0, 0, 242, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1144, 0,
	0, 0, 0, 0, 0, 233, 348, 364, 243, 339,
	377, 248, 346, 238, 313, 336, 0, 0, 235, 362,
	345, 295, 278, 279, 234, 0, 331, 258, 271, 255,
	311, 0, 361, 389, 254, 380, 0, 372, 237, 0,
	371, 310, 358, 363, 296, 290, 236, 360, 294, 289,
	282, 262, 405, 275, 322, 288, 323, 276, 300, 299,
	301, 0, 0, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 283, 0, 0, 0, 390, 0,
	334, 316, 0, 0, 0, 332, 286, 359, 324, 365,
	349, 373, 328, 325, 228, 350, 257, 297, 239, 241,
	253, 259, 261, 263, 264, 306, 307, 319, 338, 352,
	353, 354, 256, 249, 333, 250, 273, 251, 229, 340,
	252, 231, 320, 357, 0, 269, 329, 293, 232, 292,
	321, 356, 355, 240, 381, 387, 388, 393, 0, 394,
	0, 0, 0, 402, 407, 408, 409, 411, 412, 413,
	414, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 386, 267, 225, 226, 421, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 385,
	0, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	419, 318, 0, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 367, 379, 397,
	400, 0, 0, 0, 230, 399, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 0, 378, 0, 0,
	0, 0, 0, 395, 302, 303, 304, 305, 270, 0,
	247, 398, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	392, 266, 272, 410, 274, 246, 317, 268, 376, 280,
	0, 403, 0, 404, 0, 0, 0, 0, 309, 277,
	341, 281, 287, 330, 375, 315, 335, 244, 366, 342,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 285, 0, 326, 265, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 0,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 0, 221, 222, 223, 224, 351,
	0, 0, 382, 383, 384, 406, 368, 0, 418, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1905, 0, 0, 0, 0, 260, 0, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 343, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 1907, 0, 0, 0, 242, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	348, 364, 243, 339, 377, 248, 346, 238, 313, 336,
	0, 0, 235, 362, 345, 295, 278, 279, 234, 0,
	331, 258, 271, 255, 311, 0, 361, 389, 254, 380,
	0, 372, 237, 0, 371, 310, 358, 363, 296, 290,
	236, 360, 294, 289, 282, 262, 405, 275, 322, 288,
	323, 276, 300, 299, 301, 0, 0, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 283, 0,
	0, 0, 390, 0, 334, 316, 0, 0, 0, 332,
	286, 359, 324, 365, 349, 373, 328, 325, 228, 350,
	257, 297, 239, 241, 253, 259, 261, 263, 264, 306,
	307, 319, 338, 352, 353, 354, 256, 249, 333, 250,
	273, 251, 229, 340, 252, 231, 320, 357, 0, 269,
	329, 293, 232, 292, 321, 356, 355, 240, 381, 387,
	388, 393, 0, 394, 0, 0, 0, 402, 407, 408,
	409, 411, 412, 413, 414, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 386, 267, 225, 226,
	421, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 385, 0, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 419, 318, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 367, 379, 397, 400, 0, 0, 0, 230, 399,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 395, 302, 303,
	304, 305, 270, 0, 247, 398, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 392, 266, 272, 410, 274, 246,
	317, 268, 376, 280, 0, 403, 0, 404, 0, 0,
	0, 0, 309, 277, 341, 281, 287, 330, 375, 315,
	335, 244, 366, 342, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 285, 0, 326,
	265, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 0, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 0, 221,
	222, 223, 224, 351, 0, 0, 382, 383, 384, 406,
	368, 0, 418, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 1920, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 343, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 1146, 0, 0, 0,
	242, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 348, 364, 243, 339, 377, 248,
	346, 238, 313, 336, 0, 0, 235, 362, 345, 295,
	278, 279, 234, 0, 331, 258, 271, 255, 311, 0,
	361, 389, 254, 380, 0, 372, 237, 0, 371, 310,
	358, 363, 296, 290, 236, 360, 294, 289, 282, 262,
	405, 275, 322, 288, 323, 276, 300, 299, 301, 0,
	0, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 283, 0, 0, 0, 390, 0, 334, 316,
	0, 0, 0, 332, 286, 359, 324, 365, 349, 373,
	328, 325, 228, 350, 257, 297, 239, 241, 253, 259,
	261, 263, 264, 306, 307, 319, 338, 352, 353, 354,
	256, 249, 333, 250, 273, 251, 229, 340, 252, 231,
	320, 357, 0, 269, 329, 293, 232, 292, 321, 356,
	355, 240, 381, 387, 388, 393, 0, 394, 0, 0,
	0, 402, 407, 408, 409, 411, 412, 413, 414, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	386, 267, 225, 226, 421, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 385, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 419, 318,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 367, 379, 397, 400, 0,
	0, 0, 230, 399, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 395, 302, 303, 304, 305, 270, 0, 247, 398,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 392, 266,
	272, 410, 274, 246, 317, 268, 376, 280, 0, 403,
	0, 404, 0, 0, 0, 0, 309, 277, 341, 281,
	287, 330, 375, 315, 335, 244, 366, 342, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 285, 0, 326, 265, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 0, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 0, 221, 222, 223, 224, 351, 0, 0,
	382, 383, 384, 406, 368, 0, 418, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 284, 0,
	0, 0, 0, 0, 0, 0, 343, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2906, 0, 177, 0, 0,
	0, 0, 0, 0, 242, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 348, 364,
	243, 339, 377, 248, 346, 238, 313, 336, 0, 0,
	235, 362, 345, 295, 278, 279, 234, 0, 331, 258,
	271, 255, 311, 0, 361, 389, 254, 380, 0, 372,
	237, 0, 371, 310, 358, 363, 296, 290, 236, 360,
	294, 289, 282, 262, 405, 275, 322, 288, 323, 276,
	300, 299, 301, 0, 0, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 283, 0, 0, 0,
	390, 0, 334, 316, 0, 0, 0, 332, 286, 359,
	324, 365, 349, 373, 328, 325, 228, 350, 257, 297,
	239, 241, 253, 259, 261, 263, 264, 306, 307, 319,
	338, 352, 353, 354, 256, 249, 333, 250, 273, 251,
	229, 340, 252, 231, 320, 357, 0, 269, 329, 293,
	232, 292, 321, 356, 355, 240, 381, 387, 388, 393,
	0, 394, 0, 0, 0, 402, 407, 408, 409, 411,
	412, 413, 414, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 386, 267, 225, 226, 421, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 385, 0, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 419, 318, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 367,
	379, 397, 400, 0, 0, 0, 230, 399, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 395, 302, 303, 304, 305,
	270, 0, 247, 398, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 392, 266, 272, 410, 274, 246, 317, 268,
	376, 280, 0, 403, 0, 404, 0, 0, 0, 0,
	309, 277, 341, 281, 287, 330, 375, 315, 335, 244,
	366, 342, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 285, 0, 326, 265, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 0, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 0, 221, 222, 223,
	224, 351, 0, 0, 382, 383, 384, 406, 368, 0,
	418, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 284, 0, 0, 0, 0, 0, 0, 0,
	343, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 590, 0, 0, 0, 0, 0, 242, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 348, 364, 243, 339, 377, 248, 346, 238,
	313, 336, 0, 0, 235, 362, 345, 295, 278, 279,
	234, 0, 331, 258, 271, 255, 311, 0, 361, 389,
	254, 380, 0, 372, 237, 0, 371, 310, 358, 363,
	296, 290, 236, 360, 294, 289, 282, 262, 405, 275,
	322, 288, 323, 276, 300, 299, 301, 0, 0, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	283, 0, 0, 0, 390, 0, 334, 316, 0, 0,
	0, 332, 286, 359, 324, 365, 349, 373, 328, 325,
	228, 350, 257, 297, 239, 241, 253, 259, 261, 263,
	264, 306, 307, 319, 338, 352, 353, 354, 256, 249,
	333, 250, 273, 251, 229, 340, 252, 231, 320, 357,
	0, 269, 329, 293, 232, 292, 321, 356, 355, 240,
	381, 387, 388, 393, 0, 394, 0, 0, 0, 402,
	407, 408, 409, 411, 412, 413, 414, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 386, 267,
	225, 226, 421, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 385, 0, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 419, 318, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 367, 379, 397, 400, 0, 0, 0,
	230, 399, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 395,
	302, 303, 304, 305, 270, 0, 247, 398, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 392, 266, 272, 410,
	274, 246, 317, 268, 376, 280, 0, 403, 0, 404,
	0, 0, 0, 0, 309, 277, 341, 281, 287, 330,
	375, 315, 335, 244, 366, 342, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 285,
	0, 326, 265, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 0, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	0, 221, 222, 223, 224, 351, 0, 0, 382, 383,
	384, 406, 368, 0, 418, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 284, 0, 0, 0,
	0, 0, 0, 0, 343, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2843, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 242, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 348, 364, 243, 339,
	377, 248, 346, 238, 313, 336, 0, 0, 235, 362,
	345, 295, 278, 279, 234, 0, 331, 258, 271, 255,
	311, 0, 361, 389, 254, 380, 0, 372, 237, 0,
	371, 310, 358, 363, 296, 290, 236, 360, 294, 289,
	282, 262, 405, 275, 322, 288, 323, 276, 300, 299,
	301, 0, 0, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 283, 0, 0, 0, 390, 0,
	334, 316, 0, 0, 0, 332, 286, 359, 324, 365,
	349, 373, 328, 325, 228, 350, 257, 297, 239, 241,
	253, 259, 261, 263, 264, 306, 307, 319, 338, 352,
	353, 354, 256, 249, 333, 250, 273, 251, 229, 340,
	252, 231, 320, 357, 0, 269, 329, 293, 232, 292,
	321, 356, 355, 240, 381, 387, 388, 393, 0, 394,
	0, 0, 0, 402, 407, 408, 409, 411, 412, 413,
	414, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 386, 267, 225, 226, 421, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 385,
	0, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	419, 318, 0, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 367, 379, 397,
	400, 0, 0, 0, 230, 399, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 0, 378, 0, 0,
	0, 0, 0, 395, 302, 303, 304, 305, 270, 0,
	247, 398, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	392, 266, 272, 410, 274, 246, 317, 268, 376, 280,
	0, 403, 0, 404, 0, 0, 0, 0, 309, 277,
	341, 281, 287, 330, 375, 315, 335, 244, 366, 342,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 285, 0, 326, 265, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 0,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 0, 221, 222, 223, 224, 351,
	0, 0, 382, 383, 384, 406, 368, 0, 418, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 343, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 242, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	348, 364, 243, 339, 377, 248, 346, 238, 313, 336,
	0, 0, 235, 362, 345, 295, 278, 279, 234, 0,
	331, 258, 271, 255, 311, 0, 361, 389, 254, 380,
	0, 372, 237, 0, 371, 310, 358, 363, 296, 290,
	236, 360, 294, 289, 282, 262, 405, 275, 322, 288,
	323, 276, 300, 299, 301, 0, 0, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	0, 0, 2784, 0, 0, 347, 0, 0, 283, 0,
	0, 0, 390, 0, 334, 316, 0, 0, 0, 332,
	286, 359, 324, 365, 349, 373, 328, 325, 228, 350,
	257, 297, 239, 241, 253, 259, 261, 263, 264, 306,
	307, 319, 338, 352, 353, 354, 256, 249, 333, 250,
	273, 251, 229, 340, 252, 231, 320, 357, 0, 269,
	329, 293, 232, 292, 321, 356, 355, 240, 381, 387,
	388, 393, 0, 394, 0, 0, 0, 402, 407, 408,
	409, 411, 412, 413, 414, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 386, 267, 225, 226,
	421, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 385, 0, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 419, 318, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 367, 379, 397, 400, 0, 0, 0, 230, 399,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 395, 302, 303,
	304, 305, 270, 0, 247, 398, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 392, 266, 272, 410, 274, 246,
	317, 268, 376, 280, 0, 403, 0, 404, 0, 0,
	0, 0, 309, 277, 341, 281, 287, 330, 375, 315,
	335, 244, 366, 342, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 285, 0, 326,
	265, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 0, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 0, 221,
	222, 223, 224, 351, 0, 0, 382, 383, 384, 406,
	368, 0, 418, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 343, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2623, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	242, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 348, 364, 243, 339, 377, 248,
	346, 238, 313, 336, 0, 0, 235, 362, 345, 295,
	278, 279, 234, 0, 331, 258, 271, 255, 311, 0,
	361, 389, 254, 380, 0, 372, 237, 0, 371, 310,
	358, 363, 296, 290, 236, 360, 294, 289, 282, 262,
	405, 275, 322, 288, 323, 276, 300, 299, 301, 0,
	0, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 283, 0, 0, 0, 390, 0, 334, 316,
	0, 0, 0, 332, 286, 359, 324, 365, 349, 373,
	328, 325, 228, 350, 257, 297, 239, 241, 253, 259,
	261, 263, 264, 306, 307, 319, 338, 352, 353, 354,
	256, 249, 333, 250, 273, 251, 229, 340, 252, 231,
	320, 357, 0, 269, 329, 293, 232, 292, 321, 356,
	355, 240, 381, 387, 388, 393, 0, 394, 0, 0,
	0, 402, 407, 408, 409, 411, 412, 413, 414, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	386, 267, 225, 226, 421, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 385, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 419, 318,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 367, 379, 397, 400, 0,
	0, 0, 230, 399, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 395, 302, 303, 304, 305, 270, 0, 247, 398,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 392, 266,
	272, 410, 274, 246, 317, 268, 376, 280, 0, 403,
	0, 404, 0, 0, 0, 0, 309, 277, 341, 281,
	287, 330, 375, 315, 335, 244, 366, 342, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 285, 0, 326, 265, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 0, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 0, 221, 222, 223, 224, 351, 0, 0,
	382, 383, 384, 406, 368, 0, 418, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 284, 0,
	0, 0, 0, 0, 0, 0, 343, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 242, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 348, 364,
	243, 339, 377, 248, 346, 238, 313, 336, 0, 0,
	235, 362, 345, 295, 278, 279, 234, 0, 331, 258,
	271, 255, 311, 0, 361, 389, 254, 380, 0, 372,
	237, 0, 371, 310, 358, 363, 296, 290, 236, 360,
	294, 289, 282, 262, 405, 275, 322, 288, 323, 276,
	300, 299, 301, 0, 0, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	2667, 0, 0, 347, 0, 0, 283, 0, 0, 0,
	390, 0, 334, 316, 0, 0, 0, 332, 286, 359,
	324, 365, 349, 373, 328, 325, 228, 350, 257, 297,
	239, 241, 253, 259, 261, 263, 264, 306, 307, 319,
	338, 352, 353, 354, 256, 249, 333, 250, 273, 251,
	229, 340, 252, 231, 320, 357, 0, 269, 329, 293,
	232, 292, 321, 356, 355, 240, 381, 387, 388, 393,
	0, 394, 0, 0, 0, 402, 407, 408, 409, 411,
	412, 413, 414, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 386, 267, 225, 226, 421, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 385, 0, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 419, 318, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 367,
	379, 397, 400, 0, 0, 0, 230, 399, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 395, 302, 303, 304, 305,
	270, 0, 247, 398, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 392, 266, 272, 410, 274, 246, 317, 268,
	376, 280, 0, 403, 0, 404, 0, 0, 0, 0,
	309, 277, 341, 281, 287, 330, 375, 315, 335, 244,
	366, 342, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 285, 0, 326, 265, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 0, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 0, 221, 222, 223,
	224, 351, 0, 0, 382, 383, 384, 406, 368, 0,
	418, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 284, 0, 0, 0, 0, 0, 0, 0,
	343, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 242, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 348, 364, 243, 339, 377, 248, 346, 238,
	313, 336, 0, 0, 235, 362, 345, 295, 278, 279,
	234, 0, 331, 258, 271, 255, 311, 0, 361, 389,
	254, 380, 0, 372, 237, 0, 371, 310, 358, 363,
	296, 290, 236, 360, 294, 289, 282, 262, 405, 275,
	322, 288, 323, 276, 300, 299, 301, 0, 0, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	283, 0, 0, 0, 390, 0, 334, 316, 0, 0,
	0, 332, 286, 359, 324, 365, 349, 373, 328, 325,
	228, 350, 257, 297, 239, 241, 253, 259, 261, 263,
	264, 306, 307, 319, 338, 352, 353, 354, 256, 249,
	333, 250, 273, 251, 229, 340, 252, 231, 320, 357,
	0, 269, 329, 293, 232, 292, 321, 356, 355, 240,
	381, 387, 388, 393, 0, 394, 0, 0, 0, 402,
	407, 408, 409, 411, 412, 413, 414, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 386, 267,
	225, 226, 421, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 385, 0, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 419, 318, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 367, 379, 397, 400, 0, 0, 0,
	230, 399, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 395,
	302, 303, 304, 305, 270, 0, 247, 398, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 392, 266, 272, 410,
	274, 246, 317, 268, 376, 280, 0, 403, 0, 404,
	0, 0, 0, 0, 309, 277, 341, 281, 287, 330,
	375, 315, 335, 244, 366, 342, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 285,
	0, 326, 265, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 0, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	0, 221, 222, 223, 224, 351, 0, 0, 382, 383,
	384, 406, 368, 0, 418, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 284, 0, 0, 0,
	0, 0, 0, 0, 343, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1532, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 242, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 348, 364, 243, 339,
	377, 248, 346, 238, 313, 336, 0, 0, 235, 362,
	345, 295, 278, 279, 234, 0, 331, 258, 271, 255,
	311, 0, 361, 389, 254, 380, 0, 372, 237, 0,
	371, 310, 358, 363, 296, 290, 236, 360, 294, 289,
	282, 262, 405, 275, 322, 288, 323, 276, 300, 299,
	301, 0, 0, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 283, 0, 0, 0, 390, 0,
	334, 316, 0, 0, 0, 332, 286, 359, 324, 365,
	349, 373, 328, 325, 228, 350, 257, 297, 239, 241,
	253, 259, 261, 263, 264, 306, 307, 319, 338, 352,
	353, 354, 256, 249, 333, 250, 273, 251, 229, 340,
	252, 231, 320, 357, 0, 269, 329, 293, 232, 292,
	321, 356, 355, 240, 381, 387, 388, 393, 0, 394,
	0, 0, 0, 402, 407, 408, 409, 411, 412, 413,
	414, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 386, 267, 225, 226, 421, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 385,
	0, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	419, 318, 0, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 367, 379, 397,
	400, 0, 0, 0, 230, 399, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 0, 378, 0, 0,
	0, 0, 0, 395, 302, 303, 304, 305, 270, 0,
	247, 398, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	392, 266, 272, 410, 274, 246, 317, 268, 376, 280,
	0, 403, 0, 404, 0, 0, 0, 0, 309, 277,
	341, 281, 287, 330, 375, 315, 335, 244, 366, 342,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 285, 0, 326, 265, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 0,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 0, 221, 222, 223, 224, 351,
	0, 0, 382, 383, 384, 406, 368, 0, 418, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 343, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 242, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	348, 364, 243, 339, 377, 248, 346, 238, 313, 336,
	0, 0, 235, 362, 345, 295, 278, 279, 234, 0,
	331, 258, 271, 255, 311, 0, 361, 389, 254, 380,
	0, 372, 237, 0, 371, 310, 358, 363, 296, 290,
	236, 360, 294, 289, 282, 262, 405, 275, 322, 288,
	323, 276, 300, 299, 301, 0, 0, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 283, 0,
	0, 0, 390, 0, 334, 316, 0, 0, 0, 332,
	286, 359, 324, 365, 349, 373, 328, 325, 228, 350,
	257, 297, 239, 241, 253, 259, 261, 263, 264, 306,
	307, 319, 338, 352, 353, 354, 256, 249, 333, 250,
	273, 251, 229, 340, 252, 231, 320, 357, 0, 269,
	329, 293, 232, 292, 321, 356, 355, 240, 381, 387,
	388, 393, 0, 394, 0, 0, 0, 402, 407, 408,
	409, 411, 412, 413, 414, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 386, 267, 225, 226,
	421, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 385, 0, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 419, 318, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 367, 379, 397, 400, 0, 0, 0, 230, 399,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 395, 302, 303,
	304, 305, 270, 0, 247, 398, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 392, 266, 272, 410, 274, 246,
	317, 268, 376, 280, 0, 403, 0, 404, 0, 0,
	0, 0, 309, 277, 341, 281, 287, 330, 375, 315,
	335, 244, 366, 342, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 285, 0, 326,
	265, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 0, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 0, 221,
	222, 223, 224, 351, 0, 0, 382, 383, 384, 406,
	368, 0, 418, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 343, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 2330, 0, 0, 0,
	242, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 348, 364, 243, 339, 377, 248,
	346, 238, 313, 336, 0, 0, 235, 362, 345, 295,
	278, 279, 234, 0, 331, 258, 271, 255, 311, 0,
	361, 389, 254, 380, 0, 372, 237, 0, 371, 310,
	358, 363, 296, 290, 236, 360, 294, 289, 282, 262,
	405, 275, 322, 288, 323, 276, 300, 299, 301, 0,
	0, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 283, 0, 0, 0, 390, 0, 334, 316,
	0, 0, 0, 332, 286, 359, 324, 365, 349, 373,
	328, 325, 228, 350, 257, 297, 239, 241, 253, 259,
	261, 263, 264, 306, 307, 319, 338, 352, 353, 354,
	256, 249, 333, 250, 273, 251, 229, 340, 252, 231,
	320, 357, 0, 269, 329, 293, 232, 292, 321, 356,
	355, 240, 381, 387, 388, 393, 0, 394, 0, 0,
	0, 402, 407, 408, 409, 411, 412, 413, 414, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	386, 267, 225, 226, 421, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 385, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 419, 318,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 367, 379, 397, 400, 0,
	0, 0, 230, 399, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 395, 302, 303, 304, 305, 270, 0, 247, 398,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 392, 266,
	272, 410, 274, 246, 317, 268, 376, 280, 0, 403,
	0, 404, 0, 0, 0, 0, 309, 277, 341, 281,
	287, 330, 375, 315, 335, 244, 366, 342, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 285, 0, 326, 265, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 0, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 0, 221, 222, 223, 224, 351, 0, 0,
	382, 383, 384, 406, 368, 0, 418, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 284, 0,
	0, 0, 0, 0, 0, 0, 343, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 242, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 348, 364,
	243, 339, 377, 248, 346, 238, 313, 336, 0, 0,
	235, 362, 345, 295, 278, 279, 234, 0, 331, 258,
	271, 255, 311, 0, 361, 389, 254, 380, 0, 372,
	237, 0, 371, 310, 358, 363, 296, 290, 236, 360,
	294, 289, 282, 262, 405, 275, 322, 288, 323, 276,
	300, 299, 301, 0, 0, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 283, 0, 0, 0,
	390, 0, 334, 316, 0, 0, 0, 332, 286, 359,
	324, 365, 349, 373, 328, 325, 228, 350, 257, 297,
	239, 241, 253, 259, 261, 263, 264, 306, 307, 319,
	338, 352, 353, 354, 256, 249, 333, 250, 273, 251,
	229, 340, 252, 231, 320, 357, 0, 269, 329, 293,
	232, 292, 321, 356, 355, 240, 381, 387, 388, 393,
	0, 394, 0, 0, 0, 402, 407, 408, 409, 411,
	412, 413, 414, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 386, 267, 225, 226, 421, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 385, 0, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 419, 318, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 367,
	379, 397, 400, 0, 0, 0, 230, 399, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 395, 302, 303, 304, 305,
	270, 0, 247, 398, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 392, 266, 272, 410, 274, 246, 317, 268,
	376, 280, 0, 403, 0, 404, 0, 0, 0, 0,
	309, 277, 341, 281, 287, 330, 375, 315, 335, 244,
	366, 342, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 285, 0, 326, 265, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 0, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 0, 221, 222, 223,
	224, 351, 0, 0, 382, 383, 384, 406, 368, 0,
	418, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 284, 0, 0, 0, 0, 0, 0, 0,
	343, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 1146, 0, 0, 0, 242, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 348, 364, 243, 339, 377, 248, 346, 238,
	313, 336, 0, 0, 235, 362, 345, 295, 278, 279,
	234, 0, 331, 258, 271, 255, 311, 0, 361, 389,
	254, 380, 0, 372, 237, 0, 371, 310, 358, 363,
	296, 290, 236, 360, 294, 289, 282, 262, 405, 275,
	322, 288, 323, 276, 300, 299, 301, 0, 0, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	283, 0, 0, 0, 390, 0, 334, 316, 0, 0,
	0, 332, 286, 359, 324, 365, 349, 373, 328, 325,
	228, 350, 257, 297, 239, 241, 253, 259, 261, 263,
	264, 306, 307, 319, 338, 352, 353, 354, 256, 249,
	333, 250, 273, 251, 229, 340, 252, 231, 320, 357,
	0, 269, 329, 293, 232, 292, 321, 356, 355, 240,
	381, 387, 388, 393, 0, 394, 0, 0, 0, 402,
	407, 408, 409, 411, 412, 413, 414, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 386, 267,
	225, 226, 421, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 385, 0, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 419, 318, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 367, 379, 397, 400, 0, 0, 0,
	230, 399, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 395,
	302, 303, 304, 305, 270, 0, 247, 398, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 392, 266, 272, 410,
	274, 246, 317, 268, 376, 280, 0, 403, 0, 404,
	0, 0, 0, 0, 309, 277, 341, 281, 287, 330,
	375, 315, 335, 244, 366, 342, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 285,
	0, 326, 265, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 0, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	0, 221, 222, 223, 224, 351, 0, 0, 382, 383,
	384, 406, 368, 0, 418, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 284, 0, 0, 0,
	0, 0, 0, 0, 343, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 1907, 0,
	0, 0, 242, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 348, 364, 243, 339,
	377, 248, 346, 238, 313, 336, 0, 0, 235, 362,
	345, 295, 278, 279, 234, 0, 331, 258, 271, 255,
	311, 0, 361, 389, 254, 380, 0, 372, 237, 0,
	371, 310, 358, 363, 296, 290, 236, 360, 294, 289,
	282, 262, 405, 275, 322, 288, 323, 276, 300, 299,
	301, 0, 0, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 283, 0, 0, 0, 390, 0,
	334, 316, 0, 0, 0, 332, 286, 359, 324, 365,
	349, 373, 328, 325, 228, 350, 257, 297, 239, 241,
	253, 259, 261, 263, 264, 306, 307, 319, 338, 352,
	353, 354, 256, 249, 333, 250, 273, 251, 229, 340,
	252, 231, 320, 357, 0, 269, 329, 293, 232, 292,
	321, 356, 355, 240, 381, 387, 388, 393, 0, 394,
	0, 0, 0, 402, 407, 408, 409, 411, 412, 413,
	414, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 386, 267, 225, 226, 421, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 385,
	0, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	419, 318, 0, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 367, 379, 397,
	400, 0, 0, 0, 230, 399, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 0, 378, 0, 0,
	0, 0, 0, 395, 302, 303, 304, 305, 270, 0,
	247, 398, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	392, 266, 272, 410, 274, 246, 317, 268, 376, 280,
	0, 403, 0, 404, 0, 0, 0, 0, 309, 277,
	341, 281, 287, 330, 375, 315, 335, 244, 366, 342,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 285, 0, 326, 265, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 0,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 0, 221, 222, 223, 224, 351,
	0, 0, 382, 383, 384, 406, 368, 0, 418, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 343, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 242, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	348, 364, 243, 339, 377, 248, 346, 238, 313, 336,
	0, 0, 235, 362, 345, 295, 278, 279, 234, 0,
	331, 258, 271, 255, 311, 0, 361, 389, 254, 380,
	0, 372, 237, 0, 371, 310, 358, 363, 296, 290,
	236, 360, 294, 289, 282, 262, 405, 275, 322, 288,
	323, 276, 300, 299, 301, 0, 0, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 283, 0,
	0, 0, 390, 0, 334, 316, 0, 0, 0, 332,
	286, 359, 324, 365, 349, 373, 328, 325, 228, 350,
	257, 297, 239, 241, 253, 259, 261, 263, 264, 306,
	307, 319, 338, 352, 353, 354, 256, 249, 333, 250,
	273, 251, 229, 340, 252, 231, 320, 357, 0, 269,
	329, 293, 232, 292, 321, 356, 355, 240, 381, 387,
	388, 393, 0, 394, 0, 0, 0, 402, 407, 408,
	409, 411, 412, 413, 414, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 386, 267, 225, 226,
	421, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 385, 0, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 419, 318, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 367, 379, 397, 400, 0, 0, 0, 230, 399,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 395, 302, 303,
	304, 305, 270, 0, 247, 398, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 392, 266, 272, 410, 274, 246,
	317, 268, 376, 280, 0, 403, 0, 404, 0, 0,
	0, 0, 309, 277, 341, 281, 287, 330, 375, 315,
	335, 244, 366, 342, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 285, 0, 326,
	265, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 0, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 0, 221,
	222, 223, 224, 351, 0, 0, 382, 383, 384, 406,
	368, 0, 418, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 343, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	242, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 348, 364, 243, 339, 377, 248,
	346, 238, 313, 336, 0, 0, 235, 362, 345, 295,
	278, 279, 234, 0, 331, 258, 271, 255, 311, 0,
	361, 389, 254, 380, 0, 372, 237, 0, 371, 310,
	358, 363, 296, 290, 236, 360, 294, 289, 282, 262,
	405, 275, 322, 288, 323, 276, 300, 299, 301, 0,
	0, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 283, 0, 0, 0, 390, 0, 334, 316,
	0, 0, 0, 332, 286, 359, 324, 365, 349, 373,
	328, 325, 228, 350, 257, 297, 239, 241, 253, 259,
	261, 263, 264, 306, 307, 319, 338, 352, 353, 354,
	256, 249, 333, 250, 273, 251, 229, 340, 252, 231,
	320, 357, 0, 269, 329, 293, 232, 292, 321, 356,
	355, 240, 381, 387, 388, 393, 0, 394, 0, 0,
	0, 402, 407, 408, 409, 411, 412, 413, 414, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	386, 267, 225, 226, 421, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 385, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 419, 318,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 367, 379, 397, 400, 0,
	0, 0, 230, 399, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 395, 302, 303, 304, 305, 270, 0, 247, 398,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 392, 266,
	272, 410, 274, 246, 317, 268, 376, 280, 0, 403,
	0, 404, 0, 0, 0, 0, 309, 277, 341, 281,
	287, 330, 375, 315, 335, 244, 366, 342, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 285, 0, 326, 265, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 0, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 0, 221, 222, 223, 224, 351, 0, 0,
	382, 383, 384, 406, 368, 0, 418, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 284, 0,
	0, 0, 0, 0, 0, 0, 343, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	1933, 0, 0, 0, 242, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 348, 364,
	243, 339, 377, 248, 346, 238, 313, 336, 0, 0,
	235, 362, 345, 295, 278, 279, 234, 0, 331, 258,
	271, 255, 311, 0, 361, 389, 254, 380, 0, 372,
	237, 0, 371, 310, 358, 363, 296, 290, 236, 360,
	294, 289, 282, 262, 405, 275, 322, 288, 323, 276,
	300, 299, 301, 0, 0, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 283, 0, 0, 0,
	390, 0, 334, 316, 0, 0, 0, 332, 286, 359,
	324, 365, 349, 373, 328, 325, 228, 350, 257, 297,
	239, 241, 253, 259, 261, 263, 264, 306, 307, 319,
	338, 352, 353, 354, 256, 249, 333, 250, 273, 251,
	229, 340, 252, 231, 320, 357, 0, 269, 329, 293,
	232, 292, 321, 356, 355, 240, 381, 387, 388, 393,
	0, 394, 0, 0, 0, 402, 407, 408, 409, 411,
	412, 413, 414, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 386, 267, 225, 226, 421, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 385, 0, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 419, 318, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 367,
	379, 397, 400, 0, 0, 0, 230, 399, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 395, 302, 303, 304, 305,
	270, 0, 247, 398, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 392, 266, 272, 410, 274, 246, 317, 268,
	376, 280, 0, 403, 0, 404, 0, 0, 0, 0,
	309, 277, 341, 281, 287, 330, 375, 315, 335, 244,
	366, 342, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 285, 0, 326, 265, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 0, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 0, 221, 222, 223,
	224, 0, 0, 0, 382, 383, 384, 406, 368, 351,
	418, 0, 0, 1804, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 343, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 242, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	348, 364, 243, 339, 377, 248, 346, 238, 313, 336,
	0, 0, 235, 362, 345, 295, 278, 279, 234, 0,
	331, 258, 271, 255, 311, 0, 361, 389, 254, 380,
	0, 372, 237, 0, 371, 310, 358, 363, 296, 290,
	236, 360, 294, 289, 282, 262, 405, 275, 322, 288,
	323, 276, 300, 299, 301, 0, 0, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 283, 0,
	0, 0, 390, 0, 334, 316, 0, 0, 0, 332,
	286, 359, 324, 365, 349, 373, 328, 325, 228, 350,
	257, 297, 239, 241, 253, 259, 261, 263, 264, 306,
	307, 319, 338, 352, 353, 354, 256, 249, 333, 250,
	273, 251, 229, 340, 252, 231, 320, 357, 0, 269,
	329, 293, 232, 292, 321, 356, 355, 240, 381, 387,
	388, 393, 0, 394, 0, 0, 0, 402, 407, 408,
	409, 411, 412, 413, 414, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 386, 267, 225, 226,
	421, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 385, 0, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 419, 318, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 367, 379, 397, 400, 0, 0, 0, 230, 399,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 395, 302, 303,
	304, 305, 270, 0, 247, 398, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 392, 266, 272, 410, 274, 246,
	317, 268, 376, 280, 0, 403, 0, 404, 0, 0,
	0, 0, 309, 277, 341, 281, 287, 330, 375, 315,
	335, 244, 366, 342, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 285, 0, 326,
	265, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 0, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 0, 221,
	222, 223, 224, 351, 0, 0, 382, 383, 384, 406,
	368, 0, 418, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 343, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 1146, 0, 0, 0,
	242, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 348, 364, 243, 339, 377, 248,
	346, 238, 313, 336, 0, 0, 235, 362, 345, 295,
	278, 279, 234, 0, 331, 258, 271, 255, 311, 0,
	361, 389, 254, 380, 0, 372, 237, 0, 371, 310,
	358, 363, 296, 290, 236, 360, 294, 289, 282, 262,
	405, 275, 322, 288, 323, 276, 300, 299, 301, 0,
	0, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 283, 0, 0, 0, 390, 0, 334, 316,
	0, 0, 0, 332, 286, 359, 324, 365, 349, 373,
	1458, 325, 228, 350, 257, 297, 239, 241, 253, 259,
	261, 263, 264, 306, 307, 319, 338, 352, 353, 354,
	256, 249, 333, 250, 273, 251, 229, 340, 252, 231,
	320, 357, 0, 269, 329, 293, 232, 292, 321, 356,
	355, 240, 381, 387, 388, 393, 0, 394, 0, 0,
	0, 402, 407, 408, 409, 411, 412, 413, 414, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	386, 267, 225, 226, 421, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 385, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 419, 318,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 367, 379, 397, 400, 0,
	0, 0, 230, 399, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 395, 302, 303, 304, 305, 270, 0, 247, 398,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 392, 266,
	272, 410, 274, 246, 317, 268, 376, 280, 0, 403,
	0, 404, 0, 0, 0, 0, 309, 277, 341, 281,
	287, 330, 375, 315, 335, 244, 366, 342, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 285, 0, 326, 265, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 0, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 0, 221, 222, 223, 224, 351, 0, 0,
	382, 383, 384, 406, 368, 0, 418, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 284, 0,
	0, 0, 0, 0, 0, 0, 343, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 242, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 348, 364,
	243, 339, 377, 248, 346, 238, 313, 336, 0, 0,
	235, 362, 345, 295, 278, 279, 234, 0, 331, 258,
	271, 255, 311, 0, 361, 389, 254, 380, 0, 372,
	237, 0, 371, 310, 358, 363, 296, 290, 236, 360,
	294, 289, 282, 262, 405, 275, 322, 288, 323, 276,
	300, 299, 301, 0, 0, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 0, 1169,
	0, 0, 0, 347, 0, 0, 283, 0, 0, 0,
	390, 0, 334, 316, 0, 0, 0, 332, 286, 359,
	324, 365, 349, 373, 328, 325, 228, 350, 257, 297,
	239, 241, 253, 259, 261, 263, 264, 306, 307, 319,
	338, 352, 353, 354, 256, 249, 333, 250, 273, 251,
	229, 340, 252, 231, 320, 357, 0, 269, 329, 293,
	232, 292, 321, 356, 355, 240, 381, 387, 388, 393,
	0, 394, 0, 0, 0, 402, 407, 408, 409, 411,
	412, 413, 414, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 386, 267, 225, 226, 421, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 385, 0, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 419, 318, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 367,
	379, 397, 400, 0, 0, 0, 230, 399, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 395, 302, 303, 304, 305,
	270, 0, 247, 398, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 392, 266, 272, 410, 274, 246, 317, 268,
	376, 280, 0, 403, 0, 404, 0, 0, 0, 0,
	309, 277, 341, 281, 287, 330, 375, 315, 335, 244,
	366, 342, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 285, 0, 326, 265, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 0, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 0, 221, 222, 223,
	224, 351, 0, 0, 382, 383, 384, 406, 368, 0,
	418, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 284, 0, 0, 0, 0, 0, 0, 0,
	343, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 242, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 348, 364, 243, 339, 377, 248, 346, 238,
	313, 336, 0, 0, 235, 362, 345, 295, 278, 279,
	234, 0, 331, 258, 271, 255, 311, 0, 361, 389,
	254, 380, 0, 372, 237, 0, 371, 310, 358, 363,
	296, 290, 236, 360, 294, 289, 282, 262, 405, 275,
	322, 288, 323, 276, 300, 299, 301, 0, 0, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	283, 0, 0, 0, 390, 0, 334, 316, 0, 0,
	0, 332, 286, 359, 324, 365, 349, 373, 328, 325,
	228, 350, 257, 297, 239, 241, 253, 259, 261, 263,
	264, 306, 307, 319, 338, 352, 353, 354, 256, 249,
	333, 250, 273, 251, 229, 340, 252, 231, 320, 357,
	0, 269, 329, 293, 232, 292, 321, 356, 355, 240,
	381, 387, 388, 393, 0, 394, 0, 0, 0, 402,
	407, 408, 409, 411, 412, 413, 414, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 386, 267,
	225, 226, 421, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 385, 0, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 419, 318, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 367, 379, 397, 400, 0, 0, 0,
	230, 399, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 395,
	302, 303, 304, 305, 270, 0, 247, 398, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 392, 266, 272, 410,
	274, 246, 317, 268, 376, 280, 0, 403, 0, 404,
	0, 0, 0, 0, 309, 277, 341, 281, 287, 330,
	375, 315, 335, 244, 366, 342, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 690, 0, 0, 0, 227, 0, 285,
	0, 326, 265, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 0, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	0, 221, 222, 223, 224, 351, 0, 0, 382, 383,
	384, 406, 368, 0, 418, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 284, 0, 0, 0,
	0, 0, 0, 0, 343, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 242, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 348, 364, 243, 339,
	377, 248, 346, 238, 313, 336, 0, 0, 235, 362,
	345, 295, 278, 279, 234, 0, 331, 258, 271, 255,
	311, 0, 361, 389, 254, 380, 0, 372, 237, 0,
	371, 310, 358, 363, 296, 290, 236, 360, 294, 289,
	282, 262, 405, 275, 322, 288, 323, 276, 300, 299,
	301, 0, 0, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 283, 0, 0, 0, 390, 0,
	334, 316, 0, 0, 0, 332, 286, 359, 324, 365,
	349, 373, 459, 325, 228, 350, 257, 297, 239, 241,
	253, 259, 261, 263, 264, 306, 307, 319, 338, 352,
	353, 354, 256, 249, 333, 250, 273, 251, 229, 340,
	252, 231, 320, 357, 0, 269, 329, 293, 232, 292,
	321, 356, 355, 240, 381, 387, 388, 393, 0, 394,
	0, 0, 0, 402, 407, 408, 409, 411, 412, 413,
	414, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 386, 267, 225, 226, 421, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 385,
	0, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	419, 318, 0, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 367, 379, 397,
	400, 0, 0, 0, 230, 399, 0, 0, 0, 0,
	0, 0, 460, 370, 0, 0, 0, 378, 0, 0,
	0, 0, 0, 395, 302, 303, 304, 305, 270, 0,
	247, 398, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	392, 266, 272, 410, 274, 246, 317, 268, 376, 280,
	0, 403, 0, 404, 0, 0, 0, 0, 309, 277,
	341, 281, 287, 330, 375, 315, 335, 244, 366, 342,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 285, 0, 326, 265, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 0,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 0, 221, 222, 223, 224, 351,
	0, 0, 382, 383, 384, 406, 368, 0, 418, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 343, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 242, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	348, 364, 243, 339, 377, 248, 346, 238, 313, 336,
	0, 0, 235, 362, 345, 295, 278, 279, 234, 0,
	331, 258, 271, 255, 311, 0, 361, 389, 254, 380,
	0, 372, 237, 0, 371, 310, 358, 363, 296, 290,
	236, 360, 294, 289, 282, 262, 405, 275, 322, 288,
	323, 276, 300, 299, 301, 0, 0, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 436, 0, 0, 374, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 283, 0,
	0, 0, 390, 0, 334, 316, 0, 0, 0, 332,
	286, 359, 324, 365, 349, 373, 328, 325, 228, 350,
	257, 297, 239, 241, 253, 259, 261, 263, 264, 306,
	307, 319, 338, 352, 353, 354, 256, 249, 333, 250,
	273, 251, 229, 340, 252, 231, 320, 357, 0, 269,
	329, 293, 232, 292, 321, 356, 355, 240, 381, 387,
	388, 393, 0, 394, 0, 0, 0, 402, 407, 408,
	409, 411, 412, 413, 414, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 386, 267, 225, 226,
	421, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 385, 0, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 419, 318, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 367, 379, 397, 400, 0, 0, 0, 230, 399,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 395, 302, 303,
	304, 305, 270, 0, 247, 398, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 392, 266, 272, 410, 274, 246,
	317, 268, 376, 280, 0, 403, 0, 404, 0, 0,
	0, 0, 309, 277, 341, 281, 287, 330, 375, 315,
	335, 244, 366, 342, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 285, 0, 326,
	265, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 0, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 0, 221,
	222, 223, 224, 351, 0, 0, 382, 383, 384, 406,
	368, 0, 418, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 260, 0, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 343, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	242, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 348, 364, 243, 339, 377, 248,
	346, 238, 313, 336, 0, 0, 235, 362, 345, 295,
	278, 279, 234, 0, 331, 258, 271, 255, 311, 0,
	361, 389, 254, 380, 0, 372, 237, 0, 371, 310,
	358, 363, 296, 290, 236, 360, 294, 289, 282, 262,
	405, 275, 322, 288, 323, 276, 300, 299, 301, 0,
	0, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 283, 0, 0, 0, 390, 0, 334, 316,
	0, 0, 0, 332, 286, 359, 324, 365, 349, 373,
	328, 325, 228, 350, 257, 297, 239, 241, 253, 259,
	261, 263, 264, 306, 307, 319, 338, 352, 353, 354,
	256, 249, 333, 250, 273, 251, 229, 340, 252, 231,
	320, 357, 0, 269, 329, 293, 232, 292, 321, 356,
	355, 240, 381, 387, 388, 393, 0, 394, 0, 0,
	0, 402, 407, 408, 409, 411, 412, 413, 414, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	386, 267, 225, 226, 421, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 385, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 419, 318,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 367, 379, 397, 400, 0,
	0, 0, 230, 399, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 395, 302, 303, 304, 305, 270, 0, 247, 398,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 392, 266,
	272, 410, 274, 246, 317, 268, 376, 280, 0, 403,
	0, 404, 0, 0, 0, 0, 309, 277, 341, 281,
	287, 330, 375, 315, 335, 244, 366, 342, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 285, 0, 326, 265, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 0, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 0, 221, 222, 223, 224, 351, 0, 0,
	382, 383, 384, 406, 368, 0, 418, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 284, 0,
	0, 0, 0, 0, 0, 0, 343, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 242, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 348, 364,
	243, 339, 377, 248, 346, 238, 313, 336, 0, 0,
	235, 362, 345, 295, 278, 279, 234, 0, 331, 258,
	271, 255, 311, 0, 361, 389, 254, 380, 0, 372,
	237, 0, 371, 310, 358, 363, 296, 290, 236, 360,
	294, 289, 282, 262, 405, 275, 322, 288, 323, 276,
	300, 299, 301, 0, 0, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 283, 0, 0, 0,
	390, 0, 334, 316, 0, 0, 0, 332, 286, 359,
	324, 365, 349, 373, 328, 325, 228, 350, 257, 297,
	239, 241, 253, 259, 261, 263, 264, 306, 307, 319,
	338, 352, 353, 354, 256, 249, 333, 250, 273, 251,
	229, 340, 252, 231, 320, 357, 0, 269, 329, 293,
	232, 292, 321, 356, 355, 240, 381, 387, 388, 393,
	0, 394, 0, 0, 0, 402, 407, 408, 409, 411,
	412, 413, 414, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 386, 267, 225, 226, 421, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 385, 0, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 419, 318, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 367,
	379, 397, 400, 0, 0, 0, 230, 399, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 395, 302, 303, 304, 305,
	270, 0, 247, 398, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 392, 266, 272, 410, 274, 246, 317, 268,
	376, 280, 0, 403, 0, 404, 0, 0, 0, 0,
	309, 277, 341, 281, 287, 330, 375, 315, 335, 244,
	366, 342, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 285, 0, 326, 265, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 0, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 0, 221, 222, 223,
	224, 351, 0, 0, 382, 383, 384, 406, 368, 0,
	418, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 284, 0, 0, 0, 0, 0, 0, 0,
	343, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 242, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 348, 364, 243, 339, 377, 248, 346, 238,
	313, 336, 0, 0, 235, 362, 345, 295, 278, 279,
	234, 0, 331, 258, 271, 255, 311, 0, 361, 389,
	254, 380, 0, 372, 237, 0, 371, 310, 358, 363,
	296, 290, 236, 360, 294, 289, 282, 262, 405, 275,
	322, 288, 323, 276, 300, 299, 301, 0, 0, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	283, 0, 0, 0, 390, 0, 334, 316, 0, 0,
	0, 332, 286, 359, 324, 365, 349, 373, 328, 325,
	228, 350, 257, 297, 239, 241, 500, 259, 261, 263,
	264, 306, 307, 319, 338, 352, 353, 354, 256, 249,
	333, 250, 273, 251, 229, 340, 252, 231, 320, 357,
	0, 269, 329, 293, 232, 292, 321, 356, 355, 240,
	381, 387, 388, 393, 0, 394, 0, 0, 0, 402,
	407, 408, 409, 411, 412, 413, 414, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 386, 267,
	225, 226, 421, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 385, 0, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 419, 318, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 367, 379, 397, 400, 0, 0, 0,
	230, 399, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 395,
	302, 303, 304, 305, 270, 0, 247, 398, 327, 694,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 392, 266, 272, 410,
	274, 246, 317, 268, 376, 280, 0, 403, 0, 404,
	0, 0, 0, 0, 309, 277, 341, 281, 287, 330,
	375, 315, 335, 244, 366, 342, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 732, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	820, 0, 0, 0, 0, 0, 0, 227, 0, 285,
	0, 326, 265, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 0, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	0, 221, 222, 223, 224, 0, 0, 0, 382, 383,
	384, 406, 368, 0, 418, 734, 0, 0, 733, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 718, 0, 808, 0, 0, 0, 0, 0,
	695, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 828, 832, 834, 836, 838, 839,
	841, 0, 845, 842, 843, 844, 0, 724, 823, 824,
	825, 826, 806, 807, 829, 0, 809, 0, 810, 811,
	812, 813, 814, 815, 816, 817, 818, 819, 821, 827,
	0, 0, 0, 0, 0, 0, 0, 831, 833, 835,
	837, 840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 717, 716, 0,
	0, 0, 0, 0, 822, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 0, 0,
	0, 0, 0, 693, 0, 1516, 0, 0, 0, 0,
	820, 0, 0, 0, 696, 727, 0, 0, 0, 0,
	0, 1518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 1518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 1498,
	0, 0, 0, 0, 0, 0, 0, 2923, 0, 0,
	723, 728, 0, 0, 0, 0, 0, 1498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 712, 1518, 710,
	714, 731, 0, 0, 0, 711, 708, 707, 0, 713,
	698, 699, 697, 700, 701, 702, 703, 0, 729, 730,
	0, 0, 2007, 2008, 808, 0, 0, 0, 0, 0,
	725, 726, 0, 0, 0, 0, 1498, 0, 0, 0,
	0, 0, 0, 0, 828, 832, 834, 836, 838, 839,
	841, 0, 845, 842, 843, 844, 0, 0, 823, 824,
	825, 826, 806, 807, 829, 0, 809, 720, 810, 811,
	812, 813, 814, 815, 816, 817, 818, 819, 821, 827,
	0, 0, 0, 0, 0, 0, 0, 831, 833, 835,
	837, 840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1491, 1490, 1493, 0, 1489, 0, 0, 0, 0,
	1502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 0, 0, 822, 0, 0, 0, 1502, 0,
	0, 0, 0, 0, 0, 0, 719, 0, 0, 1506,
	0, 1495, 0, 0, 0, 1497, 1499, 1501, 830, 1503,
	1504, 1505, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1495,
	0, 0, 0, 1497, 1499, 1501, 0, 1503, 1504, 1505,
	1507, 1508, 1509, 1511, 1512, 1513, 1514, 1502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1506, 0,
	0, 0, 0, 0, 0, 0, 0, 1517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1495, 0,
	0, 0, 1497, 1499, 1501, 1517, 1503, 1504, 1505, 1507,
	1508, 1509, 1511, 1512, 1513, 1514, 0, 479, 0, 478,
	485, 475, 0, 0, 1515, 0, 0, 0, 0, 0,
	0, 482, 483, 0, 484, 488, 0, 0, 470, 0,
	0, 1494, 1515, 0, 0, 0, 0, 0, 493, 0,
	0, 0, 0, 0, 1517, 0, 0, 0, 479, 1494,
	478, 485, 475, 0, 0, 0, 0, 0, 0, 0,
	1510, 0, 482, 483, 0, 484, 488, 1500, 497, 470,
	0, 499, 0, 0, 0, 0, 498, 0, 1510, 493,
	0, 1515, 0, 0, 0, 1500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 0,
	0, 0, 0, 0, 1500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 473, 472, 0,
	0, 0, 0, 0, 0, 0, 477, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 481, 0,
	0, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	0, 0, 474, 0, 0, 0, 0, 471, 473, 472,
	0, 0, 0, 0, 0, 0, 0, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 0, 0, 0, 0, 0, 496, 0, 0, 0,
	0, 0, 0, 474, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 480, 486, 0, 487, 489, 0, 0, 490,
	491, 492, 0, 0, 494, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 476, 480, 486, 0, 487, 489, 0, 0,
	490, 491, 492, 0, 0, 494, 495,
}

var yyPact = [...]int{
	2936, -1000, -1000, -1000, -307, 10330, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33416, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 33416, -305, 32892,
	32892, -1000, -1000, 1828, -1000, 32368, 11397, 33416, 268, 264,
	33416, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 530, -1000, 31844, -1000, -1000, -1000,
	-1000, -1000, -1000, 455, 2427, 33940, 8223, -256, -1000, 2402,
	-115, 685, 689, 758, 758, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2742, 617, 31320, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 34313, 169, 617, 14017, -37,
	-38, 2402, 297, 598, -1000, 986, 2966, 142, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8223,
	8223, 10330, -314, 10330, 8223, 33416, 33416, -1000, -1000, -1000,
	-1000, 455, 2427, 8223, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -38,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 323, -1000, 1128, -1000, -1000,
	-1000, -1000, 2066, 1121, 1675, 422, 33416, -1000, 1114, 422,
	-1000, -1000, -1000, 2402, 2402, -1000, 33416, 33416, 25, 1237,
	-1000, 313, 291, 314, 1109, -1000, -1000, -1000, -1000, -1000,
	-1000, 355, 2421, -1000, 33416, 33416, 2080, 33416, -1000, 1397,
	401, 34947, 2264, 978, 585, 2111, -1000, -1000, 2065, -1000,
	124, 97, 121, 413, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 155, -1000, 2316, -1000, -1000, 118, -1000, -1000, 100,
	-1000, -1000, -1000, -43, -1000, -1000, -1000, -1000, -1000, -1000,
	-125, -1000, -1000, 706, 1740, 8223, -1000, 1459, -1000, 2790,
	-1000, -1000, -1000, -1000, 5593, 9795, 9795, 9795, 9795, -1000,
	-1000, 1905, 8223, 2059, 2052, -1000, -1000, -1000, -1000, -1000,
	1108, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1674, 9271, -1000, 2044, 2043, 2040, 2035,
	2028, 2027, 2023, 2018, 2016, 2013, 2011, 2010, 2008, 2007,
	1814, 10862, 2006, 1672, 1670, 2004, 1999, 1995, 1669, 1814,
	1814, 1994, 1993, 1991, 1983, 1981, 1979, 1978, 1963, 1958,
	1953, 1952, 1950, 1942, 1940, 1938, 1937, 1936, 1935, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 996, -1000, 1920, 2232, 2339, 1851, 2382, 2308,
	2306, 2303, 2299, 1500, -1000, -1000, -1000, -150, -1000, -1000,
	663, -1000, 644, -1000, 33416, 33416, 33416, 453, 453, 453,
	453, 453, 495, 453, 525, 517, 509, 453, -1000, -1000,
	-1000, -1000, -1000, -1000, 621, -1000, -1000, -1000, -1000, 984,
	33416, -1000, 1868, 1179, 2336, 409, 406, 1179, 308, -1000,
	1290, 1290, 1290, 1290, 1179, 307, 399, 2339, 2339, -36,
	1290, -61, 1179, 1179, -61, 1179, 1179, 1179, 116, -302,
	-1000, -1000, -1000, 1290, 405, 1290, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2320, 2317, 455, 33416, 77, 33416, 455,
	455, 459, 1397, 396, 393, 1016, 1301, -1000, 1200, 33416,
	33416, 33416, 1200, 1200, 18212, 17688, -1000, 33416, -1000, 2339,
	1851, -1000, 1788, 2345, 1785, 1851, 455, 455, 455, 455,
	455, 455, 455, 455, 33416, 33416, 30796, 455, 7165, 7165,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 10330,
	1627, 1607, 140, -83, -309, 175, -1000, -1000, 33416, 2221,
	85, -1000, -1000, -1000, 1816, -1000, 1866, 1866, 1866, 1866,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1889,
	1914, -1000, -1000, 1864, 1864, 1864, 1816, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1876, 1876, 1884, 1876, 33416, 8223, 33416, 2249,
	292, 1913, -1000, 33416, 282, 2339, 2232, 2339, -1000, -1000,
	1097, 1495, 1667, -1000, -1000, 313, 1171, -1000, 835, -1000,
	-1000, -1000, -1000, 33416, -125, 306, -1000, -1000, 1660, 1911,
	-1000, 400, 957, 1091, -1000, 178, 34988, 27120, 1397, 27120,
	33416, -1000, -1000, -1000, -1000, -1000, -1000, -52, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 134, -1000, 8223, 8223, 8223, 8223, 8223, -1000, 487,
	8747, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9795, 9795,
	9795, 9795, 9795, 9795, 9795, 9795, 9795, 9795, 9795, 9795,
	1902, 1325, 9795, 9795, 9795, 9795, 2345, 2932, 994, 207,
	-1000, -1000, -1000, -1000, -1000, 1259, 1740, 8223, 8223, 33416,
	-1000, 2963, 8223, 8223, 2882, 8223, 2294, 8223, 8223, 8223,
	1784, 4020, 33416, 8223, -1000, 1783, 1781, -1000, -1000, 1355,
	8223, -1000, -1000, 8223, -1000, -1000, 8223, 9795, 8223, -1000,
	-1000, -1000, 2206, 2294, 2294, 8223, 8223, 2294, 2294, 2294,
	1235, 2294, 2294, 2294, 2294, 2294, 2294, 2294, 2294, 1778,
	2339, -256, 6641, -1000, -264, 2232, 8223, -1000, -1000, 8223,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1666, -109,
	682, 599, 661, -1000, 2290, -1000, 1910, 1908, 1090, 33416,
	1267, 33416, 27120, 33416, 1397, 33416, 33416, 453, 453, 453,
	33416, 459, -1000, 33416, 984, 2289, 33416, 2411, 9795, 9795,
	30272, 1290, 1179, -1000, -1000, 33416, -1000, -1000, -1000, 1290,
	33416, 1290, 1290, 2411, 1290, -1000, -1000, -1000, 1179, 1179,
	-1000, -1000, -1000, -1000, 1290, 1290, -1000, -1000, 2411, 33416,
	-53, 2411, 2411, -66, -1000, -1000, -1000, 33416, 33416, 453,
	33416, -1000, 33416, -1000, 33416, -1000, -1000, 33416, 34621, 33416,
	33416, 2314, -1000, 27120, 33416, 25024, -1000, -1000, 397, 511,
	16640, 349, 27120, 5068, -1000, -1000, 1200, 1200, 1200, 5068,
	5068, 1040, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 981,
	-1000, 141, 2232, -1000, -1000, -1000, -1000, -1000, 33416, 33416,
	27120, 1397, 33416, 33416, 33416, 33416, -1000, 1907, -1000, 2263,
	33416, 887, -1000, -1000, 13493, 1089, 887, -1000, 1254, -1000,
	8223, 10330, -283, 8223, 10330, 10330, 8223, 10330, -1000, 8223,
	80, -1000, -1000, -1000, -1000, 1483, -1000, 1482, -1000, -1000,
	-1000, 1661, 1661, -1000, 1480, -1000, -1000, -1000, -1000, 1476,
	-1000, -1000, 1474, -1000, -1000, 1777, 706, -1000, 1655, 2104,
	-257, -1000, 15591, 33416, 33416, -1000, -1000, -257, -1000, 15066,
	33416, 2232, -1000, 2232, 33416, -1000, 2334, -1000, 313, 205,
	-1000, -1000, -1000, -1000, -1000, -1000, 1079, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 969, -1000, 33416, -1000,
	-1000, 178, 27120, 28168, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 152, -1000, -1000, 166, -1000, 482, 50, 1164, -1000,
	-1000, 88, 151, 543, 1740, -1000, 1282, 1282, 1285, -1000,
	490, -1000, -1000, -1000, -1000, 1905, -1000, -1000, -1000, 3014,
	2595, -1000, 1270, 1270, 1065, 1065, 1065, 1065, 1065, 1395,
	1395, -1000, -1000, -1000, 5593, 1902, 9795, 9795, 9795, 9795,
	437, 437, 2191, 2498, -1000, 8223, 1251, -1000, 8223, 2079,
	936, 1078, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1776, 1774, 1829, 2420, 1770, 8223, -1000, -1000,
	1153, 1143, 1142, -1000, 1708, 7699, -1000, -1000, -1000, 1768,
	1073, 1761, -1000, -1000, -1000, 1760, 1137, 831, 1756, 2155,
	1755, 952, 8223, 8223, 1135, 1133, 8223, 8223, 8223, 8223,
	1743, 8223, 8223, 8223, 8223, 8223, 8223, 8223, 8223, -18,
	-1000, -1000, 1123, -1000, 1740, -1000, 1651, -1000, 1063, 945,
	-1000, 1722, -1000, -1000, -1000, -1000, 672, 640, 651, 33416,
	753, 11921, 33416, 1868, 2261, 72, -1000, 811, -1000, 50,
	-139, 739, 2078, 2414, 33416, 33416, 33416, 2274, 29748, -1000,
	1901, 1118, -1000, -1000, 8223, -1000, -1000, 2075, 33416, 33416,
	2411, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33416, 2411,
	2411, 1179, 1290, -1000, -1000, 1290, -1000, -1000, 1290, -1000,
	1070, -1000, 33416, -1000, -1000, -1000, 1868, 939, -1000, 12445,
	14541, 491, -1000, 477, 1202, 1202, 745, 1202, 1202, 1202,
	1202, 379, 378, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
	1202, 1202, 1202, 1202, 1202, 1202, 1202, 1897, -1000, 69,
	2313, 149, 811, 154, 3033, 1039, -1000, -1000, -1000, -1000,
	20308, 20308, 16116, 20308, -1000, 1175, -1000, -1000, 471, -1000,
	-1000, 739, -1000, -1000, -1000, 1896, 1227, -1000, -1000, 10862,
	-1000, 5068, 5068, 5068, -1000, -1000, 20832, 33416, -1000, -131,
	-1000, -103, -1000, 924, -1000, -1000, 935, 739, 2098, 924,
	924, -1000, 11921, 33416, -1000, 2411, 7165, -1000, 25024, -1000,
	-1000, 29216, -1000, 28692, 2411, 1247, -1000, 10330, 1596, 127,
	-1000, 163, -310, 136, 1394, 126, 1740, -1000, -1000, 1741,
	1735, 1082, -1000, 1076, 1729, 1075, 1071, -1000, -78, -1000,
	2225, 757, -1000, 1893, -1000, 1067, 2199, -1000, 904, -1000,
	1223, 1058, -1000, 757, 1036, 2180, 904, -1000, -1000, 1062,
	24, -1000, -1000, 33416, 1660, 1034, 28168, 788, -1000, 466,
	1057, 1056, -1000, 27120, 113, 27120, -1000, 27120, -1000, -1000,
	277, -1000, 33416, 2229, -1000, -1000, -1000, 1580, -334, -1000,
	-1000, -1000, -1000, -1000, 1032, -1000, 437, 437, 2191, 2114,
	-1000, 9795, -1000, 9795, 2916, 1246, -1000, 8223, 1546, 34390,
	1293, 19784, 33416, -1000, -1000, 8223, 8223, -1000, 2859, -1000,
	-1000, -1000, -1000, 8223, 8223, 1612, -1000, 33416, -1000, -1000,
	-1000, -1000, 19784, -1000, 9795, -1000, 8223, 979, 2774, -18,
	-18, 2741, 2604, 2574, 1030, -18, 2517, 2513, 2415, 2410,
	2380, 2331, 2312, 2277, -1000, 1890, 6641, -1000, -78, 8223,
	8223, 8223, 2186, -1000, -1000, -1000, -1000, -1000, 638, 91,
	1727, 885, -1000, -1000, 33416, -1000, -1000, -1000, 1725, 809,
	-1000, -1000, -1000, 34620, 1866, 1866, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1889, -1000, -1000, 1864, 1864,
	1864, 1816, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1876, 1876, 1884, 1876, -1000, 2273, -1000, -23, 1202,
	408, 27120, 381, -1000, 33416, 2097, 285, 2208, 33416, 1874,
	1873, 1871, 259, 34620, 33416, 874, -1000, 1047, 2966, -1000,
	33416, 1740, -1000, 1397, -1000, 1179, -1000, 2411, 1025, -1000,
	-1000, 2411, 1179, 1179, 1290, 33416, -1000, 2272, 34621, -1000,
	33416, -1000, -1000, -1000, 34620, 590, -1000, 622, 453, 33416,
	1330, 622, 1329, 1870, -1000, -1000, -1000, 33416, 33416, -1000,
	33416, 1327, 1324, -1000, 33416, 33416, 1473, -1000, 1472, 1202,
	1202, 1471, 1650, 1635, 1621, 1202, 1202, 1469, 1620, 27644,
	1467, 1464, 1463, 1466, 1618, 587, 1432, 1404, 1402, 33416,
	1869, 1552, -23, 1202, 147, 1219, 408, 1396, 17164, 33416,
	25024, 25024, 25024, 25024, -1000, 2154, 2124, -1000, 2153, 2123,
	2168, 33416, 25024, 1868, -1000, 27644, -1000, -1000, -1000, 2345,
	1029, 3044, 626, 8223, 27120, 1606, 349, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 33416, 33416, 1724, -1000, 2403,
	-1000, 802, -1000, -1000, 1046, -1000, 2403, 1263, -308, 10330,
	1255, 1240, -1000, 8223, 10330, 8223, -285, 135, -288, -1000,
	-1000, -1000, 1597, -1000, -1000, -1000, 1461, -1000, 1460, 6,
	10, 1317, -257, 6641, 288, 33416, -257, 33416, 6641, -1000,
	33416, 283, -257, 33416, 1458, -1000, -1000, -1000, 2413, 27120,
	1397, 1130, 26596, -1000, 115, -1000, 148, 372, 1595, -1000,
	507, 86, -1000, 1216, 1580, -1000, -1000, -1000, 9795, -1000,
	-1000, -1000, -1000, 1740, 8223, 1721, -1000, 595, 595, 1718,
	-1000, 1866, 1866, -1000, 1816, 1864, 1816, 595, 595, 1717,
	-1000, 1644, 2162, -1000, 2073, 2055, 8223, -1000, 1715, 3198,
	791, -153, -18, -1000, -1000, -1000, -18, -18, -18, -18,
	-1000, -18, -18, -18, -18, -18, -18, -18, -18, 430,
	-1000, 6, 1740, 1740, -1000, -1000, 2247, -1000, 1592, 1591,
	753, 34620, 513, 11921, 2219, 275, 1399, -1000, -1000, 26072,
	357, -1000, -1000, -1000, 474, 217, 1456, 354, -1000, 33416,
	150, 33416, -1000, -1000, -1000, -1000, -1000, 2208, -1000, 569,
	229, 12969, 12969, 12969, 238, 1281, -1000, 422, 777, 1044,
	25024, 33416, -1000, 24500, 1711, -1000, 739, 2411, -1000, 33416,
	-1000, 2411, 2411, 1179, -1000, 275, -1000, 2182, 2927, -1000,
	33416, -1000, 33416, -1000, 33416, 33416, 453, 8223, -1000, -1000,
	-1000, 33416, -1000, 247, -1000, -1000, -1000, -1000, 19784, 19784,
	-1000, -1000, -1000, -1000, 1589, 1588, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 363, 33416,
	1001, -1000, 1215, 1399, 26072, 1209, 1587, 357, -1000, 1585,
	-1000, 723, 33416, 33416, -1000, 922, -1000, 1204, 2072, 2096,
	2072, -1000, -1000, -1000, -1000, 2091, -1000, 1603, -1000, -1000,
	922, -1000, -1000, -1000, -1000, -1000, 626, -1000, 2333, 622,
	622, 622, 1710, 788, 1709, -1000, -1000, -1000, -1000, -1000,
	2399, 2376, 25548, 2399, -1000, -308, 1217, -1000, 1409, 125,
	1359, 33416, -1000, -1000, -1000, 1707, 1706, -266, 15, 2375,
	2374, 2440, -1000, 1704, 778, -257, -1000, -1000, 757, -1000,
	-1000, -1000, -257, -1000, 757, -1000, -1000, 1397, -1000, 144,
	-1000, -1000, -1000, -1000, -1000, -1000, 36, -1000, 33416, -1000,
	1580, 1575, 82, -1000, 1740, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	8223, -1000, -1000, -1000, 2036, -1000, -1000, 8223, 1702, 1571,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2346, -1000, 2373, -266, -1000, -1000, -1000,
	-1000, -1000, -1000, 34620, -1000, 2468, -1000, -1000, 1562, 46,
	-1000, -1000, -1000, 1559, 1557, 1455, -1000, -1000, 1398, 1033,
	60, -1000, -1000, -1000, -1000, -1000, -1000, 1396, 33416, 1863,
	-1000, 1202, 1202, 1202, 33416, 1701, 760, -1000, 1700, 1682,
	432, 1214, 1212, -1000, 1450, 20308, 25024, 24500, 920, -1000,
	1043, -1000, -1000, -1000, 2411, -1000, -1000, 2411, -1000, -1000,
	-1000, 33416, -1000, 2927, -1000, -1000, 1331, 9795, -1000, -1000,
	1556, 19260, 608, 613, 1857, -1000, 325, 2431, -1000, 1311,
	1291, -1000, 33416, -1000, 1850, -1000, 1849, 2069, 273, 1846,
	1840, 33416, 1948, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 387, 976, -1000, 1552, 1550, -1000, 46, 1549,
	-1000, -1000, -1000, 33416, 723, 723, 2346, 33416, 6641, -1000,
	-1000, 8223, 1837, -1000, 8223, -1000, -1000, -1000, -1000, -1000,
	1836, 2196, -1000, -1000, -1000, -1000, -1000, -1000, 8223, 8223,
	-1000, -1000, 450, 10330, -293, 131, -1000, -1000, -1000, -268,
	1548, -1000, -1000, 2371, 1545, 1509, 33416, -1000, 757, 757,
	739, -1000, -1000, -66, -1000, -1000, -1000, 1805, -1000, 1728,
	-18, -1000, 128, 8223, -268, -194, -1000, -1000, -1000, -1000,
	267, -1000, -1000, 190, -1000, -1000, 1386, 392, -1000, -1000,
	723, 23452, 19784, 19260, 1544, -1000, 34688, 12969, 134, 34688,
	691, 1210, -1000, 1449, -1000, 1448, -1000, 2411, 920, 1043,
	-1000, -1000, 1094, -1000, -1000, -1000, -1000, -1000, 2191, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1446, 1820, -85, -1000, -1000, 1819, 23452, 23452,
	240, 240, 23452, 23452, 1817, 528, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2339, -1000, -1000, 1740, 33416, 1740,
	23976, -1000, 2370, 2368, 1740, 706, -1000, -308, 33416, 33416,
	-275, 1431, -1000, 1543, 12, -1000, -1000, 712, -277, -9,
	5, -1000, -1000, -1000, 1649, -1000, 3496, -1000, -1000, -1000,
	706, -275, 33416, 368, 1516, -1000, -1000, 161, -1000, -1000,
	966, -1000, 1816, 8223, -1000, -1000, -1000, 420, 3153, -1000,
	-1000, -1000, -66, 420, 394, 204, -1000, 1429, -1000, -1000,
	2346, -1000, 1601, 8223, 1814, -187, 23452, 964, 958, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 955, 941, 23452, -1000,
	-1000, -1000, 327, -1000, 937, 934, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1813, -1000, -1000, 2366, -1000, 1513, 457,
	-5, 5, -1000, 2364, 11, 2360, 2359, -1000, -1000, 4544,
	-260, -24, 310, -1000, 2271, -1000, -1000, 35, -1000, -1000,
	-1000, 23452, 2258, 1714, 276, 2358, 34688, -1000, -1000, 276,
	-1000, 245, -1000, 1190, -1000, 1413, -1000, 2339, -1000, 1583,
	-1000, 2093, -1000, 112, 930, -1000, -1000, -1000, -1000, 928,
	-1000, -1000, -1000, 22928, 33416, 1509, -1000, 1811, 1405, 15,
	-4, 2356, -1000, 1509, 2355, 1509, 1509, 1283, -1000, -1000,
	-1000, -1000, -1000, 1512, -1000, 230, -1000, -1000, 2258, -1000,
	2354, 324, -1000, -1000, -1000, -1000, 1401, -1000, -1000, 528,
	-1000, 2086, 1951, 2418, -1000, -1000, -1000, -1000, 230, 230,
	230, 230, 106, -1000, -1000, 899, -1000, -1000, 2302, 18736,
	-13, -1000, -1000, -1000, 1511, -1000, 1509, -1000, -1000, 4544,
	-1000, -1000, 1202, 1507, 211, -1000, -1000, -1000, 22404, 298,
	284, 280, -1000, 452, -1000, -1000, -1000, -1000, 2429, -1000,
	2419, 596, 596, -1000, -1000, 33416, -1000, 33416, -1000, 896,
	-1000, -1000, -1000, 1042, -1000, -1000, -1000, -1000, -1000, 1390,
	-1000, 33416, -1000, 33416, 299, 1387, 9795, 1809, 9795, 1804,
	318, 1799, -1000, -1000, -1000, 1344, 317, -1000, -1000, 697,
	-1000, 1201, -1000, 21880, 33416, -1000, -1000, 876, 1797, 2341,
	-1000, 3125, 33416, 3061, 33416, 1795, 1194, 9795, -1000, -1000,
	-1000, 33416, 6117, -1000, 1041, -1000, -1000, 416, 302, -1000,
	873, -1000, 866, 21356, 1368, 2945, -1000, -1000, 1740, 33416,
	856, -1000, 33416, 290, -1000, -1000, -1000, 837, -1000, -1000,
	-1000, -1000, 416, 2174, -1000, 1345, -1000, -1000, 34639, 558,
	-1000, -1000, 34639, 281, -1000, 414, 1790, -1000, -1000, 836,
	-1000, 33416, 591, 8223, -1000, 281, 34688, -1000, 8223, 810,
	-1000, 34688, 806, -1000, -1000,
}

var yyPgo = [...]int{
	0, 134, 2456, 210, 139, 3150, 62, 218, 189, 175,
	208, 3148, 3133, 2249, 2247, 3132, 3131, 3129, 3128, 3127,
	3126, 3125, 3124, 3123, 3122, 3120, 3119, 3118, 3117, 3116,
	3115, 3114, 3113, 3112, 3109, 3106, 3103, 3096, 3092, 206,
	3085, 3084, 3082, 3079, 3076, 3061, 3059, 3054, 3052, 3051,
	3050, 3049, 3047, 3046, 3044, 3043, 3042, 3039, 3038, 3037,
	3036, 3033, 3032, 3030, 3029, 3022, 3021, 3020, 3019, 173,
	3016, 2218, 3015, 3006, 3000, 2999, 2997, 2995, 2994, 170,
	2993, 2991, 2989, 2988, 2987, 2984, 2981, 2975, 2974, 2972,
	180, 2971, 2968, 2964, 2963, 2961, 2959, 178, 2957, 137,
	181, 2956, 2955, 2947, 2945, 2942, 196, 202, 49, 2938,
	38, 2937, 188, 2936, 117, 2934, 112, 2933, 2931, 2930,
	2929, 2927, 2924, 2923, 2907, 2898, 2897, 2893, 2891, 67,
	2890, 2887, 150, 160, 212, 1507, 215, 216, 154, 142,
	63, 2885, 2214, 2884, 121, 193, 120, 24, 2877, 143,
	2876, 123, 34, 26, 205, 105, 37, 125, 101, 2874,
	183, 69, 2872, 80, 2871, 2870, 211, 155, 2863, 95,
	2862, 2861, 2859, 2857, 165, 156, 2856, 2855, 99, 2854,
	2853, 86, 2851, 47, 2850, 131, 2848, 227, 96, 88,
	132, 2847, 2846, 74, 2845, 2841, 2840, 2839, 146, 2829,
	2828, 100, 66, 2827, 2825, 2824, 46, 2823, 65, 2821,
	53, 2819, 2818, 2816, 2815, 52, 2812, 2811, 14, 22,
	17, 2808, 21, 2807, 133, 2806, 2802, 2801, 2799, 2798,
	2, 2796, 187, 44, 76, 111, 2794, 373, 2792, 2791,
	2788, 127, 2787, 982, 2786, 2782, 2778, 2777, 2774, 5,
	2770, 190, 41, 2769, 70, 92, 116, 168, 161, 2768,
	2765, 2764, 93, 82, 71, 0, 2761, 119, 2759, 2758,
	2753, 213, 2751, 197, 164, 129, 214, 222, 159, 2750,
	2749, 81, 2748, 122, 75, 107, 11, 2747, 199, 2745,
	358, 151, 2743, 163, 2742, 113, 1, 110, 2741, 2740,
	35, 223, 2738, 2736, 2733, 114, 2731, 2729, 90, 115,
	2728, 2726, 2712, 32, 2711, 30, 28, 2708, 87, 2707,
	203, 2706, 242, 103, 147, 141, 124, 191, 194, 59,
	54, 2705, 1272, 118, 73, 23, 2704, 192, 2703, 221,
	209, 2701, 158, 2700, 204, 309, 169, 2694, 152, 8,
	36, 29, 2690, 12, 2678, 148, 166, 2677, 2674, 20,
	2664, 19, 2662, 2661, 2660, 2657, 9, 2655, 2654, 2652,
	4, 7, 2651, 3, 184, 2650, 2648, 2645, 2644, 40,
	104, 2642, 98, 145, 2641, 2640, 72, 2634, 2632, 2629,
	601, 2615, 2614, 2602, 2600, 2599, 2597, 2594, 2588, 2587,
	2583, 83, 43, 2580, 2577, 2576, 2574, 55, 102, 2571,
	2570, 2569, 2562, 31, 144, 2561, 16, 2558, 27, 25,
	33, 2557, 91, 2556, 15, 153, 2549, 2546, 18, 2544,
	2536, 10, 13, 2535, 2534, 94, 2532, 68, 42, 130,
	78, 2530, 64, 179, 109, 2528, 2527, 201, 200, 167,
	2525, 135, 198, 219, 2524, 182, 2521, 2520, 2517, 2516,
	2515, 2500, 836, 2499, 2493, 195, 45, 77, 85, 2492,
	2491, 2488, 60, 128, 89, 84, 171, 2487, 162, 2485,
	2483, 79, 2481, 2478, 2476, 2470, 2469, 157, 2467, 2466,
	2462, 2460, 217, 136, 2459,
}

//line mysql_sql.y:9428
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColposUnion() *tree.AlterColPos {
	v, _ := st.union.(*tree.AlterColPos)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 486, 490, 490, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 104, 484, 484, 484, 485, 485, 101, 121,
	120, 123, 123, 122, 122, 119, 119, 115, 118, 118,
	117, 117, 116, 111, 113, 113, 112, 114, 114, 102,
	90, 103, 434, 434, 433, 433, 432, 432, 387, 387,
	431, 431, 431, 430, 430, 430, 429, 429, 428, 428,
	427, 427, 425, 425, 426, 424, 423, 423, 423, 421,
	421, 421, 417, 417, 419, 418, 418, 420, 412, 412,
	415, 415, 413, 413, 413, 413, 416, 411, 411, 411,
	410, 410, 89, 89, 89, 334, 334, 88, 88, 348,
	348, 348, 348, 348, 346, 346, 346, 346, 346, 346,
	345, 345, 344, 344, 349, 349, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 80, 80, 80, 80,
	83, 83, 83, 84, 343, 343, 343, 81, 82, 82,
	333, 333, 338, 338, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 342, 342, 342, 340,
	340, 339, 339, 341, 341, 74, 74, 74, 77, 76,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 75,
	75, 75, 75, 75, 75, 70, 70, 70, 70, 70,
	69, 69, 71, 71, 330, 330, 329, 85, 85, 86,
	488, 488, 487, 489, 489, 489, 489, 87, 93, 93,
	93, 93, 93, 93, 93, 92, 92, 95, 95, 94,
	96, 79, 79, 79, 79, 79, 79, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 458, 458, 458, 460,
	460, 269, 270, 491, 272, 268, 268, 268, 454, 454,
	455, 456, 457, 457, 457, 91, 11, 11, 11, 11,
	11, 11, 68, 73, 223, 223, 224, 224, 224, 224,
	224, 224, 228, 228, 228, 227, 225, 225, 225, 225,
	225, 225, 226, 229, 229, 66, 72, 72, 471, 471,
	67, 478, 478, 390, 390, 283, 283, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 394, 395, 279, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 46, 45, 45, 45, 319, 319, 44,
	492, 492, 258, 258, 55, 48, 56, 57, 58, 59,
	60, 61, 43, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 64, 64, 406, 406, 494, 494, 494, 62,
	63, 389, 389, 389, 53, 52, 51, 50, 49, 49,
	42, 42, 41, 41, 47, 127, 128, 276, 276, 276,
	278, 278, 274, 493, 493, 361, 361, 277, 277, 40,
	40, 40, 40, 65, 275, 275, 257, 273, 273, 273,
	12, 12, 10, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 23, 24, 26, 327, 327,
	324, 25, 18, 17, 20, 16, 19, 21, 22, 22,
	9, 9, 9, 9, 13, 13, 14, 139, 139, 188,
	188, 466, 466, 462, 462, 463, 463, 463, 464, 464,
	465, 465, 97, 400, 400, 400, 400, 400, 400, 8,
	162, 162, 161, 161, 399, 399, 399, 399, 399, 399,
	331, 331, 443, 443, 443, 444, 160, 160, 155, 155,
	401, 401, 297, 445, 445, 409, 409, 408, 408, 407,
	407, 158, 158, 159, 159, 142, 142, 107, 107, 414,
	414, 414, 414, 422, 422, 386, 386, 215, 215, 252,
	252, 253, 253, 132, 132, 133, 133, 133, 133, 133,
	133, 451, 451, 453, 453, 452, 157, 157, 153, 153,
	154, 154, 154, 152, 152, 151, 150, 150, 149, 147,
	147, 147, 148, 148, 148, 135, 135, 135, 134, 134,
	134, 134, 134, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 136, 136, 459, 459, 459,
	391, 391, 391, 397, 397, 234, 234, 235, 235, 233,
	233, 137, 137, 138, 138, 138, 138, 232, 232, 231,
	140, 140, 146, 145, 145, 141, 141, 141, 141, 242,
	242, 241, 241, 241, 241, 100, 105, 105, 106, 165,
	165, 240, 239, 239, 239, 164, 164, 163, 163, 156,
	156, 144, 144, 144, 144, 238, 143, 236, 483, 483,
	482, 482, 481, 479, 479, 479, 480, 480, 480, 480,
	436, 436, 436, 436, 436, 263, 263, 263, 267, 267,
	266, 266, 266, 266, 266, 271, 7, 7, 7, 7,
	7, 30, 30, 30, 30, 30, 30, 30, 30, 36,
	173, 174, 37, 175, 175, 176, 176, 177, 177, 178,
	179, 180, 180, 180, 180, 35, 166, 166, 167, 167,
	168, 168, 169, 170, 170, 170, 172, 171, 34, 27,
	467, 470, 468, 468, 472, 472, 472, 473, 473, 473,
	474, 474, 28, 124, 129, 129, 126, 131, 131, 131,
	131, 131, 125, 469, 475, 475, 475, 328, 328, 325,
	326, 326, 323, 322, 322, 322, 477, 477, 476, 476,
	476, 264, 264, 29, 318, 318, 320, 321, 321, 321,
	312, 312, 312, 312, 33, 316, 316, 317, 317, 317,
	317, 317, 313, 313, 315, 315, 311, 311, 311, 311,
	311, 32, 130, 130, 310, 310, 308, 308, 306, 306,
	307, 307, 305, 305, 305, 309, 309, 31, 31, 31,
	109, 108, 108, 108, 255, 255, 254, 254, 110, 38,
	200, 200, 375, 375, 375, 375, 375, 393, 393, 393,
	376, 376, 376, 377, 377, 377, 378, 378, 378, 378,
	378, 392, 392, 350, 350, 351, 351, 351, 354, 354,
	367, 367, 368, 368, 366, 366, 373, 373, 372, 372,
	371, 371, 370, 370, 369, 369, 369, 369, 364, 364,
	363, 363, 352, 352, 352, 352, 352, 353, 353, 353,
	362, 362, 365, 365, 206, 206, 207, 207, 207, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 441, 441,
	442, 209, 209, 209, 213, 213, 213, 213, 213, 213,
	208, 208, 210, 210, 189, 189, 187, 187, 181, 181,
	182, 182, 183, 183, 183, 186, 186, 184, 184, 185,
	185, 185, 185, 336, 336, 439, 439, 440, 440, 435,
	435, 435, 438, 438, 438, 438, 438, 437, 437, 190,
	250, 250, 250, 265, 265, 265, 265, 249, 249, 249,
	205, 205, 204, 204, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 335,
	335, 280, 280, 281, 281, 222, 221, 221, 221, 221,
	221, 219, 220, 218, 218, 218, 218, 218, 217, 217,
	216, 216, 216, 314, 314, 214, 214, 212, 212, 212,
	211, 211, 211, 374, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 248, 289,
	289, 294, 294, 450, 450, 449, 191, 191, 191, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 201, 201,
	201, 359, 359, 359, 359, 359, 360, 360, 360, 357,
	357, 358, 358, 298, 299, 299, 398, 398, 355, 355,
	356, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 405, 405,
	405, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 461, 461, 461,
	446, 446, 446, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 246, 246, 246, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	300, 300, 301, 301, 402, 402, 402, 402, 402, 402,
	403, 403, 404, 404, 404, 404, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 287, 243, 243, 243, 302,
	295, 295, 296, 296, 290, 290, 290, 290, 290, 290,
	290, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 291, 291, 293, 293, 304, 304, 304,
	303, 303, 303, 303, 303, 303, 303, 203, 203, 203,
	203, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 193, 193, 193, 193, 197, 197, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 198, 198, 198, 198, 196, 196, 196, 196,
	196, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 98, 99, 99,
	195, 251, 251, 379, 379, 382, 382, 380, 380, 381,
	383, 383, 383, 384, 384, 384, 385, 385, 385, 388,
	388, 256, 256, 256, 262, 262, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 4, 6, 1, 1, 1, 2, 4, 6,
	1, 4, 1, 3, 3, 4, 4, 4, 3, 3,
	2, 4, 4, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 2, 2,
	0, 1, 4, 2, 4, 1, 5, 3, 2, 1,
	2, 2, 4, 4, 5, 2, 1, 3, 4, 4,
	1, 2, 9, 7, 1, 3, 3, 1, 1, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 2, 4, 3,
	3, 1, 1, 1, 1, 1, 1, 2, 3, 4,
	7, 2, 3, 3, 4, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	2, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 7, 4, 1, 3, 2, 2, 2, 1,
	3, 4, 0, 1, 2, 1, 2, 2, 1, 2,
	3, 2, 3, 1, 1, 7, 7, 8, 0, 4,
	7, 0, 3, 0, 2, 0, 1, 1, 1, 1,
	4, 2, 2, 3, 3, 4, 5, 3, 4, 4,
	2, 2, 2, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 2, 5, 5, 0, 2, 7,
	0, 1, 0, 1, 5, 3, 3, 2, 4, 4,
	4, 4, 4, 1, 1, 1, 3, 2, 3, 1,
	1, 1, 6, 8, 0, 1, 1, 1, 1, 5,
	5, 0, 1, 1, 3, 3, 3, 4, 6, 7,
	4, 4, 7, 8, 3, 3, 3, 0, 2, 2,
	0, 2, 2, 1, 1, 1, 1, 0, 1, 4,
	4, 5, 4, 3, 1, 3, 1, 1, 3, 5,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 4, 1, 3,
	1, 4, 6, 4, 4, 4, 3, 6, 3, 5,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 5,
	0, 2, 1, 3, 2, 1, 5, 4, 4, 2,
	0, 5, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 4, 3, 4, 5, 4,
	5, 2, 3, 1, 3, 6, 0, 3, 0, 1,
	2, 4, 4, 0, 1, 3, 1, 3, 3, 0,
	1, 1, 0, 2, 2, 3, 3, 3, 1, 3,
	3, 3, 3, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 7, 7, 1, 1, 1,
	0, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	2, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 4, 4, 3, 2,
	2, 2, 3, 2, 3, 4, 1, 3, 4, 0,
	2, 1, 1, 2, 2, 0, 1, 2, 4, 1,
	3, 1, 3, 2, 3, 1, 4, 3, 0, 1,
	1, 2, 5, 2, 2, 2, 0, 2, 3, 3,
	0, 1, 3, 1, 3, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 7,
	1, 1, 7, 1, 3, 0, 1, 1, 3, 1,
	3, 0, 1, 1, 1, 12, 1, 3, 0, 1,
	1, 3, 1, 1, 2, 4, 1, 1, 7, 7,
	1, 4, 1, 1, 3, 4, 3, 0, 1, 1,
	0, 2, 7, 8, 0, 2, 6, 0, 2, 2,
	3, 3, 4, 1, 0, 2, 2, 1, 3, 2,
	1, 3, 2, 1, 3, 2, 0, 1, 3, 4,
	3, 1, 1, 4, 1, 3, 1, 1, 1, 1,
	0, 1, 1, 1, 11, 0, 2, 3, 2, 3,
	1, 1, 1, 3, 3, 4, 0, 2, 2, 2,
	2, 6, 0, 4, 1, 1, 0, 3, 0, 1,
	1, 2, 4, 4, 4, 0, 1, 11, 9, 11,
	2, 2, 4, 5, 1, 3, 0, 3, 5, 10,
	0, 2, 0, 3, 2, 4, 3, 0, 2, 1,
	0, 2, 3, 0, 2, 3, 0, 3, 2, 4,
	3, 0, 1, 0, 6, 0, 3, 5, 0, 4,
	0, 3, 1, 3, 4, 5, 0, 3, 1, 3,
	2, 3, 1, 2, 0, 4, 6, 5, 0, 2,
	0, 2, 4, 5, 4, 5, 1, 5, 6, 5,
	0, 3, 0, 1, 0, 1, 1, 3, 2, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 4, 1, 3,
	3, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 1, 1, 7, 7, 2, 1, 7,
	7, 8, 5, 0, 1, 0, 1, 1, 1, 1,
	3, 3, 1, 1, 1, 1, 1, 0, 1, 3,
	1, 3, 5, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 2, 1, 2, 2, 1, 1, 2,
	2, 2, 2, 2, 1, 5, 6, 4, 1, 1,
	2, 0, 1, 1, 2, 5, 0, 1, 1, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 2, 2, 0, 3, 0, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	3, 5, 2, 2, 2, 2, 1, 1, 2, 5,
	6, 6, 6, 1, 1, 1, 1, 1, 4, 0,
	2, 0, 1, 1, 2, 4, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 2,
	5, 0, 1, 3, 0, 1, 0, 2, 0, 1,
	6, 8, 6, 5, 5, 6, 6, 6, 6, 5,
	6, 6, 6, 6, 6, 6, 6, 6, 1, 1,
	1, 4, 4, 6, 8, 6, 4, 5, 4, 4,
	4, 3, 4, 6, 6, 7, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 8, 4, 2, 3, 2, 4,
	2, 2, 4, 6, 2, 2, 4, 6, 4, 2,
	0, 1, 2, 3, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 1, 3,
	0, 1, 1, 3, 3, 3, 3, 3, 2, 1,
	1, 3, 4, 3, 4, 3, 4, 3, 4, 3,
	4, 1, 3, 4, 4, 5, 4, 5, 3, 4,
	5, 6, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 2, 3, 5,
	1, 1, 3, 0, 1, 0, 3, 0, 3, 3,
	0, 3, 5, 0, 3, 5, 0, 1, 1, 0,
	1, 1, 2, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -486, -490, -2, -5, 552, -1, -4, -99, -74,
	-7, -101, -102, -8, -97, -9, -10, -12, -78, -92,
	-94, -96, -95, -39, -11, -91, -69, -70, -80, -85,
	-88, -89, -90, -103, -98, -100, -132, -104, 545, -75,
	-76, -77, -30, -29, -28, -27, -124, 551, 409, 12,
	457, -13, -14, -451, -15, 238, -268, -269, -270, -272,
	-491, -40, -41, -42, -49, -50, -51, -52, -53, -62,
	-63, -64, -43, -44, -45, -48, -46, -55, -56, -57,
	-58, -59, -60, -61, -47, -127, -128, -65, -67, -66,
	-72, -68, -73, -126, 213, -71, 62, -81, -82, -83,
	-84, -86, -87, 340, 346, 399, 544, 47, -133, -135,
	555, 141, 142, 144, 145, -31, -32, -33, -34, -35,
	-36, -38, -37, 209, 14, 490, -16, -19, -17, -20,
	-18, -25, -26, -24, -21, -23, -125, -22, 233, 232,
	37, 296, 297, 298, 344, 231, 210, 13, 30, 41,
	322, -134, 68, 211, -136, 10, 557, -6, -3, -2,
	-111, -115, -119, -122, -123, -120, -121, -4, -99, 99,
	223, 546, -265, 336, 547, 549, 548, 71, 79, -259,
	-261, 340, 346, 544, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	460, 531, 532, 533, 534, 320, 321, 487, 250, 274,
	370, 277, 284, 141, 160, 154, 182, 174, 149, 254,
	289, 255, 78, 144, 443, 89, 421, 396, 147, 269,
	271, 273, 276, 256, 170, 165, 268, 252, 163, 257,
	39, 258, 187, 259, 260, 492, 417, 319, 423, 281,
	394, 164, 418, 272, 420, 189, 193, 435, 158, 159,
	425, 437, 186, 230, 42, 489, 242, 438, 191, 185,
	181, 446, 285, 283, 184, 157, 180, 253, 51, 195,
	194, 196, 390, 391, 392, 393, 261, 262, 334, 434,
	177, 166, 324, 150, 22, 441, 237, 422, 347, 263,
	278, 286, 190, 192, 244, 249, 491, 398, 248, 282,
	439, 162, 241, 270, 236, 442, 151, 349, 264, 145,
	275, 436, 445, 50, 362, 156, 148, 227, 142, 246,
	251, 11, 265, 266, 267, 288, 287, 279, 178, 243,
	183, 168, 155, 179, 143, 245, 444, 363, 542, 322,
	379, 176, 173, 247, 220, 440, 424, 146, 383, 364,
	171, 290, 538, 539, 540, 335, 318, 291, 292, 169,
	234, 415, 416, 293, 295, 389, 311, 365, 397, 371,
	366, 202, 299, 427, 429, 188, 541, 300, 301, 302,
	419, 303, 304, 305, 306, -341, -339, -265, 544, 346,
	340, 322, -175, -265, 556, -142, 38, -187, -265, -142,
	-71, -14, -13, -134, -135, -187, 217, -273, 23, 394,
	-79, 395, 213, 68, -265, -9, -90, -8, -97, -69,
	-132, 399, -271, -265, 296, 296, -271, 217, -265, 248,
	378, -390, 223, -345, -318, 249, -344, -320, -347, -321,
	31, 209, 211, 210, 245, 14, 344, 219, 12, 10,
	345, 231, 24, 25, 27, 13, 346, 348, 28, 349,
	352, 353, 354, 41, 357, 358, 238, 71, 79, 74,
	256, -174, -265, -296, -290, 96, 239, -292, -285, -286,
	-288, -431, -425, -284, 68, 123, 124, 131, 97, -287,
	-374, 35, 99, 497, 458, -244, -245, -246, -247, -248,
	-265, -426, -424, 74, 80, 83, 86, 87, 85, 84,
	167, 82, 75, 135, 136, -135, 71, -446, 505, -260,
	526, 531, 532, 533, 534, 525, 47, -396, -404, 216,
	-402, 134, 172, 234, 168, 12, 129, 389, 169, 502,
	522, 460, 506, 529, 499, 500, 494, 495, 496, 498,
	507, 509, 521, -405, 517, 527, 528, 515, 530, 73,
	72, 520, 519, 508, 503, 504, 510, 493, 501, 511,
	512, 518, 523, 524, 328, 89, 329, 330, 450, 323,
	331, 223, 394, 56, 332, 333, 334, 335, 336, 457,
	337, 57, 338, 327, 238, 379, 339, 171, 188, 462,
	461, 463, 454, 451, 449, 452, 453, 455, 456, 513,
	514, 516, -105, -106, 536, -151, -152, -237, 19, 6,
	7, 8, 9, -484, 396, 491, 146, 143, -332, 146,
	95, 151, 150, -332, 299, 244, 341, 220, 320, 379,
	303, 248, -312, -310, -392, 293, 289, 218, 228, 227,
	90, 450, 216, 355, -462, -463, 206, 207, 208, -453,
	483, -452, -265, 330, 26, 217, 341, 429, 427, 428,
	430, 431, 432, 433, -54, -406, -389, 424, 423, -277,
	416, 422, 414, 426, 417, 321, 305, 304, 209, 553,
	484, -256, 365, 397, 244, 447, 448, 342, 398, 435,
	436, 418, 89, 175, 172, 220, 217, 320, 450, 379,
	303, -462, 248, 378, 40, -338, 389, -337, -339, 435,
	436, 446, 72, 73, 434, -256, 89, 415, 415, -152,
	-237, -151, -133, -135, -100, -451, 218, 320, 379, 248,
	219, 217, 220, 450, 296, 341, 244, 303, -391, -459,
	31, -397, 203, 204, 205, 32, 33, -1, 103, 557,
	-290, -290, -6, 558, -6, -290, -265, -265, 138, -193,
	-197, -194, -196, -195, -199, -198, 172, 173, 134, 176,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	30, 188, 234, 168, 169, 170, 171, 189, 154, 174,
	488, 197, 155, 198, 156, 199, 157, 200, 158, 159,
	201, 160, 163, 164, 165, 162, 137, 68, 137, 74,
	-158, 240, -187, 137, -158, -152, -151, -152, -187, -249,
	-265, 396, 106, -79, -79, 395, -454, -455, -456, -458,
	213, 395, 394, 137, 256, 15, -271, -271, 66, -187,
	-320, 248, -345, -318, 35, 65, 138, 221, 138, 65,
	68, 342, 320, 379, 343, 450, 217, 355, 220, 248,
	356, 320, 379, 217, 220, 450, 248, 320, 217, 220,
	379, 248, 356, 414, 415, 220, 26, 347, 350, 351,
	415, -410, 446, 138, 95, 92, 93, 94, -290, 113,
	-303, 106, 107, 108, 109, 110, 111, 112, 120, 119,
	130, 123, 124, 125, 126, 127, 128, 129, 121, 122,
	116, 96, 114, 118, 115, 98, -135, -290, -296, 47,
	-288, -288, -288, -288, -374, -294, -290, 68, 68, 137,
	74, -290, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, -403, 68, 68, -300, -301, 68,
	68, -284, -249, 68, 74, 74, 68, 68, 68, 74,
	-301, -301, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	-152, 138, 68, -107, 38, -154, 21, -136, -135, 20,
	31, 32, 31, 32, 31, 32, 31, 32, 80, 439,
	490, 149, 150, 151, -173, -265, -175, -166, -265, -308,
	223, -308, -308, -308, -308, 219, -308, 217, 217, 217,
	-308, -464, 153, 138, -453, -157, 68, -276, 114, 118,
	23, 246, 246, -276, 283, -492, -493, 15, 116, -274,
	-493, -274, -274, -276, -494, 219, 425, 42, 247, 246,
	-153, -154, -153, 419, 415, -361, 420, 421, -278, -493,
	-277, -276, -276, -277, -276, -276, -276, 217, 220, 450,
	303, 554, -492, 246, -492, 30, 30, -390, -187, -390,
	484, -257, -265, -390, -390, -465, 222, -320, 248, 248,
	138, 106, 23, -340, 106, 117, -339, -339, -339, -340,
	-340, -208, 40, -264, 134, -265, 74, -208, 40, -488,
	-487, -187, -153, -136, -135, 69, 69, 69, -390, -390,
	-390, -390, -390, -390, -390, -390, -271, -166, -175, 223,
	-390, -137, -138, 125, -290, -265, -137, -3, -113, -112,
	100, 101, 103, 547, 336, 546, 550, 544, -339, 40,
	-385, 363, 362, -379, -381, 68, -380, 68, -380, -380,
	-380, 68, 68, -382, 68, -382, -382, -379, -383, 68,
	-383, -384, 68, -383, -265, -295, -296, -265, 38, -399,
	47, -132, 68, 30, 68, -265, -400, 47, -132, 68,
	30, -153, -107, -154, 137, 80, 74, -79, 69, 138,
	-457, 86, 87, -460, 186, 178, -265, -93, 74, -7,
	-8, -9, -10, -39, -69, -132, -427, -425, 68, 31,
	388, 65, 15, -346, 217, 450, 341, 244, 220, 320,
	-344, -327, -324, -322, -264, -320, -323, -322, -349, -249,
	415, -108, 400, 295, -290, -290, -290, -290, -290, 85,
	96, 318, 86, 87, -285, -304, 31, 291, 292, -286,
	-286, -286, -286, -286, -286, -286, -286, -286, -286, -286,
	-286, -293, -302, -374, 68, 116, 114, 118, 115, 98,
	-288, -288, -286, -286, 69, 138, -450, -449, 100, -290,
	-290, -265, -447, -448, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 332, 327, 333, 331, 323,
	339, 334, 335, 171, 481, 482, 475, 476, 477, 478,
	479, 480, -295, -295, -290, -447, -295, -243, 32, 31,
	-296, -296, -296, 69, -290, -461, 316, 315, 317, -155,
	-265, -295, 69, 69, 69, 80, -296, -296, -295, -286,
	-295, -448, -243, -243, -296, -296, -243, -243, -243, -243,
	125, -243, -243, -243, -243, -243, -243, -243, -243, 69,
	-153, -106, -408, -407, -290, 40, 537, -107, -290, -150,
	-149, -290, -485, 74, 440, 441, 147, 150, 149, 34,
	68, 68, 137, -187, 96, -467, -265, -328, -325, -322,
	-265, -318, -265, -265, -308, -308, -308, -187, -465, -452,
	34, -156, -265, -233, 16, -288, -288, -322, 248, -492,
	-276, -258, -257, -278, -273, -278, -278, -233, -493, -276,
	-276, -278, -274, -233, -265, 415, -233, -233, -361, -275,
	-265, -275, -308, -257, -258, -258, -187, -223, -224, 214,
	211, 210, -230, 212, 360, 250, -309, 254, 78, 255,
	396, 256, 219, 258, 259, 260, 230, 261, 262, 263,
	389, 264, 265, 266, 267, 343, 6, 306, 40, -467,
	-467, 30, -328, -265, -145, -140, -144, -141, -146, -236,
	-238, -143, 68, -187, -135, -265, 31, 388, -343, 388,
	31, -318, -337, -333, 74, 389, -323, -342, 65, 134,
	-407, -340, -340, -340, -342, -342, 133, 138, -489, 439,
	440, 206, -107, -189, -187, -467, -327, -318, -265, -189,
	-189, -265, 68, 35, -265, -232, 138, -231, 15, -266,
	-265, 34, 74, 137, -232, -114, -112, 102, -290, -6,
	546, -290, -6, -6, -290, -6, -290, -388, 364, 80,
	80, -251, 74, -251, 80, 80, 80, 69, 74, -331,
	65, -401, -297, -445, 536, -160, 69, -155, -443, -444,
	-155, -159, -265, -401, -160, 69, -443, -107, -107, -265,
	23, -79, -455, 137, 138, -156, -346, -326, -323, -348,
	125, -265, -334, 138, 490, 559, 72, 221, -477, -476,
	380, 69, 138, -411, 222, 457, 74, 560, 202, 85,
	318, 86, 87, -374, -296, -293, -288, -288, -286, -286,
	-291, 235, -291, 95, -290, -289, -449, 102, -290, 34,
	138, 66, 137, 69, 69, 15, 15, 69, -290, 69,
	69, 69, 69, 15, 15, -290, 69, 137, 69, 69,
	69, 69, 66, 69, 138, 69, 138, -296, -290, 69,
	69, -290, -290, -290, -296, 69, -290, -290, -290, -290,
	-290, -290, -290, -290, -356, 410, 138, 69, 74, 138,
	22, 138, -147, 36, 37, 148, 151, 151, 150, -174,
	-176, -177, -178, -179, -180, 116, 139, 140, -167, -168,
	-169, -170, -193, -249, 173, 176, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 234, 168, 169,
	170, 171, 189, 154, 174, 155, 156, 157, 158, 159,
	160, 163, 164, 165, 162, -265, -157, 35, -470, 367,
	-478, 138, 40, -476, 450, -311, 66, -130, 15, -187,
	-187, -187, -200, 34, 15, -139, -188, -265, 68, 69,
	138, -290, -319, 66, -265, -258, -233, -187, -265, -233,
	-233, -276, -278, -278, -274, 137, -257, -157, 138, -183,
	225, -190, -184, -186, -249, -281, -185, 228, -440, 226,
	224, 90, 229, 280, 91, 219, -225, 219, 91, -265,
	225, 229, 224, -226, 219, 221, -262, 106, -262, -256,
	133, -262, -262, -262, -262, 257, 257, -262, -262, -262,
	-262, -262, -262, -262, -262, -262, -262, -262, -262, -262,
	-262, 68, -471, 367, 30, 326, -478, -131, 320, 30,
	-239, -240, -241, -242, 54, 58, 60, 55, 56, 57,
	61, 30, 138, -263, -267, 34, -265, 74, -263, -135,
	-140, -145, -263, 68, 221, 68, 106, -342, -342, -342,
	40, -264, -487, 446, 440, 138, 65, -167, -175, -233,
	-138, -140, -265, 74, -265, 125, -233, 103, -6, 101,
	-118, -117, -116, 104, 544, 550, 103, 103, 103, 69,
	69, 69, 138, 69, 69, 69, 138, 69, 138, -414,
	420, 39, 138, 68, 69, 138, 47, 138, 106, 69,
	138, 69, 47, 137, 396, -265, -425, 69, -348, 138,
	221, 137, 137, -324, 346, -264, -326, 20, 490, -249,
	38, -255, -254, 74, 560, 69, -291, -291, 95, -288,
	-285, 69, 103, -290, 101, -191, -193, 362, 363, -192,
	-198, 134, 172, 234, 171, 170, 168, 362, 363, -208,
	-265, -290, -290, 69, -290, -290, 15, -265, -208, -286,
	-290, -152, 69, -355, -356, -355, 69, 69, 69, 69,
	-355, 69, 69, 69, 69, 69, 69, 69, 69, 68,
	-407, -414, -290, -290, -149, -148, 43, 151, 354, 69,
	138, -249, 69, 138, -193, 34, -473, 422, 369, -262,
	-283, -282, 322, 41, -394, 389, 375, 376, -325, 248,
	-265, 65, 310, 311, 312, 313, -306, -307, -305, -309,
	-467, 68, 68, 68, -375, 300, -193, -187, -139, -265,
	15, 138, -466, 137, -1, -265, -318, -276, -233, -493,
	-233, -276, -276, -278, -265, 34, -224, -190, -193, -185,
	-439, -440, -308, -265, 91, -439, 91, 68, -265, -265,
	-265, 91, 91, -265, -227, -275, 80, 80, -262, -262,
	80, 74, 74, 74, -262, -262, 80, 74, -267, 80,
	80, 80, 80, 40, 74, -213, 40, 268, 272, 269,
	270, 271, 80, 40, 80, 40, 80, 40, -265, 68,
	-441, -442, 74, -473, -262, 326, 106, -283, -129, 78,
	31, -161, 214, 211, -467, -330, -329, -249, -144, -144,
	-144, -144, 54, 54, 54, 59, 54, 59, 54, -241,
	-330, -146, -157, -267, 69, -483, -482, -481, -479, 62,
	222, 63, -295, -326, -279, 74, -333, -187, -187, 69,
	-235, 17, 137, -235, 99, -6, -114, -116, -290, -6,
	-290, 546, 336, 547, 74, 80, 80, -422, 406, 401,
	403, 91, -297, -409, -408, 47, -132, -155, -401, -444,
	-407, -265, 47, -132, -401, -265, 80, 15, -323, -318,
	125, 125, -265, 347, -334, 74, 368, 74, 217, 561,
	138, 106, -255, -285, -290, 69, -201, 159, 158, -201,
	69, -380, -380, -379, -382, -379, -201, -201, 69, 69,
	23, 69, 69, 69, -290, 69, 69, 138, -398, 459,
	-355, -355, -355, -355, -355, -355, -355, -355, -355, -355,
	-355, -355, -355, -299, -298, 240, -422, 44, 45, 74,
	74, -178, -193, 215, -169, 40, -132, -474, 78, -468,
	74, -265, -475, 78, 370, 136, 324, 40, 371, 372,
	386, 319, 80, 80, 377, -469, -265, -162, 320, -187,
	-305, -256, 133, 259, 303, -181, -182, -183, -181, -181,
	-376, 302, 20, 80, 124, -158, 66, 137, -140, -188,
	-265, 125, 69, -233, -265, -233, -233, -276, -132, -228,
	44, 46, -205, -204, -202, 85, 96, 40, 360, -203,
	78, 133, 273, 251, 274, -222, -280, 65, 366, 224,
	90, 91, 348, -281, -437, -265, -435, -437, -265, -435,
	-435, -308, -290, -265, -229, 308, 309, -208, -208, 74,
	74, -209, 251, -189, 69, 138, 106, -474, -468, 106,
	74, -475, 74, 138, -161, -161, -233, 138, 106, -164,
	-163, 65, 66, -165, 65, -163, 54, 54, -233, -481,
	-480, 23, -440, -440, -440, 69, 69, -234, 18, 20,
	125, -234, 103, 101, 103, 103, -265, 69, 69, -386,
	538, -418, -420, 401, 20, 20, 13, 69, -401, -401,
	-318, -334, 389, -187, -254, 74, 561, -290, 69, -290,
	69, 74, -152, 20, -386, -171, -193, -284, 74, -472,
	380, 74, 74, 80, 40, 80, 136, 373, -395, -129,
	-161, 68, -262, -262, -262, -265, 69, 138, 69, 69,
	-377, 239, 80, 124, 80, 124, 80, -263, -140, -265,
	-233, -466, 137, -233, -233, -249, -202, 85, -286, 74,
	-210, -264, 134, -211, 40, 272, 268, -212, 40, 252,
	253, -214, 68, 280, 13, 91, 91, -187, 68, 68,
	66, 290, 68, 68, -437, 69, 252, 253, 69, -442,
	74, -472, 74, -467, -152, -329, -407, -290, 68, -290,
	68, 54, 19, 17, -290, -296, 223, -6, 547, 336,
	-215, 539, 74, 20, 74, -416, 74, -330, -110, -412,
	-361, 69, 69, -355, -358, -357, -360, 407, 282, 413,
	-296, -215, 489, 20, 490, 323, 40, 80, 40, 374,
	-313, -315, -249, 68, -208, -210, 74, -206, -207, -230,
	-183, -109, -108, -206, -378, 142, 80, 124, 80, 80,
	-233, -233, 80, 68, -402, -314, 68, -313, -313, -438,
	310, 311, 312, 314, 313, -438, -313, -313, 68, -336,
	-335, 281, 96, -153, -156, -436, -265, 224, 20, 20,
	-265, -265, -252, 540, 80, 74, 403, -387, 541, -421,
	406, -415, -413, 401, 402, 403, 404, 69, -359, 98,
	373, 377, -290, -252, -172, -265, 74, 368, 74, 323,
	69, 138, -379, -290, -350, 240, 138, -230, -110, -350,
	-393, 150, 301, 490, 80, 124, 80, -152, 69, -290,
	-300, -217, -216, 486, -313, 69, 69, 69, 69, -313,
	281, 69, 69, 138, 68, 20, 74, -423, 222, -419,
	-420, 405, -413, 20, 403, 20, 20, -359, 536, 411,
	412, 411, 412, 34, 389, -316, -315, -147, 69, -351,
	289, 20, -230, -351, 301, 80, 124, 80, -153, 69,
	-221, -219, -220, 65, 418, 278, 279, 69, -316, -316,
	-316, -316, 69, -265, 224, -253, -265, -416, -430, 68,
	80, -418, -417, -419, 20, -416, 20, -416, -416, 95,
	74, -317, 230, 78, 490, 308, 309, -147, 20, -352,
	282, 283, -353, -365, 285, 80, -335, -220, 65, -219,
	65, 14, 13, -222, 69, 138, -434, 30, 69, -429,
	-428, -250, -424, -265, 406, 407, 74, -416, -359, -262,
	74, 307, -249, 68, -363, 286, 68, -361, 68, -361,
	91, 311, -218, 275, 276, 30, 150, -218, -265, -433,
	-432, -431, 69, 138, 137, 80, -265, -349, -354, 287,
	80, -286, 68, -286, 68, -362, 284, 68, 85, 40,
	277, 138, 106, -428, -265, 69, -367, 68, 20, 69,
	-349, 69, -349, 68, 106, -286, -432, 40, -290, 137,
	-368, -366, 240, -353, 69, 69, 69, -349, 80, 69,
	-265, 69, 138, -265, -364, 288, 69, -366, -369, 47,
	80, -373, -370, 68, -230, 242, 116, -373, -230, -372,
	-371, 287, 243, 68, 69, 138, -265, 239, 68, -296,
	-371, -370, -296, 69, 69,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 245,
	246, 247, 756, 757, 758, 759, 760, 0, 0, 0,
	0, 530, 531, 0, 502, 0, 0, 0, 0, 0,
	0, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 336, 337,
	338, 339, 340, 341, 0, 270, 266, 206, 207, 208,
	209, 277, 278, 373, 0, 0, 0, 0, 613, -2,
	53, 259, 0, 250, 250, 761, 762, 763, 764, 765,
	766, 767, 768, -2, 543, 0, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 325, 326,
	327, 321, 322, 324, 323, -2, 0, 543, 0, 0,
	0, 633, 0, 0, 648, 670, 23, 0, 7, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 0,
	0, 19, 0, 19, 0, 0, 0, 1053, 1054, 1055,
	1056, -2, 1520, 1499, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 0, 243, 241, 1499, 1520,
	1580, 1613, 0, 773, 0, 591, 0, 596, 1016, 591,
	271, 532, 533, 633, 633, 500, 0, 307, 0, 1512,
	311, 0, 0, 0, 497, 301, 302, 303, 304, 305,
	306, 0, 0, 755, 0, 0, 297, 0, 265, 1571,
	0, 0, 0, 0, 0, 0, 150, 844, 152, 846,
	156, 163, 0, 0, 168, 169, 172, 173, 174, 175,
	176, 0, 180, 0, 182, 185, 0, 187, 188, 0,
	191, 192, 193, 0, 203, 204, 205, 847, 848, 849,
	-2, 81, 771, 1437, 1332, 0, 1339, 1340, 1351, 1362,
	1126, 1127, 1128, 1129, 0, 0, 0, 0, 0, 1136,
	1137, 0, 1151, 1673, 0, 1143, 1144, 1145, 1146, 1147,
	90, 102, 103, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 0, 1305, 1113, 1053, 0, 1681, 0,
	1701, 1706, 1707, 1708, 1709, 1700, 0, 0, 1290, 0,
	1280, 0, 0, -2, -2, 0, 0, 1639, -2, 1678,
	1697, 1705, 1682, 1704, 1675, 1676, 1670, 1671, 1672, 1674,
	1683, 1685, 1696, 0, 1692, 1702, 1703, 0, 0, 104,
	105, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1296, -2, 1298, 1299, 1301, 1302,
	1303, 1304, -2, 1307, 1308, 1309, -2, -2, 1312, 1313,
	1314, 1315, 1316, 1317, 1320, -2, 1322, -2, -2, 1292,
	1293, 1294, 1295, 1284, 1285, 1286, 1287, 1288, 1289, -2,
	-2, -2, 633, 706, 0, -2, 0, 0, 0, 653,
	656, 659, 662, 0, 54, 55, 260, 261, 249, 251,
	0, 255, 0, 248, 0, 0, 0, 876, 876, 876,
	876, 876, 0, 876, 0, 0, 0, 876, 851, 852,
	853, 874, 875, 922, 548, 544, 545, 546, 547, 621,
	0, 623, 626, 477, 424, 0, 0, 477, 0, 437,
	430, 0, 0, 0, 477, 0, 0, 628, 628, 0,
	480, 487, 477, 477, -2, 477, 477, 477, 0, 0,
	443, 444, 445, 430, 0, 430, 449, 450, 451, 462,
	463, 488, 1461, 0, 0, 373, 0, 373, 0, 373,
	373, 550, 1571, 0, 0, 217, 1639, 222, 0, 1519,
	1585, 1534, 0, 0, 1552, 0, -2, 0, 287, 628,
	0, 634, 0, 633, 0, 0, 373, 373, 373, 373,
	373, 373, 373, 373, 0, 0, 0, 373, 0, 0,
	671, 672, 667, 668, 669, 673, 674, 5, 6, 19,
	0, 0, 0, 0, 0, 0, 60, 59, 0, 1438,
	1456, 1393, 1394, 1395, 1443, 1397, 1447, 1447, 1447, 1447,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 0,
	0, 1436, 1416, 1445, 1445, 1445, 1443, 1440, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1450, 1450, 1453, 1450, 0, 1330, 0, 0,
	0, 0, 595, 0, 0, 628, -2, 0, 501, 308,
	1057, 0, 0, 312, 313, 0, 0, 328, 0, 331,
	316, 317, 318, 0, 130, 0, 299, 300, 0, 0,
	267, 0, 0, 0, 374, 0, 0, 0, 0, 0,
	0, 160, 157, 164, 167, 177, 184, 0, 196, 198,
	201, 158, 165, 170, 171, 178, 199, 159, 161, 162,
	166, 200, 202, 179, 183, 197, 181, 186, 189, 190,
	195, 0, 131, 0, 0, 0, 0, 0, 1338, 0,
	0, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 1332, 0, 0,
	1132, 1133, 1134, 1135, 1138, 0, 1152, 0, 0, 0,
	1391, 0, 1330, 1330, 0, 1330, 1326, 0, 0, 0,
	0, 0, 0, 1330, 1266, 0, 0, 1268, 1281, 0,
	0, 1270, 1271, 0, 1274, 1275, 1330, 0, 1330, 1279,
	1262, 1263, 0, 1326, 1326, 0, 0, 1326, 1326, 1326,
	1326, 1326, 1326, 1326, 1326, 1326, 1326, 1326, 1326, 0,
	628, 0, 0, 616, 0, 597, 0, 650, 652, 0,
	654, 655, 657, 658, 660, 661, 663, 664, 56, 0,
	0, 253, 0, 258, 0, 770, 0, 0, 786, 0,
	0, 0, 0, 0, 0, 0, 0, 876, 876, 876,
	0, 550, 549, 0, 622, 0, 0, 679, 0, 0,
	0, 430, 477, 435, 436, 432, 431, 483, 484, 480,
	0, 480, 480, 679, 0, 456, 457, 458, 477, 477,
	464, 629, 465, 466, 480, 0, 485, 486, 679, 0,
	0, 679, 679, 0, 474, 475, 476, 0, 0, 876,
	0, 493, 432, 447, 432, 1462, 1463, 0, 885, 0,
	0, 0, 496, 0, 0, 0, 551, 210, 0, 0,
	0, 0, 0, 0, 239, 240, 0, 0, 0, 0,
	0, 230, 233, 1010, 1011, 841, 842, 234, 235, 279,
	280, 0, 597, 649, 651, 645, 646, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 526, 0, 528, 0,
	0, 687, 681, 683, 750, 90, 687, 8, 77, 74,
	0, 19, 0, 0, 19, 19, 0, 19, 244, 0,
	1459, 1457, 1458, 1396, 1444, 0, 1421, 0, 1422, 1423,
	1424, 0, 0, 1417, 0, 1418, 1419, 1420, 1412, 0,
	1413, 1414, 0, 1415, 242, 0, 1331, 774, 0, 570,
	583, 565, 0, 572, 0, 1017, 552, 583, 554, 0,
	572, 597, 619, 597, 0, 309, 0, 314, 0, 0,
	330, 332, 333, 334, 319, 320, 498, 295, 296, 288,
	289, 290, 291, 292, 293, 294, 298, 100, 0, 268,
	269, 0, 0, 0, 144, 145, 146, 147, 148, 149,
	151, 135, 518, 520, 833, 845, 0, 836, 0, 154,
	194, 127, 0, 0, 1333, 1334, 1335, 1336, 1337, 1341,
	0, 1343, 1345, 1347, 1349, 0, 1367, -2, -2, 1114,
	1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124,
	1125, 1352, 1365, 1366, 0, 0, 0, 0, 0, 0,
	1363, 1363, 1358, 0, 1130, 0, 1149, 1153, 0, 0,
	0, 91, 1325, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 0, 0, 1332, 0, 0, 0, 1327, 1328,
	0, 0, 0, 1221, 0, 0, 1227, 1228, 1229, 0,
	578, 0, 1291, 1267, 1282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	705, 707, 0, 587, 589, 590, 0, 617, 630, 635,
	636, 639, 52, 57, 262, 263, 0, 0, 257, 0,
	-2, 788, 0, 626, 0, 0, 800, 371, 827, 0,
	0, 843, 866, 872, 0, 0, 0, 900, 0, 624,
	0, 0, 719, 423, 0, 478, 479, 427, 1571, 432,
	679, 438, 433, 439, 482, 440, 441, 442, 0, 679,
	679, 477, 480, 467, 481, 480, 470, 471, 0, 489,
	494, 490, 0, 492, 446, 448, 626, 343, 344, 0,
	0, 0, 349, 0, 1464, 1464, 0, 1464, 1464, 1464,
	1464, 0, 0, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 0, 886, 368,
	0, 0, 371, 817, 692, 0, 693, 694, 690, 721,
	745, 745, 0, 745, 725, 1016, 211, 212, 0, 214,
	215, 216, 223, 218, 220, 0, 0, 224, 236, 237,
	238, 0, 0, 0, 228, 229, 0, 0, 282, 283,
	285, 0, 615, 515, 1014, 516, 517, 521, 0, 523,
	524, 525, 788, 0, 822, 679, 0, 688, 0, 684,
	751, 0, 753, 0, 679, 0, 75, 19, 0, 68,
	65, 0, 0, 0, 0, 0, 1439, 1392, 1460, 0,
	0, 0, 1441, 0, 0, 0, 0, 58, 599, 559,
	0, 564, 580, 0, 584, 0, 0, 576, 569, 573,
	0, 0, 593, 553, 0, 0, 558, 618, 620, 1058,
	0, 315, 329, 0, 0, 0, 0, 138, 830, 0,
	139, 143, 133, 0, 0, 0, 835, 0, 832, 837,
	0, 153, 0, 0, 128, 129, 891, 896, 0, 1342,
	1344, 1346, 1348, 1350, 0, 1353, 1363, 1363, 1359, 0,
	1354, 0, 1356, 0, 1333, 0, 1154, 0, 0, 0,
	0, 0, 0, 1211, 1212, 0, 0, 1216, 0, 1218,
	1219, 1220, 1222, 0, 0, 0, 1226, 0, 1265, 1283,
	1269, 1272, 0, 1276, 0, 1278, 0, 633, 0, 1188,
	1188, 0, 0, 0, 0, 1188, 0, 0, 0, 0,
	0, 0, 0, 0, 1148, 0, 0, 708, 599, 0,
	0, 0, 642, 640, 641, 264, 252, 254, 0, 0,
	0, 776, 777, 779, 0, 782, 783, 784, 0, 789,
	790, 792, 793, 0, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1504, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 787, 0, 877, 807, 1464,
	375, 0, 0, 829, 0, 0, 0, -2, 0, 0,
	0, 0, 902, 0, 0, 0, 537, 541, 23, 627,
	0, 680, 425, 0, 426, 477, 434, 679, 1016, 459,
	460, 679, 477, 477, 480, 0, 491, 0, 885, 346,
	0, 1022, 1023, 1024, 0, 0, 1028, 1035, 876, 1083,
	0, 1035, 0, 0, 1037, 1038, 347, 0, 0, 358,
	0, 0, 0, 348, 0, 0, 0, 1465, 0, 1464,
	1464, 0, 0, 0, 0, 1464, 1464, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 807, 1464, 0, 0, 375, 814, 0, 0,
	0, 0, 0, 0, 712, 0, 0, 711, 0, 0,
	0, 0, 0, 626, 746, 0, 748, 749, 723, -2,
	0, 692, 728, 1330, 0, 0, 0, 225, 226, 227,
	231, 232, 281, 284, 286, 0, 0, 0, 529, 677,
	682, 689, 752, 754, 91, 685, 677, 0, 78, 19,
	77, 69, 70, 0, 19, 0, 0, 0, 0, 1449,
	1448, 1434, 0, 1435, 1446, 1451, 0, 1454, 0, 603,
	0, 0, 583, 585, 0, 0, 583, 0, 0, 592,
	0, 0, 583, 0, 0, 499, 101, 335, 0, 0,
	0, 0, 0, 519, 0, 834, 135, 0, 0, 155,
	0, 0, 894, 0, 896, 1329, 1355, 1357, 0, 1364,
	1360, 1131, 1139, 1150, 0, 0, 1156, 1168, 1168, 0,
	1159, 1447, 1447, 1162, 1443, 1445, 1443, 1168, 1168, 0,
	92, 0, 0, 1217, 0, 0, 0, 579, 0, 0,
	0, 1186, 1188, 1193, 1189, 1194, 1188, 1188, 1188, 1188,
	1199, 1188, 1188, 1188, 1188, 1188, 1188, 1188, 1188, 1184,
	588, 603, 631, 632, 637, 638, 0, 256, 0, 0,
	781, 0, 0, 0, 794, 0, 810, 808, 809, 0,
	824, 376, 377, 378, 379, 0, 0, 0, 828, 0,
	560, 0, 867, 868, 869, 870, 871, -2, 880, 0,
	0, 1018, 1018, 1018, 910, 0, 901, 591, 0, -2,
	0, 0, 539, 0, 0, 720, 428, 679, 452, 0,
	468, 679, 679, 477, 495, 0, 345, 352, -2, 1027,
	1047, 1036, 1047, 1084, 1047, 1047, 876, 0, 356, 357,
	359, 0, 361, 0, 350, 355, 969, 970, 0, 0,
	973, 974, 975, 976, 0, 0, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 1004, 1005, 1006, 1007,
	1008, 1009, 989, 990, 991, 992, 993, 994, 1001, 0,
	0, 998, 0, 810, 0, 0, 0, 824, 816, 0,
	818, 819, 0, 0, 562, 679, 274, 0, 715, 709,
	0, 698, 713, 714, 701, 0, 703, 0, 699, 700,
	679, 691, 722, 747, 724, 727, 729, 730, 736, 0,
	0, 0, 0, 213, 0, 395, 219, 1015, 522, 527,
	675, 0, 0, 675, 73, 76, 0, 71, 0, 0,
	0, 0, 63, 61, 1442, 0, 0, 605, 115, 0,
	0, 0, 581, 0, 586, 583, 568, 577, 567, 574,
	575, 594, 583, 557, 556, 1059, 310, 0, 831, 135,
	140, 141, 142, 136, 134, 838, 0, 840, 0, 892,
	896, 0, 0, 1361, 1155, 1140, 1157, 1169, 1170, 1158,
	1141, 1160, 1161, 1163, 1164, 1165, 1166, 1167, 1142, 1213,
	0, 1215, 1223, 1224, 0, 1273, 1277, 0, 0, 0,
	1192, 1195, 1196, 1197, 1198, 1200, 1201, 1202, 1203, 1204,
	1205, 1206, 1207, 633, 1185, 0, 605, 643, 644, 769,
	772, 778, 780, 0, 791, 0, 798, 799, 0, 0,
	802, 803, 812, 0, 0, 0, 381, 382, 0, 0,
	0, 394, 390, 391, 392, 372, 823, 814, 0, 0,
	881, 1464, 1464, 1464, 0, 0, 1019, 1020, 0, 0,
	913, 0, 0, 904, 0, 745, 0, 0, 679, 538,
	541, 542, 625, 429, 679, 472, 469, 679, 342, 351,
	353, 0, 1049, -2, 1062, 1064, 0, 0, 1067, 1068,
	0, 0, 0, 0, 1105, 1074, 0, 0, 1078, 0,
	1379, 1380, 0, 1082, 0, 1048, 0, 1039, 1048, 0,
	0, 1047, 0, 360, 362, 363, 364, 971, 972, 977,
	978, 995, 0, 0, 997, 0, 0, 365, 0, 0,
	366, 370, 815, 0, 820, 821, 633, 0, 0, 695,
	716, 0, 0, 696, 0, 697, 702, 704, 273, 731,
	0, 0, 733, 734, 735, 726, 221, 665, 0, 0,
	686, 666, 0, 19, 0, 0, 66, 1452, 1455, 607,
	0, 604, 116, 0, 0, 0, 0, 582, 566, 555,
	137, 132, 839, 118, 895, 897, 893, 0, 1225, 0,
	1188, 1187, 1181, 0, 607, 0, 797, 795, 811, 801,
	0, 825, 826, 0, 383, 384, 0, 387, 393, 813,
	561, 0, 0, 0, 0, 873, -2, 0, 0, -2,
	916, 0, 911, 0, 903, 0, 906, 679, 679, -2,
	535, 540, 0, 453, 473, 354, 1063, 1065, 1066, 1069,
	1070, 1012, 1013, 1071, 1110, 1111, 1112, 1072, 1107, 1108,
	1109, 1073, 0, 0, 0, 1377, 1378, 1103, 0, 0,
	0, 0, 0, 0, 0, 1033, 1002, 1003, 996, 999,
	1000, 369, 367, 563, 628, 275, 276, 717, 0, 710,
	740, 737, 0, 0, 676, 678, 67, 72, 0, 0,
	609, 0, 606, 0, 600, 602, 126, 571, 88, 109,
	0, 1214, 1264, 1191, 0, 1182, 0, 1176, 1177, 1178,
	1183, 609, 0, 0, 0, 380, 385, 0, 388, 389,
	0, 862, 1443, 0, 882, 883, 884, 923, -2, 966,
	1021, 888, 118, 923, 907, 0, 914, 0, 912, 905,
	633, 536, 0, 0, 1280, 1098, 0, 0, 0, 1040,
	1042, 1043, 1044, 1045, 1046, 1041, 0, 0, 0, 1032,
	1034, 1079, 0, 272, 0, 0, 741, 743, 738, 739,
	62, 64, 79, 0, 608, 117, 0, 80, 0, 106,
	0, 119, 120, 0, 0, 0, 0, 1190, 1179, 0,
	0, 0, 0, 598, 0, 796, 804, 0, 806, 386,
	855, 0, 639, 0, 925, 0, 885, 968, 890, 925,
	899, 0, 909, 0, 918, 0, 915, 628, 1106, 0,
	1077, 1086, 1099, 0, 0, 855, 855, 855, 855, 0,
	1080, 718, 732, 0, 0, 0, 89, 93, 0, 115,
	112, 0, 121, 0, 0, 0, 0, 0, 1171, 1172,
	1174, 1173, 1175, 0, 805, 854, 863, 864, 639, 887,
	0, 962, 967, 889, 908, 917, 0, 920, 534, 1075,
	1085, 1087, 1088, 0, 1100, 1101, 1102, 1104, 1025, 1026,
	1029, 1030, 0, 742, 744, 0, 611, 601, 82, 0,
	0, 110, 111, 113, 0, 122, 0, 124, 125, 0,
	785, 856, 1464, 0, 0, 860, 861, 865, 0, 950,
	0, 0, 956, 0, 963, 919, 1076, 1089, 0, 1090,
	0, 0, 0, 1031, 610, 0, 898, 0, 94, 0,
	96, 98, 99, 1050, 107, 108, 114, 123, 1180, 0,
	858, 0, 926, 0, 928, 0, 0, 0, 0, 0,
	960, 0, 1091, 1093, 1094, 0, 0, 1092, 612, 83,
	84, 0, 95, 0, 0, 857, 859, 0, 930, 0,
	951, 0, 0, 0, 0, 0, 0, 0, 1095, 1097,
	1096, 0, 0, 97, 1051, 927, 924, 0, 962, 952,
	0, 954, 0, 0, 0, 0, 85, 86, 87, 0,
	0, 932, 0, 948, 953, 955, 957, 0, 961, 959,
	1052, 931, 0, 944, 929, 0, 958, 933, -2, 0,
	949, 934, -2, 0, 942, 0, 0, 935, 943, 0,
	938, 0, 0, 0, 937, 0, -2, 945, 0, 0,
	939, -2, 0, 947, 946,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 97, 3, 3, 3, 128, 120, 3,
	68, 69, 125, 123, 138, 124, 137, 126, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 558, 557,
	107, 106, 108, 3, 559, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 130, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 560, 119, 561, 131,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 98, 99, 100, 101, 102, 103, 104,
	105, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 121, 122, 127, 129, 132, 133, 134, 135, 136,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:712
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:719
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:725
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:733
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:739
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:743
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:758
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:762
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:768
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:773
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:777
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:809
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:816
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:836
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:842
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:849
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:857
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:863
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:872
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:882
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:890
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:898
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:906
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:916
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:924
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:934
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:941
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:950
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:960
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:964
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:970
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:974
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:980
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:989
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:999
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1003
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1009
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1018
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1022
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1028
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1049
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1062
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1069
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1073
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1079
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1083
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1089
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1096
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1104
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1108
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1122
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1126
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1130
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1135
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1139
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1143
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1149
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1158
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1169
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1173
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1179
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1183
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1189
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1193
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1199
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1223
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1242
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1246
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1250
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1255
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1259
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1266
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1274
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1281
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1286
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1293
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1298
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1302
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1326
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1330
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1336
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1342
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1360
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1377
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1400
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1404
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1408
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1413
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1417
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1423
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1436
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1447
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1460
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1464
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1474
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1487
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1500
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1506
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1512
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1519
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1527
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1536
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1540
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1544
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1548
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1552
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1556
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1563
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1567
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1573
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1580
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1589
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1593
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1599
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1603
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1607
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1611
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1615
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1619
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1623
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1627
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1631
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1635
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1639
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1643
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1647
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1651
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1655
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1659
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1663
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1667
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1671
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1675
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1679
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1683
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1687
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1691
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1695
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1699
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1703
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1707
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1711
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1715
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1719
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1723
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1727
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1731
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1735
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1739
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1743
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1747
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1751
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1755
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1759
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1763
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1767
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1779
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1783
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1787
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1791
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1795
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1807
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1814
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1821
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1830
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1860
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1864
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1868
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1874
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1880
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1884
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1891
		{
			yyVAL.str = yyDollar[3].str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1897
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1901
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1907
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1915
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1924
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1932
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1940
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1963
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1986
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1993
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2000
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2008
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2015
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2022
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2031
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2035
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2039
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2045
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2049
		{
			yyVAL.str = yyDollar[1].str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2055
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2059
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2065
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2069
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2080
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2086
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2091
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2095
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2099
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2103
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2107
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2111
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2115
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2119
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2123
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2129
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2133
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2137
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2141
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2146
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2151
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2157
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2164
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2170
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2177
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2184
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2194
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2201
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2212
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2223
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2227
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2233
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2243
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2249
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2253
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2259
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2265
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2269
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2273
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2277
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2283
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2295
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2301
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2305
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2311
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2315
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2321
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2327
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2338
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2344
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2348
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2352
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2356
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2360
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2364
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2372
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2380
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2390
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2431
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2435
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2441
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2447
		{
			yyVAL.str = yyDollar[1].str
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2452
		{
			yyVAL.str = "true"
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2453
		{
			yyVAL.str = "false"
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2454
		{
			yyVAL.str = yyDollar[1].str
		}
	case 335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2459
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2474
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2485
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2494
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2498
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2504
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2511
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2515
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2519
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2523
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2527
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[3].columnTableDefUnion(),
					Pos:    yyDollar[4].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2537
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: -1,
			}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2543
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: 0,
			}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2549
		{
			yyLOCAL = &tree.AlterColPos{
				PreColName: yyDollar[2].unresolvedNameUnion(),
				Pos:        -2,
			}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2559
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2567
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2574
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2581
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2588
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2595
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2602
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2610
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2619
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2623
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2630
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2642
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2650
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2659
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2665
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2676
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2687
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2691
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2696
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2700
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2705
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2709
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2725
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2729
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2733
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2737
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2741
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2745
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2749
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2753
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2757
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2761
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2765
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2769
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2773
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2777
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2781
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2785
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2791
		{
			yyVAL.item = nil
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2796
		{
			yyVAL.item = nil
		}
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2834
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2839
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2843
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2847
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2856
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2860
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2866
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2871
		{
		}
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2875
		{
		}
	case 434:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2880
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2889
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2897
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2903
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2909
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2915
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2921
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2927
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2933
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2942
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2946
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2950
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2954
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2958
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2962
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2966
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2970
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2974
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2980
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2987
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2997
		{
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2999
		{
		}
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3008
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3018
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3027
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3031
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3035
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3041
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3047
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3053
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3059
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3068
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3078
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3090
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3094
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3100
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3112
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3126
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3132
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3139
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3144
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3148
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3152
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3157
		{
			yyVAL.str = ""
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3161
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3167
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3180
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3184
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3190
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3195
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3199
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3203
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3209
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3215
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3219
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3225
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3231
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3235
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3239
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3245
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3249
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3272
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3281
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3290
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3299
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3303
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3309
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3318
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3327
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3337
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3343
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3349
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3355
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3361
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3370
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3377
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3388
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3393
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3400
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3416
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3429
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3440
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3444
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3450
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3455
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3462
		{
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3464
		{
		}
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3467
		{
		}
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3476
		{
		}
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3480
		{
		}
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3485
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3494
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3501
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3507
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3515
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3522
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3529
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3549
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3558
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3562
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3568
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3572
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3578
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3585
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3591
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3599
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3606
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3613
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3632
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3636
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3641
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3645
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3649
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3655
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3664
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3668
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3674
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3678
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3684
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3688
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3694
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3699
		{
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3703
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3710
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3714
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3721
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3726
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3730
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3736
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3740
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3746
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3750
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3755
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3759
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3772
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3779
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3786
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3804
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3823
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3829
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3836
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3840
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3853
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3857
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3862
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3866
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3873
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3878
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3885
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3891
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3895
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3899
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3903
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3907
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3911
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3917
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3924
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3933
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3937
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3943
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3951
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3955
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3960
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3964
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3970
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3974
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3978
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3983
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3987
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3993
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3999
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4003
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4009
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4014
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4018
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4022
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4027
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4031
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4035
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4041
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4045
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4049
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4063
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4067
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4077
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4087
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4097
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4109
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4117
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4125
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4134
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4142
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4150
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4158
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4166
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4174
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4182
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4190
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4198
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4208
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4219
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4233
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4237
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4241
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4246
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4250
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4254
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4263
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4267
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4272
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4276
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4281
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4285
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4291
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4295
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4301
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4305
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4310
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4314
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4319
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4327
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4333
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4341
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4349
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4359
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4365
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4374
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4383
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4392
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4402
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4406
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4416
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4420
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4424
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4428
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4434
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4444
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4448
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4454
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4460
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4464
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4470
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4476
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4480
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4484
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4490
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4494
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4500
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4504
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4510
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4514
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4520
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4524
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4534
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4547
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4553
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4559
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4572
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4583
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4590
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4594
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4600
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4610
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4614
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4618
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4623
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4627
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4631
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4635
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4640
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4644
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4648
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4652
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4656
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4661
		{
			yyVAL.str = ""
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4665
		{
			yyVAL.str = yyDollar[1].str
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4669
		{
			yyVAL.str = yyDollar[2].str
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4675
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4681
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4685
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4689
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4693
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4697
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4703
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 769:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4736
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4746
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4752
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 772:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4758
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4768
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4773
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4779
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4786
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4790
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:4796
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:4802
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4807
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4811
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4815
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4819
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4826
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4838
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4843
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4849
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4856
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4860
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4866
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4872
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4876
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4880
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4886
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4892
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4898
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4909
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4921
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4927
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4937
		{
			yyVAL.str = yyDollar[1].str
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4941
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4947
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4954
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4960
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4968
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4974
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4981
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4989
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4995
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5004
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5016
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				Accounts:    yyDollar[7].identifierListUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5027
		{
			yyVAL.str = ""
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5031
		{
			yyVAL.str = yyDollar[2].str
		}
	case 816:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5037
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5047
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5051
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5057
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5063
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5069
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5078
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5087
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5092
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5098
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5106
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5212
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5216
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5222
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5232
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5236
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5242
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5252
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5256
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5260
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5265
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5269
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5275
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5282
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5288
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5297
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5304
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5313
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5317
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5323
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5337
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5341
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5345
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5350
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5354
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5358
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5362
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5368
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5387
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5391
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5413
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5417
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5421
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5425
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5429
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5435
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5439
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5445
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5450
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5455
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5459
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5463
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5467
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5471
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5477
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5488
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5492
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5502
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5506
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5511
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5515
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5521
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5525
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5531
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5535
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5539
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5544
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5548
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5554
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5566
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5575
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5588
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5595
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5605
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5613
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5624
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5628
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5633
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5637
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5644
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5655
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5668
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5682
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5686
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5690
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5697
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5704
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5711
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5718
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5722
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5726
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5730
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5734
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5741
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5748
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5752
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5759
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5766
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5770
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5777
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5784
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5791
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5798
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5802
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5807
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5811
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5821
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5825
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5832
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5839
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5843
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5852
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5856
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5862
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5866
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5872
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5881
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5891
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5895
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5901
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5905
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5911
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5918
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5927
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5931
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5936
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5940
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5945
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5949
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5954
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5958
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5968
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5972
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5983
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5991
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5999
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6007
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6018
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6027
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6037
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6047
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6051
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6056
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6060
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6069
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6075
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6079
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6083
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6089
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6093
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6097
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6101
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6105
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6109
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6114
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6118
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6122
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6126
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6130
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6134
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6138
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6142
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6146
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6150
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6154
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6158
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6162
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6166
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6170
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6174
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6178
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6182
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6186
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6190
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6194
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6198
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6202
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6209
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6213
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6219
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6224
		{
			yyVAL.str = ""
		}
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6228
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6232
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6238
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6242
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6246
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6250
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6254
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6258
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6272
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6276
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6285
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6290
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6296
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6303
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6307
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6313
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6317
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6321
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6327
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6336
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6361
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6375
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6381
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6390
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6399
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6409
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6417
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6423
		{
			yyVAL.str = ""
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6427
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6437
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6443
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6449
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6463
		{
			yyVAL.str = ""
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6467
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6473
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6479
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6483
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6487
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6493
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6497
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6501
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6505
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6511
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6515
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6519
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6524
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6528
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6534
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6538
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6544
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6548
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6552
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6556
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6560
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6564
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6569
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6573
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6577
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6581
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6585
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6589
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6593
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6597
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6610
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6616
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6620
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6625
		{
			yyVAL.str = ""
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6629
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6635
		{
			yyVAL.str = ""
		}
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6639
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1085:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6645
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6657
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6664
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6671
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6678
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6685
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6694
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6700
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6706
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6710
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6714
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6718
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6722
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6727
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6734
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6738
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6742
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6747
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6751
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6756
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6760
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6776
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6782
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6786
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6790
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6794
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6798
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6802
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6806
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6810
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6814
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6818
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6822
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6826
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6830
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6836
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6840
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6844
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6848
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6852
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6856
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6860
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6864
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6868
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6872
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6876
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6880
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6885
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6893
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6898
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6902
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6911
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6915
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6919
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6923
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6927
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6933
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6942
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6946
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6951
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6955
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6961
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6965
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6971
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6980
		{
			t := yyVAL.columnTypeUnion()
			if strings.ToLower(t.InternalType.FamilyString) == "binary" {
				t.InternalType.Scale = -1
			}
		}
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6986
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7003
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7020
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7033
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7046
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7058
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7072
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7087
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7102
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7119
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7134
		{
		}
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7140
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7144
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7148
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7154
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7158
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7166
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7170
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7174
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7180
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7187
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7196
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7200
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7207
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7212
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7216
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7221
		{
			yyVAL.str = ","
		}
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7225
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7230
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7237
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7247
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7258
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7268
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7277
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7286
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7296
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7306
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7316
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7326
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7336
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7346
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7356
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7366
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7376
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7386
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7396
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7406
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7423
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7431
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7439
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7447
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7455
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7465
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7473
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7482
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7490
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7498
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7506
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7514
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7525
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7535
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7547
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7558
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7580
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7616
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7628
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7640
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7651
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7659
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7666
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7673
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7685
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7693
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7703
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7713
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7721
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7732
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7741
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7750
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7758
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7768
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7776
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7790
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7796
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7800
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7819
		{
		}
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7821
		{
		}
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7862
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7873
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7877
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7881
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7887
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7892
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7896
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7902
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7906
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7913
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7917
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7921
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7929
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7933
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7937
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7941
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7947
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7951
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7955
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7959
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7963
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7967
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7971
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7975
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7979
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7983
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7991
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7995
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7999
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8003
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8007
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8011
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8015
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8019
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8023
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8027
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8037
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8043
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8047
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8054
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8058
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8062
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8068
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8072
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8076
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8080
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8084
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8088
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8092
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8098
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8102
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8106
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8110
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8116
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8120
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8133
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8138
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8142
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8146
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8150
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8154
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8158
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8172
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8176
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8183
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8194
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8199
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8205
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8217
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8229
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8241
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8254
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8267
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8280
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8293
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8306
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8319
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8332
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8345
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8358
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8371
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8386
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8413
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8455
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8503
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8520
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8532
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8552
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8572
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8592
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8608
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8621
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8634
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8647
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8660
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8672
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8684
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8696
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8708
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8720
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8732
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8744
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8756
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8768
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8781
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8794
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8809
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8817
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8826
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8836
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8859
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8864
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8870
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8877
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8881
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8886
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8890
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8896
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8902
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8909
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8916
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8925
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8932
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8939
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8948
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8952
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8956
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8962
		{
		}
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8964
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8974
		{
			yyVAL.str = ""
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8978
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
