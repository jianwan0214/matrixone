// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const VALUES = 57394
const NEXT = 57395
const VALUE = 57396
const SHARE = 57397
const MODE = 57398
const SQL_NO_CACHE = 57399
const SQL_CACHE = 57400
const JOIN = 57401
const STRAIGHT_JOIN = 57402
const LEFT = 57403
const RIGHT = 57404
const INNER = 57405
const OUTER = 57406
const CROSS = 57407
const NATURAL = 57408
const USE = 57409
const FORCE = 57410
const LOWER_THAN_ON = 57411
const ON = 57412
const USING = 57413
const SUBQUERY_AS_EXPR = 57414
const LOWER_THAN_STRING = 57415
const ID = 57416
const AT_ID = 57417
const AT_AT_ID = 57418
const STRING = 57419
const VALUE_ARG = 57420
const LIST_ARG = 57421
const COMMENT = 57422
const COMMENT_KEYWORD = 57423
const QUOTE_ID = 57424
const INTEGRAL = 57425
const HEX = 57426
const BIT_LITERAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const NULL = 57430
const TRUE = 57431
const FALSE = 57432
const LOWER_THAN_CHARSET = 57433
const CHARSET = 57434
const UNIQUE = 57435
const KEY = 57436
const OR = 57437
const PIPE_CONCAT = 57438
const XOR = 57439
const AND = 57440
const NOT = 57441
const BETWEEN = 57442
const CASE = 57443
const WHEN = 57444
const THEN = 57445
const ELSE = 57446
const END = 57447
const ELSEIF = 57448
const LOWER_THAN_EQ = 57449
const LE = 57450
const GE = 57451
const NE = 57452
const NULL_SAFE_EQUAL = 57453
const IS = 57454
const LIKE = 57455
const REGEXP = 57456
const IN = 57457
const ASSIGNMENT = 57458
const ILIKE = 57459
const SHIFT_LEFT = 57460
const SHIFT_RIGHT = 57461
const DIV = 57462
const MOD = 57463
const UNARY = 57464
const COLLATE = 57465
const BINARY = 57466
const UNDERSCORE_BINARY = 57467
const INTERVAL = 57468
const OUT = 57469
const INOUT = 57470
const BEGIN = 57471
const START = 57472
const TRANSACTION = 57473
const COMMIT = 57474
const ROLLBACK = 57475
const WORK = 57476
const CONSISTENT = 57477
const SNAPSHOT = 57478
const CHAIN = 57479
const NO = 57480
const RELEASE = 57481
const PRIORITY = 57482
const QUICK = 57483
const BIT = 57484
const TINYINT = 57485
const SMALLINT = 57486
const MEDIUMINT = 57487
const INT = 57488
const INTEGER = 57489
const BIGINT = 57490
const INTNUM = 57491
const REAL = 57492
const DOUBLE = 57493
const FLOAT_TYPE = 57494
const DECIMAL = 57495
const NUMERIC = 57496
const DECIMAL_VALUE = 57497
const TIME = 57498
const TIMESTAMP = 57499
const DATETIME = 57500
const YEAR = 57501
const CHAR = 57502
const VARCHAR = 57503
const BOOL = 57504
const CHARACTER = 57505
const VARBINARY = 57506
const NCHAR = 57507
const TEXT = 57508
const TINYTEXT = 57509
const MEDIUMTEXT = 57510
const LONGTEXT = 57511
const BLOB = 57512
const TINYBLOB = 57513
const MEDIUMBLOB = 57514
const LONGBLOB = 57515
const JSON = 57516
const ENUM = 57517
const UUID = 57518
const GEOMETRY = 57519
const POINT = 57520
const LINESTRING = 57521
const POLYGON = 57522
const GEOMETRYCOLLECTION = 57523
const MULTIPOINT = 57524
const MULTILINESTRING = 57525
const MULTIPOLYGON = 57526
const INT1 = 57527
const INT2 = 57528
const INT3 = 57529
const INT4 = 57530
const INT8 = 57531
const S3OPTION = 57532
const SQL_SMALL_RESULT = 57533
const SQL_BIG_RESULT = 57534
const SQL_BUFFER_RESULT = 57535
const LOW_PRIORITY = 57536
const HIGH_PRIORITY = 57537
const DELAYED = 57538
const CREATE = 57539
const ALTER = 57540
const DROP = 57541
const RENAME = 57542
const ANALYZE = 57543
const ADD = 57544
const RETURNS = 57545
const SCHEMA = 57546
const TABLE = 57547
const SEQUENCE = 57548
const INDEX = 57549
const VIEW = 57550
const TO = 57551
const IGNORE = 57552
const IF = 57553
const PRIMARY = 57554
const COLUMN = 57555
const CONSTRAINT = 57556
const SPATIAL = 57557
const FULLTEXT = 57558
const FOREIGN = 57559
const KEY_BLOCK_SIZE = 57560
const SHOW = 57561
const DESCRIBE = 57562
const EXPLAIN = 57563
const DATE = 57564
const ESCAPE = 57565
const REPAIR = 57566
const OPTIMIZE = 57567
const TRUNCATE = 57568
const MAXVALUE = 57569
const PARTITION = 57570
const REORGANIZE = 57571
const LESS = 57572
const THAN = 57573
const PROCEDURE = 57574
const TRIGGER = 57575
const STATUS = 57576
const VARIABLES = 57577
const ROLE = 57578
const PROXY = 57579
const AVG_ROW_LENGTH = 57580
const STORAGE = 57581
const DISK = 57582
const MEMORY = 57583
const CHECKSUM = 57584
const COMPRESSION = 57585
const DATA = 57586
const DIRECTORY = 57587
const DELAY_KEY_WRITE = 57588
const ENCRYPTION = 57589
const ENGINE = 57590
const MAX_ROWS = 57591
const MIN_ROWS = 57592
const PACK_KEYS = 57593
const ROW_FORMAT = 57594
const STATS_AUTO_RECALC = 57595
const STATS_PERSISTENT = 57596
const STATS_SAMPLE_PAGES = 57597
const DYNAMIC = 57598
const COMPRESSED = 57599
const REDUNDANT = 57600
const COMPACT = 57601
const FIXED = 57602
const COLUMN_FORMAT = 57603
const AUTO_RANDOM = 57604
const ENGINE_ATTRIBUTE = 57605
const SECONDARY_ENGINE_ATTRIBUTE = 57606
const INSERT_METHOD = 57607
const RESTRICT = 57608
const CASCADE = 57609
const ACTION = 57610
const PARTIAL = 57611
const SIMPLE = 57612
const CHECK = 57613
const ENFORCED = 57614
const RANGE = 57615
const LIST = 57616
const ALGORITHM = 57617
const LINEAR = 57618
const PARTITIONS = 57619
const SUBPARTITION = 57620
const SUBPARTITIONS = 57621
const CLUSTER = 57622
const TYPE = 57623
const ANY = 57624
const SOME = 57625
const EXTERNAL = 57626
const LOCALFILE = 57627
const URL = 57628
const PREPARE = 57629
const DEALLOCATE = 57630
const RESET = 57631
const EXTENSION = 57632
const INCREMENT = 57633
const CYCLE = 57634
const MINVALUE = 57635
const PUBLICATION = 57636
const SUBSCRIPTIONS = 57637
const PUBLICATIONS = 57638
const PROPERTIES = 57639
const PARSER = 57640
const VISIBLE = 57641
const INVISIBLE = 57642
const BTREE = 57643
const HASH = 57644
const RTREE = 57645
const BSI = 57646
const ZONEMAP = 57647
const LEADING = 57648
const BOTH = 57649
const TRAILING = 57650
const UNKNOWN = 57651
const EXPIRE = 57652
const ACCOUNT = 57653
const ACCOUNTS = 57654
const UNLOCK = 57655
const DAY = 57656
const NEVER = 57657
const PUMP = 57658
const MYSQL_COMPATIBILITY_MODE = 57659
const SECOND = 57660
const ASCII = 57661
const COALESCE = 57662
const COLLATION = 57663
const HOUR = 57664
const MICROSECOND = 57665
const MINUTE = 57666
const MONTH = 57667
const QUARTER = 57668
const REPEAT = 57669
const REVERSE = 57670
const ROW_COUNT = 57671
const WEEK = 57672
const REVOKE = 57673
const FUNCTION = 57674
const PRIVILEGES = 57675
const TABLESPACE = 57676
const EXECUTE = 57677
const SUPER = 57678
const GRANT = 57679
const OPTION = 57680
const REFERENCES = 57681
const REPLICATION = 57682
const SLAVE = 57683
const CLIENT = 57684
const USAGE = 57685
const RELOAD = 57686
const FILE = 57687
const TEMPORARY = 57688
const ROUTINE = 57689
const EVENT = 57690
const SHUTDOWN = 57691
const NULLX = 57692
const AUTO_INCREMENT = 57693
const APPROXNUM = 57694
const SIGNED = 57695
const UNSIGNED = 57696
const ZEROFILL = 57697
const ENGINES = 57698
const LOW_CARDINALITY = 57699
const AUTOEXTEND_SIZE = 57700
const ADMIN_NAME = 57701
const RANDOM = 57702
const SUSPEND = 57703
const ATTRIBUTE = 57704
const HISTORY = 57705
const REUSE = 57706
const CURRENT = 57707
const OPTIONAL = 57708
const FAILED_LOGIN_ATTEMPTS = 57709
const PASSWORD_LOCK_TIME = 57710
const UNBOUNDED = 57711
const SECONDARY = 57712
const RESTRICTED = 57713
const USER = 57714
const IDENTIFIED = 57715
const CIPHER = 57716
const ISSUER = 57717
const X509 = 57718
const SUBJECT = 57719
const SAN = 57720
const REQUIRE = 57721
const SSL = 57722
const NONE = 57723
const PASSWORD = 57724
const MAX_QUERIES_PER_HOUR = 57725
const MAX_UPDATES_PER_HOUR = 57726
const MAX_CONNECTIONS_PER_HOUR = 57727
const MAX_USER_CONNECTIONS = 57728
const FORMAT = 57729
const VERBOSE = 57730
const CONNECTION = 57731
const TRIGGERS = 57732
const PROFILES = 57733
const LOAD = 57734
const INFILE = 57735
const TERMINATED = 57736
const OPTIONALLY = 57737
const ENCLOSED = 57738
const ESCAPED = 57739
const STARTING = 57740
const LINES = 57741
const ROWS = 57742
const IMPORT = 57743
const DISCARD = 57744
const MODUMP = 57745
const OVER = 57746
const PRECEDING = 57747
const FOLLOWING = 57748
const GROUPS = 57749
const DATABASES = 57750
const TABLES = 57751
const SEQUENCES = 57752
const EXTENDED = 57753
const FULL = 57754
const PROCESSLIST = 57755
const FIELDS = 57756
const COLUMNS = 57757
const OPEN = 57758
const ERRORS = 57759
const WARNINGS = 57760
const INDEXES = 57761
const SCHEMAS = 57762
const NODE = 57763
const LOCKS = 57764
const ROLES = 57765
const TABLE_NUMBER = 57766
const COLUMN_NUMBER = 57767
const TABLE_VALUES = 57768
const TABLE_SIZE = 57769
const NAMES = 57770
const GLOBAL = 57771
const PERSIST = 57772
const SESSION = 57773
const ISOLATION = 57774
const LEVEL = 57775
const READ = 57776
const WRITE = 57777
const ONLY = 57778
const REPEATABLE = 57779
const COMMITTED = 57780
const UNCOMMITTED = 57781
const SERIALIZABLE = 57782
const LOCAL = 57783
const EVENTS = 57784
const PLUGINS = 57785
const CURRENT_TIMESTAMP = 57786
const DATABASE = 57787
const CURRENT_TIME = 57788
const LOCALTIME = 57789
const LOCALTIMESTAMP = 57790
const UTC_DATE = 57791
const UTC_TIME = 57792
const UTC_TIMESTAMP = 57793
const REPLACE = 57794
const CONVERT = 57795
const SEPARATOR = 57796
const TIMESTAMPDIFF = 57797
const CURRENT_DATE = 57798
const CURRENT_USER = 57799
const CURRENT_ROLE = 57800
const SECOND_MICROSECOND = 57801
const MINUTE_MICROSECOND = 57802
const MINUTE_SECOND = 57803
const HOUR_MICROSECOND = 57804
const HOUR_SECOND = 57805
const HOUR_MINUTE = 57806
const DAY_MICROSECOND = 57807
const DAY_SECOND = 57808
const DAY_MINUTE = 57809
const DAY_HOUR = 57810
const YEAR_MONTH = 57811
const SQL_TSI_HOUR = 57812
const SQL_TSI_DAY = 57813
const SQL_TSI_WEEK = 57814
const SQL_TSI_MONTH = 57815
const SQL_TSI_QUARTER = 57816
const SQL_TSI_YEAR = 57817
const SQL_TSI_SECOND = 57818
const SQL_TSI_MINUTE = 57819
const RECURSIVE = 57820
const CONFIG = 57821
const DRAINER = 57822
const MATCH = 57823
const AGAINST = 57824
const BOOLEAN = 57825
const LANGUAGE = 57826
const WITH = 57827
const QUERY = 57828
const EXPANSION = 57829
const ADDDATE = 57830
const BIT_AND = 57831
const BIT_OR = 57832
const BIT_XOR = 57833
const CAST = 57834
const COUNT = 57835
const APPROX_COUNT_DISTINCT = 57836
const APPROX_PERCENTILE = 57837
const CURDATE = 57838
const CURTIME = 57839
const DATE_ADD = 57840
const DATE_SUB = 57841
const EXTRACT = 57842
const GROUP_CONCAT = 57843
const MAX = 57844
const MID = 57845
const MIN = 57846
const NOW = 57847
const POSITION = 57848
const SESSION_USER = 57849
const STD = 57850
const STDDEV = 57851
const MEDIAN = 57852
const STDDEV_POP = 57853
const STDDEV_SAMP = 57854
const SUBDATE = 57855
const SUBSTR = 57856
const SUBSTRING = 57857
const SUM = 57858
const SYSDATE = 57859
const SYSTEM_USER = 57860
const TRANSLATE = 57861
const TRIM = 57862
const VARIANCE = 57863
const VAR_POP = 57864
const VAR_SAMP = 57865
const AVG = 57866
const RANK = 57867
const ROW_NUMBER = 57868
const DENSE_RANK = 57869
const NEXTVAL = 57870
const SETVAL = 57871
const CURRVAL = 57872
const LASTVAL = 57873
const ARROW = 57874
const ROW = 57875
const OUTFILE = 57876
const HEADER = 57877
const MAX_FILE_SIZE = 57878
const FORCE_QUOTE = 57879
const PARALLEL = 57880
const UNUSED = 57881
const BINDINGS = 57882
const DO = 57883
const DECLARE = 57884
const LOOP = 57885
const WHILE = 57886
const LEAVE = 57887
const ITERATE = 57888
const UNTIL = 57889
const CALL = 57890
const SPBEGIN = 57891
const BACKEND = 57892
const SERVERS = 57893
const KILL = 57894
const QUERY_RESULT = 57895

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:9846

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 111,
	21, 667,
	-2, 648,
	-1, 125,
	224, 887,
	-2, 958,
	-1, 147,
	42, 489,
	224, 489,
	251, 496,
	252, 496,
	436, 489,
	-2, 522,
	-1, 183,
	572, 1653,
	-2, 407,
	-1, 508,
	303, 130,
	410, 130,
	-2, 1565,
	-1, 571,
	73, 1364,
	-2, 1707,
	-1, 572,
	73, 1382,
	-2, 1678,
	-1, 576,
	73, 1383,
	-2, 1706,
	-1, 601,
	73, 1294,
	-2, 1769,
	-1, 602,
	73, 1295,
	-2, 1768,
	-1, 603,
	73, 1296,
	-2, 1758,
	-1, 604,
	73, 1733,
	-2, 1753,
	-1, 605,
	73, 1734,
	-2, 1754,
	-1, 606,
	73, 1735,
	-2, 1760,
	-1, 607,
	73, 1736,
	-2, 1743,
	-1, 608,
	73, 1737,
	-2, 1751,
	-1, 609,
	73, 1738,
	-2, 1761,
	-1, 610,
	73, 1739,
	-2, 1762,
	-1, 611,
	73, 1740,
	-2, 1767,
	-1, 612,
	73, 1741,
	-2, 1772,
	-1, 613,
	73, 1742,
	-2, 1773,
	-1, 615,
	73, 1361,
	-2, 1554,
	-1, 619,
	73, 1366,
	-2, 1566,
	-1, 622,
	73, 1370,
	-2, 1584,
	-1, 626,
	73, 1374,
	-2, 1624,
	-1, 627,
	73, 1375,
	-2, 1702,
	-1, 635,
	73, 1385,
	-2, 1687,
	-1, 636,
	73, 1386,
	-2, 1732,
	-1, 637,
	73, 1387,
	-2, 1697,
	-1, 638,
	73, 1388,
	-2, 1722,
	-1, 649,
	73, 1272,
	-2, 1763,
	-1, 650,
	73, 1273,
	-2, 1764,
	-1, 651,
	73, 1274,
	-2, 1765,
	-1, 655,
	21, 668,
	-2, 631,
	-1, 725,
	431, 522,
	432, 522,
	-2, 490,
	-1, 768,
	111, 1554,
	122, 1554,
	142, 1554,
	-2, 1529,
	-1, 870,
	21, 668,
	-2, 631,
	-1, 970,
	21, 667,
	-2, 1172,
	-1, 1323,
	73, 1432,
	-2, 1704,
	-1, 1324,
	73, 1433,
	-2, 1705,
	-1, 1458,
	74, 811,
	-2, 817,
	-1, 1812,
	74, 1515,
	143, 1515,
	-2, 1689,
	-1, 1813,
	74, 1515,
	143, 1515,
	-2, 1688,
	-1, 1814,
	74, 1493,
	143, 1493,
	-2, 1675,
	-1, 1815,
	74, 1494,
	143, 1494,
	-2, 1680,
	-1, 1816,
	74, 1495,
	143, 1495,
	-2, 1612,
	-1, 1817,
	74, 1496,
	143, 1496,
	-2, 1606,
	-1, 1818,
	74, 1497,
	143, 1497,
	-2, 1545,
	-1, 1819,
	74, 1498,
	143, 1498,
	-2, 1677,
	-1, 1820,
	74, 1499,
	143, 1499,
	-2, 1610,
	-1, 1821,
	74, 1500,
	143, 1500,
	-2, 1605,
	-1, 1822,
	74, 1501,
	143, 1501,
	-2, 1598,
	-1, 1824,
	74, 1504,
	143, 1504,
	-2, 1722,
	-1, 1825,
	74, 1484,
	143, 1484,
	-2, 1707,
	-1, 1826,
	74, 1513,
	143, 1513,
	-2, 1678,
	-1, 1827,
	74, 1513,
	143, 1513,
	-2, 1706,
	-1, 1828,
	74, 1513,
	143, 1513,
	-2, 1567,
	-1, 1829,
	74, 1511,
	143, 1511,
	-2, 1697,
	-1, 1830,
	74, 1508,
	143, 1508,
	-2, 1589,
	-1, 1831,
	73, 1465,
	74, 1465,
	143, 1465,
	370, 1465,
	371, 1465,
	372, 1465,
	-2, 1544,
	-1, 1832,
	73, 1466,
	74, 1466,
	143, 1466,
	370, 1466,
	371, 1466,
	372, 1466,
	-2, 1546,
	-1, 1833,
	73, 1469,
	74, 1469,
	143, 1469,
	370, 1469,
	371, 1469,
	372, 1469,
	-2, 1679,
	-1, 1834,
	73, 1471,
	74, 1471,
	143, 1471,
	370, 1471,
	371, 1471,
	372, 1471,
	-2, 1662,
	-1, 1835,
	73, 1473,
	74, 1473,
	143, 1473,
	370, 1473,
	371, 1473,
	372, 1473,
	-2, 1611,
	-1, 1836,
	73, 1475,
	74, 1475,
	143, 1475,
	370, 1475,
	371, 1475,
	372, 1475,
	-2, 1594,
	-1, 1837,
	73, 1476,
	74, 1476,
	143, 1476,
	370, 1476,
	371, 1476,
	372, 1476,
	-2, 1595,
	-1, 1838,
	73, 1478,
	74, 1478,
	143, 1478,
	370, 1478,
	371, 1478,
	372, 1478,
	-2, 1543,
	-1, 1839,
	74, 1518,
	143, 1518,
	370, 1518,
	371, 1518,
	372, 1518,
	-2, 1572,
	-1, 1840,
	74, 1518,
	143, 1518,
	370, 1518,
	371, 1518,
	372, 1518,
	-2, 1585,
	-1, 1841,
	74, 1521,
	143, 1521,
	370, 1521,
	371, 1521,
	372, 1521,
	-2, 1568,
	-1, 1842,
	74, 1521,
	143, 1521,
	370, 1521,
	371, 1521,
	372, 1521,
	-2, 1627,
	-1, 1843,
	74, 1518,
	143, 1518,
	370, 1518,
	371, 1518,
	372, 1518,
	-2, 1647,
	-1, 1856,
	94, 922,
	138, 922,
	177, 922,
	180, 922,
	264, 922,
	-2, 915,
	-1, 1983,
	21, 667,
	-2, 761,
	-1, 2172,
	94, 922,
	138, 922,
	177, 922,
	180, 922,
	264, 922,
	-2, 916,
	-1, 2184,
	71, 577,
	143, 577,
	-2, 1061,
	-1, 2206,
	180, 922,
	288, 1140,
	-2, 1114,
	-1, 2495,
	180, 922,
	288, 1140,
	-2, 1115,
	-1, 2636,
	94, 922,
	138, 922,
	177, 922,
	180, 922,
	-2, 1004,
	-1, 2639,
	94, 922,
	138, 922,
	177, 922,
	180, 922,
	-2, 1004,
	-1, 2649,
	71, 577,
	143, 577,
	-2, 1062,
	-1, 2752,
	94, 922,
	138, 922,
	177, 922,
	180, 922,
	-2, 1005,
	-1, 3076,
	74, 976,
	143, 976,
	-2, 922,
	-1, 3080,
	74, 976,
	143, 976,
	-2, 922,
	-1, 3094,
	74, 980,
	143, 980,
	-2, 922,
	-1, 3099,
	74, 981,
	143, 981,
	-2, 922,
}

const yyPrivate = 57344

const yyLast = 37071

var yyAct = [...]int{
	538, 1242, 1521, 3079, 3080, 3059, 174, 3088, 1304, 2961,
	519, 3018, 540, 2894, 2984, 527, 2719, 517, 2724, 2883,
	3006, 2912, 2777, 2509, 2534, 2913, 1165, 1790, 2875, 2898,
	2592, 2745, 2593, 2810, 1300, 2744, 656, 1107, 2837, 425,
	1001, 767, 2722, 2800, 1479, 2884, 2886, 568, 431, 2187,
	436, 436, 2751, 2467, 1307, 2659, 436, 452, 461, 1232,
	2714, 461, 2289, 1606, 1603, 2290, 2274, 1895, 2620, 2496,
	2524, 159, 2282, 2754, 521, 1810, 1571, 2746, 1977, 2590,
	2076, 472, 2288, 2578, 1667, 2311, 1698, 2285, 2561, 1898,
	2440, 2443, 1158, 2438, 1618, 1065, 2202, 1865, 466, 2523,
	1800, 1481, 2173, 864, 1961, 1808, 2348, 1694, 510, 1579,
	511, 2465, 2075, 1675, 2025, 2387, 1440, 1676, 1641, 1228,
	516, 2331, 1668, 1599, 1693, 773, 1978, 36, 702, 1966,
	1223, 1574, 2150, 1081, 1241, 53, 2155, 1896, 1508, 1116,
	2208, 1517, 2468, 170, 8, 169, 7, 6, 1864, 1466,
	1197, 425, 1448, 818, 761, 1236, 1083, 1298, 1572, 435,
	435, 1726, 2042, 1233, 520, 443, 1695, 1806, 2005, 430,
	110, 1174, 35, 1144, 174, 1849, 174, 2470, 809, 810,
	2469, 1096, 1490, 1705, 458, 509, 518, 511, 1353, 732,
	771, 1491, 528, 424, 1337, 1289, 881, 1671, 26, 1674,
	1204, 1303, 15, 1657, 13, 1297, 14, 1631, 760, 1143,
	653, 1115, 1985, 1092, 1359, 32, 1465, 448, 2117, 445,
	701, 1141, 474, 1358, 160, 23, 2118, 460, 16, 10,
	1063, 1196, 475, 1039, 1108, 153, 699, 655, 1002, 156,
	2381, 684, 720, 1712, 2078, 805, 2381, 807, 1702, 2028,
	806, 2585, 2031, 2029, 1207, 457, 802, 2026, 1211, 453,
	801, 455, 802, 456, 158, 802, 432, 1128, 1209, 2712,
	2344, 2342, 454, 939, 940, 941, 938, 1646, 2806, 939,
	940, 941, 938, 2801, 2715, 2591, 1444, 2888, 464, 441,
	777, 1670, 996, 654, 1379, 157, 664, 1055, 2737, 157,
	902, 2063, 8, 157, 7, 157, 800, 49, 149, 126,
	1699, 2736, 157, 157, 157, 1256, 2952, 2071, 157, 157,
	2848, 49, 149, 126, 2858, 774, 157, 776, 49, 149,
	126, 2410, 644, 1249, 643, 645, 646, 1253, 647, 648,
	1710, 2363, 1853, 471, 2003, 2356, 1290, 470, 1056, 1294,
	746, 936, 1616, 745, 109, 1246, 109, 1991, 1255, 2004,
	1990, 2317, 154, 1992, 2849, 1145, 154, 1147, 154, 2318,
	2319, 1584, 1585, 1293, 1274, 154, 1248, 154, 1452, 1453,
	1583, 154, 154, 657, 786, 783, 778, 782, 784, 154,
	1104, 917, 910, 665, 918, 912, 2152, 1124, 1111, 2043,
	1125, 3002, 1110, 1113, 1114, 741, 2153, 3000, 1113, 1114,
	1504, 512, 789, 929, 1393, 1306, 781, 2916, 2917, 2732,
	934, 770, 920, 913, 769, 2891, 2948, 2890, 2947, 2889,
	2946, 2891, 2890, 2889, 1781, 436, 2988, 2989, 2808, 750,
	2811, 2812, 2813, 2814, 2594, 436, 874, 2349, 2877, 1375,
	2877, 2151, 1295, 1372, 2880, 2804, 747, 1374, 1371, 1373,
	1377, 1378, 2594, 461, 461, 1376, 436, 787, 2951, 2350,
	2058, 2351, 875, 1292, 790, 884, 1600, 1594, 869, 871,
	2893, 2603, 1590, 2158, 1210, 1208, 1127, 2742, 1285, 2621,
	1706, 779, 2628, 1956, 1654, 693, 1848, 915, 906, 812,
	1217, 1216, 2444, 2519, 2142, 2374, 2454, 932, 933, 125,
	1309, 155, 788, 1924, 931, 2068, 2829, 749, 905, 2278,
	884, 908, 505, 873, 972, 507, 1959, 2713, 2343, 2448,
	506, 147, 922, 911, 914, 923, 1958, 772, 1918, 2376,
	2832, 868, 2739, 1962, 866, 2995, 2731, 2464, 3004, 2954,
	2955, 897, 780, 2733, 872, 2532, 2533, 2474, 916, 907,
	2915, 2904, 2180, 925, 463, 2452, 2845, 462, 870, 2683,
	874, 2899, 1102, 3073, 3089, 893, 3027, 458, 458, 3034,
	2999, 2963, 1711, 803, 804, 1091, 1291, 777, 808, 469,
	748, 2007, 1614, 1615, 1360, 1361, 1362, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1382, 1383, 1384, 1385, 1386,
	1387, 1380, 1381, 927, 928, 1136, 2688, 1308, 2449, 2450,
	2959, 2960, 774, 2963, 776, 785, 1715, 1717, 1718, 2674,
	2446, 919, 909, 1914, 2451, 2536, 3009, 1126, 921, 3038,
	1916, 1933, 2822, 1932, 1005, 2823, 888, 1006, 457, 457,
	1953, 1954, 453, 453, 455, 455, 456, 456, 777, 1700,
	1700, 886, 885, 2164, 1089, 454, 454, 877, 878, 1700,
	1154, 1153, 2607, 2663, 926, 1061, 431, 1064, 2380, 2167,
	2168, 2169, 2170, 1315, 1318, 1319, 1106, 1105, 3090, 1036,
	890, 891, 895, 774, 1316, 776, 2258, 1915, 2825, 924,
	894, 702, 3084, 2641, 2669, 1088, 886, 885, 3060, 1087,
	974, 975, 976, 977, 802, 802, 802, 802, 459, 802,
	2846, 879, 978, 802, 2838, 459, 865, 3096, 2426, 2824,
	1727, 2328, 2329, 2710, 2027, 2953, 1066, 2847, 1713, 1112,
	1212, 902, 470, 2874, 1701, 1142, 2064, 436, 1995, 1138,
	1922, 2313, 2315, 1901, 425, 425, 742, 1109, 1917, 1113,
	1114, 3010, 1071, 425, 425, 1113, 1114, 1169, 1169, 654,
	436, 3005, 2157, 1703, 1067, 1068, 1069, 1070, 50, 1072,
	2738, 2379, 1075, 1076, 1103, 50, 1904, 127, 461, 1064,
	431, 127, 1200, 1200, 1171, 127, 1601, 127, 2445, 2072,
	2462, 1167, 1167, 174, 127, 127, 127, 2455, 1074, 1176,
	127, 127, 425, 896, 2830, 2434, 1014, 1015, 127, 1073,
	1714, 2447, 465, 2535, 901, 772, 2161, 2162, 3083, 742,
	2743, 2778, 2779, 2780, 2782, 2781, 1078, 2377, 2141, 744,
	2676, 2160, 743, 2233, 1593, 1062, 696, 697, 698, 1591,
	1794, 1093, 1097, 1097, 1097, 1286, 1134, 1163, 1164, 2389,
	2388, 1240, 1716, 1243, 2822, 1090, 1059, 2823, 1251, 1267,
	1268, 1455, 1100, 1921, 1093, 1093, 1456, 1218, 1793, 1175,
	1118, 1119, 2817, 1121, 1122, 1123, 1454, 1900, 1272, 3007,
	3008, 1041, 1902, 1796, 1795, 1098, 1099, 1043, 3095, 2249,
	2250, 655, 1169, 666, 1169, 874, 2665, 1257, 1149, 1151,
	2664, 2314, 744, 1945, 1905, 743, 667, 1161, 1162, 1317,
	2825, 2670, 2671, 1057, 1058, 942, 2463, 2760, 1482, 2259,
	2261, 2262, 2263, 2260, 971, 694, 3102, 1080, 3039, 2818,
	1137, 937, 980, 2885, 1482, 1851, 1903, 670, 1129, 1130,
	1221, 2824, 1224, 1225, 2479, 1788, 2558, 1230, 1231, 1193,
	902, 1271, 2045, 2554, 985, 1117, 1213, 2637, 1120, 1270,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1305, 3101, 1357, 3092, 1348, 1349, 1152, 793,
	798, 799, 1247, 1396, 1397, 1398, 1254, 1406, 669, 2185,
	777, 1784, 672, 671, 777, 937, 1412, 458, 2095, 1413,
	2248, 1302, 1177, 441, 1238, 1191, 2063, 1281, 1976, 1192,
	1235, 1420, 1421, 1239, 1201, 1187, 2186, 1202, 2147, 1415,
	939, 940, 941, 938, 2144, 658, 859, 855, 856, 857,
	858, 3074, 2100, 2050, 2099, 2098, 2096, 3069, 1850, 1975,
	541, 550, 937, 2007, 3093, 1976, 542, 1283, 549, 543,
	547, 546, 544, 545, 3063, 1320, 436, 1803, 1464, 1169,
	1468, 2558, 1470, 1471, 1438, 3062, 1787, 436, 457, 3043,
	702, 1634, 453, 1480, 455, 751, 456, 1169, 1280, 3057,
	1804, 1805, 1277, 1138, 1276, 454, 655, 1263, 452, 1287,
	899, 658, 1441, 1299, 1258, 3020, 1259, 2978, 2097, 1758,
	1708, 551, 1757, 2927, 1405, 1279, 3070, 1503, 1278, 1275,
	1699, 1388, 1389, 1296, 1392, 1509, 1509, 2186, 1138, 2918,
	1138, 1138, 1407, 1708, 436, 1301, 1464, 1464, 1582, 1507,
	1169, 1569, 1581, 548, 1708, 1414, 2868, 1416, 1708, 1888,
	1463, 1737, 1469, 1346, 1347, 2867, 425, 1339, 1169, 937,
	1789, 2818, 1976, 2863, 2862, 2819, 795, 796, 797, 1472,
	1473, 1474, 900, 900, 3021, 1461, 2979, 939, 940, 941,
	938, 937, 2834, 436, 1464, 1169, 1475, 1623, 1762, 436,
	1626, 1627, 939, 940, 941, 938, 1630, 1288, 2834, 2861,
	1636, 1094, 1496, 1199, 1199, 2860, 1690, 174, 1524, 1632,
	174, 174, 1391, 174, 1612, 2869, 1079, 1502, 1564, 1565,
	1505, 1506, 1511, 1736, 1869, 1037, 2833, 1093, 1609, 1610,
	1351, 1417, 2834, 2834, 2691, 2544, 1595, 2308, 2408, 2101,
	2102, 1497, 1587, 1515, 1589, 1488, 1489, 2123, 1439, 1406,
	1406, 1678, 1097, 2079, 1607, 1608, 1406, 1406, 2061, 1155,
	3022, 1685, 1498, 1499, 1510, 1602, 1620, 1622, 2834, 2652,
	1467, 1483, 1484, 2627, 2834, 1445, 2054, 2052, 1645, 2047,
	2480, 1648, 1649, 1625, 1651, 1480, 2040, 2333, 1485, 1169,
	1697, 2188, 1619, 2066, 1501, 2834, 2038, 2065, 1619, 1476,
	1477, 1487, 2790, 2007, 2545, 2689, 1976, 1095, 1492, 2036,
	1494, 1495, 1513, 1514, 2034, 1611, 937, 1493, 1868, 1512,
	1785, 2484, 937, 1500, 954, 902, 1766, 1869, 867, 1691,
	2057, 1765, 1756, 1747, 1746, 1133, 1745, 1135, 1679, 1139,
	1140, 1467, 1720, 1707, 1264, 2048, 2053, 1987, 2048, 1310,
	1311, 1312, 1313, 1314, 1570, 2041, 1568, 1885, 1586, 1753,
	1588, 1738, 1724, 1725, 1596, 2039, 1673, 1689, 1182, 1183,
	1184, 1185, 1186, 1673, 1188, 1189, 1190, 2371, 2035, 1639,
	1195, 1460, 1157, 2035, 777, 1260, 1299, 1869, 3052, 1784,
	1621, 777, 458, 1355, 1356, 937, 983, 887, 867, 1390,
	937, 937, 937, 937, 1642, 937, 862, 1400, 860, 1640,
	1617, 2905, 1708, 1265, 668, 2761, 867, 1395, 1394, 774,
	1763, 776, 2644, 3040, 2475, 1084, 774, 1770, 776, 1085,
	1919, 1659, 1418, 1419, 2642, 2667, 1422, 1423, 1424, 1425,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 2026, 2666,
	1442, 2559, 2549, 1680, 1446, 2906, 1682, 1449, 510, 2762,
	874, 1844, 1688, 457, 2546, 1094, 2645, 453, 1159, 455,
	1156, 456, 2382, 436, 436, 436, 777, 1866, 2643, 1160,
	454, 2280, 1687, 1692, 2583, 2051, 1997, 1873, 1138, 2476,
	876, 1683, 2086, 1684, 1354, 2020, 1733, 1643, 1878, 962,
	963, 955, 956, 957, 958, 959, 960, 961, 954, 1728,
	1354, 774, 1138, 776, 1719, 1205, 1426, 1643, 2335, 874,
	1909, 955, 956, 957, 958, 959, 960, 961, 954, 1722,
	1723, 673, 1462, 2477, 1339, 2945, 1721, 1811, 938, 1735,
	2678, 1732, 953, 952, 962, 963, 955, 956, 957, 958,
	959, 960, 961, 954, 957, 958, 959, 960, 961, 954,
	2677, 1760, 939, 940, 941, 938, 1920, 941, 938, 1345,
	1442, 1095, 2352, 2586, 2220, 1442, 1442, 1980, 1980, 1581,
	1980, 2219, 1858, 1859, 1860, 1342, 1344, 1341, 2214, 1343,
	1875, 1876, 2212, 2656, 2740, 1845, 1894, 2625, 425, 425,
	1879, 1880, 939, 940, 941, 938, 874, 1877, 939, 940,
	941, 938, 1169, 436, 2270, 2268, 3078, 1644, 3066, 2030,
	1647, 3037, 3028, 1650, 505, 436, 1652, 507, 3023, 874,
	431, 2965, 506, 1200, 2266, 1581, 2255, 1410, 2015, 2741,
	2017, 2936, 2626, 1797, 174, 2907, 2001, 1097, 1411, 1887,
	2850, 1852, 1993, 2283, 1994, 1984, 1982, 1881, 1986, 2269,
	2267, 1890, 1780, 1782, 1783, 939, 940, 941, 938, 2802,
	1874, 3036, 1998, 1999, 2584, 939, 940, 941, 938, 2265,
	1005, 2254, 2769, 1006, 2088, 939, 940, 941, 938, 1884,
	2059, 2764, 2763, 1697, 2022, 2646, 1893, 2439, 2624, 1892,
	1169, 2453, 1169, 1886, 1169, 2367, 1811, 2110, 2347, 874,
	2346, 2014, 2253, 1882, 777, 2021, 1883, 2252, 2251, 2009,
	2243, 2237, 1175, 945, 946, 947, 948, 949, 950, 951,
	943, 2236, 2235, 2012, 1619, 2234, 2069, 1662, 1169, 2104,
	1661, 1660, 2019, 1656, 1960, 1791, 1792, 1655, 1261, 774,
	1054, 776, 1149, 1151, 2111, 2994, 1988, 2720, 2990, 1169,
	2949, 2852, 2872, 1730, 2103, 3067, 1734, 939, 940, 941,
	938, 2815, 1167, 2831, 2803, 2768, 1206, 1624, 2113, 939,
	940, 941, 938, 2013, 2002, 2112, 2073, 1205, 2639, 939,
	940, 941, 938, 1167, 1749, 2767, 2010, 2750, 2401, 2011,
	2115, 2718, 2716, 874, 2695, 1744, 939, 940, 941, 938,
	2693, 2090, 2275, 1751, 1741, 953, 952, 962, 963, 955,
	956, 957, 958, 959, 960, 961, 954, 2658, 2070, 2623,
	2622, 1764, 2619, 2612, 1767, 1768, 1769, 2909, 2606, 1772,
	1773, 1774, 1775, 1776, 1777, 1778, 1779, 2638, 2134, 2400,
	2084, 1169, 2056, 1748, 2165, 2060, 2077, 2067, 1464, 2062,
	939, 940, 941, 938, 2184, 939, 940, 941, 938, 2553,
	2190, 2551, 939, 940, 941, 938, 939, 940, 941, 938,
	2145, 2897, 2542, 2541, 2080, 2081, 2199, 2148, 2431, 2430,
	2094, 2378, 874, 2345, 1870, 2322, 939, 940, 941, 938,
	2211, 1299, 2264, 2256, 939, 940, 941, 938, 2216, 2217,
	2726, 2218, 2246, 2244, 2083, 2221, 2222, 2223, 1509, 952,
	962, 963, 955, 956, 957, 958, 959, 960, 961, 954,
	2174, 2240, 2725, 939, 940, 941, 938, 1980, 2181, 2239,
	2175, 2238, 2138, 1786, 1225, 600, 599, 1230, 1231, 2135,
	1664, 2271, 1658, 1451, 2191, 939, 940, 941, 938, 425,
	1262, 1013, 1524, 1464, 874, 1581, 1581, 1581, 1581, 1894,
	2206, 1009, 1008, 2182, 984, 863, 874, 1581, 2636, 2193,
	1980, 2611, 2598, 2195, 2589, 2119, 2588, 2209, 2577, 2576,
	2124, 2209, 2485, 2406, 2210, 2399, 1169, 2391, 1238, 1442,
	2163, 1442, 157, 2386, 1235, 149, 126, 1239, 436, 436,
	2330, 8, 2183, 7, 2146, 2189, 2143, 2037, 2194, 1442,
	1442, 2033, 2687, 174, 2032, 1771, 1761, 1759, 174, 1755,
	2201, 2192, 1754, 2207, 2205, 1752, 2609, 1743, 2304, 2196,
	2197, 2291, 2213, 1740, 1199, 939, 940, 941, 938, 1406,
	1739, 1406, 1467, 2291, 2362, 1663, 2225, 1437, 2366, 939,
	940, 941, 938, 2245, 1169, 154, 3091, 2373, 1925, 1926,
	1927, 1928, 1929, 1930, 1931, 1436, 1435, 1934, 1935, 1936,
	1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 2276, 1946,
	1947, 1948, 1949, 1950, 2336, 1951, 2198, 2281, 1409, 2340,
	1408, 1399, 1181, 1179, 2303, 2404, 2307, 157, 2305, 655,
	1441, 2306, 2403, 2279, 3051, 2361, 3045, 2325, 2326, 3035,
	2320, 2323, 2316, 2292, 2293, 2294, 2295, 3032, 939, 940,
	941, 938, 3030, 2935, 2359, 939, 940, 941, 938, 2338,
	2365, 2334, 2337, 2870, 1003, 2087, 2370, 1220, 874, 2786,
	553, 111, 2774, 2105, 2106, 2442, 111, 2375, 2394, 2770,
	2396, 2108, 2109, 2355, 2360, 2457, 2358, 436, 2353, 2704,
	154, 2369, 2702, 2685, 2114, 2357, 2684, 874, 874, 874,
	2681, 2680, 2364, 777, 2673, 2631, 1581, 1866, 1229, 2483,
	777, 2383, 1222, 1082, 2272, 2487, 1442, 2215, 2178, 2136,
	2137, 1449, 2177, 2384, 442, 874, 2176, 111, 2390, 2522,
	1234, 2525, 2402, 2525, 2525, 1237, 2461, 2397, 2398, 2395,
	2530, 2433, 1226, 2133, 2046, 1811, 2392, 2393, 659, 660,
	661, 662, 1169, 1169, 1996, 939, 940, 941, 938, 1952,
	1867, 658, 2427, 1340, 154, 2432, 2174, 1628, 2537, 1459,
	1458, 1284, 1250, 2435, 1894, 1894, 1894, 1227, 2538, 2539,
	1038, 1035, 2481, 1034, 1033, 1032, 1167, 1167, 1031, 1030,
	2458, 1029, 1028, 436, 2520, 2460, 2459, 2437, 2442, 2521,
	2515, 1027, 2492, 1026, 2482, 777, 2478, 1464, 1464, 2471,
	2472, 2132, 1025, 1024, 2486, 2131, 1180, 1023, 2488, 2489,
	1022, 1021, 2493, 1020, 1019, 775, 2130, 1018, 1017, 111,
	2528, 1016, 2526, 2527, 939, 940, 941, 938, 939, 940,
	941, 938, 1012, 1011, 111, 1010, 111, 1007, 2491, 939,
	940, 941, 938, 2129, 2104, 2411, 777, 2128, 1000, 2412,
	2413, 2414, 2415, 2587, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2970, 2127, 999, 2490, 939, 940, 941, 938,
	939, 940, 941, 938, 997, 996, 995, 2543, 2548, 2126,
	2547, 994, 2550, 2552, 2555, 2556, 939, 940, 941, 938,
	436, 993, 1619, 2566, 2125, 992, 991, 2154, 990, 989,
	988, 2557, 939, 940, 941, 938, 2570, 965, 987, 969,
	986, 982, 981, 2573, 2574, 2575, 2569, 939, 940, 941,
	938, 2122, 904, 1379, 861, 966, 968, 964, 2582, 967,
	953, 952, 962, 963, 955, 956, 957, 958, 959, 960,
	961, 954, 2562, 2563, 939, 940, 941, 938, 2339, 2926,
	2341, 2599, 2924, 2121, 2922, 2920, 2682, 1872, 2600, 1855,
	2601, 2120, 892, 2968, 2914, 2565, 2166, 2602, 1442, 2231,
	2232, 2613, 2605, 1442, 2008, 2635, 939, 940, 941, 938,
	1666, 2241, 2242, 2116, 939, 940, 941, 938, 903, 1980,
	1581, 2649, 2300, 2298, 2568, 2567, 96, 2301, 2299, 2604,
	2107, 2302, 3049, 1972, 1973, 2277, 939, 940, 941, 938,
	2385, 2085, 2297, 2296, 1169, 3077, 52, 2615, 51, 2055,
	2617, 2618, 2049, 939, 940, 941, 938, 2657, 2140, 2707,
	436, 2706, 2405, 433, 939, 940, 941, 938, 2227, 2522,
	2203, 2630, 2204, 2651, 1923, 2228, 2229, 2230, 2660, 1558,
	438, 1169, 953, 952, 962, 963, 955, 956, 957, 958,
	959, 960, 961, 954, 2436, 1464, 2648, 2647, 1214, 874,
	439, 2705, 440, 2520, 2044, 2655, 2074, 2690, 1375, 2515,
	2428, 2429, 1372, 1040, 437, 1167, 1374, 1371, 1373, 1377,
	1378, 1350, 2709, 2650, 1376, 174, 1791, 1792, 1846, 2653,
	1244, 1629, 2654, 3047, 2698, 898, 2892, 2200, 874, 2686,
	111, 111, 775, 2149, 939, 940, 941, 938, 1862, 1478,
	1457, 2981, 2692, 1395, 1394, 2696, 2734, 2694, 1052, 1053,
	1050, 1051, 2772, 2700, 2699, 1048, 1049, 2529, 2540, 2679,
	1046, 1047, 874, 1169, 1169, 1957, 2291, 2697, 874, 2753,
	1567, 1132, 2753, 953, 952, 962, 963, 955, 956, 957,
	958, 959, 960, 961, 954, 1131, 2711, 930, 1042, 2748,
	2721, 2572, 2006, 1686, 1086, 1963, 3046, 1167, 2660, 2957,
	2942, 2940, 2900, 970, 2882, 2291, 2735, 659, 660, 661,
	662, 874, 874, 2881, 2879, 874, 874, 2871, 2797, 2749,
	658, 2755, 2758, 2757, 1968, 1971, 1972, 1973, 1969, 2651,
	1970, 1974, 2796, 1480, 2717, 2794, 2783, 2407, 2614, 2596,
	2595, 2580, 2788, 2798, 2799, 1894, 2775, 2776, 1045, 658,
	2784, 2785, 2579, 2771, 1382, 1383, 1384, 1385, 1386, 1387,
	1380, 1381, 2332, 1482, 2972, 2971, 2791, 2828, 1968, 1971,
	1972, 1973, 1969, 2368, 1970, 1974, 2821, 2792, 1857, 2765,
	2766, 1742, 889, 2971, 2972, 2840, 2675, 953, 952, 962,
	963, 955, 956, 957, 958, 959, 960, 961, 954, 2597,
	2324, 161, 3, 1101, 60, 874, 2816, 2820, 2, 2826,
	1146, 1989, 1613, 1173, 1, 1450, 663, 874, 2309, 2310,
	1169, 2571, 2312, 1704, 1955, 1847, 2841, 2843, 2456, 1077,
	2842, 695, 2851, 1401, 1269, 792, 2835, 883, 1044, 1266,
	2859, 882, 2854, 2608, 880, 1352, 2865, 555, 1669, 2273,
	2610, 2247, 2864, 2793, 1167, 2980, 3017, 2934, 2983, 1282,
	2727, 539, 2873, 2887, 2807, 874, 2938, 2809, 2723, 1709,
	935, 2876, 2901, 2878, 953, 952, 962, 963, 955, 956,
	957, 958, 959, 960, 961, 954, 2910, 2354, 716, 591,
	566, 998, 1252, 2896, 1245, 2409, 2895, 1169, 794, 565,
	2929, 2932, 2629, 2903, 2919, 2921, 2923, 2925, 2159, 2327,
	2844, 791, 717, 1653, 2805, 1215, 1219, 2759, 2933, 2908,
	2640, 2473, 704, 2928, 2179, 3087, 2941, 3076, 2943, 2944,
	3058, 1167, 3044, 1169, 2962, 2939, 2937, 3072, 2998, 3033,
	2730, 2728, 2729, 3026, 2499, 2958, 476, 1592, 423, 758,
	2787, 1665, 477, 1178, 1871, 2956, 2950, 2773, 442, 2964,
	682, 1854, 683, 2172, 2966, 2969, 2987, 1167, 2967, 2171,
	1321, 944, 1338, 2973, 2511, 2974, 2424, 2975, 2986, 2976,
	2425, 2977, 979, 111, 515, 1731, 2156, 2502, 874, 2991,
	742, 2887, 1442, 2510, 2497, 2992, 2321, 59, 58, 2517,
	2518, 1442, 57, 56, 2701, 2498, 1635, 2703, 3001, 3003,
	3016, 690, 182, 557, 181, 2931, 2985, 3012, 3013, 3014,
	3015, 2708, 3019, 3011, 537, 536, 3024, 535, 874, 534,
	2632, 2633, 2634, 533, 1967, 1965, 3025, 1964, 1576, 1575,
	1633, 2531, 2503, 2224, 1913, 111, 1906, 1516, 3029, 111,
	3031, 2911, 2987, 3042, 2856, 2857, 2672, 2257, 1527, 1526,
	111, 874, 2226, 874, 2986, 2996, 3041, 2668, 2082, 3048,
	111, 3050, 2662, 744, 1555, 2752, 743, 2494, 2495, 2501,
	3019, 3054, 874, 3053, 1861, 817, 3061, 813, 3068, 815,
	3065, 3071, 953, 952, 962, 963, 955, 956, 957, 958,
	959, 960, 961, 954, 816, 1305, 3075, 814, 2093, 3082,
	729, 2089, 1889, 3086, 3085, 2466, 1802, 1801, 705, 1799,
	3094, 1798, 1060, 3097, 2827, 2616, 1809, 3082, 3100, 3099,
	1807, 3098, 3086, 2516, 2564, 1899, 2560, 692, 1305, 687,
	1305, 677, 1677, 1447, 2139, 707, 1729, 1577, 689, 688,
	1573, 1856, 87, 86, 94, 138, 46, 166, 165, 1305,
	2507, 168, 167, 164, 2023, 675, 2024, 163, 1203, 681,
	953, 952, 962, 963, 955, 956, 957, 958, 959, 960,
	961, 954, 2504, 2508, 2506, 2505, 162, 2756, 652, 2836,
	37, 33, 12, 11, 34, 21, 22, 20, 1273, 19,
	25, 31, 30, 104, 103, 29, 102, 101, 728, 727,
	100, 99, 2853, 686, 98, 28, 18, 685, 41, 40,
	2513, 2514, 39, 674, 9, 726, 93, 680, 91, 27,
	92, 89, 90, 88, 703, 71, 70, 69, 84, 83,
	82, 81, 80, 79, 678, 706, 737, 77, 78, 715,
	68, 67, 66, 65, 64, 75, 85, 76, 2789, 74,
	2519, 73, 72, 63, 62, 676, 61, 985, 123, 733,
	124, 122, 2500, 121, 120, 119, 118, 117, 2512, 693,
	42, 43, 44, 45, 134, 133, 135, 137, 139, 136,
	131, 129, 132, 130, 128, 54, 17, 24, 4, 0,
	0, 0, 0, 734, 738, 679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 723, 1580, 721, 725, 741, 0, 0, 0, 722,
	719, 718, 0, 724, 709, 710, 708, 711, 712, 713,
	714, 2855, 739, 0, 740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 735, 736, 0, 0, 2866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 691, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 0, 0,
	111, 111, 731, 111, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2902, 358, 573, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 775,
	0, 0, 0, 0, 0, 529, 775, 0, 0, 266,
	0, 0, 291, 0, 0, 111, 0, 0, 0, 0,
	0, 0, 564, 0, 0, 350, 305, 0, 0, 0,
	0, 623, 631, 730, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 0, 0, 554, 600, 599, 541,
	550, 0, 3056, 244, 180, 542, 0, 549, 543, 547,
	546, 544, 545, 0, 615, 0, 0, 0, 0, 0,
	0, 513, 526, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2993, 970, 0, 0, 0, 0, 0, 0, 523, 524,
	0, 0, 0, 0, 574, 0, 525, 0, 0, 569,
	551, 552, 0, 0, 0, 0, 235, 355, 371, 245,
	346, 384, 250, 353, 240, 320, 343, 0, 0, 237,
	369, 352, 302, 285, 286, 236, 0, 338, 264, 277,
	261, 318, 548, 572, 576, 260, 637, 570, 379, 239,
	0, 378, 317, 365, 370, 303, 297, 238, 367, 301,
	296, 289, 268, 638, 281, 329, 295, 330, 282, 307,
	306, 308, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 0, 0, 0, 381, 0, 0, 621, 0,
	0, 0, 354, 0, 0, 290, 0, 0, 0, 571,
	0, 341, 323, 634, 514, 0, 339, 293, 366, 331,
	372, 356, 380, 335, 332, 230, 357, 263, 304, 241,
	243, 258, 265, 267, 269, 270, 313, 314, 326, 345,
	359, 360, 361, 262, 251, 340, 252, 279, 253, 231,
	255, 254, 256, 347, 257, 233, 327, 364, 0, 275,
	336, 300, 234, 299, 328, 363, 362, 242, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 1403, 1402, 1404, 393, 273, 227, 228,
	429, 619, 319, 0, 0, 633, 614, 616, 617, 620,
	624, 625, 626, 627, 628, 630, 632, 636, 428, 0,
	0, 0, 0, 0, 427, 325, 0, 344, 0, 1983,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 0, 232,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 635,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 575,
	309, 310, 311, 312, 622, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 1580, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 833, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 644, 618, 643, 645, 646, 642, 647, 648, 629,
	532, 0, 579, 640, 639, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 833, 229,
	0, 292, 0, 333, 271, 607, 584, 585, 586, 531,
	587, 582, 583, 608, 577, 604, 605, 556, 580, 588,
	603, 589, 606, 609, 610, 649, 650, 595, 651, 592,
	611, 602, 601, 590, 578, 612, 613, 563, 558, 593,
	594, 581, 596, 597, 598, 559, 560, 561, 562, 0,
	821, 0, 389, 390, 391, 413, 375, 0, 426, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	841, 845, 847, 849, 851, 852, 854, 0, 859, 855,
	856, 857, 858, 0, 836, 837, 838, 839, 819, 820,
	842, 0, 822, 0, 823, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 834, 840, 0, 821, 0, 0,
	0, 811, 0, 844, 846, 848, 850, 853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 841, 845, 847,
	849, 851, 852, 854, 0, 859, 855, 856, 857, 858,
	0, 836, 837, 838, 839, 819, 820, 842, 111, 822,
	835, 823, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 834, 840, 0, 0, 0, 0, 0, 0, 0,
	844, 846, 848, 850, 853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 835, 833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1580, 1580, 1580, 1580, 0,
	0, 0, 0, 0, 0, 0, 0, 1580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2091, 2092, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 0, 0, 0, 0, 111, 0,
	0, 0, 0, 0, 0, 0, 0, 821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 0,
	0, 0, 0, 0, 0, 111, 0, 841, 845, 847,
	849, 851, 852, 854, 0, 859, 855, 856, 857, 858,
	0, 836, 837, 838, 839, 819, 820, 842, 0, 822,
	0, 823, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 834, 840, 0, 358, 573, 0, 0, 0, 0,
	844, 846, 848, 850, 853, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 266, 1443, 0, 291, 0, 0, 0, 0,
	0, 843, 0, 0, 0, 564, 0, 835, 350, 305,
	0, 0, 0, 0, 623, 631, 0, 0, 0, 0,
	111, 0, 0, 1604, 0, 0, 522, 0, 0, 554,
	600, 599, 541, 550, 0, 0, 244, 180, 542, 0,
	549, 543, 547, 546, 544, 545, 0, 615, 0, 0,
	0, 0, 0, 0, 513, 526, 1580, 530, 843, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 111, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 523, 524, 0, 0, 0, 0, 574, 0, 525,
	0, 0, 1605, 551, 552, 0, 0, 0, 0, 235,
	355, 371, 245, 346, 384, 250, 353, 240, 320, 343,
	0, 0, 237, 369, 352, 302, 285, 286, 236, 0,
	338, 264, 277, 261, 318, 548, 572, 576, 260, 637,
	570, 379, 239, 0, 378, 317, 365, 370, 303, 297,
	238, 367, 301, 296, 289, 268, 638, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 567, 0, 0, 0, 381, 0,
	0, 621, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 571, 0, 341, 323, 634, 514, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 230, 357,
	263, 304, 241, 243, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 251, 340, 252,
	279, 253, 231, 255, 254, 256, 347, 257, 233, 327,
	364, 0, 275, 336, 300, 234, 299, 328, 363, 362,
	242, 388, 394, 395, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 843, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 393,
	273, 227, 228, 429, 619, 319, 0, 0, 633, 614,
	616, 617, 620, 624, 625, 626, 627, 628, 630, 632,
	636, 428, 0, 0, 0, 0, 0, 427, 325, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 0, 232, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 635, 0, 0, 0, 385, 0, 0, 0,
	1580, 0, 575, 309, 310, 311, 312, 622, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 644, 618, 643, 645, 646, 642,
	647, 648, 629, 532, 0, 579, 640, 639, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 111, 333, 271, 607, 584,
	585, 586, 531, 587, 582, 583, 608, 577, 604, 605,
	556, 580, 588, 603, 589, 606, 609, 610, 649, 650,
	595, 651, 592, 611, 602, 601, 590, 578, 612, 613,
	563, 558, 593, 594, 581, 596, 597, 598, 559, 560,
	561, 562, 157, 358, 573, 389, 390, 391, 413, 375,
	0, 426, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 266, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 973, 0, 0, 350, 305, 0,
	0, 0, 0, 623, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 522, 0, 0, 554, 600,
	599, 541, 550, 0, 0, 244, 180, 542, 0, 549,
	543, 547, 546, 544, 545, 0, 615, 0, 0, 0,
	0, 0, 0, 513, 526, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 0, 0, 0, 0, 574, 0, 525, 0,
	0, 569, 551, 552, 0, 0, 0, 0, 235, 355,
	371, 245, 346, 384, 250, 353, 240, 320, 343, 0,
	0, 237, 369, 352, 302, 285, 286, 236, 0, 338,
	264, 277, 261, 318, 548, 572, 576, 260, 637, 570,
	379, 239, 0, 378, 317, 365, 370, 303, 297, 238,
	367, 301, 296, 289, 268, 638, 281, 329, 295, 330,
	282, 307, 306, 308, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 567, 0, 0, 0, 381, 0, 0,
	621, 0, 0, 0, 354, 0, 0, 290, 0, 0,
	0, 571, 0, 341, 323, 634, 514, 0, 339, 293,
	366, 331, 372, 356, 380, 335, 332, 230, 357, 263,
	304, 241, 243, 258, 265, 267, 269, 270, 313, 314,
	326, 345, 359, 360, 361, 262, 251, 340, 252, 279,
	253, 231, 255, 254, 256, 347, 257, 233, 327, 364,
	0, 275, 336, 300, 234, 299, 328, 363, 362, 242,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	227, 228, 429, 619, 319, 0, 0, 633, 614, 616,
	617, 620, 624, 625, 626, 627, 628, 630, 632, 636,
	428, 0, 0, 0, 0, 0, 427, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	0, 232, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 635, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 575, 309, 310, 311, 312, 622, 0, 249, 405,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 399,
	272, 278, 417, 280, 248, 324, 274, 383, 287, 0,
	410, 0, 411, 0, 0, 0, 0, 316, 283, 284,
	348, 288, 294, 337, 382, 322, 342, 246, 373, 349,
	298, 0, 0, 644, 618, 643, 645, 646, 642, 647,
	648, 629, 532, 0, 579, 640, 639, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 292, 127, 333, 271, 607, 584, 585,
	586, 531, 587, 582, 583, 608, 577, 604, 605, 556,
	580, 588, 603, 589, 606, 609, 610, 649, 650, 595,
	651, 592, 611, 602, 601, 590, 578, 612, 613, 563,
	558, 593, 594, 581, 596, 597, 598, 559, 560, 561,
	562, 358, 573, 0, 389, 390, 391, 413, 375, 0,
	426, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 266,
	3055, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 564, 0, 0, 350, 305, 0, 0, 0,
	0, 623, 631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 0, 0, 554, 600, 599, 541,
	550, 0, 0, 244, 180, 542, 0, 549, 543, 547,
	546, 544, 545, 0, 615, 0, 0, 0, 0, 0,
	0, 513, 526, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	0, 0, 0, 0, 574, 0, 525, 0, 0, 569,
	551, 552, 0, 0, 0, 0, 235, 355, 371, 245,
	346, 384, 250, 353, 240, 320, 343, 0, 0, 237,
	369, 352, 302, 285, 286, 236, 0, 338, 264, 277,
	261, 318, 548, 572, 576, 260, 637, 570, 379, 239,
	0, 378, 317, 365, 370, 303, 297, 238, 367, 301,
	296, 289, 268, 638, 281, 329, 295, 330, 282, 307,
	306, 308, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 0, 0, 0, 381, 0, 0, 621, 0,
	0, 0, 354, 0, 0, 290, 0, 0, 0, 571,
	0, 341, 323, 634, 514, 0, 339, 293, 366, 331,
	372, 356, 380, 335, 332, 230, 357, 263, 304, 241,
	243, 258, 265, 267, 269, 270, 313, 314, 326, 345,
	359, 360, 361, 262, 251, 340, 252, 279, 253, 231,
	255, 254, 256, 347, 257, 233, 327, 364, 0, 275,
	336, 300, 234, 299, 328, 363, 362, 242, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 227, 228,
	429, 619, 319, 0, 0, 633, 614, 616, 617, 620,
	624, 625, 626, 627, 628, 630, 632, 636, 428, 0,
	0, 0, 0, 0, 427, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 0, 232,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 635,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 575,
	309, 310, 311, 312, 622, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 644, 618, 643, 645, 646, 642, 647, 648, 629,
	532, 0, 579, 640, 639, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 0, 333, 271, 607, 584, 585, 586, 531,
	587, 582, 583, 608, 577, 604, 605, 556, 580, 588,
	603, 589, 606, 609, 610, 649, 650, 595, 651, 592,
	611, 602, 601, 590, 578, 612, 613, 563, 558, 593,
	594, 581, 596, 597, 598, 559, 560, 561, 562, 358,
	573, 0, 389, 390, 391, 413, 375, 0, 426, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 266, 1443, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	564, 0, 0, 350, 305, 0, 0, 0, 0, 623,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 522, 0, 0, 554, 600, 599, 541, 550, 0,
	0, 244, 180, 542, 0, 549, 543, 547, 546, 544,
	545, 0, 615, 0, 0, 0, 0, 0, 0, 513,
	526, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 0, 0,
	0, 0, 574, 0, 525, 0, 0, 569, 551, 552,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	548, 572, 576, 260, 637, 570, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 638, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 567,
	0, 0, 0, 381, 0, 0, 621, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 571, 0, 341,
	323, 634, 514, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 429, 619,
	319, 0, 0, 633, 614, 616, 617, 620, 624, 625,
	626, 627, 628, 630, 632, 636, 428, 0, 0, 0,
	0, 0, 427, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 635, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 575, 309, 310,
	311, 312, 622, 0, 249, 405, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 399, 272, 278, 417, 280,
	248, 324, 274, 383, 287, 0, 410, 0, 411, 0,
	0, 0, 0, 316, 283, 284, 348, 288, 294, 337,
	382, 322, 342, 246, 373, 349, 298, 0, 0, 644,
	618, 643, 645, 646, 642, 647, 648, 629, 532, 0,
	579, 640, 639, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 292,
	0, 333, 271, 607, 584, 585, 586, 531, 587, 582,
	583, 608, 577, 604, 605, 556, 580, 588, 603, 589,
	606, 609, 610, 649, 650, 595, 651, 592, 611, 602,
	601, 590, 578, 612, 613, 563, 558, 593, 594, 581,
	596, 597, 598, 559, 560, 561, 562, 358, 573, 0,
	389, 390, 391, 413, 375, 0, 426, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 266, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 0,
	0, 350, 305, 0, 0, 0, 0, 623, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 522,
	0, 0, 554, 600, 599, 541, 550, 0, 0, 244,
	180, 542, 0, 549, 543, 547, 546, 544, 545, 0,
	615, 0, 0, 0, 0, 0, 0, 513, 526, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 1198, 0, 0, 0,
	574, 0, 525, 0, 0, 569, 551, 552, 0, 0,
	0, 0, 235, 355, 371, 245, 346, 384, 250, 353,
	240, 320, 343, 0, 0, 237, 369, 352, 302, 285,
	286, 236, 0, 338, 264, 277, 261, 318, 548, 572,
	576, 260, 637, 570, 379, 239, 0, 378, 317, 365,
	370, 303, 297, 238, 367, 301, 296, 289, 268, 638,
	281, 329, 295, 330, 282, 307, 306, 308, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 567, 0, 0,
	0, 381, 0, 0, 621, 0, 0, 0, 354, 0,
	0, 290, 0, 0, 0, 571, 0, 341, 323, 634,
	514, 0, 339, 293, 366, 331, 372, 356, 380, 335,
	332, 230, 357, 263, 304, 241, 243, 258, 265, 267,
	269, 270, 313, 314, 326, 345, 359, 360, 361, 262,
	251, 340, 252, 279, 253, 231, 255, 254, 256, 347,
	257, 233, 327, 364, 0, 275, 336, 300, 234, 299,
	328, 363, 362, 242, 388, 394, 395, 400, 0, 401,
	0, 0, 0, 409, 414, 415, 416, 418, 419, 420,
	421, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 393, 273, 227, 228, 429, 619, 319, 0,
	0, 633, 614, 616, 617, 620, 624, 625, 626, 627,
	628, 630, 632, 636, 428, 0, 0, 0, 0, 0,
	427, 325, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 374, 386, 404,
	407, 0, 0, 0, 0, 232, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 635, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 575, 309, 310, 311, 312,
	622, 0, 249, 405, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 399, 272, 278, 417, 280, 248, 324,
	274, 383, 287, 0, 410, 0, 411, 0, 0, 0,
	0, 316, 283, 284, 348, 288, 294, 337, 382, 322,
	342, 246, 373, 349, 298, 0, 0, 644, 618, 643,
	645, 646, 642, 647, 648, 629, 532, 0, 579, 640,
	639, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 292, 0, 333,
	271, 607, 584, 585, 586, 531, 587, 582, 583, 608,
	577, 604, 605, 556, 580, 588, 603, 589, 606, 609,
	610, 649, 650, 595, 651, 592, 611, 602, 601, 590,
	578, 612, 613, 563, 558, 593, 594, 581, 596, 597,
	598, 559, 560, 561, 562, 0, 0, 0, 389, 390,
	391, 413, 375, 0, 426, 358, 573, 0, 0, 1750,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 266, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 0, 0, 350,
	305, 0, 0, 0, 0, 623, 631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 522, 0, 0,
	554, 600, 599, 541, 550, 0, 0, 244, 180, 542,
	0, 549, 543, 547, 546, 544, 545, 0, 615, 0,
	0, 0, 0, 0, 0, 513, 526, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 0, 0, 0, 0, 574, 0,
	525, 0, 0, 569, 551, 552, 0, 0, 0, 0,
	235, 355, 371, 245, 346, 384, 250, 353, 240, 320,
	343, 0, 0, 237, 369, 352, 302, 285, 286, 236,
	0, 338, 264, 277, 261, 318, 548, 572, 576, 260,
	637, 570, 379, 239, 0, 378, 317, 365, 370, 303,
	297, 238, 367, 301, 296, 289, 268, 638, 281, 329,
	295, 330, 282, 307, 306, 308, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 567, 0, 0, 0, 381,
	0, 0, 621, 0, 0, 0, 354, 0, 0, 290,
	0, 0, 0, 571, 0, 341, 323, 634, 514, 0,
	339, 293, 366, 331, 372, 356, 380, 335, 332, 230,
	357, 263, 304, 241, 243, 258, 265, 267, 269, 270,
	313, 314, 326, 345, 359, 360, 361, 262, 251, 340,
	252, 279, 253, 231, 255, 254, 256, 347, 257, 233,
	327, 364, 0, 275, 336, 300, 234, 299, 328, 363,
	362, 242, 388, 394, 395, 400, 0, 401, 0, 0,
	0, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 227, 228, 429, 619, 319, 0, 0, 633,
	614, 616, 617, 620, 624, 625, 626, 627, 628, 630,
	632, 636, 428, 0, 0, 0, 0, 0, 427, 325,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 0, 232, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 635, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 575, 309, 310, 311, 312, 622, 0,
	249, 405, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 399, 272, 278, 417, 280, 248, 324, 274, 383,
	287, 0, 410, 0, 411, 0, 0, 0, 0, 316,
	283, 284, 348, 288, 294, 337, 382, 322, 342, 246,
	373, 349, 298, 0, 0, 644, 618, 643, 645, 646,
	642, 647, 648, 629, 532, 0, 579, 640, 639, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 292, 0, 333, 271, 607,
	584, 585, 586, 531, 587, 582, 583, 608, 577, 604,
	605, 556, 580, 588, 603, 589, 606, 609, 610, 649,
	650, 595, 651, 592, 611, 602, 601, 590, 578, 612,
	613, 563, 558, 593, 594, 581, 596, 597, 598, 559,
	560, 561, 562, 358, 573, 0, 389, 390, 391, 413,
	375, 0, 426, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 266, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 0, 0, 350, 305, 0,
	0, 0, 0, 623, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 522, 0, 0, 554, 600,
	599, 541, 550, 0, 0, 244, 180, 542, 0, 549,
	543, 547, 546, 544, 545, 0, 615, 0, 0, 0,
	0, 0, 0, 513, 526, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 0, 0, 0, 0, 574, 0, 525, 0,
	0, 569, 551, 552, 0, 0, 0, 0, 235, 355,
	371, 245, 346, 384, 250, 353, 240, 320, 343, 0,
	0, 237, 369, 352, 302, 285, 286, 236, 0, 338,
	264, 277, 261, 318, 548, 572, 576, 260, 637, 570,
	379, 239, 0, 378, 317, 365, 370, 303, 297, 238,
	367, 301, 296, 289, 268, 638, 281, 329, 295, 330,
	282, 307, 306, 308, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 567, 0, 0, 0, 381, 0, 0,
	621, 0, 0, 0, 354, 0, 0, 290, 0, 0,
	0, 571, 0, 341, 323, 634, 514, 0, 339, 293,
	366, 331, 372, 356, 380, 335, 332, 230, 357, 263,
	304, 241, 243, 258, 265, 267, 269, 270, 313, 314,
	326, 345, 359, 360, 361, 262, 251, 340, 252, 279,
	253, 231, 255, 254, 256, 347, 257, 233, 327, 364,
	0, 275, 336, 300, 234, 299, 328, 363, 362, 242,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	227, 228, 429, 619, 319, 0, 0, 633, 614, 616,
	617, 620, 624, 625, 626, 627, 628, 630, 632, 636,
	428, 0, 0, 0, 0, 0, 427, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	0, 232, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 635, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 575, 309, 310, 311, 312, 622, 0, 249, 405,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 399,
	272, 278, 417, 280, 248, 324, 274, 383, 287, 0,
	410, 0, 411, 0, 0, 0, 0, 316, 283, 284,
	348, 288, 294, 337, 382, 322, 342, 246, 373, 349,
	298, 0, 0, 644, 618, 643, 645, 646, 642, 647,
	648, 629, 532, 0, 579, 640, 639, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 292, 0, 333, 271, 607, 584, 585,
	586, 531, 587, 582, 583, 608, 577, 604, 605, 556,
	580, 588, 603, 589, 606, 609, 610, 649, 650, 595,
	651, 592, 611, 602, 601, 590, 578, 612, 613, 563,
	558, 593, 594, 581, 596, 597, 598, 559, 560, 561,
	562, 358, 573, 0, 389, 390, 391, 413, 375, 0,
	426, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 1322, 0, 0, 0, 529, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 564, 0, 0, 350, 305, 0, 0, 0,
	0, 623, 631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 0, 0, 554, 600, 599, 541,
	550, 0, 0, 244, 180, 542, 0, 549, 543, 547,
	546, 544, 545, 0, 615, 0, 0, 0, 0, 0,
	0, 0, 526, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	0, 0, 0, 0, 574, 0, 525, 0, 0, 569,
	551, 552, 0, 0, 0, 0, 235, 355, 371, 245,
	346, 384, 250, 353, 240, 320, 343, 0, 0, 237,
	369, 352, 302, 285, 286, 236, 0, 338, 264, 277,
	261, 318, 548, 572, 576, 260, 637, 570, 379, 239,
	0, 378, 317, 365, 370, 303, 297, 238, 367, 301,
	296, 289, 268, 638, 281, 329, 295, 330, 282, 307,
	306, 308, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 0, 0, 0, 381, 0, 0, 621, 0,
	0, 0, 354, 0, 0, 290, 0, 0, 0, 571,
	0, 341, 323, 634, 0, 0, 339, 293, 366, 331,
	372, 356, 380, 335, 332, 230, 357, 263, 304, 241,
	243, 258, 265, 267, 269, 270, 313, 314, 326, 345,
	359, 360, 361, 262, 251, 340, 252, 279, 253, 231,
	255, 254, 256, 347, 257, 233, 327, 364, 0, 275,
	336, 300, 234, 299, 328, 363, 362, 242, 388, 1323,
	1324, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 227, 228,
	429, 619, 319, 0, 0, 633, 614, 616, 617, 620,
	624, 625, 626, 627, 628, 630, 632, 636, 428, 0,
	0, 0, 0, 0, 427, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 0, 232,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 635,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 575,
	309, 310, 311, 312, 622, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 644, 618, 643, 645, 646, 642, 647, 648, 629,
	532, 0, 579, 640, 639, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 0, 333, 271, 607, 584, 585, 586, 531,
	587, 582, 583, 608, 577, 604, 605, 556, 580, 588,
	603, 589, 606, 609, 610, 649, 650, 595, 651, 592,
	611, 602, 601, 590, 578, 612, 613, 563, 558, 593,
	594, 581, 596, 597, 598, 559, 560, 561, 562, 358,
	573, 0, 389, 390, 391, 413, 375, 0, 426, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 266, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	564, 0, 0, 350, 305, 0, 0, 0, 0, 623,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 554, 600, 599, 541, 550, 0,
	0, 244, 180, 542, 0, 549, 543, 547, 546, 544,
	545, 0, 615, 0, 0, 0, 0, 0, 0, 513,
	526, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 0, 0,
	0, 0, 574, 0, 525, 0, 0, 569, 551, 552,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	548, 572, 576, 260, 637, 570, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 638, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 567,
	0, 0, 0, 381, 0, 0, 621, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 571, 0, 341,
	323, 634, 514, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 429, 619,
	319, 0, 0, 633, 614, 616, 617, 620, 624, 625,
	626, 627, 628, 630, 632, 636, 428, 0, 0, 0,
	0, 0, 427, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 635, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 575, 309, 310,
	311, 312, 622, 0, 249, 405, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 399, 272, 278, 417, 280,
	248, 324, 274, 383, 287, 0, 410, 0, 411, 0,
	0, 0, 0, 316, 283, 284, 348, 288, 294, 337,
	382, 322, 342, 246, 373, 349, 298, 0, 0, 644,
	618, 643, 645, 646, 642, 647, 648, 629, 532, 0,
	579, 640, 639, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 292,
	0, 333, 271, 607, 584, 585, 586, 531, 587, 582,
	583, 608, 577, 604, 605, 556, 580, 588, 603, 589,
	606, 609, 610, 649, 650, 595, 651, 592, 611, 602,
	601, 590, 578, 612, 613, 563, 558, 593, 594, 581,
	596, 597, 598, 559, 560, 561, 562, 358, 573, 0,
	389, 390, 391, 413, 375, 0, 426, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 266, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 0,
	0, 350, 305, 0, 0, 0, 0, 623, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 522,
	0, 0, 554, 600, 599, 541, 550, 0, 0, 244,
	180, 542, 0, 549, 543, 547, 546, 544, 545, 0,
	615, 0, 0, 0, 0, 0, 0, 0, 526, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 0, 0, 0, 0,
	574, 0, 525, 0, 0, 569, 551, 552, 0, 0,
	0, 0, 235, 355, 371, 245, 346, 384, 250, 353,
	240, 320, 343, 0, 0, 237, 369, 352, 302, 285,
	286, 236, 0, 338, 264, 277, 261, 318, 548, 572,
	576, 260, 637, 570, 379, 239, 0, 378, 317, 365,
	370, 303, 297, 238, 367, 301, 296, 289, 268, 638,
	281, 329, 295, 330, 282, 307, 306, 308, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 567, 0, 0,
	0, 381, 0, 0, 621, 0, 0, 0, 354, 0,
	0, 290, 0, 0, 0, 571, 0, 341, 323, 634,
	0, 0, 339, 293, 366, 331, 372, 356, 380, 335,
	332, 230, 357, 263, 304, 241, 243, 258, 265, 267,
	269, 270, 313, 314, 326, 345, 359, 360, 361, 262,
	251, 340, 252, 279, 253, 231, 255, 254, 256, 347,
	257, 233, 327, 364, 0, 275, 336, 300, 234, 299,
	328, 363, 362, 242, 388, 394, 395, 400, 0, 401,
	0, 0, 0, 409, 414, 415, 416, 418, 419, 420,
	421, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 393, 273, 227, 228, 429, 619, 319, 0,
	0, 633, 614, 616, 617, 620, 624, 625, 626, 627,
	628, 630, 632, 636, 428, 0, 0, 0, 0, 0,
	427, 325, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 374, 386, 404,
	407, 0, 0, 0, 0, 232, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 635, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 575, 309, 310, 311, 312,
	622, 0, 249, 405, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 399, 272, 278, 417, 280, 248, 324,
	274, 383, 287, 0, 410, 0, 411, 0, 0, 0,
	0, 316, 283, 284, 348, 288, 294, 337, 382, 322,
	342, 246, 373, 349, 298, 0, 0, 644, 618, 643,
	645, 646, 642, 647, 648, 629, 532, 0, 579, 640,
	639, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 292, 0, 333,
	271, 607, 584, 585, 586, 531, 587, 582, 583, 608,
	577, 604, 605, 556, 580, 588, 603, 589, 606, 609,
	610, 649, 650, 595, 651, 592, 611, 602, 601, 590,
	578, 612, 613, 563, 558, 593, 594, 581, 596, 597,
	598, 559, 560, 561, 562, 0, 0, 0, 389, 390,
	391, 413, 375, 0, 426, 157, 358, 49, 149, 126,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 142, 0, 266, 0, 151, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 154, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 355, 371, 245, 346, 384, 250, 353, 240,
	320, 343, 0, 0, 237, 369, 352, 302, 285, 286,
	236, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 239, 0, 378, 317, 365, 370,
	303, 297, 238, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 125,
	148, 155, 0, 95, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 172, 0, 0, 0, 354, 0, 0,
	290, 147, 141, 140, 397, 0, 341, 323, 55, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	230, 357, 263, 304, 241, 243, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 251,
	340, 252, 279, 253, 231, 255, 254, 256, 347, 257,
	233, 327, 364, 0, 275, 336, 300, 234, 299, 328,
	363, 362, 242, 388, 394, 395, 400, 0, 401, 143,
	144, 145, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 227, 228, 376, 259, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 392, 175,
	0, 0, 422, 183, 0, 0, 0, 146, 0, 184,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 0, 232, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 309, 310, 311, 312, 276,
	0, 249, 405, 334, 107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 48, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 50, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 292, 127, 333, 271,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 0, 0, 0, 389, 390, 391,
	413, 375, 358, 185, 38, 173, 176, 178, 177, 0,
	47, 5, 0, 321, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1004, 0, 0, 179, 0, 0,
	541, 550, 0, 0, 244, 180, 542, 0, 549, 543,
	547, 546, 544, 545, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 551, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 548, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 429, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 428,
	0, 0, 0, 0, 0, 427, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	0, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	157, 358, 49, 149, 126, 0, 0, 0, 0, 0,
	0, 0, 321, 446, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 350, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 451, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 244, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 355, 371, 245,
	346, 384, 250, 353, 240, 320, 343, 0, 0, 237,
	369, 352, 302, 285, 286, 236, 0, 338, 264, 277,
	261, 318, 0, 368, 396, 260, 387, 0, 379, 239,
	0, 378, 317, 365, 370, 303, 297, 238, 367, 301,
	296, 289, 268, 412, 281, 329, 295, 330, 282, 307,
	306, 308, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 450, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 354, 0, 0, 290, 0, 0, 0, 397,
	0, 341, 323, 0, 0, 0, 339, 293, 366, 331,
	372, 356, 380, 335, 332, 230, 357, 263, 304, 241,
	243, 258, 265, 267, 269, 270, 313, 314, 326, 345,
	359, 360, 361, 262, 251, 340, 252, 279, 253, 231,
	255, 254, 256, 347, 257, 233, 327, 364, 0, 275,
	336, 300, 234, 299, 328, 363, 362, 242, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 227, 228,
	429, 259, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 392, 0, 0, 0, 422, 428, 0,
	0, 0, 0, 0, 427, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 0, 232,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 402,
	309, 310, 311, 312, 447, 449, 249, 405, 334, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 50,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 127, 333, 271, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 0, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 0, 0, 223, 224, 225, 226, 358,
	0, 0, 389, 390, 391, 413, 375, 0, 426, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 833, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 821, 0, 0,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 1831, 1833, 1834,
	1835, 1836, 1837, 1838, 0, 1843, 1839, 1840, 1841, 1842,
	0, 1826, 1827, 1828, 1829, 819, 1812, 1832, 0, 1813,
	317, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822,
	1823, 1824, 1830, 329, 295, 330, 282, 307, 306, 308,
	844, 846, 848, 850, 853, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 1825, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 429, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 428, 0, 0, 0,
	0, 0, 427, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 402, 309, 310,
	311, 312, 276, 0, 249, 405, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 399, 272, 278, 417, 280,
	248, 324, 274, 383, 287, 0, 410, 0, 411, 0,
	0, 0, 0, 316, 283, 284, 348, 288, 294, 337,
	382, 322, 342, 246, 373, 349, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 843, 292,
	0, 333, 271, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 0, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 0, 0, 223, 224, 225, 226, 358, 0, 0,
	389, 390, 391, 413, 375, 0, 426, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 350, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 244,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 1901, 1904, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 355, 371, 245, 346, 384, 250, 353,
	240, 320, 343, 0, 0, 237, 369, 352, 302, 285,
	286, 236, 0, 338, 264, 277, 261, 318, 0, 368,
	396, 260, 387, 0, 379, 239, 0, 378, 317, 365,
	370, 303, 297, 238, 367, 301, 296, 289, 268, 412,
	281, 329, 295, 330, 282, 307, 306, 308, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1905, 381, 0, 0, 0, 1900, 1891, 1899, 354, 1897,
	1902, 290, 0, 0, 0, 397, 0, 341, 323, 0,
	0, 0, 339, 293, 366, 331, 372, 356, 380, 335,
	332, 230, 357, 263, 304, 241, 243, 258, 265, 267,
	269, 270, 313, 314, 326, 345, 359, 360, 361, 262,
	251, 340, 252, 279, 253, 231, 255, 254, 256, 347,
	257, 233, 327, 364, 1903, 275, 336, 300, 234, 299,
	328, 363, 362, 242, 388, 394, 395, 400, 0, 401,
	0, 0, 0, 409, 414, 415, 416, 418, 419, 420,
	421, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 393, 273, 227, 228, 429, 259, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 392,
	0, 0, 0, 422, 428, 0, 0, 0, 0, 0,
	427, 325, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 374, 386, 404,
	407, 0, 0, 0, 0, 232, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 402, 309, 310, 311, 312,
	276, 0, 249, 405, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 399, 272, 278, 417, 280, 248, 324,
	274, 383, 287, 0, 410, 0, 411, 0, 0, 0,
	0, 316, 283, 284, 348, 288, 294, 337, 382, 322,
	342, 246, 373, 349, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 292, 0, 333,
	271, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 0, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 0,
	0, 223, 224, 225, 226, 358, 0, 0, 389, 390,
	391, 413, 375, 0, 426, 0, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 350,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 244, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 1901,
	1904, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 355, 371, 245, 346, 384, 250, 353, 240, 320,
	343, 0, 0, 237, 369, 352, 302, 285, 286, 236,
	0, 338, 264, 277, 261, 318, 0, 368, 396, 260,
	387, 0, 379, 239, 0, 378, 317, 365, 370, 303,
	297, 238, 367, 301, 296, 289, 268, 412, 281, 329,
	295, 330, 282, 307, 306, 308, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1905, 381,
	0, 0, 0, 1900, 0, 1899, 354, 1897, 1902, 290,
	0, 0, 0, 397, 0, 341, 323, 0, 0, 0,
	339, 293, 366, 331, 372, 356, 380, 335, 332, 230,
	357, 263, 304, 241, 243, 258, 265, 267, 269, 270,
	313, 314, 326, 345, 359, 360, 361, 262, 251, 340,
	252, 279, 253, 231, 255, 254, 256, 347, 257, 233,
	327, 364, 1903, 275, 336, 300, 234, 299, 328, 363,
	362, 242, 388, 394, 395, 400, 0, 401, 0, 0,
	0, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 227, 228, 429, 259, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 392, 0, 0,
	0, 422, 428, 0, 0, 0, 0, 0, 427, 325,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 0, 232, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 402, 309, 310, 311, 312, 276, 0,
	249, 405, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 399, 272, 278, 417, 280, 248, 324, 274, 383,
	287, 0, 410, 0, 411, 0, 0, 0, 0, 316,
	283, 284, 348, 288, 294, 337, 382, 322, 342, 246,
	373, 349, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 292, 0, 333, 271, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 0, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 0, 0, 223,
	224, 225, 226, 358, 0, 0, 389, 390, 391, 413,
	375, 0, 426, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1637, 0, 0, 0,
	0, 266, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 350, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 1638, 0, 0, 0, 244, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 939,
	940, 941, 938, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 355,
	371, 245, 346, 384, 250, 353, 240, 320, 343, 0,
	0, 237, 369, 352, 302, 285, 286, 236, 0, 338,
	264, 277, 261, 318, 0, 368, 396, 260, 387, 0,
	379, 239, 0, 378, 317, 365, 370, 303, 297, 238,
	367, 301, 296, 289, 268, 412, 281, 329, 295, 330,
	282, 307, 306, 308, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 0, 354, 0, 0, 290, 0, 0,
	0, 397, 0, 341, 323, 0, 0, 0, 339, 293,
	366, 331, 372, 356, 380, 335, 332, 230, 357, 263,
	304, 241, 243, 258, 265, 267, 269, 270, 313, 314,
	326, 345, 359, 360, 361, 262, 251, 340, 252, 279,
	253, 231, 255, 254, 256, 347, 257, 233, 327, 364,
	0, 275, 336, 300, 234, 299, 328, 363, 362, 242,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	227, 228, 429, 259, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 392, 0, 0, 0, 422,
	428, 0, 0, 0, 0, 0, 427, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	0, 232, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 402, 309, 310, 311, 312, 276, 0, 249, 405,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 399,
	272, 278, 417, 280, 248, 324, 274, 383, 287, 0,
	410, 0, 411, 0, 0, 0, 0, 316, 283, 284,
	348, 288, 294, 337, 382, 322, 342, 246, 373, 349,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 292, 0, 333, 271, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 0,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 0, 0, 223, 224, 225,
	226, 358, 0, 0, 389, 390, 391, 413, 375, 0,
	426, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	757, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 350, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 764, 765, 0,
	0, 0, 0, 244, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 355, 752, 245,
	346, 384, 250, 353, 240, 320, 343, 0, 0, 237,
	369, 352, 302, 285, 286, 236, 0, 338, 264, 277,
	261, 318, 0, 368, 396, 260, 387, 744, 379, 239,
	743, 378, 317, 365, 370, 303, 297, 238, 367, 301,
	296, 289, 268, 412, 281, 329, 295, 330, 282, 307,
	306, 308, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 354, 0, 0, 290, 0, 0, 0, 397,
	0, 341, 323, 0, 0, 0, 339, 293, 366, 331,
	372, 356, 380, 755, 332, 230, 357, 263, 304, 241,
	243, 258, 265, 267, 269, 270, 313, 314, 326, 345,
	359, 360, 361, 262, 251, 340, 252, 279, 253, 231,
	255, 254, 256, 347, 257, 233, 327, 364, 0, 275,
	336, 300, 234, 299, 328, 363, 362, 242, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 227, 228,
	429, 259, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 392, 0, 0, 0, 422, 428, 0,
	0, 0, 0, 0, 427, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 0, 232,
	406, 0, 0, 0, 0, 0, 0, 756, 0, 377,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 759,
	309, 310, 311, 312, 276, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 766, 753, 762, 754, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 0, 333, 271, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 0, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 0, 0, 223, 224, 225, 226, 358,
	0, 0, 389, 390, 391, 413, 375, 0, 426, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 1908, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	0, 368, 396, 260, 387, 0, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 412, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1907, 381, 0, 0, 0, 1912, 1910, 0,
	354, 0, 1911, 290, 0, 0, 0, 397, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 429, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 428, 0, 0, 0,
	0, 0, 427, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 402, 309, 310,
	311, 312, 276, 0, 249, 405, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 399, 272, 278, 417, 280,
	248, 324, 274, 383, 287, 0, 410, 0, 411, 0,
	0, 0, 0, 316, 283, 284, 348, 288, 294, 337,
	382, 322, 342, 246, 373, 349, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 292,
	0, 333, 271, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 0, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 0, 0, 223, 224, 225, 226, 157, 358, 0,
	389, 390, 391, 413, 375, 0, 426, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 1681, 0, 179, 0, 0, 0, 0, 0, 0,
	244, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 429, 259, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	392, 0, 0, 0, 422, 428, 0, 0, 0, 0,
	0, 427, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 309, 310, 311,
	312, 276, 0, 249, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 127,
	333, 271, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 157, 358, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 350, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	1672, 0, 179, 0, 0, 0, 0, 0, 0, 244,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 355, 371, 245, 346, 384, 250, 353,
	240, 320, 343, 0, 0, 237, 369, 352, 302, 285,
	286, 236, 0, 338, 264, 277, 261, 318, 0, 368,
	396, 260, 387, 0, 379, 239, 0, 378, 317, 365,
	370, 303, 297, 238, 367, 301, 296, 289, 268, 412,
	281, 329, 295, 330, 282, 307, 306, 308, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 0, 0, 0, 0, 0, 354, 0,
	0, 290, 0, 0, 0, 397, 0, 341, 323, 0,
	0, 0, 339, 293, 366, 331, 372, 356, 380, 335,
	332, 230, 357, 263, 304, 241, 243, 258, 265, 267,
	269, 270, 313, 314, 326, 345, 359, 360, 361, 262,
	251, 340, 252, 279, 253, 231, 255, 254, 256, 347,
	257, 233, 327, 364, 0, 275, 336, 300, 234, 299,
	328, 363, 362, 242, 388, 394, 395, 400, 0, 401,
	0, 0, 0, 409, 414, 415, 416, 418, 419, 420,
	421, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 393, 273, 227, 228, 429, 259, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 392,
	0, 0, 0, 422, 428, 0, 0, 0, 0, 0,
	427, 325, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 374, 386, 404,
	407, 0, 0, 0, 0, 232, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 402, 309, 310, 311, 312,
	276, 0, 249, 405, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 399, 272, 278, 417, 280, 248, 324,
	274, 383, 287, 0, 410, 0, 411, 0, 0, 0,
	0, 316, 283, 284, 348, 288, 294, 337, 382, 322,
	342, 246, 373, 349, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 292, 127, 333,
	271, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 0, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 0,
	0, 223, 224, 225, 226, 157, 358, 0, 389, 390,
	391, 413, 375, 0, 426, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1578, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 355, 371, 245, 346, 384, 250, 353, 240,
	320, 343, 0, 0, 237, 369, 352, 302, 285, 286,
	236, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 239, 0, 378, 317, 365, 370,
	303, 297, 238, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	230, 357, 263, 304, 241, 243, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 251,
	340, 252, 279, 253, 231, 255, 254, 256, 347, 257,
	233, 327, 364, 0, 275, 336, 300, 234, 299, 328,
	363, 362, 242, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 227, 228, 429, 259, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 392, 0,
	0, 0, 422, 428, 0, 0, 0, 0, 0, 427,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 0, 232, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 309, 310, 311, 312, 276,
	0, 249, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 292, 127, 333, 271,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	764, 765, 0, 0, 0, 0, 244, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	355, 371, 245, 346, 384, 250, 353, 240, 320, 343,
	0, 0, 237, 369, 352, 302, 285, 286, 236, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	744, 379, 239, 743, 378, 317, 365, 370, 303, 297,
	238, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 230, 357,
	263, 304, 241, 243, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 251, 340, 252,
	279, 253, 231, 255, 254, 256, 347, 257, 233, 327,
	364, 0, 275, 336, 300, 234, 299, 328, 363, 362,
	242, 388, 394, 395, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 393,
	273, 227, 228, 429, 259, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 392, 0, 0, 0,
	422, 428, 0, 0, 0, 0, 0, 427, 325, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 0, 232, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 766, 1597,
	762, 1598, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 426, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 2284, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 2287, 0, 0,
	2286, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 429, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 428,
	0, 0, 0, 0, 0, 427, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 1172,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 1170, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1168, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 429,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 428, 0, 0,
	0, 0, 0, 427, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 309,
	310, 311, 312, 276, 0, 249, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 358, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 1166, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 1170, 0, 0, 0,
	244, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1168, 0, 0, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 429, 259, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	392, 0, 0, 0, 422, 428, 0, 0, 0, 0,
	0, 427, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 309, 310, 311,
	312, 276, 0, 249, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 0,
	333, 271, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2982,
	0, 179, 600, 0, 0, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 355, 371, 245, 346, 384, 250, 353, 240,
	320, 343, 0, 0, 237, 369, 352, 302, 285, 286,
	236, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 239, 0, 378, 317, 365, 370,
	303, 297, 238, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	230, 357, 263, 304, 241, 243, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 251,
	340, 252, 279, 253, 231, 255, 254, 256, 347, 257,
	233, 327, 364, 0, 275, 336, 300, 234, 299, 328,
	363, 362, 242, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 227, 228, 429, 259, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 392, 0,
	0, 0, 422, 428, 0, 0, 0, 0, 0, 427,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 0, 232, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 309, 310, 311, 312, 276,
	0, 249, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 292, 0, 333, 271,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 1170, 0, 0, 0, 244, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1168, 0, 0, 0, 0, 0, 0, 235,
	355, 371, 245, 346, 384, 250, 353, 240, 320, 343,
	0, 0, 237, 369, 352, 302, 285, 286, 236, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	0, 379, 239, 0, 378, 317, 365, 370, 303, 297,
	238, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 230, 357,
	263, 304, 241, 243, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 251, 340, 252,
	279, 253, 231, 255, 254, 256, 347, 257, 233, 327,
	364, 0, 275, 336, 300, 234, 299, 328, 363, 362,
	242, 388, 394, 395, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 393,
	273, 227, 228, 429, 259, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 392, 0, 0, 0,
	422, 428, 0, 0, 0, 0, 0, 427, 325, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 0, 232, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 426, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	1170, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2661, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 429, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 428,
	0, 0, 0, 0, 0, 427, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1979, 0, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 1981, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 429,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 428, 0, 0,
	0, 0, 0, 427, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 309,
	310, 311, 312, 276, 0, 249, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 358, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 2000, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 1170, 0, 0, 0,
	244, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 429, 259, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	392, 0, 0, 0, 422, 428, 0, 0, 0, 0,
	0, 427, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 309, 310, 311,
	312, 276, 0, 249, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 0,
	333, 271, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3064,
	0, 179, 0, 0, 0, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 355, 371, 245, 346, 384, 250, 353, 240,
	320, 343, 0, 0, 237, 369, 352, 302, 285, 286,
	236, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 239, 0, 378, 317, 365, 370,
	303, 297, 238, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	230, 357, 263, 304, 241, 243, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 251,
	340, 252, 279, 253, 231, 255, 254, 256, 347, 257,
	233, 327, 364, 0, 275, 336, 300, 234, 299, 328,
	363, 362, 242, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 227, 228, 429, 259, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 392, 0,
	0, 0, 422, 428, 0, 0, 0, 0, 0, 427,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 0, 232, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 309, 310, 311, 312, 276,
	0, 249, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 292, 0, 333, 271,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	600, 0, 0, 0, 0, 0, 244, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	355, 371, 245, 346, 384, 250, 353, 240, 320, 343,
	0, 0, 237, 369, 352, 302, 285, 286, 236, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	0, 379, 239, 0, 378, 317, 365, 370, 303, 297,
	238, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 230, 357,
	263, 304, 241, 243, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 251, 340, 252,
	279, 253, 231, 255, 254, 256, 347, 257, 233, 327,
	364, 0, 275, 336, 300, 234, 299, 328, 363, 362,
	242, 388, 394, 395, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 393,
	273, 227, 228, 429, 259, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 392, 0, 0, 0,
	422, 428, 0, 0, 0, 0, 0, 427, 325, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 0, 232, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 426, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2997, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 429, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 428,
	0, 0, 0, 0, 0, 427, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 2930, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 429,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 428, 0, 0,
	0, 0, 0, 427, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 309,
	310, 311, 312, 276, 0, 249, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 358, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2747, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	244, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 429, 259, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	392, 0, 0, 0, 422, 428, 0, 0, 0, 0,
	0, 427, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 309, 310, 311,
	312, 276, 0, 249, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 0,
	333, 271, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 355, 371, 245, 346, 384, 250, 353, 240,
	320, 343, 0, 0, 237, 369, 352, 302, 285, 286,
	236, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 239, 0, 378, 317, 365, 370,
	303, 297, 238, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 2795, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	230, 357, 263, 304, 241, 243, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 251,
	340, 252, 279, 253, 231, 255, 254, 256, 347, 257,
	233, 327, 364, 0, 275, 336, 300, 234, 299, 328,
	363, 362, 242, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 227, 228, 429, 259, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 392, 0,
	0, 0, 422, 428, 0, 0, 0, 0, 0, 427,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 0, 232, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 309, 310, 311, 312, 276,
	0, 249, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 292, 0, 333, 271,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 244, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	355, 371, 245, 346, 384, 250, 353, 240, 320, 343,
	0, 0, 237, 369, 352, 302, 285, 286, 236, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	0, 379, 239, 0, 378, 317, 365, 370, 303, 297,
	238, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 230, 357,
	263, 304, 241, 243, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 251, 340, 252,
	279, 253, 231, 255, 254, 256, 347, 257, 233, 327,
	364, 0, 275, 336, 300, 234, 299, 328, 363, 362,
	242, 388, 394, 395, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 393,
	273, 227, 228, 429, 259, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 392, 0, 0, 0,
	422, 428, 0, 0, 0, 0, 0, 427, 325, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 0, 232, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 426, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1578, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 429, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 428,
	0, 0, 0, 0, 0, 427, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 429,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 428, 0, 0,
	0, 0, 0, 427, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 309,
	310, 311, 312, 276, 0, 249, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 358, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 2441, 0, 0, 0,
	244, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 429, 259, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	392, 0, 0, 0, 422, 428, 0, 0, 0, 0,
	0, 427, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 309, 310, 311,
	312, 276, 0, 249, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 0,
	333, 271, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2372, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 355, 371, 245, 346, 384, 250, 353, 240,
	320, 343, 0, 0, 237, 369, 352, 302, 285, 286,
	236, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 239, 0, 378, 317, 365, 370,
	303, 297, 238, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	230, 357, 263, 304, 241, 243, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 251,
	340, 252, 279, 253, 231, 255, 254, 256, 347, 257,
	233, 327, 364, 0, 275, 336, 300, 234, 299, 328,
	363, 362, 242, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 227, 228, 429, 259, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 392, 0,
	0, 0, 422, 428, 0, 0, 0, 0, 0, 427,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 0, 232, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 309, 310, 311, 312, 276,
	0, 249, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 292, 0, 333, 271,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 1170, 0, 0, 0, 244, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	355, 371, 245, 346, 384, 250, 353, 240, 320, 343,
	0, 0, 237, 369, 352, 302, 285, 286, 236, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	0, 379, 239, 0, 378, 317, 365, 370, 303, 297,
	238, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 230, 357,
	263, 304, 241, 243, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 251, 340, 252,
	279, 253, 231, 255, 254, 256, 347, 257, 233, 327,
	364, 0, 275, 336, 300, 234, 299, 328, 363, 362,
	242, 388, 394, 395, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 393,
	273, 227, 228, 429, 259, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 392, 0, 0, 0,
	422, 428, 0, 0, 0, 0, 0, 427, 325, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 0, 232, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 426, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	1981, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 429, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 428,
	0, 0, 0, 0, 0, 427, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1696,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 429,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 428, 0, 0,
	0, 0, 0, 427, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 309,
	310, 311, 312, 276, 0, 249, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 358, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	244, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2018, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 429, 259, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	392, 0, 0, 0, 422, 428, 0, 0, 0, 0,
	0, 427, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 309, 310, 311,
	312, 276, 0, 249, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 0,
	333, 271, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 2016, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 355, 371, 245, 346, 384, 250, 353, 240,
	320, 343, 0, 0, 237, 369, 352, 302, 285, 286,
	236, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 239, 0, 378, 317, 365, 370,
	303, 297, 238, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	230, 357, 263, 304, 241, 243, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 251,
	340, 252, 279, 253, 231, 255, 254, 256, 347, 257,
	233, 327, 364, 0, 275, 336, 300, 234, 299, 328,
	363, 362, 242, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 227, 228, 429, 259, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 392, 0,
	0, 0, 422, 428, 0, 0, 0, 0, 0, 427,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 0, 232, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 309, 310, 311, 312, 276,
	0, 249, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 292, 0, 333, 271,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 0, 0, 0, 389, 390, 391,
	413, 375, 358, 426, 0, 0, 1863, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 429, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 428,
	0, 0, 0, 0, 0, 427, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 1566,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 429,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 428, 0, 0,
	0, 0, 0, 427, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 309,
	310, 311, 312, 276, 0, 249, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 358, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 1170, 0, 0, 0,
	244, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	1486, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 429, 259, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	392, 0, 0, 0, 422, 428, 0, 0, 0, 0,
	0, 427, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 309, 310, 311,
	312, 276, 0, 249, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 0,
	333, 271, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 355, 371, 245, 346, 384, 250, 353, 240,
	320, 343, 0, 0, 237, 369, 352, 302, 285, 286,
	236, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 239, 0, 378, 317, 365, 370,
	303, 297, 238, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 1194, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	230, 357, 263, 304, 241, 243, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 251,
	340, 252, 279, 253, 231, 255, 254, 256, 347, 257,
	233, 327, 364, 0, 275, 336, 300, 234, 299, 328,
	363, 362, 242, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 227, 228, 429, 259, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 392, 0,
	0, 0, 422, 428, 0, 0, 0, 0, 0, 427,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 0, 232, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 309, 310, 311, 312, 276,
	0, 249, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 292, 0, 333, 271,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 244, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	355, 371, 245, 346, 384, 250, 353, 240, 320, 343,
	0, 0, 237, 369, 352, 302, 285, 286, 236, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	0, 379, 239, 0, 378, 317, 365, 370, 303, 297,
	238, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 230, 357,
	263, 304, 241, 243, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 251, 340, 252,
	279, 253, 231, 255, 254, 256, 347, 257, 233, 327,
	364, 0, 275, 336, 300, 234, 299, 328, 363, 362,
	242, 388, 394, 395, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 393,
	273, 227, 228, 429, 259, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 392, 0, 0, 0,
	422, 428, 0, 0, 0, 0, 0, 427, 325, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 0, 232, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 700, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 426, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 467, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 429, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 428,
	0, 0, 0, 0, 0, 427, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 468, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 444, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 429,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 428, 0, 0,
	0, 0, 0, 427, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 309,
	310, 311, 312, 276, 0, 249, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 358, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 434, 266, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	244, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 429, 259, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	392, 0, 0, 0, 422, 428, 0, 0, 0, 0,
	0, 427, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 309, 310, 311,
	312, 276, 0, 249, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 0,
	333, 271, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 355, 371, 245, 346, 384, 250, 353, 240,
	320, 343, 0, 0, 237, 369, 352, 302, 285, 286,
	236, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 239, 0, 378, 317, 365, 370,
	303, 297, 238, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	230, 357, 263, 304, 241, 243, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 251,
	340, 252, 279, 253, 231, 255, 254, 256, 347, 257,
	233, 327, 364, 0, 275, 336, 300, 234, 299, 328,
	363, 362, 242, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 227, 228, 429, 259, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 392, 0,
	0, 0, 422, 428, 0, 0, 0, 0, 0, 427,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 0, 232, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 309, 310, 311, 312, 276,
	0, 249, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 292, 0, 333, 271,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 244, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	355, 1150, 245, 346, 384, 250, 353, 240, 320, 343,
	0, 0, 237, 369, 352, 302, 285, 286, 236, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	0, 379, 239, 0, 378, 317, 365, 370, 303, 297,
	238, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 230, 357,
	263, 304, 241, 243, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 251, 340, 252,
	279, 253, 231, 255, 254, 256, 347, 257, 233, 327,
	364, 0, 275, 336, 300, 234, 299, 328, 363, 362,
	242, 388, 394, 395, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 393,
	273, 227, 228, 429, 259, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 392, 0, 0, 0,
	422, 428, 0, 0, 0, 0, 0, 427, 325, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 0, 232, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 426, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 1148,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 429, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 428,
	0, 0, 0, 0, 0, 427, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	508, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 429,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 428, 0, 0,
	0, 0, 0, 427, 325, 157, 344, 49, 149, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 150, 0, 0, 232, 406,
	0, 0, 142, 0, 0, 0, 151, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 109, 402, 309,
	310, 311, 312, 276, 0, 249, 405, 334, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 939, 940, 941, 938, 0, 0, 0,
	0, 113, 114, 0, 115, 116, 0, 0, 229, 0,
	292, 0, 333, 271, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 0, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 125,
	148, 155, 1379, 95, 157, 0, 49, 149, 126, 0,
	0, 0, 0, 0, 0, 1556, 0, 0, 0, 0,
	0, 147, 141, 140, 150, 0, 0, 0, 55, 0,
	0, 142, 0, 0, 0, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 1558,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1559,
	1560, 97, 0, 0, 0, 0, 0, 154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	144, 145, 1533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 0, 0, 0, 146, 0, 106,
	113, 114, 0, 115, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1549, 1375, 0, 0,
	0, 1372, 0, 0, 0, 1374, 1371, 1373, 1377, 1378,
	0, 0, 0, 1376, 0, 0, 0, 0, 0, 0,
	1556, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 48, 0, 0, 125, 148,
	155, 0, 95, 0, 1558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1520, 1519, 1522, 0, 1518, 0,
	147, 141, 140, 1537, 0, 0, 0, 55, 0, 0,
	0, 0, 0, 0, 1543, 0, 0, 3081, 1556, 0,
	0, 0, 0, 0, 50, 0, 0, 1533, 0, 0,
	0, 0, 0, 0, 1531, 1563, 0, 0, 1532, 1534,
	1536, 0, 1538, 1539, 1540, 1544, 1545, 1546, 1548, 1551,
	1552, 1553, 1558, 0, 0, 0, 0, 127, 0, 1541,
	1550, 1542, 0, 0, 0, 0, 0, 0, 143, 144,
	145, 1523, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1382, 1383, 1384, 1385, 1386, 1387, 1380,
	1381, 1549, 0, 1557, 152, 1533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 108, 38, 0, 146, 0, 106, 0,
	47, 5, 0, 0, 112, 0, 0, 0, 0, 0,
	1554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1530, 0, 0,
	0, 0, 0, 0, 1529, 2839, 0, 0, 0, 1549,
	0, 0, 0, 0, 0, 0, 0, 1556, 1537, 0,
	0, 0, 0, 107, 0, 0, 0, 0, 1547, 1543,
	0, 0, 0, 0, 48, 1535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1562, 1561, 1531,
	1563, 1558, 0, 1532, 1534, 1536, 0, 1538, 1539, 1540,
	1544, 1545, 1546, 1548, 1551, 1552, 1553, 0, 0, 0,
	0, 0, 0, 0, 1541, 1550, 1542, 0, 0, 0,
	0, 0, 0, 50, 0, 0, 1537, 0, 0, 0,
	0, 0, 0, 0, 1533, 0, 0, 1543, 0, 1525,
	0, 0, 0, 0, 0, 0, 0, 0, 1557, 0,
	0, 0, 0, 0, 0, 0, 127, 1531, 1563, 0,
	0, 1532, 1534, 1536, 0, 1538, 1539, 1540, 1544, 1545,
	1546, 1548, 1551, 1552, 1553, 0, 0, 0, 0, 0,
	0, 0, 1541, 1550, 1542, 1554, 0, 0, 0, 487,
	0, 486, 493, 483, 0, 0, 0, 0, 1549, 0,
	0, 0, 1530, 490, 491, 0, 492, 496, 0, 1529,
	478, 0, 108, 38, 0, 0, 1557, 0, 0, 47,
	501, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1547, 0, 0, 0, 0, 0, 0,
	1535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1554, 0, 505, 0, 0, 507, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 0, 0,
	1530, 0, 0, 0, 0, 1537, 0, 1529, 487, 0,
	486, 493, 483, 0, 0, 0, 1543, 0, 0, 0,
	0, 0, 490, 491, 0, 492, 496, 0, 0, 478,
	0, 1547, 0, 0, 0, 0, 1531, 1563, 1535, 501,
	1532, 1534, 1536, 0, 1538, 1539, 1540, 1544, 1545, 1546,
	1548, 1551, 1552, 1553, 487, 0, 486, 493, 483, 0,
	0, 1541, 1550, 1542, 0, 0, 0, 0, 490, 491,
	0, 492, 496, 0, 505, 478, 0, 507, 0, 0,
	0, 0, 506, 0, 0, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 481, 480, 0, 0, 0, 0,
	0, 0, 1554, 485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 0, 0, 0, 1530,
	0, 0, 504, 0, 0, 0, 1529, 0, 0, 482,
	0, 0, 0, 473, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1547, 0, 0, 0, 0, 0, 0, 1535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 479, 481, 480, 0, 0, 0, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 489, 0, 0, 0, 0, 0,
	0, 504, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 479, 481,
	480, 484, 488, 494, 0, 495, 497, 0, 485, 498,
	499, 500, 0, 0, 502, 503, 0, 0, 0, 0,
	489, 0, 0, 0, 0, 0, 0, 504, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	484, 488, 494, 0, 495, 497, 0, 0, 498, 499,
	500, 0, 0, 502, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 484, 488, 494, 0,
	495, 497, 0, 0, 498, 499, 500, 0, 0, 502,
	503,
}

var yyPact = [...]int{
	35835, -1000, -1000, -1000, -307, 9635, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33875, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 33875, -304, 33337,
	33337, -1000, -1000, 1992, -1000, 32799, 10730, 33875, 263, 260,
	33875, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 600, -1000, 32261, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 514, 36569, 35489, 7472, -257,
	-1000, 2671, -110, 752, 768, 847, 847, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2886, 635, 31723, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2866, 128, 635,
	13420, -2, -5, 2671, 304, 163, -1000, 958, 36044, 152,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 7472, 7472, 9635, -322, 9635, 7472, 33875, 33875, -1000,
	-1000, -1000, -1000, 514, 36569, 7472, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -5, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3838, -1000, 1266, -1000, -1000, -1000, -1000,
	2341, 1264, 1896, 481, 33875, -1000, 1256, 481, -1000, -1000,
	-1000, 2671, 2671, -1000, 33875, 33875, 66, 1379, -1000, 309,
	316, 302, 1255, -1000, -1000, -1000, -1000, -1000, -1000, 385,
	2737, -1000, 33875, 33875, 2381, 33875, -1000, 1548, 439, 36658,
	2560, 1030, 598, 2408, -1000, -1000, 2339, -1000, 168, 170,
	169, 310, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 188,
	-1000, 2631, -1000, -1000, 159, -1000, -1000, 149, -1000, -1000,
	-1000, -6, -1000, -1000, -1000, -1000, -1000, -1000, -107, -1000,
	-1000, 798, 1768, 7472, -1000, 1612, -1000, 2296, -1000, -1000,
	-1000, -1000, 4772, 9086, 9086, 9086, 9086, -1000, -1000, 2171,
	7472, 2329, 2328, -1000, -1000, -1000, -1000, -1000, 1254, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1895, 8548, -1000, 2327, 2325, 2317, 2316, 2315, 2313,
	2312, 2308, 2298, 2293, 2292, 2291, 2281, 2265, 2071, 10181,
	2254, 1893, 1892, 2252, 2250, 2249, 1882, 2071, 2071, 2238,
	2235, 2234, 2231, 2230, 2228, 2227, 2224, 2220, 2219, 2210,
	2208, 2199, 2198, 2196, 2195, 2192, 2191, 2190, 2188, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1082, -1000, 2187, 2535, 2637, 2097, 2698, 2599,
	2594, 2589, 2587, 1665, -1000, -1000, -1000, -154, -1000, -1000,
	769, -1000, 710, -1000, 33875, 33875, 33875, 508, 508, 508,
	508, 508, 538, 508, 597, 586, 560, 508, -1000, -1000,
	-1000, -1000, -1000, -1000, 678, -1000, -1000, -1000, -1000, 1073,
	33875, -1000, 2120, 1306, 2641, 458, 454, 413, 1306, 294,
	-1000, 1450, 1450, 1450, 1450, 1306, 348, 435, 2637, 2637,
	-28, 1450, -24, 1306, 1306, -24, 1306, 1306, 1306, 175,
	-301, -1000, -1000, -1000, 1450, 1450, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2625, 2611, 514, 33875, 119, 33875, 514,
	514, 518, -84, 34951, 34413, 1548, 418, 417, 1116, 1359,
	-1000, 1357, 33875, 33875, 1357, 1357, 17727, 17189, -1000, 33875,
	-1000, 2637, 2097, -1000, 2029, 2222, 2028, 2097, 514, 514,
	514, 514, 514, 132, 514, 514, 514, 33875, 33875, 31185,
	514, 6386, 6386, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 9635, 1682, 1670, 146, -76, -306, 182, -1000,
	-1000, 33875, 2518, 130, -1000, -1000, -1000, 2074, -1000, 2119,
	2119, 2119, 2119, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2149, 2184, -1000, -1000, 2115, 2115, 2115, 2074,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2137, 2137, 2142, 2142, 2137,
	33875, 7472, 33875, 2552, 303, 2179, -1000, 33875, 285, 2637,
	2535, 2637, -1000, -1000, 1243, 1663, 1881, -1000, -1000, 309,
	1270, -1000, 778, -1000, -1000, -1000, -1000, 33875, -107, 295,
	-1000, -1000, 1868, 2178, -1000, 457, 1029, 1182, -1000, 124,
	36704, 26873, 1548, 26873, 33875, -1000, -1000, -1000, -1000, -1000,
	-1000, -11, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 207, -1000, 7472, 7472, 7472,
	7472, 7472, -1000, 593, 8010, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 9086, 9086, 9086, 9086, 9086, 9086, 9086, 9086,
	9086, 9086, 9086, 9086, 2170, 1466, 9086, 9086, 9086, 9086,
	2222, 2507, 1087, 219, -1000, -1000, -1000, -1000, -1000, 1405,
	1768, 7472, 7472, 33875, -1000, 35876, 7472, 7472, 118, 7472,
	2582, 7472, 7472, 7472, 2027, 3370, 33875, 7472, -1000, 2026,
	2024, -1000, -1000, 1563, 7472, -1000, -1000, 7472, -1000, -1000,
	7472, 9086, 7472, -1000, -1000, -1000, 2237, 2582, 2582, 7472,
	7472, 2582, 2582, 2582, 1386, 2582, 2582, 2582, 2582, 2582,
	2582, 2582, 2582, 2002, 2001, 1983, 2637, -257, 5848, -1000,
	-265, 2535, 7472, -1000, -1000, 7472, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1874, -74, 734, 716, 722, -1000,
	2576, -1000, 2177, 2176, 1239, 33875, 1431, 33875, 26873, 33875,
	1548, 33875, 33875, 508, 508, 508, 33875, 518, -1000, 33875,
	1073, 2575, 33875, 2717, 9086, 9086, 30647, 1450, 1306, 1306,
	-1000, -1000, 33875, -1000, -1000, -1000, 1450, 33875, 1450, 1450,
	2717, 1450, -1000, -1000, -1000, 1306, 1306, -1000, -1000, -1000,
	-1000, 1450, 1450, -1000, -1000, 2717, 33875, -16, 2717, 2717,
	-23, -1000, -1000, -1000, 33875, 33875, 508, 33875, -1000, 33875,
	33875, -1000, -1000, 33875, 36059, 33875, 30109, 2610, -1000, 26873,
	33875, 24721, -1000, 995, -1000, -70, -1000, -81, -84, 1357,
	-84, 1357, -1000, 451, 446, 16113, 397, 26873, 4233, -1000,
	-1000, 1357, 1357, 4233, 4233, 1177, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1071, -1000, 141, 2535, -1000, -1000, -1000,
	-1000, -1000, 33875, 33875, 26873, 1548, 33875, 514, 33875, 33875,
	33875, -1000, 2174, -1000, 2556, 33875, 1066, -1000, -1000, 12882,
	1237, 1066, -1000, 1410, -1000, 7472, 9635, -283, 7472, 9635,
	9635, 7472, 9635, -1000, 7472, 122, -1000, -1000, -1000, -1000,
	1662, -1000, 1658, -1000, -1000, -1000, 1873, 1873, -1000, 1656,
	-1000, -1000, -1000, -1000, 1655, -1000, -1000, 1652, -1000, -1000,
	-1000, 1981, 798, -1000, 1871, 2400, -259, -1000, 15036, 33875,
	33875, -1000, -1000, -259, -1000, 14497, 33875, 2535, -1000, 2535,
	33875, -1000, 2640, -1000, 309, 257, -1000, -1000, -1000, -1000,
	-1000, -1000, 1225, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1063, -1000, 33875, -1000, -1000, 124, 26873, 27949,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 167, -1000, -1000,
	171, -1000, 547, 100, 1269, -1000, -1000, 113, 164, 613,
	1768, -1000, 1468, 1468, 1438, -1000, 536, -1000, -1000, -1000,
	-1000, 2171, -1000, -1000, -1000, 1373, 1794, -1000, 1424, 1424,
	1189, 1189, 1189, 1189, 1189, 1393, 1393, -1000, -1000, -1000,
	4772, 2170, 9086, 9086, 9086, 9086, 490, 490, 2720, 3016,
	-1000, 7472, 1389, -1000, 7472, 1505, 1080, 1219, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1976, 1969,
	1799, 2736, 1963, 7472, -1000, -1000, 1262, 1260, 1259, -1000,
	1779, 6934, -1000, -1000, -1000, 1961, 1217, 1958, -1000, -1000,
	-1000, 1955, 1258, 1038, 1953, 1418, 1952, 1045, 7472, 7472,
	1257, 1252, 7472, 7472, 7472, 7472, 1951, 7472, 7472, 7472,
	7472, 7472, 7472, 7472, 7472, 13, 13, 13, -1000, -1000,
	1246, -1000, 1768, -1000, 1864, -1000, 933, 1017, -1000, 1709,
	-1000, -1000, -1000, -1000, 725, 694, 738, 33875, 946, 11268,
	33875, 2120, 2553, 120, -1000, 905, -1000, 100, -120, 817,
	2378, 2733, 33875, 33875, 33875, 2574, 29571, -1000, 2167, 1244,
	-1000, -1000, 7472, -1000, -1000, 2376, 33875, 33875, 2717, 2717,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 33875, 2717, 2717,
	1306, 1450, -1000, -1000, 1450, -1000, -1000, 1450, -1000, 1215,
	-1000, 33875, -1000, -1000, -1000, 2120, 1006, -1000, 11806, 13958,
	409, -1000, 532, 1319, 735, 524, 2492, 162, -1000, 1319,
	1319, 1319, 1319, 1319, 1319, 1319, 381, 379, 1319, 1319,
	1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 1319, 765,
	1319, 1319, 1319, 1319, 1319, -1000, 1319, 2166, -1000, -1000,
	-1000, -1000, -1000, 393, 117, 2605, 202, 192, 905, 215,
	2635, 1019, -1000, -1000, -1000, -1000, 19879, 19879, 15575, 19879,
	-1000, 1274, -84, -94, -1000, -1000, 995, 4233, 995, 4233,
	-1000, -1000, 522, -1000, -1000, 817, -1000, 33875, 33875, -1000,
	-1000, 2161, 1375, -1000, -1000, 10181, -1000, 4233, 4233, -1000,
	-1000, 20417, 33875, -1000, -114, -1000, -93, 2639, 910, -1000,
	-1000, 977, 817, 2394, 33875, 910, -1000, -1000, 11268, 33875,
	-1000, 2717, 6386, -1000, 24721, -1000, -1000, 29025, -1000, 28487,
	2717, 1387, -1000, 9635, 1588, 148, -1000, 176, -315, 145,
	1511, 144, 1768, -1000, -1000, 1950, 1947, 1240, -1000, 1235,
	1943, 1222, 1212, -1000, -32, -1000, 2525, 819, -1000, 2151,
	-1000, 1205, 2460, -1000, 900, -1000, 1374, 1203, -1000, 819,
	1202, 2457, 900, 2639, -1000, 1188, 64, -1000, -1000, 33875,
	1868, 1184, 27949, 873, -1000, 520, 1155, 1151, -1000, 26873,
	161, 26873, -1000, 26873, -1000, -1000, 297, -1000, 33875, 2528,
	-1000, -1000, -1000, 1777, -330, -1000, -1000, -1000, -1000, -1000,
	1179, -1000, 490, 490, 2720, 2938, -1000, 9086, -1000, 9086,
	2427, 1384, -1000, 7472, 1578, 3781, 869, 18803, 33875, -1000,
	-1000, 7472, 7472, -1000, 2416, -1000, -1000, -1000, -1000, 7472,
	7472, 1692, -1000, 33875, -1000, -1000, -1000, -1000, 18803, -1000,
	9086, -1000, 7472, 1016, 2399, 13, 13, 2377, 2369, 2337,
	1173, 13, 2310, 2295, 2279, 2263, 2259, 2232, 2221, 2217,
	-1000, 2150, -1000, -1000, 5848, -1000, -32, 7472, 7472, 7472,
	2475, -1000, -1000, -1000, -1000, -1000, 682, 142, 1942, 891,
	-1000, -1000, 33875, -1000, -1000, -1000, 1940, 885, -1000, -1000,
	-1000, 4048, 2119, 2119, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2149, -1000, -1000, 2115, 2115, 2115, 2074,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2137,
	2137, 2142, 2142, 2137, -1000, 2569, -1000, 18, 1319, 442,
	26873, 410, -1000, 33875, 2386, 361, 2499, 33875, 2133, 2129,
	2125, 254, 4048, 33875, 984, -1000, 1149, 36044, -1000, 33875,
	1768, -1000, 1548, -1000, 1306, -1000, -1000, 2717, 1186, -1000,
	-1000, 2717, 1306, 1306, 1450, 33875, -1000, 2563, 36059, -1000,
	2486, 33875, -1000, -1000, 4048, 658, -1000, 690, 508, 33875,
	1496, 690, 1492, 2124, -1000, -1000, -1000, 33875, 33875, -1000,
	33875, 1485, 1478, -1000, 33875, 33875, 33875, 33875, 2488, -1000,
	1319, 1319, 663, -1000, -1000, 1650, 1647, 1646, 1636, 1862,
	1860, 1852, 1319, 1319, 1635, 1834, 27411, 1833, 855, 1633,
	1632, 1627, 1596, 1824, 656, -1000, 1823, 1594, 1575, 1574,
	33875, 2121, 1733, -1000, -1000, 18, 1319, 185, 33875, 1370,
	442, 1570, 16651, 33875, 24721, 24721, 24721, 24721, -1000, 2444,
	2443, -1000, 2424, 2423, 2432, 33875, 24721, 2120, -1000, 27411,
	-1000, -1000, -1000, 2222, 1163, 2679, 684, 7472, -1000, -1000,
	-90, -86, -1000, -1000, -1000, 26873, 1816, 397, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2757, 33875, 33875, 448,
	1936, -1000, 2715, -1000, 875, -1000, -1000, 1145, -1000, 2715,
	1414, -309, 9635, 1390, 1339, -1000, 7472, 9635, 7472, -289,
	184, -291, -1000, -1000, -1000, 1814, -1000, -1000, -1000, 1625,
	-1000, 1623, 31, 58, 1476, -259, 5848, 293, 33875, -259,
	33875, 5848, -1000, 33875, 289, -259, -1000, 33875, 1620, -1000,
	-1000, -1000, 2728, 26873, 1548, 1247, 26335, -1000, 150, -1000,
	158, 460, 1812, -1000, 559, 103, -1000, 1361, 1777, -1000,
	-1000, -1000, 9086, -1000, -1000, -1000, -1000, 1768, 7472, 1929,
	-1000, 696, 696, 1923, -1000, 2119, 2119, -1000, 2074, 2115,
	2074, 696, 696, 1921, -1000, 1775, 2138, -1000, 2038, 2031,
	7472, -1000, 1919, 2633, 1095, -140, 13, -1000, -1000, -1000,
	13, 13, 13, 13, -1000, 13, 13, 13, 13, 13,
	13, 13, 13, 483, -1000, 31, 1768, 1768, -1000, -1000,
	2526, -1000, 1810, 1809, 946, 4048, 595, 11268, 2514, 308,
	1614, -1000, -1000, -1000, 25797, 419, -1000, -1000, -1000, 489,
	238, 1616, 421, -1000, 33875, 215, 33875, -1000, -1000, -1000,
	-1000, -1000, 2499, -1000, 662, 236, 12344, 12344, 12344, 247,
	1404, -1000, 481, 883, 1138, 24721, 33875, -1000, 24183, 1918,
	-1000, 817, 2717, -1000, 33875, -1000, 2717, 2717, 1306, -1000,
	308, -1000, -1000, -1000, 33875, 2486, 2874, -1000, 33875, -1000,
	33875, -1000, 33875, 33875, 508, 7472, -1000, -1000, -1000, 33875,
	-1000, 239, 534, 534, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 18803, 18803, 2598, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1804, 1803, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 33875, 1161, -1000, 1353, 1614, 25797, 1341, 1357,
	1792, 419, -1000, 1790, -1000, 820, 33875, 33875, -1000, 928,
	-1000, 1340, 2362, 2385, 2362, -1000, -1000, -1000, -1000, 2426,
	-1000, 2425, -1000, -1000, 928, -1000, -1000, -1000, -1000, -1000,
	684, -1000, 2638, 690, 690, 690, 1915, -1000, -1000, -1000,
	873, 1914, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2704, 2691, 25259, 2704, -1000, -309, 1376, -1000, 1568,
	143, 1465, 33875, -1000, -1000, -1000, 1912, 1910, -267, 51,
	2690, 2689, 2756, -1000, 1908, 858, -259, -1000, -1000, 819,
	-1000, -1000, -1000, -259, -1000, 819, -1000, -1000, 1548, -1000,
	157, -1000, -1000, -1000, -1000, -1000, -1000, 82, -1000, 33875,
	-1000, 1777, 1759, 97, -1000, 1768, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 7472, -1000, -1000, -1000, 1962, -1000, -1000, 7472, 1907,
	1754, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2700, -1000, 2688, -267, -1000, -1000,
	-1000, -1000, -1000, -1000, 4048, -1000, 971, -1000, -1000, 1753,
	99, -1000, -1000, -1000, 1751, 1750, 1613, -1000, -1000, 1557,
	1132, 110, -1000, -1000, -1000, -1000, -1000, -1000, 1570, 2112,
	-1000, 1319, 1319, 1319, 33875, 1904, 824, -1000, -1000, -1000,
	-1000, 1773, 1714, 459, 1349, 1337, -1000, 1610, 19879, 24721,
	24183, 912, -1000, 1127, -1000, -1000, -1000, 2717, -1000, -1000,
	2717, -1000, -1000, -1000, -1000, 2874, -1000, -1000, 1503, 9086,
	-1000, -1000, 1748, 19341, 633, 1338, 1324, 664, 2111, -1000,
	341, 2743, -1000, -1000, -1000, 660, 1464, 1444, -1000, 33875,
	-1000, 2108, -1000, 2107, 2375, 271, 2103, 2100, 33875, 1948,
	-1000, -1000, -1000, -1000, -1000, -1000, 327, -1000, 1167, -1000,
	18803, -1000, -1000, 1160, -1000, 1733, 1731, -1000, 99, 1725,
	4233, -1000, -1000, -1000, 33875, 820, 820, 2700, 33875, 5848,
	-1000, -1000, 7472, 2099, -1000, 7472, -1000, -1000, -1000, -1000,
	-1000, 2096, 2502, -1000, -1000, -1000, -1000, -1000, -1000, 7472,
	7472, -1000, -1000, 505, 9635, -292, 183, -1000, -1000, -1000,
	-269, 1723, -1000, -1000, 2684, 1722, 1678, 33875, -1000, 819,
	819, 817, -1000, -1000, -23, -1000, -1000, -1000, 1858, -1000,
	1836, 13, -1000, 129, 7472, -269, -190, -1000, -1000, -1000,
	-1000, 278, -1000, -1000, 211, -1000, -1000, 1554, 447, -1000,
	-1000, 23107, 18803, 19341, 1718, -1000, 36441, 12344, 207, 36441,
	780, 1330, -1000, 1607, -1000, 1606, -1000, 2717, 912, 1127,
	-1000, -1000, 1191, -1000, -1000, -1000, -1000, 2720, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1716, 1696, -1000, -1000,
	-1000, -1000, -1000, 1597, 2086, -129, 2592, -1000, -1000, 2079,
	23107, 23107, 513, 513, 23107, 23107, 2076, 534, -1000, 1319,
	1164, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2637, -1000,
	-1000, 1768, 33875, 1768, 23645, -1000, 2682, 2668, 1768, 798,
	-1000, -309, 33875, 33875, -271, 1584, -1000, 1695, 42, -1000,
	-1000, 813, -277, 22, 29, -1000, -1000, -1000, 1697, -1000,
	779, -1000, -1000, -1000, 798, -271, 33875, 437, 1694, -1000,
	-1000, 209, -1000, -1000, 1152, -1000, 2074, 7472, -1000, -1000,
	-1000, 479, 36292, -1000, 735, -1000, -1000, -23, 479, 411,
	235, -1000, 1565, -1000, -1000, 2700, -1000, -1000, -1000, 1687,
	7472, 2071, 1319, -174, 23107, 1131, 1125, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1090, 1089, 23107, -1000, -1000, 18803,
	1319, -1000, 1081, 1072, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2070, -1000, -1000, 2667, -1000, 1683, 516, 33, 29,
	-1000, 2664, 41, 2663, 2654, -1000, -1000, 557, -263, 11,
	10, 9, -1000, -1000, -1000, 7472, -1000, 2562, -1000, -1000,
	81, -1000, -1000, -1000, 23107, 2550, 1807, 274, 2652, 36441,
	-1000, 1319, -1000, 274, -1000, 252, -1000, 1326, -1000, 1560,
	-1000, 2637, -1000, 1763, -1000, 33875, 2384, -1000, 131, 1055,
	2374, 2373, 2371, 2368, 1039, -1000, 18803, -1000, -1000, 22569,
	33875, 1678, -1000, 2060, 1556, 51, 35, 2651, -1000, 1678,
	2650, 1678, 1678, 1435, -1000, 7, 5, 3, -1000, -1000,
	-1000, -1000, 1681, -1000, 233, -1000, -1000, 2550, -1000, 2649,
	330, -1000, 18803, -1000, -1000, -1000, 1546, -1000, -1000, 534,
	-1000, -1000, 2383, 2282, 2721, -1000, -1000, -1000, -1000, 233,
	513, 233, 513, 233, 513, 233, 513, 147, -1000, -1000,
	-1000, 1033, -1000, -1000, 2581, 18265, 20, -1000, -1000, -1000,
	1679, -1000, 1678, -1000, -1000, 557, -1000, -1000, -1000, -1000,
	-1000, 1319, 1676, 230, -1000, -1000, -1000, 22031, 286, 334,
	328, -1000, 452, -1000, -1000, -1000, -1000, -1000, 2741, -1000,
	2739, 606, 606, -1000, -1000, -1000, -1000, -1000, -1000, 33875,
	-1000, 33875, -1000, 1031, -1000, -1000, -1000, 1118, -1000, -1000,
	-1000, -1000, -1000, 1543, -1000, 33875, -1000, 33875, 281, 1537,
	9086, 2059, 9086, 2054, 287, 2046, -1000, -1000, -1000, 1581,
	354, -1000, 233, 233, 233, 233, -1000, 795, -1000, 1312,
	-1000, 21493, 33875, -1000, -1000, 1005, 2043, 2646, -1000, 2519,
	33875, 2418, 33875, 2041, 1277, 9086, -1000, -1000, -1000, 33875,
	5310, -1000, 947, -1000, -1000, 463, 288, -1000, 1001, -1000,
	990, 20955, 1533, 1691, -1000, -1000, 1768, 33875, 973, -1000,
	33875, 277, -1000, -1000, -1000, 967, -1000, -1000, -1000, -1000,
	463, 2453, -1000, 1531, -1000, -1000, 36224, 581, -1000, -1000,
	36224, 279, -1000, 440, 1993, -1000, -1000, 911, -1000, 33875,
	654, 7472, -1000, 279, 36441, -1000, 7472, 909, -1000, 36441,
	862, -1000, -1000,
}

var yyPgo = [...]int{
	0, 147, 2771, 224, 145, 3268, 71, 229, 204, 202,
	228, 3267, 3266, 2508, 2506, 3265, 3264, 3263, 3262, 3261,
	3260, 3259, 3258, 3257, 3256, 3255, 3254, 3253, 3252, 3251,
	3250, 3247, 3246, 3245, 3244, 3243, 3241, 3240, 3238, 225,
	3236, 3234, 3233, 3232, 3231, 3229, 3227, 3226, 3225, 3224,
	3223, 3222, 3221, 3220, 3219, 3218, 3217, 3213, 3212, 3211,
	3210, 3209, 3208, 3207, 3206, 3205, 3203, 3202, 3201, 3200,
	198, 3199, 2486, 3198, 3196, 3194, 3192, 3189, 3188, 3186,
	217, 3185, 3184, 3181, 3180, 3177, 3176, 3175, 3174, 3173,
	3172, 3171, 215, 3170, 3169, 3168, 3167, 3166, 3165, 206,
	3164, 143, 172, 3163, 3162, 3161, 3160, 3158, 210, 233,
	54, 3157, 42, 3156, 200, 3138, 118, 3137, 114, 3136,
	3134, 3133, 3132, 3131, 3128, 3127, 3126, 3125, 3124, 3123,
	3122, 72, 3121, 104, 127, 170, 235, 2150, 239, 231,
	150, 148, 76, 3120, 2523, 3117, 158, 212, 131, 27,
	3114, 152, 3113, 125, 36, 37, 234, 117, 44, 133,
	103, 3112, 197, 87, 88, 3106, 3104, 168, 230, 167,
	3100, 105, 3096, 3095, 3094, 3092, 185, 169, 3091, 3089,
	100, 3087, 3086, 111, 3085, 53, 180, 137, 177, 3082,
	109, 97, 94, 142, 3081, 3078, 75, 3077, 3074, 3059,
	3057, 153, 3055, 3054, 115, 69, 3049, 3048, 3047, 52,
	3045, 26, 3044, 55, 3042, 3037, 3032, 3029, 3028, 3027,
	3026, 60, 3025, 3024, 20, 21, 25, 3021, 23, 3017,
	141, 3016, 3014, 3013, 96, 3011, 2, 3010, 207, 101,
	83, 121, 3009, 383, 3008, 3007, 3005, 129, 3004, 414,
	3003, 2999, 2997, 2995, 2994, 77, 2986, 203, 43, 2985,
	80, 112, 41, 191, 182, 2984, 2983, 2982, 538, 78,
	34, 0, 2976, 126, 2973, 2972, 2968, 227, 2967, 219,
	181, 138, 156, 242, 211, 2966, 2963, 67, 2956, 136,
	74, 46, 120, 17, 15, 186, 2955, 411, 161, 2954,
	194, 2952, 134, 1, 122, 2950, 2946, 40, 238, 2942,
	2941, 2940, 102, 2939, 2933, 95, 73, 2932, 2931, 2930,
	35, 2927, 31, 13, 2926, 81, 2924, 232, 2922, 201,
	107, 157, 149, 124, 205, 216, 65, 62, 2921, 1414,
	123, 86, 24, 2920, 208, 2919, 154, 92, 2918, 64,
	2917, 222, 343, 195, 2916, 166, 8, 38, 29, 2915,
	9, 2913, 218, 226, 2912, 2911, 19, 45, 2910, 18,
	2909, 2908, 2907, 2904, 5, 2902, 2900, 2897, 4, 7,
	2895, 3, 192, 2894, 2891, 2890, 2887, 59, 130, 2886,
	119, 163, 155, 2885, 79, 2884, 2883, 2882, 589, 2881,
	241, 2880, 2879, 2878, 2872, 2869, 2868, 2865, 2864, 2862,
	84, 47, 2861, 2860, 2859, 2858, 63, 116, 2857, 2840,
	2839, 2838, 33, 162, 2837, 16, 2836, 30, 28, 32,
	2834, 106, 2832, 12, 164, 2831, 2829, 14, 2828, 2827,
	10, 11, 2826, 2825, 99, 2823, 70, 22, 140, 89,
	2821, 2819, 66, 199, 113, 2818, 2817, 223, 214, 188,
	2815, 135, 220, 236, 2814, 196, 2811, 2809, 2807, 2805,
	2804, 2803, 935, 2801, 2799, 221, 49, 82, 90, 2798,
	2795, 2794, 68, 132, 93, 91, 183, 2793, 175, 2792,
	2791, 85, 2789, 2788, 2786, 2785, 2784, 171, 2783, 2782,
	173, 209, 2781, 2780, 2778, 2774, 213, 139, 2773,
}

//line mysql_sql.y:9846
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColposUnion() *tree.AlterColPos {
	v, _ := st.union.(*tree.AlterColPos)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 496, 504, 504, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 106, 494, 494, 494, 495, 495, 103, 123,
	122, 125, 125, 124, 124, 121, 121, 117, 120, 120,
	119, 119, 118, 113, 115, 115, 114, 116, 116, 104,
	92, 105, 443, 443, 442, 442, 441, 441, 395, 395,
	440, 440, 440, 439, 439, 439, 438, 438, 437, 437,
	436, 436, 434, 434, 435, 433, 432, 432, 432, 430,
	430, 430, 426, 426, 428, 427, 427, 429, 421, 421,
	424, 424, 422, 422, 422, 422, 425, 420, 420, 420,
	419, 419, 91, 91, 91, 341, 341, 90, 90, 355,
	355, 355, 355, 355, 353, 353, 353, 353, 353, 353,
	352, 352, 351, 351, 356, 356, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 81, 81, 81, 81,
	81, 86, 86, 86, 501, 501, 500, 500, 502, 502,
	502, 502, 503, 503, 84, 84, 84, 85, 350, 350,
	350, 82, 83, 83, 340, 340, 345, 345, 344, 344,
	344, 344, 344, 344, 344, 344, 344, 344, 344, 344,
	344, 349, 349, 349, 347, 347, 346, 346, 348, 348,
	75, 75, 75, 78, 77, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 76, 76, 76, 76, 76, 76,
	71, 71, 71, 71, 71, 70, 70, 72, 72, 337,
	337, 336, 87, 87, 88, 498, 498, 497, 499, 499,
	499, 499, 89, 95, 95, 95, 95, 95, 95, 95,
	94, 94, 97, 97, 96, 98, 80, 80, 80, 80,
	80, 80, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 468, 468, 468, 470, 470, 275, 276, 505, 278,
	274, 274, 274, 464, 464, 465, 466, 467, 467, 467,
	93, 11, 11, 11, 11, 11, 11, 69, 74, 229,
	229, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 216, 216, 216, 216, 217,
	217, 218, 218, 234, 234, 234, 233, 231, 231, 231,
	231, 231, 231, 232, 232, 232, 235, 235, 67, 73,
	73, 73, 481, 481, 68, 488, 488, 398, 398, 289,
	289, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 403, 404, 285,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 46, 45,
	45, 45, 326, 326, 44, 506, 506, 264, 264, 56,
	55, 48, 57, 58, 59, 60, 61, 62, 43, 54,
	54, 54, 54, 54, 54, 54, 54, 65, 65, 415,
	415, 508, 508, 508, 63, 64, 397, 397, 397, 53,
	52, 51, 50, 49, 49, 42, 42, 41, 41, 47,
	129, 130, 282, 282, 282, 284, 284, 280, 507, 507,
	369, 369, 283, 283, 40, 40, 40, 40, 66, 281,
	281, 263, 279, 279, 279, 12, 12, 10, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	23, 24, 26, 334, 334, 331, 25, 18, 17, 20,
	16, 16, 19, 21, 22, 22, 9, 9, 9, 9,
	13, 13, 14, 141, 141, 191, 191, 476, 476, 472,
	472, 473, 473, 473, 474, 474, 475, 475, 99, 409,
	409, 409, 409, 409, 409, 8, 163, 163, 408, 408,
	408, 408, 408, 408, 338, 338, 453, 453, 453, 454,
	162, 162, 157, 157, 410, 410, 304, 455, 455, 418,
	418, 417, 417, 416, 416, 160, 160, 161, 161, 144,
	144, 109, 109, 423, 423, 423, 423, 431, 431, 394,
	394, 221, 221, 258, 258, 259, 259, 134, 134, 135,
	135, 135, 135, 135, 135, 461, 461, 463, 463, 462,
	159, 159, 155, 155, 156, 156, 156, 154, 154, 153,
	152, 152, 151, 149, 149, 149, 150, 150, 150, 167,
	167, 137, 137, 137, 136, 136, 136, 136, 136, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 138, 138, 469, 469, 469, 399, 399, 399, 406,
	406, 240, 240, 241, 241, 239, 239, 139, 139, 140,
	140, 140, 140, 238, 238, 237, 142, 142, 148, 147,
	147, 143, 143, 143, 143, 248, 248, 247, 247, 247,
	247, 102, 107, 107, 108, 166, 166, 246, 245, 245,
	245, 165, 165, 164, 164, 158, 158, 146, 146, 146,
	146, 244, 145, 242, 493, 493, 492, 492, 491, 489,
	489, 489, 490, 490, 490, 490, 445, 445, 445, 445,
	445, 269, 269, 269, 273, 273, 272, 272, 272, 272,
	272, 277, 7, 7, 7, 7, 7, 30, 30, 30,
	30, 30, 30, 30, 30, 36, 175, 176, 37, 177,
	177, 178, 178, 179, 179, 180, 181, 182, 182, 182,
	182, 35, 168, 168, 169, 169, 170, 170, 171, 172,
	172, 172, 174, 173, 34, 27, 477, 480, 478, 478,
	482, 482, 482, 483, 483, 483, 483, 484, 484, 28,
	126, 131, 131, 128, 133, 133, 133, 133, 133, 127,
	479, 485, 485, 485, 335, 335, 332, 333, 333, 330,
	329, 329, 329, 487, 487, 486, 486, 486, 270, 270,
	29, 325, 325, 327, 328, 328, 328, 319, 319, 319,
	319, 33, 323, 323, 324, 324, 324, 324, 324, 320,
	320, 322, 322, 318, 318, 318, 318, 318, 32, 132,
	132, 317, 317, 315, 315, 313, 313, 314, 314, 312,
	312, 312, 316, 316, 31, 31, 31, 111, 110, 110,
	110, 261, 261, 260, 260, 112, 38, 203, 203, 383,
	383, 383, 383, 383, 401, 401, 401, 384, 384, 384,
	385, 385, 385, 386, 386, 386, 386, 386, 400, 400,
	402, 402, 402, 357, 357, 358, 358, 358, 361, 361,
	375, 375, 376, 376, 374, 374, 381, 381, 380, 380,
	379, 379, 378, 378, 377, 377, 377, 377, 372, 372,
	371, 371, 359, 359, 359, 359, 359, 360, 360, 360,
	370, 370, 373, 373, 209, 209, 210, 210, 210, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 451, 451, 452, 212, 212, 219,
	219, 219, 219, 219, 219, 211, 211, 213, 213, 192,
	192, 190, 190, 183, 183, 184, 184, 185, 185, 185,
	189, 189, 188, 188, 188, 188, 186, 186, 187, 187,
	187, 187, 187, 187, 343, 343, 448, 448, 449, 449,
	444, 444, 444, 447, 447, 447, 447, 447, 450, 450,
	450, 446, 446, 193, 256, 256, 256, 271, 271, 271,
	271, 255, 255, 255, 208, 208, 207, 207, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 342, 342,
	286, 286, 287, 287, 228, 227, 227, 227, 227, 227,
	225, 226, 224, 224, 224, 224, 224, 223, 223, 222,
	222, 222, 321, 321, 220, 220, 215, 215, 215, 214,
	214, 214, 382, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 254, 254, 254,
	296, 296, 301, 301, 460, 460, 459, 194, 194, 194,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 204,
	204, 204, 366, 366, 366, 366, 367, 367, 367, 367,
	368, 368, 368, 364, 364, 365, 365, 305, 306, 306,
	407, 407, 362, 362, 363, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 414, 414, 414, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 471, 471, 471, 456, 456, 456, 457, 457, 457,
	457, 457, 457, 457, 457, 457, 457, 457, 457, 458,
	458, 458, 458, 458, 458, 458, 458, 458, 458, 458,
	458, 458, 458, 458, 458, 458, 252, 252, 252, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 307, 307, 308, 308, 411, 411,
	411, 411, 411, 411, 412, 412, 413, 413, 413, 413,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 294,
	249, 249, 249, 309, 302, 302, 303, 303, 297, 297,
	297, 297, 297, 297, 297, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 298, 298, 300,
	300, 311, 311, 311, 310, 310, 310, 310, 310, 310,
	310, 206, 206, 206, 206, 291, 291, 291, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 196,
	196, 196, 196, 200, 200, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 201,
	201, 201, 201, 201, 199, 199, 199, 199, 199, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 100, 101, 101, 198, 257,
	257, 387, 387, 390, 390, 388, 388, 389, 391, 391,
	391, 392, 392, 392, 393, 393, 393, 396, 396, 262,
	262, 262, 268, 268, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 1, 3, 3, 1, 2, 2,
	2, 1, 2, 2, 3, 4, 4, 6, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 7, 4, 1,
	3, 2, 2, 2, 1, 3, 3, 4, 3, 7,
	5, 8, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 2, 1, 2, 2, 1,
	2, 3, 2, 3, 3, 3, 1, 1, 7, 7,
	8, 8, 0, 4, 7, 0, 3, 0, 2, 0,
	1, 1, 1, 1, 4, 2, 2, 3, 3, 4,
	5, 3, 4, 4, 2, 2, 2, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 2,
	5, 5, 0, 2, 7, 0, 1, 0, 1, 5,
	5, 3, 3, 2, 4, 4, 4, 4, 4, 1,
	1, 1, 3, 3, 1, 1, 1, 6, 8, 0,
	1, 1, 1, 1, 5, 5, 0, 1, 1, 3,
	3, 3, 4, 6, 7, 4, 4, 7, 8, 3,
	3, 3, 0, 2, 2, 0, 2, 2, 1, 1,
	1, 1, 0, 1, 4, 4, 5, 4, 3, 1,
	3, 1, 1, 3, 5, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 4, 1, 3, 1, 4, 6, 6, 4,
	4, 4, 3, 6, 3, 5, 1, 1, 2, 2,
	11, 8, 9, 1, 3, 2, 4, 0, 2, 0,
	1, 1, 1, 1, 0, 1, 0, 1, 4, 2,
	1, 5, 4, 4, 2, 5, 1, 3, 2, 1,
	5, 4, 4, 2, 0, 5, 0, 1, 3, 3,
	1, 3, 1, 3, 1, 3, 4, 0, 1, 0,
	1, 1, 3, 1, 1, 0, 4, 1, 3, 2,
	1, 0, 8, 0, 4, 7, 4, 0, 2, 0,
	2, 0, 2, 0, 4, 1, 3, 1, 1, 5,
	3, 4, 6, 4, 5, 2, 3, 1, 3, 6,
	0, 3, 0, 1, 2, 4, 4, 0, 1, 3,
	1, 3, 3, 0, 1, 1, 0, 2, 2, 0,
	2, 3, 3, 3, 1, 3, 3, 3, 3, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 7, 7, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 2, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 4, 4, 3, 2, 2, 2, 3, 2,
	3, 4, 1, 3, 4, 0, 2, 1, 1, 2,
	2, 0, 1, 2, 4, 1, 3, 1, 3, 2,
	3, 1, 4, 3, 0, 1, 1, 2, 5, 2,
	2, 2, 0, 2, 3, 3, 0, 1, 3, 1,
	3, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 7, 1, 1, 7, 1,
	3, 0, 1, 1, 3, 1, 3, 0, 1, 1,
	1, 12, 1, 3, 0, 1, 1, 3, 1, 1,
	2, 4, 1, 1, 7, 7, 1, 4, 1, 1,
	3, 4, 3, 0, 1, 1, 1, 0, 2, 7,
	8, 0, 2, 6, 0, 2, 2, 3, 3, 4,
	1, 0, 2, 2, 1, 3, 2, 1, 3, 2,
	1, 3, 2, 0, 1, 3, 4, 3, 1, 1,
	4, 1, 3, 1, 1, 1, 1, 0, 1, 1,
	1, 11, 0, 2, 3, 2, 3, 1, 1, 1,
	3, 3, 4, 0, 2, 2, 2, 2, 6, 0,
	4, 1, 1, 0, 3, 0, 1, 1, 2, 4,
	4, 4, 0, 1, 11, 9, 11, 2, 2, 4,
	5, 1, 3, 0, 3, 5, 10, 0, 2, 0,
	3, 2, 4, 3, 0, 2, 1, 0, 2, 3,
	0, 2, 3, 0, 3, 2, 4, 3, 0, 1,
	0, 1, 1, 0, 6, 0, 3, 5, 0, 4,
	0, 3, 1, 3, 4, 5, 0, 3, 1, 3,
	2, 3, 1, 2, 0, 4, 6, 5, 0, 2,
	0, 2, 4, 5, 4, 5, 1, 5, 6, 5,
	0, 3, 0, 1, 0, 1, 1, 3, 2, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 5, 4, 1, 3, 3, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 1, 1,
	1, 1, 7, 9, 7, 9, 2, 1, 7, 9,
	7, 9, 8, 5, 0, 1, 0, 1, 1, 1,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 3, 1, 3, 5, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 2, 1, 2,
	2, 1, 1, 2, 2, 2, 3, 3, 2, 2,
	1, 5, 6, 4, 1, 1, 1, 5, 1, 2,
	0, 1, 1, 2, 5, 0, 1, 1, 2, 2,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 2,
	2, 2, 0, 3, 0, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 3,
	5, 2, 2, 2, 2, 1, 1, 2, 5, 6,
	6, 6, 1, 1, 1, 1, 1, 4, 4, 4,
	0, 2, 0, 1, 1, 2, 4, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 1, 1, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 2, 5, 0, 1, 3, 0, 1,
	0, 2, 0, 1, 6, 8, 6, 5, 5, 6,
	6, 6, 6, 5, 6, 6, 6, 6, 6, 6,
	6, 6, 1, 1, 1, 4, 4, 6, 8, 6,
	4, 5, 4, 4, 4, 3, 4, 6, 6, 7,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 8, 4,
	2, 3, 2, 4, 2, 2, 4, 6, 2, 2,
	4, 6, 4, 2, 0, 1, 2, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 1, 1, 3, 4, 3, 4, 3,
	4, 3, 4, 3, 4, 1, 3, 4, 4, 5,
	4, 5, 3, 4, 5, 6, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 1, 2, 3, 5, 1, 1,
	3, 0, 1, 0, 3, 0, 3, 3, 0, 3,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -496, -504, -2, -5, 566, -1, -4, -101, -75,
	-7, -103, -104, -8, -99, -9, -10, -12, -79, -94,
	-96, -98, -97, -39, -11, -93, -70, -71, -81, -87,
	-90, -91, -92, -105, -100, -102, -134, -106, 559, -76,
	-77, -78, -30, -29, -28, -27, -126, 565, 420, 12,
	469, -13, -14, -461, -15, 243, -274, -275, -276, -278,
	-505, -40, -41, -42, -49, -50, -51, -52, -53, -63,
	-64, -65, -43, -44, -45, -48, -46, -56, -55, -57,
	-58, -59, -60, -61, -62, -47, -129, -130, -66, -68,
	-67, -73, -69, -74, -128, 218, -72, 67, -82, -83,
	-84, -85, -86, -88, -89, 348, 354, 409, 558, 52,
	-135, -137, 569, 146, 147, 149, 150, -31, -32, -33,
	-34, -35, -36, -38, -37, 214, 14, 502, -16, -19,
	-17, -20, -18, -25, -26, -24, -21, -23, -127, -22,
	238, 237, 37, 304, 305, 306, 352, 236, 215, 13,
	30, 41, 330, -136, 73, 216, -138, 10, 571, -6,
	-3, -2, -113, -117, -121, -124, -125, -122, -123, -4,
	-101, 104, 228, 560, -271, 344, 561, 563, 562, 76,
	84, -265, -267, 348, 354, 558, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 472, 545, 546, 547, 548, 328, 329, 499,
	255, 279, 379, 285, 292, 146, 165, 159, 187, 179,
	154, 259, 297, 260, 83, 149, 455, 94, 432, 406,
	152, 274, 276, 278, 281, 280, 282, 284, 261, 331,
	175, 170, 273, 257, 168, 262, 39, 263, 192, 264,
	265, 504, 428, 327, 434, 289, 404, 169, 429, 277,
	431, 194, 198, 446, 447, 163, 164, 436, 449, 191,
	235, 42, 501, 247, 450, 196, 190, 186, 458, 293,
	291, 189, 162, 185, 258, 56, 200, 199, 201, 400,
	401, 402, 403, 266, 267, 342, 445, 182, 171, 332,
	155, 22, 453, 242, 433, 355, 268, 286, 294, 195,
	197, 249, 254, 503, 408, 253, 290, 451, 167, 246,
	275, 241, 454, 156, 357, 269, 150, 283, 448, 457,
	55, 370, 161, 153, 232, 147, 251, 256, 11, 270,
	271, 272, 296, 295, 287, 183, 248, 188, 173, 160,
	184, 148, 250, 456, 371, 556, 330, 389, 181, 178,
	252, 225, 452, 435, 151, 393, 372, 176, 298, 552,
	553, 554, 343, 326, 299, 300, 174, 239, 426, 427,
	301, 303, 399, 319, 373, 407, 380, 374, 207, 307,
	438, 440, 193, 555, 308, 309, 310, 430, 311, 312,
	313, 314, 347, -348, -346, -271, 558, 354, 348, 330,
	-177, -271, 570, -144, 38, -190, -271, -144, -72, -14,
	-13, -136, -137, -190, 222, -279, 23, 404, -80, 405,
	218, 73, -271, -9, -92, -8, -99, -70, -134, 409,
	-277, -271, 304, 304, -277, 222, -271, 253, 387, -398,
	228, -352, -325, 254, -351, -327, -354, -328, 31, 214,
	216, 215, 250, 14, 352, 224, 12, 10, 353, 236,
	24, 25, 27, 13, 354, 356, 28, 357, 360, 361,
	362, 41, 365, 366, 243, 76, 84, 79, 261, -176,
	-271, -303, -297, 101, 244, -299, -292, -293, -295, -440,
	-434, -290, 73, 128, 129, 136, 102, -294, -382, 35,
	104, 509, 470, -250, -251, -252, -253, -254, -271, -435,
	-433, 79, 85, 88, 91, 92, 90, 89, 172, 87,
	80, 140, 141, -137, 76, -456, 517, -266, 538, 545,
	546, 547, 548, 537, 52, -405, -413, 221, -411, 139,
	177, 239, 173, 12, 134, 399, 174, 514, 534, 472,
	518, 541, 511, 512, 506, 507, 508, 510, 519, 521,
	533, -414, 529, 539, 540, 527, 542, 543, 544, 78,
	77, 532, 531, 520, 515, 516, 522, 505, 513, 523,
	524, 530, 535, 536, 336, 94, 337, 338, 462, 331,
	339, 228, 404, 61, 340, 341, 342, 343, 344, 469,
	345, 62, 346, 335, 243, 389, 347, 176, 193, 474,
	473, 475, 466, 463, 461, 464, 465, 467, 468, 525,
	526, 528, -107, -108, 550, -153, -154, -243, 19, 6,
	7, 8, 9, -494, 406, 503, 151, 148, -339, 151,
	100, 156, 155, -339, 307, 249, 349, 225, 328, 389,
	311, 253, -319, -317, -400, 301, 297, 223, 233, 232,
	95, 462, 221, 363, -472, -473, 211, 212, 213, -463,
	495, -462, -271, 338, 26, 222, 349, 249, 440, 438,
	439, 441, 442, 443, 444, -54, -415, -397, 435, 434,
	-283, 427, 433, 425, 437, 428, 329, 313, 312, 214,
	567, 496, -262, 373, 407, 459, 460, 350, 408, 446,
	448, 429, 94, 180, 177, 225, 222, 328, 462, 389,
	311, -472, 148, 446, 448, 253, 387, 40, -345, 399,
	-344, -346, 447, 458, 77, 78, 445, -262, 94, 426,
	426, -154, -243, -153, -135, -137, -102, -461, 223, 328,
	389, 253, 224, 222, 225, 462, 221, 304, 349, 249,
	311, -399, -469, 31, -406, 208, 209, 210, 32, 33,
	-1, 108, 571, -297, -297, -6, 572, -6, -297, -271,
	-271, 143, -196, -200, -197, -199, -198, -202, -201, 177,
	178, 139, 181, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 30, 193, 239, 173, 174, 175, 176,
	194, 159, 179, 500, 202, 160, 203, 161, 204, 162,
	205, 163, 164, 206, 165, 168, 169, 170, 171, 167,
	142, 73, 142, 79, -160, 245, -190, 142, -160, -154,
	-153, -154, -190, -255, -271, 406, 111, -80, -80, 405,
	-464, -465, -466, -468, 218, 405, 404, 142, 261, 15,
	-277, -277, 71, -190, -327, 253, -352, -325, 35, 70,
	143, 226, 143, 70, 73, 350, 328, 389, 351, 462,
	222, 363, 225, 253, 364, 328, 389, 222, 225, 462,
	253, 328, 222, 225, 389, 253, 364, 425, 426, 225,
	26, 355, 358, 359, 426, -419, 458, 143, 100, 97,
	98, 99, -297, 118, -310, 111, 112, 113, 114, 115,
	116, 117, 125, 124, 135, 128, 129, 130, 131, 132,
	133, 134, 126, 127, 121, 101, 119, 123, 120, 103,
	-137, -297, -303, 52, -295, -295, -295, -295, -382, -301,
	-297, 73, 73, 142, 79, -297, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, -412, 73,
	73, -307, -308, 73, 73, -290, -255, 73, 79, 79,
	73, 73, 73, 79, -308, -308, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, -154, 143, 73, -109,
	38, -156, 21, -138, -137, 20, 31, 32, 31, 32,
	31, 32, 31, 32, 85, 451, 502, 154, 155, 156,
	-175, -271, -177, -168, -271, -315, 228, -315, -315, -315,
	-315, 224, -315, 222, 222, 222, -315, -474, 158, 143,
	-463, -159, 73, -282, 119, 123, 23, 251, 251, 251,
	-282, 291, -506, -507, 15, 121, -280, -507, -280, -280,
	-282, -508, 224, 436, 42, 252, 251, -155, -156, -155,
	430, 426, -369, 431, 432, -284, -507, -283, -282, -282,
	-283, -282, -282, -282, 222, 225, 462, 311, 568, -506,
	-506, 30, 30, -398, -190, -398, 496, -263, -271, -398,
	-398, -475, 227, -501, -500, 449, -503, 451, 148, -346,
	148, -346, -327, 253, 253, 143, 111, 23, -347, 111,
	122, -346, -346, -347, -347, -211, 40, -270, 139, -271,
	79, -211, 40, -498, -497, -190, -155, -138, -137, 74,
	74, 74, -398, -398, -398, -398, -398, -400, -398, -398,
	-398, -277, -168, -177, 228, -398, -139, -140, 130, -297,
	-271, -139, -3, -115, -114, 105, 106, 108, 561, 344,
	560, 564, 558, -346, 40, -393, 371, 370, -387, -389,
	73, -388, 73, -388, -388, -388, 73, 73, -390, 73,
	-390, -390, -387, -391, 73, -391, -392, 73, -392, -391,
	-271, -302, -303, -271, 38, -408, 52, -134, 73, 30,
	73, -271, -409, 52, -134, 73, 30, -155, -109, -156,
	142, 85, 79, -80, 74, 143, -467, 91, 92, -470,
	191, 183, -271, -95, 79, -7, -8, -9, -10, -39,
	-70, -134, -436, -434, 73, 31, 398, 70, 15, -353,
	222, 462, 349, 249, 225, 328, -351, -334, -331, -329,
	-270, -327, -330, -329, -356, -255, 426, -110, 410, 303,
	-297, -297, -297, -297, -297, 90, 101, 326, 91, 92,
	-292, -311, 31, 299, 300, -293, -293, -293, -293, -293,
	-293, -293, -293, -293, -293, -293, -293, -300, -309, -382,
	73, 121, 119, 123, 120, 103, -295, -295, -293, -293,
	74, 143, -460, -459, 105, -297, -297, -271, -457, -458,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 340, 335, 341, 339, 331, 347, 342, 343, 176,
	493, 494, 487, 488, 489, 490, 491, 492, -302, -302,
	-297, -457, -302, -249, 32, 31, -303, -303, -303, 74,
	-297, -471, 324, 323, 325, -157, -271, -302, 74, 74,
	74, 85, -303, -303, -302, -293, -302, -458, -249, -249,
	-303, -303, -249, -249, -249, -249, 130, -249, -249, -249,
	-249, -249, -249, -249, -249, 74, 74, 74, -155, -108,
	-417, -416, -297, 40, 551, -109, -297, -152, -151, -297,
	-495, 79, 452, 453, 152, 155, 154, 34, 73, 73,
	142, -190, 101, -477, -271, -335, -332, -329, -271, -325,
	-271, -271, -315, -315, -315, -190, -475, -462, 34, -158,
	-271, -239, 16, -295, -295, -329, 253, -506, -282, -282,
	-264, -263, -284, -279, -284, -284, -239, -507, -282, -282,
	-284, -280, -239, -271, 426, -239, -239, -369, -281, -271,
	-281, -315, -263, -264, -264, -190, -229, -230, 219, 216,
	215, -236, 217, 292, -316, 470, -217, -218, 68, 375,
	368, 255, 259, 83, 260, 406, 261, 224, 263, 264,
	265, 280, 282, 235, 266, 267, 268, 399, 269, 147,
	281, 270, 271, 272, 351, -212, 6, 314, 40, 50,
	51, 419, 418, 256, -477, -477, 30, 30, -335, -271,
	-147, -142, -146, -143, -148, -242, -244, -145, 73, -190,
	-137, -271, 143, 450, 452, 453, -501, -347, -501, -347,
	31, 398, -350, 398, 31, -325, -344, 446, 448, -340,
	79, 399, -330, -349, 70, 139, -416, -347, -347, -349,
	-349, 138, 143, -499, 451, 452, 211, -109, -192, -190,
	-477, -334, -325, -271, -398, -192, -271, -271, 73, 35,
	-271, -238, 143, -237, 15, -272, -271, 34, 79, 142,
	-238, -116, -114, 107, -297, -6, 560, -297, -6, -6,
	-297, -6, -297, -396, 372, 85, 85, -257, 79, -257,
	85, 85, 85, 74, 79, -338, 70, -410, -304, -455,
	550, -162, 74, -157, -453, -454, -157, -161, -271, -410,
	-162, 74, -453, -109, -109, -271, 23, -80, -465, 142,
	143, -158, -353, -333, -330, -355, 130, -271, -341, 143,
	502, 573, 77, 226, -487, -486, 390, 74, 143, -420,
	227, 469, 79, 574, 207, 90, 326, 91, 92, -382,
	-303, -300, -295, -295, -293, -293, -298, 240, -298, 100,
	-297, -296, -459, 107, -297, 34, 143, 71, 142, 74,
	74, 15, 15, 74, -297, 74, 74, 74, 74, 15,
	15, -297, 74, 142, 74, 74, 74, 74, 71, 74,
	143, 74, 143, -303, -297, 74, 74, -297, -297, -297,
	-303, 74, -297, -297, -297, -297, -297, -297, -297, -297,
	-363, 421, -363, -363, 143, 74, 79, 143, 22, 143,
	-149, 36, 37, 153, 156, 156, 155, -176, -178, -179,
	-180, -181, -182, 121, 144, 145, -169, -170, -171, -172,
	-196, -255, 178, 181, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 239, 173, 174, 175, 176,
	194, 159, 179, 160, 161, 162, 163, 164, 165, 168,
	169, 170, 171, 167, -271, -159, 35, -480, 376, -488,
	143, 40, -486, 462, -318, 71, -132, 15, -190, -190,
	-190, -203, 34, 15, -141, -191, -271, 73, 74, 143,
	-297, -326, 71, -271, -264, -239, -239, -190, -271, -239,
	-239, -282, -284, -284, -280, 142, -263, -159, 143, -189,
	-193, 230, -186, -188, -255, -287, -187, 233, -449, 231,
	229, 95, 234, 288, 96, 224, -231, 224, 96, -271,
	230, 234, 229, -232, 224, 288, 231, 226, -268, 111,
	-262, 138, 226, 42, 351, -268, -268, -268, -268, -268,
	-268, -268, 262, 262, -268, -268, -268, -268, -268, -268,
	-268, -268, -268, -268, -268, 148, -268, -268, -268, -268,
	-268, -268, 73, 257, 258, -481, 376, 30, 334, 334,
	-488, -133, 328, 30, -245, -246, -247, -248, 59, 63,
	65, 60, 61, 62, 66, 30, 143, -269, -273, 34,
	-271, 79, -269, -137, -142, -147, -269, 73, -500, -502,
	454, 451, 457, -349, -349, 226, 73, 111, -349, -349,
	40, -270, -497, 458, 452, -167, 23, 143, 70, -192,
	-169, -177, -239, -140, -142, -271, 79, -271, 130, -239,
	108, -6, 106, -120, -119, -118, 109, 558, 564, 108,
	108, 108, 74, 74, 74, 143, 74, 74, 74, 143,
	74, 143, -423, 431, 39, 143, 73, 74, 143, 52,
	143, 111, 74, 143, 74, 52, -167, 142, 406, -271,
	-434, 74, -355, 143, 226, 142, 142, -331, 354, -270,
	-333, 20, 502, -255, 38, -261, -260, 79, 574, 74,
	-298, -298, 100, -295, -292, 74, 108, -297, 106, -194,
	-196, 370, 371, -195, -201, 139, 177, 239, 176, 175,
	173, 370, 371, -211, -271, -297, -297, 74, -297, -297,
	15, -271, -211, -293, -297, -154, 74, -362, -363, -362,
	74, 74, 74, 74, -362, 74, 74, 74, 74, 74,
	74, 74, 74, 73, -416, -423, -297, -297, -151, -150,
	43, 156, 362, 74, 143, -255, 74, 143, -196, 34,
	-483, 433, 378, 388, -268, -289, -288, 330, 41, -403,
	399, 384, 385, -332, 253, -271, 70, 318, 319, 320,
	321, -313, -314, -312, -316, -477, 73, 73, 73, -383,
	308, -196, -190, -141, -271, 15, 143, -476, 142, -1,
	-271, -325, -282, -239, -507, -239, -282, -282, -284, -271,
	34, -230, -234, 44, 46, -193, -196, -187, -448, -449,
	-315, -271, 96, -448, 96, 73, -271, -271, -271, 96,
	96, -271, -271, -271, -233, -281, -216, 40, 47, 48,
	49, -268, -268, 180, 85, 85, 85, 85, 79, 79,
	79, -268, -268, 85, 79, -273, 79, -450, 155, 44,
	45, 85, 85, 85, 85, 40, 79, -219, 40, 273,
	277, 274, 275, 276, 79, 85, 40, 85, 40, 85,
	40, -271, 73, -451, -452, 79, -483, -268, 334, -346,
	111, -289, -131, 83, 31, -163, 219, 216, -477, -337,
	-336, -255, -146, -146, -146, -146, 59, 59, 59, 64,
	59, 64, 59, -247, -337, -148, -159, -273, 74, -493,
	-492, -491, -489, 67, 227, 68, -302, 451, 455, 456,
	-333, -285, 79, -340, 13, -190, -190, -402, 283, 284,
	74, -241, 17, 142, -241, 104, -6, -116, -118, -297,
	-6, -297, 560, 344, 561, 79, 85, 85, -431, 416,
	411, 413, 96, -304, -418, -417, 52, -134, -157, -410,
	-454, -416, -271, 52, -134, -410, -271, 85, 15, -330,
	-325, 130, 130, -271, 355, -341, 79, 377, 79, 222,
	575, 143, 111, -261, -292, -297, 74, -204, 164, 163,
	-204, 74, -388, -388, -387, -390, -387, -204, -204, 74,
	74, 23, 74, 74, 74, -297, 74, 74, 143, -407,
	471, -362, -362, -362, -362, -362, -362, -362, -362, -362,
	-362, -362, -362, -362, -306, -305, 245, -431, 44, 45,
	79, 79, -180, -196, 220, -171, 40, -134, -484, 83,
	-478, 79, -271, -485, 83, 379, 141, 332, 40, 380,
	381, 396, 327, 85, 85, 386, -479, -271, -133, -190,
	-312, -262, 138, 264, 311, -183, -184, -185, -193, -186,
	-188, -183, -183, -384, 310, 20, 85, 129, -160, 71,
	142, -142, -191, -271, 130, 74, -239, -271, -239, -239,
	-282, -134, -255, -234, -208, -207, -205, 90, 101, 40,
	368, -206, 83, 138, 278, 281, 280, 256, 279, -228,
	-286, 70, 374, 316, 317, -316, 229, 95, 96, 356,
	-287, -446, -271, -444, -446, -271, -444, -444, -315, -297,
	-271, -235, 316, 317, -342, 289, 101, -342, -211, -211,
	30, 79, 79, -192, 74, 143, 111, -484, -478, 111,
	-347, 79, -485, 79, 143, -163, -163, -239, 143, 111,
	-165, -164, 70, 71, -166, 70, -164, 59, 59, -239,
	-491, -490, 23, -449, -449, -449, 74, 74, -240, 18,
	20, 130, -240, 108, 106, 108, 108, -271, 74, 74,
	-394, 552, -427, -429, 411, 20, 20, 13, 74, -410,
	-410, -325, -341, 399, -190, -260, 79, 575, -297, 74,
	-297, 74, 79, -154, 20, -394, -173, -196, -290, 79,
	-482, 390, 79, 79, 85, 40, 85, 141, 382, -404,
	-131, 73, -268, -268, -268, -271, 74, 143, 74, 74,
	-385, 244, 85, 129, 85, 129, 85, -269, -142, -271,
	-239, -476, 142, -239, -239, -205, 90, -293, 79, -213,
	-270, 139, -214, 40, 277, 273, 111, 111, -215, 40,
	257, 258, -220, 73, 288, 13, 180, 96, 96, -190,
	73, 73, 71, 298, 73, 73, -446, 74, 289, 138,
	-211, 74, -452, 79, -482, 79, -349, -477, -154, -336,
	-416, -297, 73, -297, 73, 59, 19, 17, -297, -303,
	228, -6, 561, 344, -221, 553, 79, 20, 79, -425,
	79, -337, -112, -421, -369, 74, 74, -362, -365, -364,
	-368, 417, 290, 424, -303, -221, 501, 20, 502, 331,
	40, 85, 40, 383, -320, -322, -255, 73, -211, -213,
	79, -209, -210, -236, -316, -185, -111, -110, -209, -386,
	147, 85, 129, 85, 85, -239, -239, 79, 79, 85,
	73, -411, 30, -321, 73, -320, -320, -447, 318, 319,
	320, 322, 321, -447, -320, -320, 73, -343, -342, -268,
	138, -155, -158, -445, -271, 229, 20, 20, -271, -271,
	-258, 554, 85, 79, 413, -395, 555, -430, 416, -424,
	-422, 411, 412, 413, 414, 74, -367, 103, 382, 386,
	-291, -294, 85, 88, 172, 141, -258, -174, -271, 79,
	377, 79, 331, 74, 143, -387, -297, -357, 245, 143,
	-236, -262, -112, -357, -401, 155, 309, 502, 85, 129,
	85, -154, 74, -297, -307, -268, -223, -222, 498, -320,
	74, 74, 74, 74, -320, -211, -268, 74, 74, 143,
	73, 20, 79, -432, 227, -428, -429, 415, -422, 20,
	413, 20, 20, -366, -367, 386, -291, -294, 550, 422,
	422, 422, 34, 399, -323, -322, -149, 74, -358, 297,
	20, -236, -268, -358, 309, 85, 129, 85, -155, 74,
	-271, -227, -225, -226, 70, 429, 286, 287, 74, -323,
	71, -323, 71, -323, 71, -323, 71, 74, -211, -271,
	229, -259, -271, -425, -439, 73, 85, -427, -426, -428,
	20, -425, 20, -425, -425, 100, 423, 423, 423, 79,
	-324, 235, 83, 502, 316, 317, -149, 20, -359, 290,
	291, -360, -373, 293, -211, 85, -342, -226, 70, -225,
	70, 14, 13, -447, -447, -447, -447, -228, 74, 143,
	-443, 30, 74, -438, -437, -256, -433, -271, 416, 417,
	79, -425, -366, -268, 79, 315, -255, 73, -371, 294,
	73, -369, 73, -369, 96, 319, -224, 283, 284, 30,
	155, -224, -323, -323, -323, -323, -271, -442, -441, -440,
	74, 143, 142, 85, -271, -356, -361, 295, 85, -293,
	73, -293, 73, -370, 292, 73, 90, 40, 285, 143,
	111, -437, -271, 74, -375, 73, 20, 74, -356, 74,
	-356, 73, 111, -293, -441, 40, -297, 142, -376, -374,
	245, -360, 74, 74, 74, -356, 85, 74, -271, 74,
	143, -271, -372, 296, 74, -374, -377, 52, 85, -381,
	-378, 73, -236, 247, 121, -381, -236, -380, -379, 295,
	248, 73, 74, 143, -271, 244, 73, -303, -379, -378,
	-303, 74, 74,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 260,
	261, 262, 792, 793, 794, 795, 796, 0, 0, 0,
	0, 566, 567, 0, 537, 0, 0, 0, 0, 0,
	0, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 351,
	352, 353, 354, 355, 356, 0, 285, 281, 206, 207,
	208, 209, 210, 292, 293, 407, 0, 0, 0, 0,
	647, -2, 53, 274, 0, 265, 265, 797, 798, 799,
	800, 801, 802, 803, 804, -2, 579, 0, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	340, 341, 342, 336, 337, 339, 338, -2, 0, 579,
	0, 0, 0, 667, 0, 0, 684, 706, 23, 0,
	7, 9, 10, 11, 12, 13, 14, 15, 16, 17,
	18, 0, 0, 19, 0, 19, 0, 0, 0, 1107,
	1108, 1109, 1110, -2, 1593, 1571, 1743, 1744, 1745, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 0, 258, 256, 1571, 1593, 1653, 1686,
	0, 809, 0, 625, 0, 630, 1061, 625, 286, 568,
	569, 667, 667, 535, 0, 322, 0, 1584, 326, 0,
	0, 0, 532, 316, 317, 318, 319, 320, 321, 0,
	0, 791, 0, 0, 312, 0, 280, 1644, 0, 0,
	0, 0, 0, 0, 150, 881, 152, 883, 156, 163,
	0, 0, 168, 169, 172, 173, 174, 175, 176, 0,
	180, 0, 182, 185, 0, 187, 188, 0, 191, 192,
	193, 0, 203, 204, 205, 884, 885, 886, -2, 81,
	807, 1505, 1396, 0, 1403, 1404, 1415, 1426, 1185, 1186,
	1187, 1188, 0, 0, 0, 0, 0, 1195, 1196, 0,
	1212, 1747, 0, 1202, 1203, 1204, 1205, 1206, 90, 102,
	103, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 0, 1369, 1172, 1107, 0, 1755, 0, 1775, 1780,
	1781, 1782, 1783, 1774, 0, 0, 1354, 0, 1344, 0,
	0, -2, -2, 0, 0, 1712, -2, 1752, 1771, 1779,
	1756, 1778, 1749, 1750, 1744, 1745, 1746, 1748, 1757, 1759,
	1770, 0, 1766, 1776, 1777, 0, 0, 0, 0, 104,
	105, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1360, -2, 1362, 1363, 1365, -2,
	1367, 1368, -2, 1371, 1372, 1373, -2, -2, 1376, 1377,
	1378, 1379, 1380, 1381, 1384, -2, -2, -2, -2, 1356,
	1357, 1358, 1359, 1348, 1349, 1350, 1351, 1352, 1353, -2,
	-2, -2, 667, 742, 0, -2, 0, 0, 0, 689,
	692, 695, 698, 0, 54, 55, 275, 276, 264, 266,
	0, 270, 0, 263, 0, 0, 0, 913, 913, 913,
	913, 913, 0, 913, 0, 0, 0, 913, 888, 889,
	890, 911, 912, 959, 584, 580, 581, 582, 583, 655,
	0, 657, 660, 512, 459, 0, 0, 0, 512, 0,
	473, 465, 0, 0, 0, 512, 0, 0, 662, 662,
	0, 515, 522, 512, 512, -2, 512, 512, 512, 0,
	0, 479, 480, 481, 465, 465, 484, 485, 486, 497,
	498, 523, 1529, 0, 0, 407, 0, 407, 0, 407,
	407, 586, 1681, 1591, 1658, 1644, 0, 0, 231, 1712,
	236, 0, 1592, 1607, 0, 0, 1625, 0, -2, 0,
	302, 662, 0, 668, 0, 667, 0, 0, 407, 407,
	407, 407, 407, 958, 407, 407, 407, 0, 0, 0,
	407, 0, 0, 707, 708, 703, 704, 705, 709, 710,
	5, 6, 19, 0, 0, 0, 0, 0, 0, 60,
	59, 0, 1506, 1524, 1460, 1461, 1462, 1511, 1464, 1515,
	1515, 1515, 1515, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 0, 0, 1504, 1484, 1513, 1513, 1513, 1511,
	1508, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1518, 1518, 1521, 1521, 1518,
	0, 1394, 0, 0, 0, 0, 629, 0, 0, 662,
	-2, 0, 536, 323, 1111, 0, 0, 327, 328, 0,
	0, 343, 0, 346, 331, 332, 333, 0, 130, 0,
	314, 315, 0, 0, 282, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 160, 157, 164, 167, 177,
	184, 0, 196, 198, 201, 158, 165, 170, 171, 178,
	199, 159, 161, 162, 166, 200, 202, 179, 183, 197,
	181, 186, 189, 190, 195, 0, 131, 0, 0, 0,
	0, 0, 1402, 0, 0, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 1396, 0, 0, 1191, 1192, 1193, 1194, 1197, 0,
	1213, 0, 0, 0, 1458, 0, 1394, 1394, 0, 1394,
	1390, 0, 0, 0, 0, 0, 0, 1394, 1330, 0,
	0, 1332, 1345, 0, 0, 1334, 1335, 0, 1338, 1339,
	1394, 0, 1394, 1343, 1326, 1327, 0, 1390, 1390, 0,
	0, 1390, 1390, 1390, 1390, 1390, 1390, 1390, 1390, 1390,
	1390, 1390, 1390, 0, 0, 0, 662, 0, 0, 650,
	0, 631, 0, 686, 688, 0, 690, 691, 693, 694,
	696, 697, 699, 700, 56, 0, 0, 268, 0, 273,
	0, 806, 0, 0, 822, 0, 0, 0, 0, 0,
	0, 0, 0, 913, 913, 913, 0, 586, 585, 0,
	656, 0, 0, 715, 0, 0, 0, 465, 512, 512,
	471, 472, 467, 466, 518, 519, 515, 0, 515, 515,
	715, 0, 491, 492, 493, 512, 512, 499, 663, 500,
	501, 515, 0, 520, 521, 715, 0, 0, 715, 715,
	0, 509, 510, 511, 0, 0, 913, 0, 528, 467,
	467, 1530, 1531, 0, 922, 0, 0, 0, 531, 0,
	0, 0, 587, 211, 214, 0, 217, 0, 1681, 0,
	1681, 0, 224, 0, 0, 0, 0, 0, 0, 254,
	255, 0, 0, 0, 0, 245, 248, 1055, 1056, 878,
	879, 249, 250, 294, 295, 0, 631, 685, 687, 681,
	682, 683, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 562, 0, 564, 0, 0, 723, 717, 719, 786,
	90, 723, 8, 77, 74, 0, 19, 0, 0, 19,
	19, 0, 19, 259, 0, 1527, 1525, 1526, 1463, 1512,
	0, 1489, 0, 1490, 1491, 1492, 0, 0, 1485, 0,
	1486, 1487, 1488, 1479, 0, 1480, 1481, 0, 1482, 1483,
	257, 0, 1395, 810, 0, 604, 617, 599, 0, 606,
	0, 1062, 588, 617, 590, 0, 606, 631, 653, 631,
	0, 324, 0, 329, 0, 0, 345, 347, 348, 349,
	334, 335, 533, 310, 311, 303, 304, 305, 306, 307,
	308, 309, 313, 100, 0, 283, 284, 0, 0, 0,
	144, 145, 146, 147, 148, 149, 151, 135, 553, 555,
	870, 882, 0, 873, 0, 154, 194, 127, 0, 0,
	1397, 1398, 1399, 1400, 1401, 1405, 0, 1407, 1409, 1411,
	1413, 0, 1431, -2, -2, 1173, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1184, 1416, 1429, 1430,
	0, 0, 0, 0, 0, 0, 1427, 1427, 1422, 0,
	1189, 0, 1210, 1214, 0, 0, 0, 91, 1389, 1297,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 0, 0,
	1396, 0, 0, 0, 1391, 1392, 0, 0, 0, 1285,
	0, 0, 1291, 1292, 1293, 0, 612, 0, 1355, 1331,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 741, 743,
	0, 621, 623, 624, 0, 651, 664, 669, 670, 673,
	52, 57, 277, 278, 0, 0, 272, 0, -2, 824,
	0, 660, 0, 0, 836, 405, 864, 0, 0, 880,
	903, 909, 0, 0, 0, 937, 0, 658, 0, 0,
	755, 458, 0, 513, 514, 462, 1644, 467, 715, 715,
	474, 468, 475, 517, 476, 477, 478, 0, 715, 715,
	512, 515, 502, 516, 515, 505, 506, 0, 524, 529,
	525, 0, 527, 482, 483, 660, 358, 359, 0, 0,
	0, 364, 0, 1532, 0, 0, 0, 0, 374, 1532,
	1532, 1532, 1532, 1532, 1532, 1532, 0, 0, 1532, 1532,
	1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 0,
	1532, 1532, 1532, 1532, 1532, 1041, 1532, 0, 923, 379,
	380, 381, 382, 0, 402, 0, 0, 0, 405, 854,
	728, 0, 729, 730, 726, 757, 781, 781, 0, 781,
	761, 1061, 0, 0, 222, 223, 212, 0, 213, 0,
	225, 226, 0, 228, 229, 230, 237, 1591, 1658, 232,
	234, 0, 0, 238, 251, 252, 253, 0, 0, 243,
	244, 0, 0, 297, 298, 300, 0, 679, 550, 1059,
	551, 552, 556, 0, 0, 559, 560, 561, 824, 0,
	859, 715, 0, 724, 0, 720, 787, 0, 789, 0,
	715, 0, 75, 19, 0, 68, 65, 0, 0, 0,
	0, 0, 1507, 1459, 1528, 0, 0, 0, 1509, 0,
	0, 0, 0, 58, 633, 595, 0, 598, 614, 0,
	618, 0, 0, 610, 603, 607, 0, 0, 627, 589,
	0, 0, 594, 679, 654, 1112, 0, 330, 344, 0,
	0, 0, 0, 138, 867, 0, 139, 143, 133, 0,
	0, 0, 872, 0, 869, 874, 0, 153, 0, 0,
	128, 129, 928, 933, 0, 1406, 1408, 1410, 1412, 1414,
	0, 1417, 1427, 1427, 1423, 0, 1418, 0, 1420, 0,
	1397, 0, 1215, 0, 0, 0, 0, 0, 0, 1275,
	1276, 0, 0, 1280, 0, 1282, 1283, 1284, 1286, 0,
	0, 0, 1290, 0, 1329, 1347, 1333, 1336, 0, 1340,
	0, 1342, 0, 667, 0, 1252, 1252, 0, 0, 0,
	0, 1252, 0, 0, 0, 0, 0, 0, 0, 0,
	1207, 0, 1208, 1209, 0, 744, 633, 0, 0, 0,
	676, 674, 675, 279, 267, 269, 0, 0, 0, 812,
	813, 815, 0, 818, 819, 820, 0, 825, 826, 828,
	829, 0, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1576, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 823, 0, 914, 843, 1532, 409,
	0, 0, 866, 0, 0, 0, -2, 0, 0, 0,
	0, 939, 0, 0, 0, 573, 577, 23, 661, 0,
	716, 460, 0, 461, 512, 469, 470, 715, 1061, 494,
	495, 715, 512, 512, 515, 0, 526, 0, 922, 361,
	383, 0, 1070, 1071, 0, 0, 1077, 1086, 913, 1142,
	0, 1086, 0, 0, 1088, 1089, 362, 0, 0, 389,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 1533,
	1532, 1532, 0, 372, 373, 0, 0, 0, 0, 0,
	0, 0, 1532, 1532, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1032, 0, 0, 0, 0,
	0, 0, 0, 1047, 1048, 843, 1532, 0, 0, 0,
	409, 851, 0, 0, 0, 0, 0, 0, 748, 0,
	0, 747, 0, 0, 0, 0, 0, 660, 782, 0,
	784, 785, 759, -2, 0, 728, 764, 1394, 215, 216,
	0, 0, 221, 239, 241, 0, 0, 0, 240, 242,
	246, 247, 296, 299, 301, 649, 0, 0, 0, 960,
	0, 565, 713, 718, 725, 788, 790, 91, 721, 713,
	0, 78, 19, 77, 69, 70, 0, 19, 0, 0,
	0, 0, 1517, 1516, 1502, 0, 1503, 1514, 1519, 0,
	1522, 0, 637, 0, 0, 617, 619, 0, 0, 617,
	0, 0, 626, 0, 0, 617, 652, 0, 0, 534,
	101, 350, 0, 0, 0, 0, 0, 554, 0, 871,
	135, 0, 0, 155, 0, 0, 931, 0, 933, 1393,
	1419, 1421, 0, 1428, 1424, 1190, 1198, 1211, 0, 0,
	1217, 1229, 1229, 0, 1220, 1515, 1515, 1223, 1511, 1513,
	1511, 1229, 1229, 0, 92, 0, 0, 1281, 0, 0,
	0, 613, 0, 0, 0, 1250, 1252, 1257, 1253, 1258,
	1252, 1252, 1252, 1252, 1263, 1252, 1252, 1252, 1252, 1252,
	1252, 1252, 1252, 1248, 622, 637, 665, 666, 671, 672,
	0, 271, 0, 0, 817, 0, 0, 0, 830, 0,
	847, 844, 845, 846, 0, 861, 410, 411, 412, 413,
	0, 0, 0, 865, 0, 854, 0, 904, 905, 906,
	907, 908, -2, 917, 0, 0, 1063, 1063, 1063, 947,
	0, 938, 625, 0, -2, 0, 0, 575, 0, 0,
	756, 463, 715, 487, 0, 503, 715, 715, 512, 530,
	0, 360, 366, 384, 0, 383, -2, 1076, 1101, 1087,
	1101, 1143, 1101, 1101, 913, 0, 387, 388, 390, 0,
	392, 0, 0, 0, 365, 386, 368, 375, 376, 377,
	378, 0, 0, 0, 1009, 1010, 1011, 1014, 1015, 1016,
	1017, 0, 0, 1020, 1021, 1022, 1023, 1024, 1098, 1099,
	1100, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1049, 1050,
	1051, 1052, 1053, 1054, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 0, 0, 1044, 0, 847, 0, 0, 0,
	0, 861, 853, 0, 855, 856, 0, 0, 596, 715,
	289, 0, 751, 745, 0, 734, 749, 750, 737, 0,
	739, 0, 735, 736, 715, 727, 758, 783, 760, 763,
	765, 766, 772, 0, 0, 0, 0, 218, 219, 220,
	227, 0, 429, 233, 680, 1060, 557, 558, 961, 962,
	563, 711, 0, 0, 711, 73, 76, 0, 71, 0,
	0, 0, 0, 63, 61, 1510, 0, 0, 639, 115,
	0, 0, 0, 615, 0, 620, 617, 602, 611, 601,
	608, 609, 628, 617, 593, 592, 1113, 325, 0, 868,
	135, 140, 141, 142, 136, 134, 875, 0, 877, 0,
	929, 933, 0, 0, 1425, 1216, 1199, 1218, 1230, 1231,
	1219, 1200, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1201,
	1277, 0, 1279, 1287, 1288, 0, 1337, 1341, 0, 0,
	0, 1256, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1267,
	1268, 1269, 1270, 1271, 667, 1249, 0, 639, 677, 678,
	805, 808, 814, 816, 0, 827, 0, 834, 835, 0,
	0, 838, 839, 849, 0, 0, 0, 415, 416, 0,
	0, 0, 428, 424, 425, 426, 406, 860, 851, 0,
	918, 1532, 1532, 1532, 0, 0, 1064, 1065, 1067, 1068,
	1069, 0, 0, 950, 0, 0, 941, 0, 781, 0,
	0, 715, 574, 577, 578, 659, 464, 715, 507, 504,
	715, 357, 385, 367, 1103, -2, 1116, 1118, 0, 923,
	1121, 1122, 0, 0, 0, 0, 0, 0, 1164, 1130,
	0, 0, 1134, 1135, 1136, 0, 0, 1443, 1444, 0,
	1141, 0, 1102, 0, 1090, 1102, 0, 0, 1101, 0,
	391, 393, 396, 397, 394, 1138, 0, 395, 1012, 1013,
	0, 1018, 1019, 0, 1043, 0, 0, 398, 0, 0,
	0, 399, 404, 852, 0, 857, 858, 667, 0, 0,
	731, 752, 0, 0, 732, 0, 733, 738, 740, 288,
	767, 0, 0, 769, 770, 771, 762, 235, 701, 0,
	0, 722, 702, 0, 19, 0, 0, 66, 1520, 1523,
	641, 0, 638, 116, 0, 0, 0, 0, 616, 600,
	591, 137, 132, 876, 118, 932, 934, 930, 0, 1289,
	0, 1252, 1251, 1245, 0, 641, 0, 833, 831, 848,
	837, 0, 862, 863, 0, 417, 418, 0, 421, 427,
	850, 0, 0, 0, 0, 910, -2, 0, 0, -2,
	953, 0, 948, 0, 940, 0, 943, 715, 715, -2,
	571, 576, 0, 488, 508, 1117, 1119, 1120, 1123, 1124,
	1057, 1058, 1125, 1169, 1170, 1171, 0, 0, 1128, 1166,
	1167, 1168, 1129, 0, 0, 0, 0, 1441, 1442, 1162,
	0, 0, 0, 0, 0, 0, 0, 1084, 1139, 1532,
	370, 1042, 1045, 1046, 403, 400, 401, 597, 662, 290,
	291, 753, 0, 746, 776, 773, 0, 0, 712, 714,
	67, 72, 0, 0, 643, 0, 640, 0, 634, 636,
	126, 605, 88, 109, 0, 1278, 1328, 1255, 0, 1246,
	0, 1240, 1241, 1242, 1247, 643, 0, 0, 0, 414,
	419, 0, 422, 423, 0, 899, 1511, 0, 919, 920,
	921, 963, -2, 1006, 0, 1066, 925, 118, 963, 944,
	0, 951, 0, 949, 942, 667, 572, 1126, 1127, 0,
	0, 1344, 1532, 1157, 0, 0, 0, 1091, 1093, 1094,
	1095, 1096, 1097, 1092, 0, 0, 0, 1083, 1085, 0,
	1532, 287, 0, 0, 777, 779, 774, 775, 62, 64,
	79, 0, 642, 117, 0, 80, 0, 106, 0, 119,
	120, 0, 0, 0, 0, 1254, 1243, 0, 0, 0,
	0, 0, 1445, 1446, 1447, 0, 632, 0, 832, 840,
	0, 842, 420, 892, 0, 673, 0, 965, 0, 922,
	1008, 1532, 927, 965, 936, 0, 946, 0, 955, 0,
	952, 662, 1165, 0, 1133, 0, 1145, 1158, 0, 0,
	892, 892, 892, 892, 0, 369, 0, 754, 768, 0,
	0, 0, 89, 93, 0, 115, 112, 0, 121, 0,
	0, 0, 0, 0, 1232, 0, 0, 0, 1236, 1237,
	1238, 1239, 0, 841, 891, 900, 901, 673, 924, 0,
	1002, 1007, 0, 926, 945, 954, 0, 957, 570, 1131,
	1137, 1144, 1146, 1147, 0, 1159, 1160, 1161, 1163, 1072,
	0, 1074, 0, 1078, 0, 1080, 0, 0, 371, 778,
	780, 0, 645, 635, 82, 0, 0, 110, 111, 113,
	0, 122, 0, 124, 125, 0, 1233, 1234, 1235, 821,
	893, 1532, 0, 0, 897, 898, 902, 0, 990, 0,
	0, 996, 0, 1003, 1012, 956, 1132, 1148, 0, 1149,
	0, 0, 0, 892, 892, 892, 892, 1082, 644, 0,
	935, 0, 94, 0, 96, 98, 99, 1104, 107, 108,
	114, 123, 1244, 0, 895, 0, 966, 0, 968, 0,
	0, 0, 0, 0, 1000, 0, 1150, 1152, 1153, 0,
	0, 1151, 1073, 1075, 1079, 1081, 646, 83, 84, 0,
	95, 0, 0, 894, 896, 0, 970, 0, 991, 0,
	0, 0, 0, 0, 0, 0, 1154, 1156, 1155, 0,
	0, 97, 1105, 967, 964, 0, 1002, 992, 0, 994,
	0, 0, 0, 0, 85, 86, 87, 0, 0, 972,
	0, 988, 993, 995, 997, 0, 1001, 999, 1106, 971,
	0, 984, 969, 0, 998, 973, -2, 0, 989, 974,
	-2, 0, 982, 0, 0, 975, 983, 0, 978, 0,
	0, 0, 977, 0, -2, 985, 0, 0, 979, -2,
	0, 987, 986,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 102, 3, 3, 3, 133, 125, 3,
	73, 74, 130, 128, 143, 129, 142, 131, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 572, 571,
	112, 111, 113, 3, 573, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 135, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 574, 124, 575, 136,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 103, 104,
	105, 106, 107, 108, 109, 110, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 126, 127, 132, 134,
	137, 138, 139, 140, 141, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:724
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:731
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:737
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:745
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:751
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:755
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:770
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:774
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:780
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:785
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:789
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:821
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:828
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:848
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:854
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:861
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:869
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:875
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:884
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:894
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:902
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:910
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:918
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:928
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:936
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:946
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:953
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:962
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:972
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:976
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:982
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:986
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:992
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1001
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1011
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1015
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1021
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1030
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1034
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1040
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1061
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1074
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1085
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1091
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1095
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1101
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1108
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1116
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1120
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1134
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1138
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1142
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1147
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1151
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1155
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1161
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1170
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1181
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1185
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1191
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1195
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1201
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1205
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1211
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1235
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1254
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1258
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1262
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1267
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1271
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1278
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1286
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1293
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1298
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1305
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1310
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1314
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1338
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1342
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1348
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1354
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1372
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1389
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1412
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1416
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1420
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1425
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1429
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1435
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1448
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1459
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1472
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1476
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1486
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1499
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1512
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1518
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1524
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1531
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1539
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1548
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1552
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1556
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1560
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1564
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1568
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1575
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1579
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1585
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1592
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1601
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1605
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1611
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1615
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1619
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1623
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1627
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1631
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1635
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1639
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1643
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1647
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1651
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1655
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1659
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1663
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1667
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1671
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1675
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1679
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1683
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1687
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1691
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1695
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1699
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1703
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1707
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1711
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1715
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1719
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1723
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1727
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1731
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1735
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1739
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1743
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1747
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1751
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1755
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1759
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1763
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1767
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1779
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1783
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1787
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1791
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1795
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1799
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1803
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1807
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1820
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1827
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1834
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1844
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1848
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1854
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1861
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1869
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1873
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1877
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1881
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1887
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1891
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1897
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1904
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1911
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1920
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1950
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1954
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1958
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1964
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1970
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1974
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1981
		{
			yyVAL.str = yyDollar[3].str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1987
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1991
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1997
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2005
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2014
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2023
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2031
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2039
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2062
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2085
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2092
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2099
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2107
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2114
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2121
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2130
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2134
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2138
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2144
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2148
		{
			yyVAL.str = yyDollar[1].str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2154
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2158
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2164
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2168
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2179
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2185
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2190
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2194
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2198
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2202
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2206
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2210
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2214
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2218
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2222
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2228
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2232
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2236
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2240
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2245
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2250
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2256
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2263
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2269
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2276
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2283
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2293
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2300
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2311
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2322
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2326
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2332
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2342
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2348
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2352
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2358
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2364
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2368
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2372
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2376
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2382
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2394
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2400
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2404
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2410
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2414
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2420
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2426
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2437
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2443
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2447
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2451
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2455
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2459
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2463
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2471
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2479
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2489
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2530
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2534
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2540
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2546
		{
			yyVAL.str = yyDollar[1].str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2551
		{
			yyVAL.str = "true"
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2552
		{
			yyVAL.str = "false"
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2553
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2558
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2573
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2584
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2593
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2597
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2603
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2610
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2614
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2618
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2622
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2626
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[2].columnTableDefUnion(),
					Pos:    yyDollar[3].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2635
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[3].columnTableDefUnion(),
					Pos:    yyDollar[4].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2644
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2650
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2654
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2658
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2662
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2666
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2670
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2689
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: -1,
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2695
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: 0,
			}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2701
		{
			yyLOCAL = &tree.AlterColPos{
				PreColName: yyDollar[2].unresolvedNameUnion(),
				Pos:        -2,
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2711
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2719
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2726
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2733
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2740
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2747
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2754
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2762
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2769
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2776
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2785
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2789
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2796
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2808
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2816
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2824
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2837
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2843
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2854
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2865
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2869
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2874
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2878
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2883
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2887
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2903
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2907
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2911
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2915
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2919
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2923
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2927
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2931
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2935
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2939
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2943
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2947
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2951
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2955
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2959
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2963
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2969
		{
			yyVAL.item = nil
		}
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2974
		{
			yyVAL.item = nil
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3013
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3018
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3022
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3026
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3035
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3039
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3045
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3050
		{
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3054
		{
		}
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3059
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3069
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3079
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3087
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3093
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3099
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3105
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3111
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3117
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3123
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3132
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3136
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3140
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3144
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3148
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3152
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3156
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3160
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3166
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3173
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3183
		{
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3185
		{
		}
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3194
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3204
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3213
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3217
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3221
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3227
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3233
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3239
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3245
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3254
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3264
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3276
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3280
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3286
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3298
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3312
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3318
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3325
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3330
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3334
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3338
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3343
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3347
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3353
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3366
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3370
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3376
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3381
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3385
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3389
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3395
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3401
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3405
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3411
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3417
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3421
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3425
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3431
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3435
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3458
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3467
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3476
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3485
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3489
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3495
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3504
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3513
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3523
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3529
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3535
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3539
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3545
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3551
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3560
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3567
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3578
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3583
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3590
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3606
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3619
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3630
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3634
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3640
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3645
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3652
		{
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3654
		{
		}
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3657
		{
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3666
		{
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3670
		{
		}
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3675
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3684
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3691
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3697
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3705
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3712
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3719
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3739
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3749
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3753
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3759
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3766
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3772
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3780
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3787
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3794
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3813
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3817
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3822
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3826
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3830
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3836
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3845
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3849
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3855
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3859
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3865
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3869
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3875
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3880
		{
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3884
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3891
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3895
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3902
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3907
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3911
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3917
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3921
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3927
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3931
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3936
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3940
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3953
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3960
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3967
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3985
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4004
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4010
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4017
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4021
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4034
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4038
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4043
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4047
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4054
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4059
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4066
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4072
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4076
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4080
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4084
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4088
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4092
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4098
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4105
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4114
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4118
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4124
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4132
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4136
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4141
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4145
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4151
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4155
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4159
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4164
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4168
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4174
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4180
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4184
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4190
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4195
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4199
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4203
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4208
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4212
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4216
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4221
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4225
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4233
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4237
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4241
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4255
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4259
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4269
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4279
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4289
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4301
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4309
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4317
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4326
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4334
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4342
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4350
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4358
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4366
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4374
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4382
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4390
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4400
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4411
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4425
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4429
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4433
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4438
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4442
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4446
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4455
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4459
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4464
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4468
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4473
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4477
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4483
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4487
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4493
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4497
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4502
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4506
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4511
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4519
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4525
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4533
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4541
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4551
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4557
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4566
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4575
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4584
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4594
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4598
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4608
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4612
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4616
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4620
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4626
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4636
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4640
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4646
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4652
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4656
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4662
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4668
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4672
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4676
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4682
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4686
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4692
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4696
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4702
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4706
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4712
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4716
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4726
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4739
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4745
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4751
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4764
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4775
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4782
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4786
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4792
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4802
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4806
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4810
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4815
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4819
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4823
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4827
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4832
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4836
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4840
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4844
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4848
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4853
		{
			yyVAL.str = ""
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4857
		{
			yyVAL.str = yyDollar[1].str
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4861
		{
			yyVAL.str = yyDollar[2].str
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4867
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4873
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4877
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4881
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4885
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4889
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4895
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 805:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4928
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4938
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4944
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 808:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4950
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4960
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4965
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4971
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4978
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4982
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:4988
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:4994
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4999
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5003
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5007
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5011
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5018
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5030
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5035
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5041
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5048
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5052
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5058
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5064
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5068
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5072
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5078
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5084
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5090
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5101
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5113
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5119
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5129
		{
			yyVAL.str = yyDollar[1].str
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5133
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5139
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5146
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5152
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5160
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5166
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5173
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5180
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5188
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5194
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5203
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5215
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5226
		{
			yyVAL.str = ""
		}
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5230
		{
			yyVAL.str = yyDollar[2].str
		}
	case 853:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5236
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5246
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5250
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5256
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5262
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5268
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5277
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5286
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5291
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5297
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5305
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5411
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5415
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5421
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5431
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5435
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5441
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5451
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5455
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5459
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5464
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5468
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5474
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5481
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5487
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5496
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5503
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5512
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5516
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5522
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5536
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5540
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5544
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5549
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5553
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5557
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5561
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5567
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5586
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5590
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5612
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5616
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5620
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5624
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5628
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5634
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5638
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5644
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5649
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5654
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5658
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5662
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5666
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5670
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5676
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5687
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5691
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5701
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5705
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5710
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5714
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5720
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5724
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5730
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5734
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5738
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5743
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5747
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5753
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5765
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5774
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5787
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5794
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5804
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5812
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5823
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5827
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5832
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5836
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5843
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5854
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5867
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5881
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5885
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5889
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5896
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5903
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5910
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5917
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5921
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5925
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5929
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5933
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5940
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5947
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5951
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5958
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5965
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5969
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5976
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5983
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5990
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5997
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6001
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6006
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6010
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6014
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6019
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6023
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6037
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6044
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6051
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6055
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6064
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6068
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6074
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6078
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6084
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6093
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6103
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6107
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6113
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6117
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6123
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6130
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6139
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6143
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6148
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6152
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6157
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6161
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6166
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6170
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6180
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6184
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6195
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6203
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6211
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6219
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6230
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6239
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6249
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6259
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6263
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6268
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6272
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6277
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6281
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6287
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6291
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6295
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6301
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6305
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6309
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6313
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6317
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6321
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6325
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6330
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6334
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6338
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6342
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6346
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6350
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6354
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6358
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6362
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6366
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6370
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6374
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6378
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6382
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6386
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6390
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6394
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6398
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6402
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6406
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6410
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6414
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6418
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6422
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6426
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6430
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6434
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6438
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6444
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6448
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6454
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6460
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6464
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6470
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6474
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6478
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6482
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6486
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6490
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6504
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6508
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6517
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6522
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6528
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6535
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6539
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6545
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6549
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6553
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6559
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6563
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6569
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6578
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6587
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6610
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6635
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6649
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6655
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6664
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6673
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6682
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6691
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6701
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6709
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6715
		{
			yyVAL.str = ""
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6719
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6729
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6735
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6741
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6760
		{
			yyVAL.str = ""
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6764
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6770
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6776
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6780
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6784
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6790
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6794
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6798
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6802
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6808
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6812
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6816
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6821
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6825
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6831
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6835
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6841
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6845
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6849
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6853
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6857
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6861
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6866
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6870
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6874
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6878
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6882
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6886
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6890
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6894
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6898
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6902
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6915
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6919
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6923
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6927
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6933
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6937
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6942
		{
			yyVAL.str = ""
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6946
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6952
		{
			yyVAL.str = ""
		}
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6956
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6962
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6974
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6981
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6988
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6995
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7002
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7011
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7017
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7023
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7027
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7031
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7035
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7039
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7044
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7051
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7055
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7059
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7064
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7068
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7073
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7077
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7093
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7099
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7103
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7107
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7111
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7115
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7119
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7123
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7127
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7131
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7135
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7139
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7143
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7147
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7153
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7157
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7161
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7165
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7169
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7173
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7177
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7181
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7185
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7189
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7193
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7197
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7202
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7210
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7215
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7219
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7228
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7232
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7236
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7240
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7244
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7250
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7258
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7266
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7275
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7279
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7284
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7288
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7294
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7298
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7304
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7313
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7325
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7342
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7359
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7372
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7385
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7397
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7411
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7426
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7441
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7458
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7473
		{
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7480
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7484
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7488
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7494
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7498
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7502
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7506
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7512
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7516
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7520
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7526
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7534
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7544
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7548
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7555
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7560
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7564
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7569
		{
			yyVAL.str = ","
		}
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7573
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7578
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7585
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7611
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7622
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7632
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7641
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7650
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7660
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7670
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7680
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7690
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7700
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7710
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7720
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7730
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7740
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7750
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7760
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7770
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7787
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7795
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7803
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7811
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7819
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7829
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7837
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7846
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7854
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7862
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7870
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7878
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7889
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7899
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7911
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7922
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7944
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7980
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7992
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8004
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8015
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8023
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8030
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8037
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8049
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8057
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8067
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8077
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8085
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8096
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8105
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8114
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8122
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8132
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8140
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8150
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8154
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8160
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8164
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8183
		{
		}
	case 1355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8185
		{
		}
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8226
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8237
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8241
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8245
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8251
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8256
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8260
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8266
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8270
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8277
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8281
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8285
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8293
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8297
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8301
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8305
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8311
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8315
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8319
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8323
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8327
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8331
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8335
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8339
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8343
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8347
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8355
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8359
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8363
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8367
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8371
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8375
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8379
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8383
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8387
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8391
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8397
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8401
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8407
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8411
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8418
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8422
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8426
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8432
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8436
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8440
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8444
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8448
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8452
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8456
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8462
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8466
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8470
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8474
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8480
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8493
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8498
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8504
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8508
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8521
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8526
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8530
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8534
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8538
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8542
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8546
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8560
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8564
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8571
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8582
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8587
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8593
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8605
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8617
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8629
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8642
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8655
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8668
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8681
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8694
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8707
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8720
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8733
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8746
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8759
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8774
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8801
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8843
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8879
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8915
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8932
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8944
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8964
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8984
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9004
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9020
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9033
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9046
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9059
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9072
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9084
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9096
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9108
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9120
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9132
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9144
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9156
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9168
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9180
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9193
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9206
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9221
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9229
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9238
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9248
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9271
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9276
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9282
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9289
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9293
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9298
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9302
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9308
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9314
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9321
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9328
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9337
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9344
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9351
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9360
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9364
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9368
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9374
		{
		}
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9376
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9386
		{
			yyVAL.str = ""
		}
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9390
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
