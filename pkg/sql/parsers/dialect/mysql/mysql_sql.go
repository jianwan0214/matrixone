// Code generated by goyacc -o mysql_sql.go -c mysql mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
	"go/constant"
	"strings"
)

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const DISTINCTROW = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const KEYS = 57374
const VALUES = 57375
const LAST_INSERT_ID = 57376
const NEXT = 57377
const VALUE = 57378
const SHARE = 57379
const MODE = 57380
const SQL_NO_CACHE = 57381
const SQL_CACHE = 57382
const JOIN = 57383
const STRAIGHT_JOIN = 57384
const LEFT = 57385
const RIGHT = 57386
const INNER = 57387
const OUTER = 57388
const CROSS = 57389
const NATURAL = 57390
const USE = 57391
const FORCE = 57392
const ON = 57393
const USING = 57394
const SUBQUERY_AS_EXPR = 57395
const ID = 57396
const AT_ID = 57397
const AT_AT_ID = 57398
const STRING = 57399
const VALUE_ARG = 57400
const LIST_ARG = 57401
const COMMENT = 57402
const COMMENT_KEYWORD = 57403
const INTEGRAL = 57404
const HEX = 57405
const HEXNUM = 57406
const BIT_LITERAL = 57407
const FLOAT = 57408
const NULL = 57409
const TRUE = 57410
const FALSE = 57411
const EMPTY_FROM_CLAUSE = 57412
const LOWER_THAN_CHARSET = 57413
const CHARSET = 57414
const UNIQUE = 57415
const KEY = 57416
const OR = 57417
const XOR = 57418
const AND = 57419
const NOT = 57420
const BETWEEN = 57421
const CASE = 57422
const WHEN = 57423
const THEN = 57424
const ELSE = 57425
const END = 57426
const LE = 57427
const GE = 57428
const NE = 57429
const NULL_SAFE_EQUAL = 57430
const IS = 57431
const LIKE = 57432
const REGEXP = 57433
const IN = 57434
const ASSIGNMENT = 57435
const SHIFT_LEFT = 57436
const SHIFT_RIGHT = 57437
const DIV = 57438
const MOD = 57439
const UNARY = 57440
const COLLATE = 57441
const BINARY = 57442
const UNDERSCORE_BINARY = 57443
const INTERVAL = 57444
const BEGIN = 57445
const START = 57446
const TRANSACTION = 57447
const COMMIT = 57448
const ROLLBACK = 57449
const WORK = 57450
const CONSISTENT = 57451
const SNAPSHOT = 57452
const CHAIN = 57453
const NO = 57454
const RELEASE = 57455
const BIT = 57456
const TINYINT = 57457
const SMALLINT = 57458
const MEDIUMINT = 57459
const INT = 57460
const INTEGER = 57461
const BIGINT = 57462
const INTNUM = 57463
const REAL = 57464
const DOUBLE = 57465
const FLOAT_TYPE = 57466
const DECIMAL = 57467
const NUMERIC = 57468
const TIME = 57469
const TIMESTAMP = 57470
const DATETIME = 57471
const YEAR = 57472
const CHAR = 57473
const VARCHAR = 57474
const BOOL = 57475
const CHARACTER = 57476
const VARBINARY = 57477
const NCHAR = 57478
const TEXT = 57479
const TINYTEXT = 57480
const MEDIUMTEXT = 57481
const LONGTEXT = 57482
const BLOB = 57483
const TINYBLOB = 57484
const MEDIUMBLOB = 57485
const LONGBLOB = 57486
const JSON = 57487
const ENUM = 57488
const GEOMETRY = 57489
const POINT = 57490
const LINESTRING = 57491
const POLYGON = 57492
const GEOMETRYCOLLECTION = 57493
const MULTIPOINT = 57494
const MULTILINESTRING = 57495
const MULTIPOLYGON = 57496
const INT1 = 57497
const INT2 = 57498
const INT3 = 57499
const INT4 = 57500
const INT8 = 57501
const CREATE = 57502
const ALTER = 57503
const DROP = 57504
const RENAME = 57505
const ANALYZE = 57506
const ADD = 57507
const SCHEMA = 57508
const TABLE = 57509
const INDEX = 57510
const VIEW = 57511
const TO = 57512
const IGNORE = 57513
const IF = 57514
const PRIMARY = 57515
const COLUMN = 57516
const CONSTRAINT = 57517
const SPATIAL = 57518
const FULLTEXT = 57519
const FOREIGN = 57520
const KEY_BLOCK_SIZE = 57521
const SHOW = 57522
const DESCRIBE = 57523
const EXPLAIN = 57524
const DATE = 57525
const ESCAPE = 57526
const REPAIR = 57527
const OPTIMIZE = 57528
const TRUNCATE = 57529
const MAXVALUE = 57530
const PARTITION = 57531
const REORGANIZE = 57532
const LESS = 57533
const THAN = 57534
const PROCEDURE = 57535
const TRIGGER = 57536
const STATUS = 57537
const VARIABLES = 57538
const ROLE = 57539
const PROXY = 57540
const AVG_ROW_LENGTH = 57541
const STORAGE = 57542
const DISK = 57543
const MEMORY = 57544
const CHECKSUM = 57545
const COMPRESSION = 57546
const DATA = 57547
const DIRECTORY = 57548
const DELAY_KEY_WRITE = 57549
const ENCRYPTION = 57550
const ENGINE = 57551
const MAX_ROWS = 57552
const MIN_ROWS = 57553
const PACK_KEYS = 57554
const ROW_FORMAT = 57555
const STATS_AUTO_RECALC = 57556
const STATS_PERSISTENT = 57557
const STATS_SAMPLE_PAGES = 57558
const DYNAMIC = 57559
const COMPRESSED = 57560
const REDUNDANT = 57561
const COMPACT = 57562
const FIXED = 57563
const COLUMN_FORMAT = 57564
const AUTO_RANDOM = 57565
const RESTRICT = 57566
const CASCADE = 57567
const ACTION = 57568
const PARTIAL = 57569
const SIMPLE = 57570
const CHECK = 57571
const ENFORCED = 57572
const RANGE = 57573
const LIST = 57574
const ALGORITHM = 57575
const LINEAR = 57576
const PARTITIONS = 57577
const SUBPARTITION = 57578
const SUBPARTITIONS = 57579
const TYPE = 57580
const PROPERTIES = 57581
const PARSER = 57582
const VISIBLE = 57583
const INVISIBLE = 57584
const BTREE = 57585
const HASH = 57586
const RTREE = 57587
const BSI = 57588
const ZONEMAP = 57589
const EXPIRE = 57590
const ACCOUNT = 57591
const UNLOCK = 57592
const DAY = 57593
const NEVER = 57594
const SECOND = 57595
const ASCII = 57596
const COALESCE = 57597
const COLLATION = 57598
const HOUR = 57599
const MICROSECOND = 57600
const MINUTE = 57601
const MONTH = 57602
const QUARTER = 57603
const REPEAT = 57604
const REVERSE = 57605
const ROW_COUNT = 57606
const WEEK = 57607
const REVOKE = 57608
const FUNCTION = 57609
const PRIVILEGES = 57610
const TABLESPACE = 57611
const EXECUTE = 57612
const SUPER = 57613
const GRANT = 57614
const OPTION = 57615
const REFERENCES = 57616
const REPLICATION = 57617
const SLAVE = 57618
const CLIENT = 57619
const USAGE = 57620
const RELOAD = 57621
const FILE = 57622
const TEMPORARY = 57623
const ROUTINE = 57624
const EVENT = 57625
const SHUTDOWN = 57626
const NULLX = 57627
const AUTO_INCREMENT = 57628
const APPROXNUM = 57629
const SIGNED = 57630
const UNSIGNED = 57631
const ZEROFILL = 57632
const USER = 57633
const IDENTIFIED = 57634
const CIPHER = 57635
const ISSUER = 57636
const X509 = 57637
const SUBJECT = 57638
const SAN = 57639
const REQUIRE = 57640
const SSL = 57641
const NONE = 57642
const PASSWORD = 57643
const MAX_QUERIES_PER_HOUR = 57644
const MAX_UPDATES_PER_HOUR = 57645
const MAX_CONNECTIONS_PER_HOUR = 57646
const MAX_USER_CONNECTIONS = 57647
const FORMAT = 57648
const CONNECTION = 57649
const LOAD = 57650
const INFILE = 57651
const TERMINATED = 57652
const OPTIONALLY = 57653
const ENCLOSED = 57654
const ESCAPED = 57655
const STARTING = 57656
const LINES = 57657
const DATABASES = 57658
const TABLES = 57659
const EXTENDED = 57660
const FULL = 57661
const PROCESSLIST = 57662
const FIELDS = 57663
const COLUMNS = 57664
const OPEN = 57665
const ERRORS = 57666
const WARNINGS = 57667
const INDEXES = 57668
const NAMES = 57669
const GLOBAL = 57670
const SESSION = 57671
const ISOLATION = 57672
const LEVEL = 57673
const READ = 57674
const WRITE = 57675
const ONLY = 57676
const REPEATABLE = 57677
const COMMITTED = 57678
const UNCOMMITTED = 57679
const SERIALIZABLE = 57680
const LOCAL = 57681
const EXCEPT = 57682
const CURRENT_TIMESTAMP = 57683
const DATABASE = 57684
const CURRENT_TIME = 57685
const LOCALTIME = 57686
const LOCALTIMESTAMP = 57687
const UTC_DATE = 57688
const UTC_TIME = 57689
const UTC_TIMESTAMP = 57690
const REPLACE = 57691
const CONVERT = 57692
const SEPARATOR = 57693
const CURRENT_DATE = 57694
const CURRENT_USER = 57695
const CURRENT_ROLE = 57696
const MATCH = 57697
const AGAINST = 57698
const BOOLEAN = 57699
const LANGUAGE = 57700
const WITH = 57701
const QUERY = 57702
const EXPANSION = 57703
const ADDDATE = 57704
const BIT_AND = 57705
const BIT_OR = 57706
const BIT_XOR = 57707
const CAST = 57708
const COUNT = 57709
const APPROX_COUNT_DISTINCT = 57710
const APPROX_PERCENTILE = 57711
const CURDATE = 57712
const CURTIME = 57713
const DATE_ADD = 57714
const DATE_SUB = 57715
const EXTRACT = 57716
const GROUP_CONCAT = 57717
const MAX = 57718
const MID = 57719
const MIN = 57720
const NOW = 57721
const POSITION = 57722
const SESSION_USER = 57723
const STD = 57724
const STDDEV = 57725
const STDDEV_POP = 57726
const STDDEV_SAMP = 57727
const SUBDATE = 57728
const SUBSTR = 57729
const SUBSTRING = 57730
const SUM = 57731
const SYSDATE = 57732
const SYSTEM_USER = 57733
const TRANSLATE = 57734
const TRIM = 57735
const VARIANCE = 57736
const VAR_POP = 57737
const VAR_SAMP = 57738
const AVG = 57739
const ROW = 57740
const OUTFILE = 57741
const HEADER = 57742
const MAX_FILE_SIZE = 57743
const FORCE_QUOTE = 57744
const UNUSED = 57745

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"KEYS",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"HEXNUM",
	"BIT_LITERAL",
	"FLOAT",
	"NULL",
	"TRUE",
	"FALSE",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"CONNECTION",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EXCEPT",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"';'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:5938

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 50,
	17, 332,
	-2, 306,
	-1, 54,
	185, 469,
	-2, 505,
	-1, 63,
	212, 232,
	213, 232,
	-2, 252,
	-1, 304,
	58, 1213,
	422, 1213,
	-2, 91,
	-1, 323,
	58, 632,
	422, 632,
	-2, 467,
	-1, 324,
	58, 460,
	422, 460,
	-2, 468,
	-1, 331,
	17, 333,
	-2, 306,
	-1, 563,
	54, 750,
	-2, 1254,
	-1, 564,
	54, 751,
	-2, 1255,
	-1, 565,
	54, 752,
	-2, 1256,
	-1, 572,
	54, 809,
	-2, 1218,
	-1, 573,
	54, 811,
	-2, 1229,
	-1, 713,
	1, 495,
	421, 495,
	-2, 502,
	-1, 823,
	17, 332,
	-2, 690,
	-1, 865,
	119, 933,
	-2, 931,
	-1, 867,
	119, 414,
	-2, 928,
	-1, 868,
	119, 415,
	-2, 929,
	-1, 1057,
	1, 496,
	421, 496,
	-2, 502,
	-1, 1436,
	1, 542,
	206, 542,
	421, 542,
	-2, 502,
	-1, 1438,
	246, 657,
	-2, 638,
	-1, 1540,
	1, 543,
	206, 543,
	421, 543,
	-2, 502,
	-1, 1568,
	246, 657,
	-2, 639,
	-1, 1942,
	55, 517,
	56, 517,
	-2, 502,
	-1, 1946,
	55, 517,
	56, 517,
	-2, 502,
	-1, 1958,
	55, 521,
	56, 521,
	-2, 502,
	-1, 1961,
	55, 522,
	56, 522,
	-2, 502,
}

const yyPrivate = 57344

const yyLast = 16106

var yyAct = [...]int{
	704, 1105, 1948, 1946, 1945, 1953, 1919, 576, 1893, 1537,
	694, 574, 1106, 1792, 593, 1865, 1908, 1580, 1849, 1766,
	525, 1850, 1744, 79, 1421, 1703, 281, 491, 1314, 1535,
	763, 1047, 1695, 1754, 1536, 291, 82, 1602, 79, 293,
	523, 1675, 1431, 1341, 1569, 431, 382, 325, 325, 1234,
	478, 1504, 1502, 1601, 1501, 1337, 750, 691, 78, 1308,
	552, 1509, 1513, 1357, 1342, 1209, 1483, 1374, 1319, 1346,
	383, 1050, 847, 1373, 1267, 286, 656, 533, 79, 495,
	856, 688, 575, 862, 848, 865, 285, 18, 49, 857,
	1203, 585, 1139, 743, 1544, 1058, 707, 332, 663, 689,
	331, 1104, 545, 747, 300, 300, 1020, 1107, 276, 516,
	295, 765, 719, 407, 718, 720, 279, 1028, 796, 375,
	602, 50, 680, 330, 433, 297, 419, 1035, 75, 296,
	448, 1531, 1417, 1313, 474, 850, 1459, 287, 1031, 73,
	1784, 1309, 1331, 376, 1186, 502, 50, 1204, 1809, 1193,
	397, 396, 737, 352, 498, 468, 732, 733, 327, 1837,
	392, 490, 18, 1045, 489, 492, 493, 722, 389, 492,
	493, 391, 503, 1835, 362, 697, 463, 459, 1869, 534,
	395, 1853, 1854, 1696, 1697, 1698, 1699, 1693, 1315, 1199,
	1774, 1777, 393, 344, 1534, 1200, 50, 1201, 701, 1320,
	1321, 1322, 1323, 1174, 500, 412, 1212, 1210, 1207, 1211,
	1213, 1031, 1206, 1205, 744, 1361, 363, 1212, 1210, 1358,
	1211, 1213, 1447, 1033, 1674, 1589, 1588, 450, 461, 462,
	1585, 1528, 460, 1414, 449, 1686, 1496, 1466, 1470, 1472,
	1474, 1476, 1477, 1479, 1839, 1385, 1383, 1384, 1680, 681,
	1461, 1462, 1463, 1464, 1445, 1446, 1467, 1495, 1448, 1832,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1465, 1360, 1783, 1852, 394, 683, 79, 411, 1469, 1471,
	1473, 1475, 1478, 774, 775, 773, 410, 1755, 1756, 1757,
	1759, 1758, 1215, 1216, 1217, 1218, 1492, 1938, 1954, 1875,
	346, 1790, 1791, 1834, 1794, 1794, 1460, 1882, 1817, 1669,
	343, 342, 435, 1929, 1638, 1637, 329, 1841, 1842, 1800,
	386, 512, 457, 1768, 458, 398, 1949, 1194, 436, 499,
	1955, 338, 1920, 1911, 1786, 1787, 488, 487, 1375, 1626,
	406, 1268, 479, 1350, 501, 1772, 1493, 1664, 1190, 682,
	1081, 409, 1039, 481, 1660, 1324, 1415, 483, 386, 735,
	1221, 1385, 1383, 1384, 1511, 1510, 1380, 1232, 1379, 1378,
	1376, 1077, 325, 506, 454, 736, 445, 1076, 383, 383,
	383, 440, 1079, 1078, 504, 505, 367, 734, 364, 480,
	365, 482, 1933, 388, 757, 1897, 1223, 414, 1632, 1311,
	548, 50, 455, 1729, 437, 438, 439, 526, 1242, 655,
	1184, 529, 547, 441, 1183, 347, 661, 411, 79, 79,
	79, 79, 1377, 528, 1173, 337, 664, 1167, 1840, 300,
	1071, 388, 1912, 1043, 1223, 369, 368, 1301, 1015, 437,
	438, 439, 526, 492, 493, 325, 325, 411, 325, 435,
	778, 1351, 1785, 435, 473, 469, 695, 492, 493, 1309,
	658, 484, 530, 527, 415, 436, 325, 325, 408, 436,
	1222, 1052, 745, 472, 452, 1154, 345, 808, 678, 325,
	1468, 325, 511, 713, 703, 79, 453, 456, 708, 1767,
	522, 1034, 651, 496, 447, 517, 451, 1494, 527, 727,
	1915, 325, 712, 300, 1187, 696, 518, 494, 465, 497,
	1906, 536, 470, 325, 383, 1332, 325, 485, 1347, 1350,
	715, 519, 520, 521, 1804, 725, 50, 1381, 1382, 751,
	535, 758, 1491, 1303, 714, 751, 1665, 1666, 300, 1169,
	325, 325, 762, 79, 1909, 1910, 1030, 699, 776, 1083,
	728, 1018, 413, 677, 676, 665, 666, 667, 668, 1662,
	709, 710, 779, 1661, 766, 359, 700, 716, 717, 1671,
	300, 693, 723, 684, 1109, 1108, 775, 773, 764, 724,
	767, 825, 729, 1302, 1101, 1212, 1210, 698, 1211, 1213,
	515, 711, 824, 1926, 702, 1102, 1029, 773, 300, 539,
	540, 541, 542, 543, 721, 486, 1670, 1487, 1730, 1732,
	1733, 1734, 1731, 1482, 832, 746, 437, 438, 439, 1433,
	1655, 760, 3, 741, 1422, 1243, 756, 1351, 1928, 753,
	754, 755, 1344, 742, 366, 1740, 1345, 1348, 807, 806,
	816, 817, 809, 810, 811, 812, 813, 814, 815, 808,
	1738, 761, 333, 854, 854, 859, 1944, 759, 1146, 1925,
	514, 1114, 1876, 826, 827, 828, 829, 1117, 392, 1927,
	861, 1739, 1144, 1145, 1143, 1434, 1119, 524, 830, 867,
	811, 812, 813, 814, 815, 808, 1737, 802, 1349, 74,
	1872, 22, 37, 23, 1736, 868, 845, 1846, 404, 1272,
	823, 1822, 1271, 370, 1564, 437, 438, 439, 526, 62,
	356, 1770, 1706, 69, 1769, 79, 1726, 1746, 357, 774,
	775, 773, 281, 390, 837, 774, 775, 773, 1060, 1073,
	1735, 1724, 38, 1723, 774, 775, 773, 71, 325, 1016,
	766, 392, 853, 1722, 782, 783, 784, 785, 786, 787,
	1061, 780, 1725, 1947, 860, 1719, 767, 391, 325, 1048,
	1049, 1713, 1710, 1546, 527, 1709, 751, 751, 751, 1616,
	548, 1615, 79, 393, 1025, 284, 11, 1014, 1098, 1099,
	1614, 50, 547, 866, 1613, 1610, 1095, 1096, 1097, 774,
	775, 773, 1062, 1063, 1064, 300, 1115, 1116, 1065, 1870,
	1532, 1074, 1427, 65, 66, 1112, 67, 68, 1059, 1426,
	1425, 1424, 774, 775, 773, 1088, 1038, 1296, 1127, 1128,
	1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138,
	1068, 1066, 845, 1148, 1149, 1067, 659, 1069, 721, 1845,
	1157, 1070, 1103, 1745, 1152, 1091, 1831, 1094, 1080, 1811,
	1798, 11, 437, 438, 439, 1159, 1797, 1084, 1085, 1086,
	54, 64, 72, 282, 6, 1727, 354, 1720, 355, 362,
	1716, 1715, 1092, 353, 351, 350, 358, 1714, 360, 361,
	63, 61, 60, 1676, 1550, 816, 817, 809, 810, 811,
	812, 813, 814, 815, 808, 1554, 1657, 1235, 1110, 1111,
	1533, 1113, 1435, 1147, 283, 5, 1120, 1121, 1122, 1123,
	1141, 1124, 1125, 1126, 1420, 1543, 1042, 1418, 1329, 1545,
	1547, 1549, 1328, 1551, 1552, 1553, 1555, 1556, 1557, 1559,
	1560, 1561, 1562, 1327, 1326, 1155, 1040, 841, 1172, 6,
	1572, 840, 839, 705, 1158, 1685, 1160, 660, 1275, 1245,
	1963, 1245, 1274, 1041, 1161, 1565, 809, 810, 811, 812,
	813, 814, 815, 808, 1958, 1249, 46, 774, 775, 773,
	1936, 1404, 47, 336, 1399, 1575, 774, 775, 773, 1819,
	5, 1570, 1393, 335, 1818, 1563, 1805, 1583, 1584, 1392,
	1957, 1956, 1571, 774, 775, 773, 774, 775, 773, 1037,
	1939, 1688, 1542, 1687, 774, 775, 773, 1521, 48, 1935,
	1934, 774, 775, 773, 1520, 1903, 1175, 1558, 411, 1391,
	774, 775, 773, 1548, 538, 1519, 1576, 664, 1390, 1037,
	1923, 1178, 325, 1500, 1179, 325, 1436, 1181, 411, 1405,
	325, 774, 775, 773, 1197, 1037, 1922, 1189, 1896, 1895,
	774, 775, 773, 1389, 1195, 1196, 1388, 1622, 1860, 708,
	807, 806, 816, 817, 809, 810, 811, 812, 813, 814,
	815, 808, 1229, 1387, 1362, 774, 775, 773, 774, 775,
	773, 1278, 325, 1622, 1855, 1372, 1090, 1843, 1371, 1276,
	79, 79, 1188, 1622, 1815, 774, 775, 773, 1622, 1814,
	74, 1582, 1273, 1343, 1622, 1813, 1220, 774, 775, 773,
	774, 775, 773, 1254, 1176, 1250, 1177, 391, 1622, 1812,
	1246, 1191, 1251, 1247, 1248, 1237, 1238, 1284, 1578, 1803,
	1802, 1185, 1370, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1781, 1780, 1225, 1202, 1262, 1751, 1752, 1226, 71, 1227,
	1577, 1579, 1059, 1219, 774, 775, 773, 1265, 1266, 1751,
	1750, 1691, 1690, 1233, 1270, 1230, 854, 1244, 1288, 854,
	1622, 1621, 1291, 1150, 1279, 1231, 751, 1236, 1409, 1408,
	1156, 1299, 751, 325, 679, 1228, 771, 325, 325, 1245,
	1394, 325, 1245, 1386, 1294, 774, 775, 773, 1245, 1253,
	1245, 1252, 1585, 537, 74, 657, 22, 37, 23, 1914,
	1295, 1171, 1170, 74, 1573, 79, 1689, 1013, 1245, 74,
	1283, 22, 37, 23, 1162, 411, 1290, 1264, 1165, 1164,
	769, 392, 1037, 1036, 1340, 1141, 1263, 653, 444, 1287,
	650, 1437, 79, 1367, 1304, 1306, 1901, 1280, 1017, 1289,
	1330, 1285, 71, 1959, 1297, 1286, 464, 1292, 1369, 1293,
	443, 652, 442, 823, 1300, 1031, 443, 71, 1943, 1406,
	1241, 445, 1307, 1522, 1325, 1168, 1151, 1090, 1046, 513,
	1905, 1679, 445, 74, 1899, 50, 1883, 1880, 1878, 1403,
	1821, 807, 806, 816, 817, 809, 810, 811, 812, 813,
	814, 815, 808, 1352, 1353, 657, 325, 1764, 1354, 1564,
	1749, 1747, 1367, 1401, 1742, 1683, 1402, 1366, 807, 806,
	816, 817, 809, 810, 811, 812, 813, 814, 815, 808,
	1398, 71, 1682, 1060, 421, 424, 425, 426, 422, 1395,
	423, 427, 1681, 1678, 1481, 1400, 1668, 1166, 1653, 1503,
	1619, 1397, 1596, 1595, 1432, 1505, 1514, 1407, 1862, 1627,
	1516, 1488, 1429, 1410, 1333, 1334, 1142, 1499, 1546, 1224,
	1180, 1163, 1430, 1082, 1075, 846, 844, 1498, 843, 1413,
	842, 838, 310, 797, 309, 313, 305, 1423, 835, 833,
	1428, 831, 71, 805, 804, 803, 301, 1485, 421, 424,
	425, 426, 422, 801, 423, 427, 1480, 320, 1444, 800,
	1524, 416, 325, 325, 1486, 1484, 79, 1484, 799, 751,
	1490, 798, 421, 424, 425, 426, 422, 795, 423, 427,
	411, 1489, 794, 1506, 1507, 1508, 793, 792, 411, 1541,
	791, 790, 789, 788, 1512, 654, 446, 1340, 1517, 1021,
	1022, 1529, 1055, 1888, 1027, 1886, 1851, 1518, 1277, 1214,
	1089, 1024, 466, 1523, 1026, 670, 673, 671, 669, 1525,
	1526, 674, 672, 1527, 294, 675, 531, 425, 426, 532,
	1060, 1310, 1586, 1603, 1605, 334, 1603, 1603, 1411, 1550,
	1048, 1049, 1053, 1566, 731, 1412, 429, 1591, 1590, 1592,
	1554, 1609, 1593, 1594, 807, 806, 816, 817, 809, 810,
	811, 812, 813, 814, 815, 808, 1597, 1598, 1599, 1600,
	1543, 1604, 326, 471, 1545, 1547, 1549, 1900, 1551, 1552,
	1553, 1555, 1556, 1557, 1559, 1560, 1561, 1562, 1608, 1606,
	1607, 1109, 1108, 1628, 400, 402, 403, 1612, 476, 477,
	1826, 1624, 1824, 303, 302, 306, 1779, 1618, 1778, 1776,
	1565, 308, 806, 816, 817, 809, 810, 811, 812, 813,
	814, 815, 808, 312, 1707, 1620, 1497, 1419, 336, 1365,
	1317, 1316, 475, 336, 1656, 335, 79, 685, 335, 1364,
	1563, 1631, 1623, 335, 1240, 657, 1182, 1432, 1890, 1889,
	334, 275, 1889, 1890, 428, 348, 1, 1542, 849, 1605,
	855, 1743, 1586, 1654, 1861, 1892, 1820, 1864, 592, 1658,
	1701, 1672, 1558, 411, 577, 1771, 1198, 1692, 1548, 1773,
	1708, 1694, 1044, 1617, 1192, 467, 1281, 1282, 1677, 614,
	604, 834, 605, 649, 401, 1702, 1684, 603, 1611, 1359,
	341, 399, 1741, 349, 1673, 1705, 1312, 1704, 1587, 1515,
	1118, 1153, 435, 307, 311, 686, 1952, 315, 687, 1942,
	1918, 317, 318, 319, 1898, 1793, 321, 322, 436, 411,
	1937, 1833, 411, 411, 411, 1629, 1630, 1721, 1633, 1634,
	1635, 1636, 1881, 1874, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1753, 1789,
	1625, 1761, 1762, 1763, 1760, 807, 806, 816, 817, 809,
	810, 811, 812, 813, 814, 815, 808, 1775, 298, 738,
	507, 373, 1765, 380, 662, 1318, 1208, 1051, 1788, 1032,
	690, 299, 1782, 79, 1748, 339, 1054, 340, 1057, 1056,
	411, 781, 1795, 1796, 1140, 836, 550, 584, 578, 1356,
	1806, 1355, 1581, 726, 25, 411, 430, 772, 863, 81,
	1072, 864, 1700, 1801, 1711, 1712, 1530, 1866, 764, 1810,
	1717, 1718, 1829, 591, 1396, 590, 589, 588, 420, 418,
	417, 290, 289, 1239, 1816, 1363, 768, 770, 1848, 1847,
	1807, 1825, 1823, 1827, 1828, 807, 806, 816, 817, 809,
	810, 811, 812, 813, 814, 815, 808, 1808, 1836, 1838,
	1416, 1667, 1868, 1728, 1663, 1659, 1844, 1799, 1540, 1539,
	1567, 1568, 1574, 1269, 1443, 1439, 1867, 1441, 1856, 1857,
	1858, 1859, 1442, 1440, 1438, 1338, 1339, 1877, 1336, 1879,
	1335, 1871, 1023, 1873, 807, 806, 816, 817, 809, 810,
	811, 812, 813, 814, 815, 808, 1884, 1019, 851, 1887,
	1894, 1885, 858, 405, 1298, 706, 76, 288, 1891, 411,
	1093, 411, 544, 70, 17, 16, 15, 45, 695, 1902,
	695, 1904, 44, 43, 42, 1907, 14, 1868, 1917, 8,
	41, 40, 39, 13, 12, 36, 411, 1913, 35, 34,
	33, 1867, 1916, 32, 1921, 695, 1924, 31, 30, 29,
	28, 27, 1894, 1930, 26, 9, 1830, 53, 1932, 52,
	51, 19, 20, 21, 1940, 59, 58, 57, 56, 55,
	24, 10, 1941, 7, 4, 2, 0, 0, 0, 1951,
	0, 1950, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1962, 1961, 1960, 1951, 981, 967, 0, 929, 983,
	901, 917, 991, 919, 920, 955, 879, 938, 205, 915,
	871, 904, 905, 873, 912, 874, 902, 931, 150, 900,
	970, 941, 175, 989, 177, 0, 0, 234, 190, 0,
	0, 934, 972, 936, 960, 928, 956, 887, 949, 984,
	916, 953, 985, 0, 0, 0, 0, 437, 438, 439,
	0, 0, 0, 0, 133, 0, 0, 0, 0, 0,
	952, 977, 914, 0, 0, 888, 982, 935, 954, 0,
	872, 950, 0, 877, 880, 990, 975, 909, 910, 0,
	0, 0, 0, 0, 0, 0, 932, 937, 957, 925,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 906,
	0, 945, 0, 0, 0, 882, 878, 0, 930, 0,
	124, 239, 253, 134, 230, 267, 138, 237, 130, 204,
	226, 126, 251, 236, 187, 169, 170, 125, 0, 221,
	148, 161, 145, 202, 979, 980, 144, 270, 881, 261,
	128, 129, 260, 201, 248, 252, 188, 182, 127, 250,
	186, 181, 173, 152, 165, 214, 180, 215, 166, 192,
	191, 193, 1001, 1002, 1003, 1004, 1005, 886, 0, 907,
	958, 0, 870, 966, 973, 927, 263, 976, 924, 923,
	1008, 0, 1007, 238, 1009, 1010, 174, 971, 903, 913,
	908, 911, 224, 207, 978, 944, 212, 222, 178, 249,
	216, 254, 240, 262, 961, 217, 120, 241, 147, 189,
	131, 132, 143, 149, 151, 153, 154, 198, 199, 210,
	229, 242, 243, 244, 146, 139, 223, 140, 163, 141,
	121, 231, 142, 122, 211, 247, 1006, 160, 219, 185,
	123, 184, 213, 246, 245, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 869, 258, 0, 203,
	968, 875, 885, 883, 921, 946, 947, 948, 993, 963,
	965, 964, 992, 227, 0, 0, 0, 0, 0, 168,
	209, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 876, 0, 235, 256, 269, 259, 922,
	894, 933, 268, 897, 895, 962, 896, 951, 994, 194,
	195, 196, 197, 918, 137, 942, 926, 995, 996, 997,
	998, 999, 1000, 899, 974, 156, 162, 0, 164, 136,
	208, 159, 266, 171, 200, 167, 232, 172, 179, 220,
	265, 206, 225, 135, 255, 233, 183, 158, 893, 898,
	892, 939, 940, 986, 987, 988, 959, 884, 969, 889,
	891, 890, 943, 119, 0, 176, 264, 218, 155, 819,
	0, 822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 820, 821, 818, 0, 807,
	806, 816, 817, 809, 810, 811, 812, 813, 814, 815,
	808, 610, 0, 0, 0, 1011, 1012, 272, 273, 274,
	257, 205, 0, 0, 0, 0, 0, 586, 0, 0,
	0, 150, 752, 0, 0, 175, 0, 177, 0, 0,
	234, 190, 0, 0, 0, 0, 626, 634, 0, 0,
	0, 0, 0, 0, 748, 0, 0, 579, 0, 0,
	551, 616, 615, 594, 0, 0, 0, 133, 595, 0,
	600, 0, 596, 599, 597, 598, 0, 0, 618, 0,
	0, 0, 0, 0, 549, 583, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 581,
	0, 0, 0, 0, 611, 0, 582, 0, 0, 749,
	0, 601, 0, 124, 239, 253, 134, 230, 267, 138,
	237, 130, 204, 226, 126, 251, 236, 187, 169, 170,
	125, 0, 221, 148, 161, 145, 202, 608, 609, 144,
	573, 606, 261, 128, 129, 260, 201, 248, 252, 188,
	182, 127, 250, 186, 181, 173, 152, 165, 214, 180,
	215, 166, 192, 191, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 624, 0, 0, 0, 238, 0, 0, 174,
	0, 0, 0, 607, 0, 224, 207, 637, 0, 212,
	222, 178, 249, 216, 254, 240, 262, 0, 217, 120,
	241, 147, 189, 131, 132, 143, 149, 151, 153, 154,
	198, 199, 210, 229, 242, 243, 244, 146, 139, 223,
	140, 163, 141, 121, 231, 142, 122, 211, 247, 0,
	160, 219, 185, 123, 184, 213, 246, 245, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	258, 622, 203, 636, 617, 619, 620, 623, 627, 628,
	629, 630, 631, 633, 635, 638, 227, 0, 0, 0,
	0, 0, 168, 209, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 256,
	269, 572, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 612, 194, 195, 196, 197, 625, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 162,
	0, 164, 136, 208, 159, 266, 171, 200, 167, 232,
	172, 179, 220, 265, 206, 225, 135, 255, 233, 183,
	158, 644, 621, 643, 645, 646, 642, 647, 648, 632,
	587, 0, 640, 639, 641, 0, 119, 0, 176, 264,
	218, 155, 83, 553, 554, 555, 556, 557, 558, 559,
	91, 560, 93, 94, 95, 96, 561, 98, 562, 100,
	101, 102, 563, 564, 565, 566, 107, 108, 109, 567,
	568, 112, 113, 114, 115, 569, 570, 571, 610, 0,
	272, 273, 274, 257, 0, 0, 0, 0, 205, 0,
	0, 0, 0, 0, 586, 0, 0, 0, 150, 1931,
	0, 0, 175, 0, 177, 0, 0, 234, 190, 0,
	0, 0, 0, 626, 634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 579, 0, 0, 551, 616, 615,
	594, 0, 0, 0, 133, 595, 0, 600, 0, 596,
	599, 597, 598, 0, 0, 618, 0, 0, 0, 0,
	0, 549, 583, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 580, 581, 0, 0, 0,
	0, 611, 0, 582, 0, 0, 613, 0, 601, 0,
	124, 239, 253, 134, 230, 267, 138, 237, 130, 204,
	226, 126, 251, 236, 187, 169, 170, 125, 0, 221,
	148, 161, 145, 202, 608, 609, 144, 573, 606, 261,
	128, 129, 260, 201, 248, 252, 188, 182, 127, 250,
	186, 181, 173, 152, 165, 214, 180, 215, 166, 192,
	191, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 624,
	0, 0, 0, 238, 0, 0, 174, 0, 0, 0,
	607, 0, 224, 207, 637, 0, 212, 222, 178, 249,
	216, 254, 240, 262, 0, 217, 120, 241, 147, 189,
	131, 132, 143, 149, 151, 153, 154, 198, 199, 210,
	229, 242, 243, 244, 146, 139, 223, 140, 163, 141,
	121, 231, 142, 122, 211, 247, 0, 160, 219, 185,
	123, 184, 213, 246, 245, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 258, 622, 203,
	636, 617, 619, 620, 623, 627, 628, 629, 630, 631,
	633, 635, 638, 227, 0, 0, 0, 0, 0, 168,
	209, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 256, 269, 572, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 612, 194,
	195, 196, 197, 625, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 162, 0, 164, 136,
	208, 159, 266, 171, 200, 167, 232, 172, 179, 220,
	265, 206, 225, 135, 255, 233, 183, 158, 644, 621,
	643, 645, 646, 642, 647, 648, 632, 587, 0, 640,
	639, 641, 0, 119, 0, 176, 264, 218, 155, 83,
	553, 554, 555, 556, 557, 558, 559, 91, 560, 93,
	94, 95, 96, 561, 98, 562, 100, 101, 102, 563,
	564, 565, 566, 107, 108, 109, 567, 568, 112, 113,
	114, 115, 569, 570, 571, 610, 0, 272, 273, 274,
	257, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 586, 0, 0, 0, 150, 752, 0, 0, 175,
	0, 177, 0, 0, 234, 190, 0, 0, 0, 0,
	626, 634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 0, 0, 551, 616, 615, 594, 0, 0,
	0, 133, 595, 0, 600, 0, 596, 599, 597, 598,
	0, 0, 618, 0, 0, 0, 0, 0, 549, 583,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 581, 0, 0, 0, 0, 611, 0,
	582, 0, 0, 613, 0, 601, 0, 124, 239, 253,
	134, 230, 267, 138, 237, 130, 204, 226, 126, 251,
	236, 187, 169, 170, 125, 0, 221, 148, 161, 145,
	202, 608, 609, 144, 573, 606, 261, 128, 129, 260,
	201, 248, 252, 188, 182, 127, 250, 186, 181, 173,
	152, 165, 214, 180, 215, 166, 192, 191, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 624, 0, 0, 0,
	238, 0, 0, 174, 0, 0, 0, 607, 0, 224,
	207, 637, 0, 212, 222, 178, 249, 216, 254, 240,
	262, 0, 217, 120, 241, 147, 189, 131, 132, 143,
	149, 151, 153, 154, 198, 199, 210, 229, 242, 243,
	244, 146, 139, 223, 140, 163, 141, 121, 231, 142,
	122, 211, 247, 0, 160, 219, 185, 123, 184, 213,
	246, 245, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 258, 622, 203, 636, 617, 619,
	620, 623, 627, 628, 629, 630, 631, 633, 635, 638,
	227, 0, 0, 0, 0, 0, 168, 209, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 256, 269, 572, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 612, 194, 195, 196, 197,
	625, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 162, 0, 164, 136, 208, 159, 266,
	171, 200, 167, 232, 172, 179, 220, 265, 206, 225,
	135, 255, 233, 183, 158, 644, 621, 643, 645, 646,
	642, 647, 648, 632, 587, 0, 640, 639, 641, 0,
	119, 0, 176, 264, 218, 155, 83, 553, 554, 555,
	556, 557, 558, 559, 91, 560, 93, 94, 95, 96,
	561, 98, 562, 100, 101, 102, 563, 564, 565, 566,
	107, 108, 109, 567, 568, 112, 113, 114, 115, 569,
	570, 571, 0, 0, 272, 273, 274, 257, 74, 0,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 586, 0, 0, 0,
	150, 0, 0, 0, 175, 0, 177, 0, 0, 234,
	190, 0, 0, 0, 0, 626, 634, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 579, 0, 0, 551,
	616, 615, 594, 0, 0, 0, 133, 595, 0, 600,
	0, 596, 599, 597, 598, 0, 0, 618, 0, 0,
	0, 0, 0, 549, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 581, 0,
	0, 0, 0, 611, 0, 582, 0, 0, 613, 0,
	601, 0, 124, 239, 253, 134, 230, 267, 138, 237,
	130, 204, 226, 126, 251, 236, 187, 169, 170, 125,
	0, 221, 148, 161, 145, 202, 608, 609, 144, 573,
	606, 261, 128, 129, 260, 201, 248, 252, 188, 182,
	127, 250, 186, 181, 173, 152, 165, 214, 180, 215,
	166, 192, 191, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 624, 0, 0, 0, 238, 0, 0, 174, 0,
	0, 0, 607, 0, 224, 207, 637, 0, 212, 222,
	178, 249, 216, 254, 240, 262, 0, 217, 120, 241,
	147, 189, 131, 132, 143, 149, 151, 153, 154, 198,
	199, 210, 229, 242, 243, 244, 146, 139, 223, 140,
	163, 141, 121, 231, 142, 122, 211, 247, 0, 160,
	219, 185, 123, 184, 213, 246, 245, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 258,
	622, 203, 636, 617, 619, 620, 623, 627, 628, 629,
	630, 631, 633, 635, 638, 227, 0, 0, 0, 0,
	0, 168, 209, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 256, 269,
	572, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	612, 194, 195, 196, 197, 625, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 162, 0,
	164, 136, 208, 159, 266, 171, 200, 167, 232, 172,
	179, 220, 265, 206, 225, 135, 255, 233, 183, 158,
	644, 621, 643, 645, 646, 642, 647, 648, 632, 587,
	0, 640, 639, 641, 0, 119, 0, 176, 264, 218,
	155, 83, 553, 554, 555, 556, 557, 558, 559, 91,
	560, 93, 94, 95, 96, 561, 98, 562, 100, 101,
	102, 563, 564, 565, 566, 107, 108, 109, 567, 568,
	112, 113, 114, 115, 569, 570, 571, 610, 0, 272,
	273, 274, 257, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 586, 0, 0, 0, 150, 0, 0,
	0, 175, 0, 177, 0, 0, 234, 190, 0, 0,
	0, 0, 626, 634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 579, 0, 0, 551, 616, 615, 594,
	0, 0, 0, 133, 595, 0, 600, 0, 596, 599,
	597, 598, 0, 0, 618, 0, 0, 0, 0, 0,
	549, 583, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 581, 546, 0, 0, 0,
	611, 0, 582, 0, 0, 613, 0, 601, 0, 124,
	239, 253, 134, 230, 267, 138, 237, 130, 204, 226,
	126, 251, 236, 187, 169, 170, 125, 0, 221, 148,
	161, 145, 202, 608, 609, 144, 573, 606, 261, 128,
	129, 260, 201, 248, 252, 188, 182, 127, 250, 186,
	181, 173, 152, 165, 214, 180, 215, 166, 192, 191,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 624, 0,
	0, 0, 238, 0, 0, 174, 0, 0, 0, 607,
	0, 224, 207, 637, 0, 212, 222, 178, 249, 216,
	254, 240, 262, 0, 217, 120, 241, 147, 189, 131,
	132, 143, 149, 151, 153, 154, 198, 199, 210, 229,
	242, 243, 244, 146, 139, 223, 140, 163, 141, 121,
	231, 142, 122, 211, 247, 0, 160, 219, 185, 123,
	184, 213, 246, 245, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 258, 622, 203, 636,
	617, 619, 620, 623, 627, 628, 629, 630, 631, 633,
	635, 638, 227, 0, 0, 0, 0, 0, 168, 209,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 256, 269, 572, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 612, 194, 195,
	196, 197, 625, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 162, 0, 164, 136, 208,
	159, 266, 171, 200, 167, 232, 172, 179, 220, 265,
	206, 225, 135, 255, 233, 183, 158, 644, 621, 643,
	645, 646, 642, 647, 648, 632, 587, 0, 640, 639,
	641, 0, 119, 0, 176, 264, 218, 155, 83, 553,
	554, 555, 556, 557, 558, 559, 91, 560, 93, 94,
	95, 96, 561, 98, 562, 100, 101, 102, 563, 564,
	565, 566, 107, 108, 109, 567, 568, 112, 113, 114,
	115, 569, 570, 571, 610, 0, 272, 273, 274, 257,
	0, 0, 0, 0, 205, 0, 0, 0, 0, 0,
	586, 0, 0, 0, 150, 0, 0, 0, 175, 0,
	177, 0, 0, 234, 190, 0, 0, 0, 0, 626,
	634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	579, 0, 0, 551, 616, 615, 594, 0, 0, 0,
	133, 595, 0, 600, 0, 596, 599, 597, 598, 0,
	0, 618, 0, 0, 0, 0, 0, 549, 583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 581, 0, 0, 0, 0, 611, 0, 582,
	0, 0, 613, 0, 601, 0, 124, 239, 253, 134,
	230, 267, 138, 237, 130, 204, 226, 126, 251, 236,
	187, 169, 170, 125, 0, 221, 148, 161, 145, 202,
	608, 609, 144, 573, 606, 261, 128, 129, 260, 201,
	248, 252, 188, 182, 127, 250, 186, 181, 173, 152,
	165, 214, 180, 215, 166, 192, 191, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 624, 0, 0, 0, 238,
	0, 0, 174, 0, 0, 0, 607, 0, 224, 207,
	637, 0, 212, 222, 178, 249, 216, 254, 240, 262,
	0, 217, 120, 241, 147, 189, 131, 132, 143, 149,
	151, 153, 154, 198, 199, 210, 229, 242, 243, 244,
	146, 139, 223, 140, 163, 141, 121, 231, 142, 122,
	211, 247, 0, 160, 219, 185, 123, 184, 213, 246,
	245, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 258, 622, 203, 636, 617, 619, 620,
	623, 627, 628, 629, 630, 631, 633, 635, 638, 227,
	0, 0, 0, 0, 0, 168, 209, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 256, 269, 572, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 612, 194, 195, 196, 197, 625,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 162, 0, 164, 136, 208, 159, 266, 171,
	200, 167, 232, 172, 179, 220, 265, 206, 225, 135,
	255, 233, 183, 158, 644, 621, 643, 645, 646, 642,
	647, 648, 632, 587, 0, 640, 639, 641, 0, 119,
	0, 176, 264, 218, 155, 83, 553, 554, 555, 556,
	557, 558, 559, 91, 560, 93, 94, 95, 96, 561,
	98, 562, 100, 101, 102, 563, 564, 565, 566, 107,
	108, 109, 567, 568, 112, 113, 114, 115, 569, 570,
	571, 610, 0, 272, 273, 274, 257, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 0, 586, 0, 0,
	0, 150, 0, 0, 0, 175, 0, 177, 0, 0,
	234, 190, 0, 0, 0, 0, 626, 634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 0, 0,
	551, 616, 615, 594, 0, 0, 0, 133, 595, 0,
	600, 0, 596, 599, 597, 598, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 580, 581,
	0, 0, 0, 0, 611, 0, 582, 0, 0, 613,
	0, 601, 0, 124, 239, 253, 134, 230, 267, 138,
	237, 130, 204, 226, 126, 251, 236, 187, 169, 170,
	125, 0, 221, 148, 161, 145, 202, 608, 609, 144,
	573, 606, 261, 128, 129, 260, 201, 248, 252, 188,
	182, 127, 250, 186, 181, 173, 152, 165, 214, 180,
	215, 166, 192, 191, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 624, 0, 0, 0, 238, 0, 0, 174,
	0, 0, 0, 607, 0, 224, 207, 637, 0, 212,
	222, 178, 249, 216, 254, 240, 262, 0, 217, 120,
	241, 147, 189, 131, 132, 143, 149, 151, 153, 154,
	198, 199, 210, 229, 242, 243, 244, 146, 139, 223,
	140, 163, 141, 121, 231, 142, 122, 211, 247, 0,
	160, 219, 185, 123, 184, 213, 246, 245, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	258, 622, 203, 636, 617, 619, 620, 623, 627, 628,
	629, 630, 631, 633, 635, 638, 227, 0, 0, 0,
	0, 0, 168, 209, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 256,
	269, 572, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 612, 194, 195, 196, 197, 625, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 162,
	0, 164, 136, 208, 159, 266, 171, 200, 167, 232,
	172, 179, 220, 265, 206, 225, 135, 255, 233, 183,
	158, 644, 621, 643, 645, 646, 642, 647, 648, 632,
	587, 0, 640, 639, 641, 0, 119, 0, 176, 264,
	218, 155, 83, 553, 554, 555, 556, 557, 558, 559,
	91, 560, 93, 94, 95, 96, 561, 98, 562, 100,
	101, 102, 563, 564, 565, 566, 107, 108, 109, 567,
	568, 112, 113, 114, 115, 569, 570, 571, 610, 0,
	272, 273, 274, 257, 0, 0, 0, 0, 205, 0,
	0, 0, 0, 0, 586, 0, 0, 0, 150, 0,
	0, 0, 175, 0, 177, 0, 0, 234, 190, 0,
	0, 0, 0, 626, 634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 551, 616, 615,
	594, 0, 0, 0, 133, 595, 0, 600, 0, 596,
	599, 597, 598, 0, 0, 618, 0, 0, 0, 0,
	0, 549, 583, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 580, 581, 0, 0, 0,
	0, 611, 0, 582, 0, 0, 613, 0, 601, 0,
	124, 239, 253, 134, 230, 267, 138, 237, 130, 204,
	226, 126, 251, 236, 187, 169, 170, 125, 0, 221,
	148, 161, 145, 202, 608, 609, 144, 573, 606, 261,
	128, 129, 260, 201, 248, 252, 188, 182, 127, 250,
	186, 181, 173, 152, 165, 214, 180, 215, 166, 192,
	191, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 624,
	0, 0, 0, 238, 0, 0, 174, 0, 0, 0,
	607, 0, 224, 207, 637, 0, 212, 222, 178, 249,
	216, 254, 240, 262, 0, 217, 120, 241, 147, 189,
	131, 132, 143, 149, 151, 153, 154, 198, 199, 210,
	229, 242, 243, 244, 146, 139, 223, 140, 163, 141,
	121, 231, 142, 122, 211, 247, 0, 160, 219, 185,
	123, 184, 213, 246, 245, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 258, 622, 203,
	636, 617, 619, 620, 623, 627, 628, 629, 630, 631,
	633, 635, 638, 227, 0, 0, 0, 0, 0, 168,
	209, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 256, 269, 572, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 612, 194,
	195, 196, 197, 625, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 162, 0, 164, 136,
	208, 159, 266, 171, 200, 167, 232, 172, 179, 220,
	265, 206, 225, 135, 255, 233, 183, 158, 644, 621,
	643, 645, 646, 642, 647, 648, 632, 587, 0, 640,
	639, 641, 0, 119, 0, 176, 264, 218, 155, 83,
	553, 554, 555, 556, 557, 558, 559, 91, 560, 93,
	94, 95, 96, 561, 98, 562, 100, 101, 102, 563,
	564, 565, 566, 107, 108, 109, 567, 568, 112, 113,
	114, 115, 569, 570, 571, 0, 0, 272, 273, 274,
	257, 310, 0, 309, 313, 305, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 150, 0, 0, 320, 175, 0, 177,
	0, 0, 234, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 324, 0, 0, 0, 133,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 239, 253, 134, 230,
	267, 138, 237, 130, 204, 226, 126, 251, 236, 187,
	169, 170, 125, 0, 221, 148, 161, 145, 202, 0,
	0, 144, 270, 0, 261, 128, 129, 260, 201, 248,
	252, 188, 182, 127, 250, 186, 181, 173, 152, 165,
	214, 180, 215, 166, 192, 191, 193, 0, 0, 0,
	0, 0, 303, 302, 306, 0, 0, 0, 0, 0,
	308, 263, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 174, 312, 0, 0, 0, 0, 224, 207, 0,
	0, 212, 222, 178, 249, 216, 304, 240, 262, 0,
	328, 120, 241, 147, 189, 131, 132, 143, 149, 151,
	153, 154, 198, 199, 210, 229, 242, 243, 244, 146,
	139, 223, 140, 163, 141, 121, 231, 142, 122, 211,
	247, 0, 160, 219, 185, 123, 184, 213, 246, 245,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 258, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 307, 311, 314, 209, 315, 316, 0, 0,
	317, 318, 319, 0, 0, 321, 322, 0, 0, 0,
	235, 256, 269, 259, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 194, 195, 196, 197, 0, 137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 162, 0, 164, 136, 208, 159, 266, 171, 200,
	167, 232, 172, 179, 220, 265, 206, 225, 135, 255,
	233, 183, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 0,
	176, 264, 218, 155, 83, 84, 85, 86, 87, 88,
	89, 90, 91, 92, 93, 94, 95, 96, 97, 98,
	99, 100, 101, 102, 103, 104, 105, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	0, 0, 272, 273, 274, 257, 310, 0, 309, 313,
	305, 0, 0, 0, 0, 0, 0, 0, 205, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 150, 0,
	0, 320, 175, 0, 177, 0, 0, 234, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	324, 0, 0, 0, 133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 239, 253, 134, 230, 267, 138, 237, 130, 204,
	226, 126, 251, 236, 187, 169, 170, 125, 0, 221,
	148, 161, 145, 202, 0, 0, 144, 270, 0, 261,
	128, 129, 260, 201, 248, 252, 188, 182, 127, 250,
	186, 181, 173, 152, 165, 214, 180, 215, 166, 192,
	191, 193, 0, 0, 0, 0, 0, 303, 302, 306,
	0, 0, 0, 0, 0, 308, 263, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 174, 312, 0, 0,
	0, 0, 224, 207, 0, 0, 212, 222, 178, 249,
	216, 304, 240, 262, 0, 217, 120, 241, 147, 189,
	131, 132, 143, 149, 151, 153, 154, 198, 199, 210,
	229, 242, 243, 244, 146, 139, 223, 140, 163, 141,
	121, 231, 142, 122, 211, 247, 0, 160, 219, 185,
	123, 184, 213, 246, 245, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 258, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 307, 311, 314,
	209, 315, 316, 0, 0, 317, 318, 319, 0, 0,
	321, 322, 0, 0, 0, 235, 256, 269, 259, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 194,
	195, 196, 197, 0, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 162, 0, 164, 136,
	208, 159, 266, 171, 200, 167, 232, 172, 179, 220,
	265, 206, 225, 135, 255, 233, 183, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 0, 176, 264, 218, 155, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 205, 0, 272, 273, 274,
	257, 0, 0, 0, 0, 150, 0, 0, 0, 175,
	0, 177, 0, 0, 234, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 80, 0, 0, 0, 0, 0,
	0, 133, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1347, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 239, 253,
	134, 230, 267, 138, 237, 130, 204, 226, 126, 251,
	236, 187, 169, 170, 125, 0, 221, 148, 161, 145,
	202, 0, 0, 144, 270, 0, 261, 128, 129, 260,
	201, 248, 252, 188, 182, 127, 250, 186, 181, 173,
	152, 165, 214, 180, 215, 166, 192, 191, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1351, 263, 0, 0, 0, 1344, 0, 1343,
	238, 1345, 1348, 174, 0, 0, 0, 0, 0, 224,
	207, 0, 0, 212, 222, 178, 249, 216, 254, 240,
	262, 0, 217, 120, 241, 147, 189, 131, 132, 143,
	149, 151, 153, 154, 198, 199, 210, 229, 242, 243,
	244, 146, 139, 223, 140, 163, 141, 121, 231, 142,
	122, 211, 247, 1349, 160, 219, 185, 123, 184, 213,
	246, 245, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 258, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 168, 209, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 256, 269, 259, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 194, 195, 196, 197,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 162, 0, 164, 136, 208, 159, 266,
	171, 200, 167, 232, 172, 179, 220, 265, 206, 225,
	135, 255, 233, 183, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 0, 176, 264, 218, 155, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 0, 0, 272, 273, 274, 257, 74, 0,
	22, 37, 23, 0, 0, 0, 0, 0, 0, 0,
	205, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 0, 0, 0, 175, 0, 177, 0, 0, 234,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 71, 0, 0, 80,
	0, 0, 0, 0, 0, 0, 133, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 239, 253, 134, 230, 267, 138, 237,
	130, 204, 226, 126, 251, 236, 187, 169, 170, 125,
	0, 221, 148, 161, 145, 202, 0, 0, 144, 270,
	0, 261, 128, 129, 260, 201, 248, 252, 188, 182,
	127, 250, 186, 181, 173, 152, 165, 214, 180, 215,
	166, 192, 191, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 174, 0,
	0, 0, 0, 0, 224, 207, 0, 0, 212, 222,
	178, 249, 216, 254, 240, 262, 0, 217, 120, 241,
	147, 189, 131, 132, 143, 149, 151, 153, 154, 198,
	199, 210, 229, 242, 243, 244, 146, 139, 223, 140,
	163, 141, 121, 231, 142, 122, 211, 247, 0, 160,
	219, 185, 123, 184, 213, 246, 245, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 258,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 168, 209, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 256, 269,
	259, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 194, 195, 196, 197, 278, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 162, 0,
	164, 136, 208, 159, 266, 171, 200, 167, 232, 172,
	179, 220, 265, 206, 225, 135, 255, 233, 183, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 0, 176, 264, 218,
	155, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 205, 0, 272,
	273, 274, 257, 0, 0, 0, 0, 150, 372, 0,
	0, 175, 0, 177, 0, 0, 234, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 384, 385, 0,
	0, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	239, 253, 134, 230, 267, 138, 237, 130, 204, 226,
	126, 251, 236, 187, 169, 170, 125, 0, 221, 148,
	161, 145, 202, 0, 0, 144, 270, 388, 261, 128,
	387, 260, 201, 248, 252, 188, 182, 127, 250, 186,
	181, 173, 152, 165, 214, 180, 215, 166, 192, 191,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 174, 0, 0, 0, 0,
	0, 224, 207, 0, 0, 212, 222, 178, 249, 216,
	254, 240, 262, 371, 217, 120, 241, 147, 189, 131,
	132, 143, 149, 151, 153, 154, 198, 199, 210, 229,
	242, 243, 244, 146, 139, 223, 140, 163, 141, 121,
	231, 142, 122, 211, 247, 0, 160, 219, 185, 123,
	184, 213, 246, 245, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 258, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 0, 0, 168, 209,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 256, 269, 259, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 374, 194, 195,
	196, 197, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 162, 0, 164, 136, 208,
	159, 266, 171, 381, 377, 378, 172, 179, 220, 265,
	206, 225, 135, 255, 233, 379, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 0, 176, 264, 218, 155, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 0, 205, 272, 273, 274, 257,
	777, 0, 0, 0, 0, 150, 0, 0, 0, 175,
	0, 177, 0, 0, 234, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 80, 0, 0, 0, 0, 0,
	0, 133, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 774, 775, 773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 239, 253,
	134, 230, 267, 138, 237, 130, 204, 226, 126, 251,
	236, 187, 169, 170, 125, 0, 221, 148, 161, 145,
	202, 0, 0, 144, 270, 0, 261, 128, 129, 260,
	201, 248, 252, 188, 182, 127, 250, 186, 181, 173,
	152, 165, 214, 180, 215, 166, 192, 191, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 174, 0, 0, 0, 0, 0, 224,
	207, 0, 0, 212, 222, 178, 249, 216, 254, 240,
	262, 0, 217, 120, 241, 147, 189, 131, 132, 143,
	149, 151, 153, 154, 198, 199, 210, 229, 242, 243,
	244, 146, 139, 223, 140, 163, 141, 121, 231, 142,
	122, 211, 247, 0, 160, 219, 185, 123, 184, 213,
	246, 245, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 258, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 168, 209, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 256, 269, 259, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 194, 195, 196, 197,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 162, 0, 164, 136, 208, 159, 266,
	171, 200, 167, 232, 172, 179, 220, 265, 206, 225,
	135, 255, 233, 183, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 0, 176, 264, 218, 155, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 205, 0, 272, 273, 274, 257, 0, 0,
	0, 0, 150, 0, 0, 0, 175, 0, 177, 0,
	0, 234, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 80, 384, 385, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 239, 253, 134, 230, 267,
	138, 237, 130, 204, 226, 126, 251, 236, 187, 169,
	170, 125, 0, 221, 148, 161, 145, 202, 0, 0,
	144, 270, 388, 261, 128, 387, 260, 201, 248, 252,
	188, 182, 127, 250, 186, 181, 173, 152, 165, 214,
	180, 215, 166, 192, 191, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	174, 0, 0, 0, 0, 0, 224, 207, 0, 0,
	212, 222, 178, 249, 216, 254, 240, 262, 0, 217,
	120, 241, 147, 189, 131, 132, 143, 149, 151, 153,
	154, 198, 199, 210, 229, 242, 243, 244, 146, 139,
	223, 140, 163, 141, 121, 231, 142, 122, 211, 247,
	0, 160, 219, 185, 123, 184, 213, 246, 245, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 258, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 168, 209, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	256, 269, 259, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 194, 195, 196, 197, 0, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	162, 0, 164, 136, 208, 159, 266, 171, 381, 377,
	378, 172, 179, 220, 265, 206, 225, 135, 255, 233,
	379, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 0, 176,
	264, 218, 155, 83, 84, 85, 86, 87, 88, 89,
	90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
	100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 0,
	0, 272, 273, 274, 257, 205, 0, 508, 0, 0,
	0, 0, 0, 0, 0, 150, 509, 0, 0, 175,
	0, 177, 0, 0, 234, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 324, 0, 0,
	0, 133, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 239, 253,
	134, 230, 267, 138, 237, 130, 204, 226, 126, 251,
	236, 187, 169, 170, 125, 0, 221, 148, 161, 145,
	202, 0, 0, 144, 270, 0, 261, 128, 129, 260,
	201, 248, 252, 188, 182, 127, 250, 186, 181, 173,
	152, 165, 214, 180, 215, 166, 192, 191, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 174, 0, 0, 0, 0, 0, 224,
	207, 0, 0, 212, 222, 178, 249, 216, 254, 240,
	262, 0, 217, 120, 241, 147, 189, 131, 132, 143,
	149, 151, 153, 154, 198, 199, 210, 229, 242, 243,
	244, 146, 139, 223, 140, 163, 141, 121, 231, 142,
	122, 211, 247, 0, 160, 219, 185, 123, 184, 213,
	246, 245, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 258, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 168, 209, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 256, 269, 259, 0, 0, 0, 268,
	0, 0, 0, 0, 510, 0, 194, 195, 196, 197,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 162, 0, 164, 136, 208, 159, 266,
	171, 200, 167, 232, 172, 179, 220, 265, 206, 225,
	135, 255, 233, 183, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 0, 176, 264, 218, 155, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 74, 0, 272, 273, 274, 257, 0, 0,
	0, 0, 0, 0, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 0, 0, 0, 175, 0,
	177, 0, 0, 234, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	71, 0, 852, 80, 0, 0, 0, 0, 0, 0,
	133, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 239, 253, 134,
	230, 267, 138, 237, 130, 204, 226, 126, 251, 236,
	187, 169, 170, 125, 0, 221, 148, 161, 145, 202,
	0, 0, 144, 270, 0, 261, 128, 129, 260, 201,
	248, 252, 188, 182, 127, 250, 186, 181, 173, 152,
	165, 214, 180, 215, 166, 192, 191, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 174, 0, 0, 0, 0, 0, 224, 207,
	0, 0, 212, 222, 178, 249, 216, 254, 240, 262,
	0, 217, 120, 241, 147, 189, 131, 132, 143, 149,
	151, 153, 154, 198, 199, 210, 229, 242, 243, 244,
	146, 139, 223, 140, 163, 141, 121, 231, 142, 122,
	211, 247, 0, 160, 219, 185, 123, 184, 213, 246,
	245, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 258, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 168, 209, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 256, 269, 259, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 194, 195, 196, 197, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 162, 0, 164, 136, 208, 159, 266, 171,
	200, 167, 232, 172, 179, 220, 265, 206, 225, 135,
	255, 233, 183, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 176, 264, 218, 155, 83, 84, 85, 86, 87,
	88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
	98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 0, 0, 272, 273, 274, 257, 205, 0, 740,
	0, 0, 0, 0, 0, 0, 0, 150, 0, 0,
	0, 175, 0, 177, 0, 0, 234, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 324,
	0, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	239, 253, 134, 230, 267, 138, 237, 130, 204, 226,
	126, 251, 236, 187, 169, 170, 125, 0, 221, 148,
	161, 145, 202, 0, 0, 144, 270, 0, 261, 128,
	129, 260, 201, 248, 252, 188, 182, 127, 250, 186,
	181, 173, 152, 165, 214, 180, 215, 166, 192, 191,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 174, 0, 0, 0, 0,
	0, 224, 207, 0, 0, 212, 222, 178, 249, 216,
	254, 240, 262, 0, 217, 120, 241, 147, 189, 131,
	132, 143, 149, 151, 153, 154, 198, 199, 210, 229,
	242, 243, 244, 146, 139, 223, 140, 163, 141, 121,
	231, 142, 122, 211, 247, 0, 160, 219, 185, 123,
	184, 213, 246, 245, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 258, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 0, 0, 168, 209,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 256, 269, 259, 0, 0,
	0, 268, 0, 0, 0, 0, 739, 0, 194, 195,
	196, 197, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 162, 0, 164, 136, 208,
	159, 266, 171, 200, 167, 232, 172, 179, 220, 265,
	206, 225, 135, 255, 233, 183, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 0, 176, 264, 218, 155, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 205, 0, 272, 273, 274, 257,
	0, 0, 0, 0, 150, 0, 0, 0, 175, 0,
	177, 0, 0, 234, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 80, 616, 0, 0, 0, 0, 0,
	133, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 239, 253, 134,
	230, 267, 138, 237, 130, 204, 226, 126, 251, 236,
	187, 169, 170, 125, 0, 221, 148, 161, 145, 202,
	0, 0, 144, 270, 0, 261, 128, 129, 260, 201,
	248, 252, 188, 182, 127, 250, 186, 181, 173, 152,
	165, 214, 180, 215, 166, 192, 191, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 174, 0, 0, 0, 0, 0, 224, 207,
	0, 0, 212, 222, 178, 249, 216, 254, 240, 262,
	0, 217, 120, 241, 147, 189, 131, 132, 143, 149,
	151, 153, 154, 198, 199, 210, 229, 242, 243, 244,
	146, 139, 223, 140, 163, 141, 121, 231, 142, 122,
	211, 247, 0, 160, 219, 185, 123, 184, 213, 246,
	245, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 258, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 168, 209, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 256, 269, 259, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 194, 195, 196, 197, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 162, 0, 164, 136, 208, 159, 266, 171,
	200, 167, 232, 172, 179, 220, 265, 206, 225, 135,
	255, 233, 183, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 176, 264, 218, 155, 83, 84, 85, 86, 87,
	88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
	98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 205, 0, 272, 273, 274, 257, 0, 0, 0,
	0, 150, 0, 0, 0, 175, 0, 177, 0, 0,
	234, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 0, 0, 692, 0, 0, 0, 133, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 239, 253, 134, 230, 267, 138,
	237, 130, 204, 226, 126, 251, 236, 187, 169, 170,
	125, 0, 221, 148, 161, 145, 202, 0, 0, 144,
	270, 0, 261, 128, 129, 260, 201, 248, 252, 188,
	182, 127, 250, 186, 181, 173, 152, 165, 214, 180,
	215, 166, 192, 191, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 174,
	0, 0, 0, 0, 0, 224, 207, 0, 0, 212,
	222, 178, 249, 216, 254, 240, 262, 0, 217, 120,
	241, 147, 189, 131, 132, 143, 149, 151, 153, 154,
	198, 199, 210, 229, 242, 243, 244, 146, 139, 223,
	140, 163, 141, 121, 231, 142, 122, 211, 247, 0,
	160, 219, 185, 123, 184, 213, 246, 245, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	258, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 168, 209, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 256,
	269, 259, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 1305, 194, 195, 196, 197, 0, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 162,
	0, 164, 136, 208, 159, 266, 171, 200, 167, 232,
	172, 179, 220, 265, 206, 225, 135, 255, 233, 183,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 0, 176, 264,
	218, 155, 83, 84, 85, 86, 87, 88, 89, 90,
	91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
	101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 205, 0,
	272, 273, 274, 257, 0, 0, 0, 0, 150, 1087,
	0, 0, 175, 0, 177, 0, 0, 234, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 0, 0,
	692, 0, 0, 0, 133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 239, 253, 134, 230, 267, 138, 237, 130, 204,
	226, 126, 251, 236, 187, 169, 170, 125, 0, 221,
	148, 161, 145, 202, 0, 0, 144, 270, 0, 261,
	128, 129, 260, 201, 248, 252, 188, 182, 127, 250,
	186, 181, 173, 152, 165, 214, 180, 215, 166, 192,
	191, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 174, 0, 0, 0,
	0, 0, 224, 207, 0, 0, 212, 222, 178, 249,
	216, 254, 240, 262, 0, 217, 120, 241, 147, 189,
	131, 132, 143, 149, 151, 153, 154, 198, 199, 210,
	229, 242, 243, 244, 146, 139, 223, 140, 163, 141,
	121, 231, 142, 122, 211, 247, 0, 160, 219, 185,
	123, 184, 213, 246, 245, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 258, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 168,
	209, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 256, 269, 259, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 194,
	195, 196, 197, 0, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 162, 0, 164, 136,
	208, 159, 266, 171, 200, 167, 232, 172, 179, 220,
	265, 206, 225, 135, 255, 233, 183, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 0, 176, 264, 218, 155, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 205, 0, 272, 273, 274,
	257, 0, 0, 0, 0, 150, 0, 0, 0, 175,
	0, 177, 0, 0, 234, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 80, 616, 0, 0, 0, 0,
	0, 133, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 239, 253,
	134, 230, 267, 138, 237, 130, 204, 226, 126, 251,
	236, 187, 169, 170, 125, 0, 221, 148, 161, 145,
	202, 0, 0, 144, 270, 0, 261, 128, 129, 260,
	201, 248, 252, 188, 182, 127, 250, 186, 181, 173,
	152, 165, 214, 180, 215, 166, 192, 191, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 174, 0, 0, 0, 0, 0, 224,
	207, 0, 0, 212, 222, 178, 249, 216, 254, 240,
	262, 0, 217, 120, 241, 147, 189, 131, 132, 143,
	149, 151, 153, 154, 198, 199, 210, 229, 242, 243,
	244, 146, 139, 223, 140, 163, 141, 121, 231, 142,
	122, 211, 247, 0, 160, 219, 185, 123, 184, 213,
	246, 245, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 258, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 168, 209, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 256, 269, 259, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 194, 195, 196, 197,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 162, 0, 164, 136, 208, 159, 266,
	171, 200, 167, 232, 172, 179, 220, 265, 206, 225,
	135, 255, 233, 183, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 0, 176, 264, 218, 155, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	117, 118, 205, 0, 272, 273, 274, 257, 0, 0,
	0, 0, 150, 0, 0, 0, 175, 0, 177, 0,
	0, 234, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1538, 0,
	0, 80, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 239, 253, 134, 230, 267,
	138, 237, 130, 204, 226, 126, 251, 236, 187, 169,
	170, 125, 0, 221, 148, 161, 145, 202, 0, 0,
	144, 270, 0, 261, 128, 129, 260, 201, 248, 252,
	188, 182, 127, 250, 186, 181, 173, 152, 165, 214,
	180, 215, 166, 192, 191, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	174, 0, 0, 0, 0, 0, 224, 207, 0, 0,
	212, 222, 178, 249, 216, 254, 240, 262, 0, 217,
	120, 241, 147, 189, 131, 132, 143, 149, 151, 153,
	154, 198, 199, 210, 229, 242, 243, 244, 146, 139,
	223, 140, 163, 141, 121, 231, 142, 122, 211, 247,
	0, 160, 219, 185, 123, 184, 213, 246, 245, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 258, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 168, 209, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	256, 269, 259, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 194, 195, 196, 197, 0, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	162, 0, 164, 136, 208, 159, 266, 171, 200, 167,
	232, 172, 179, 220, 265, 206, 225, 135, 255, 233,
	183, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 0, 176,
	264, 218, 155, 83, 84, 85, 86, 87, 88, 89,
	90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
	100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 205,
	0, 272, 273, 274, 257, 0, 0, 0, 0, 150,
	0, 0, 0, 175, 0, 177, 0, 0, 234, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 0,
	0, 692, 0, 0, 0, 133, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 239, 253, 134, 230, 267, 138, 237, 130,
	204, 226, 126, 251, 236, 187, 169, 170, 125, 0,
	221, 148, 161, 145, 202, 0, 0, 144, 270, 0,
	261, 128, 129, 260, 201, 248, 252, 188, 182, 127,
	250, 186, 181, 173, 152, 165, 214, 180, 215, 166,
	192, 191, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 174, 0, 0,
	0, 0, 0, 224, 207, 0, 0, 212, 222, 178,
	249, 216, 254, 240, 262, 0, 217, 120, 241, 147,
	189, 131, 132, 143, 149, 151, 153, 154, 198, 199,
	210, 229, 242, 243, 244, 146, 139, 223, 140, 163,
	141, 121, 231, 142, 122, 211, 247, 0, 160, 219,
	185, 123, 184, 213, 246, 245, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 258, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	168, 209, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 256, 269, 259,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	194, 195, 196, 197, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 162, 0, 164,
	136, 208, 159, 266, 171, 200, 167, 232, 172, 179,
	220, 265, 206, 225, 135, 255, 233, 183, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 176, 264, 218, 155,
	83, 84, 85, 86, 87, 88, 89, 90, 91, 92,
	93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 205, 0, 272, 273,
	274, 257, 0, 0, 0, 0, 150, 0, 0, 0,
	175, 0, 177, 0, 0, 234, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 80, 0, 0, 0, 0,
	0, 0, 133, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 239,
	253, 134, 230, 267, 138, 237, 130, 204, 226, 126,
	251, 236, 187, 169, 170, 125, 0, 221, 148, 161,
	145, 202, 0, 0, 144, 270, 0, 261, 128, 129,
	260, 201, 248, 252, 188, 182, 127, 250, 186, 181,
	173, 152, 165, 214, 180, 215, 166, 192, 191, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 174, 0, 0, 0, 0, 0,
	224, 207, 0, 0, 212, 222, 178, 249, 216, 254,
	240, 262, 0, 217, 120, 241, 147, 189, 131, 132,
	143, 149, 151, 153, 154, 198, 199, 210, 229, 242,
	243, 244, 146, 139, 223, 140, 163, 141, 121, 231,
	142, 122, 211, 247, 0, 160, 219, 185, 123, 184,
	213, 246, 245, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 258, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 168, 209, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 256, 269, 259, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 194, 195, 196,
	197, 0, 137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 162, 0, 164, 136, 208, 159,
	266, 171, 200, 167, 232, 172, 179, 220, 265, 206,
	225, 135, 255, 233, 183, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 0, 176, 264, 218, 155, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 92, 93, 94, 95,
	96, 97, 98, 99, 100, 101, 102, 103, 104, 105,
	106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	116, 117, 118, 205, 0, 272, 273, 274, 257, 0,
	0, 0, 0, 150, 0, 0, 0, 175, 0, 177,
	0, 0, 234, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	0, 0, 80, 0, 0, 0, 0, 0, 0, 133,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 239, 253, 134, 230,
	267, 138, 237, 130, 204, 226, 126, 251, 236, 187,
	169, 170, 125, 0, 221, 148, 161, 145, 202, 0,
	0, 144, 270, 0, 261, 128, 129, 260, 201, 248,
	252, 188, 182, 127, 250, 186, 181, 173, 152, 165,
	214, 180, 215, 166, 192, 191, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 174, 0, 0, 0, 0, 0, 224, 207, 0,
	0, 212, 222, 178, 249, 216, 254, 240, 262, 0,
	217, 120, 241, 147, 189, 131, 132, 143, 149, 151,
	153, 154, 198, 199, 210, 229, 242, 243, 244, 146,
	139, 223, 140, 163, 141, 121, 231, 142, 122, 211,
	247, 0, 160, 219, 185, 123, 184, 213, 246, 245,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 258, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 168, 209, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 256, 269, 259, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 194, 195, 196, 197, 0, 137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 162, 0, 164, 136, 208, 159, 266, 171, 200,
	167, 232, 172, 179, 220, 265, 206, 225, 135, 255,
	233, 183, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 0,
	176, 264, 218, 155, 83, 84, 85, 86, 87, 88,
	89, 90, 91, 92, 93, 94, 95, 96, 97, 98,
	99, 100, 101, 102, 103, 104, 105, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	205, 0, 272, 273, 274, 257, 0, 0, 0, 0,
	150, 0, 0, 0, 175, 0, 177, 0, 0, 234,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 80,
	0, 0, 0, 0, 0, 0, 133, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 239, 253, 134, 230, 267, 138, 237,
	130, 204, 226, 126, 251, 236, 187, 169, 170, 125,
	0, 221, 148, 161, 145, 202, 0, 0, 144, 270,
	0, 261, 128, 129, 260, 201, 248, 252, 188, 182,
	127, 250, 186, 181, 173, 152, 165, 214, 180, 215,
	166, 192, 191, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 174, 0,
	0, 0, 0, 0, 224, 207, 0, 0, 212, 222,
	178, 249, 216, 254, 240, 262, 0, 217, 120, 241,
	147, 189, 131, 132, 143, 149, 151, 153, 154, 198,
	199, 210, 229, 242, 243, 244, 146, 139, 223, 140,
	163, 141, 121, 231, 142, 122, 211, 247, 0, 160,
	219, 185, 123, 184, 213, 246, 245, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 258,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 168, 209, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 256, 269,
	259, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 194, 195, 196, 197, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 162, 0,
	164, 136, 208, 159, 266, 171, 200, 167, 232, 172,
	179, 220, 265, 206, 225, 135, 255, 233, 183, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 0, 176, 264, 218,
	155, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 205, 0, 272,
	273, 274, 257, 0, 0, 0, 0, 150, 0, 0,
	0, 175, 0, 177, 0, 0, 234, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 324,
	0, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	239, 253, 134, 230, 267, 138, 237, 130, 204, 226,
	126, 251, 236, 187, 169, 170, 125, 0, 221, 148,
	161, 145, 202, 0, 0, 144, 270, 0, 261, 128,
	129, 260, 201, 248, 252, 188, 182, 127, 250, 186,
	181, 173, 152, 165, 214, 180, 215, 166, 192, 191,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 174, 0, 0, 0, 0,
	0, 224, 207, 0, 0, 212, 222, 178, 249, 216,
	254, 240, 262, 0, 217, 120, 241, 147, 189, 131,
	132, 143, 149, 151, 153, 154, 198, 199, 210, 229,
	242, 243, 244, 146, 139, 223, 140, 163, 141, 121,
	231, 142, 122, 211, 247, 0, 160, 219, 185, 123,
	184, 213, 246, 245, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 258, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 0, 0, 168, 209,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 256, 269, 259, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 194, 195,
	196, 197, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 162, 0, 164, 136, 208,
	159, 266, 171, 200, 167, 232, 172, 179, 220, 265,
	206, 225, 135, 255, 233, 183, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 0, 176, 264, 218, 155, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 205, 0, 272, 273, 274, 257,
	0, 0, 0, 0, 150, 0, 0, 0, 175, 0,
	177, 0, 0, 234, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 80, 0, 0, 692, 0, 0, 0,
	133, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 239, 253, 134,
	230, 267, 138, 237, 130, 204, 226, 126, 251, 236,
	187, 169, 170, 125, 0, 221, 148, 161, 145, 202,
	0, 0, 144, 270, 0, 261, 128, 129, 260, 201,
	248, 252, 188, 182, 127, 250, 186, 181, 173, 152,
	165, 214, 180, 215, 166, 192, 191, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 174, 0, 0, 0, 0, 0, 224, 207,
	0, 0, 212, 222, 178, 249, 216, 254, 240, 262,
	0, 217, 120, 241, 147, 189, 131, 132, 143, 149,
	151, 153, 154, 198, 199, 210, 229, 242, 243, 244,
	146, 139, 223, 140, 163, 141, 121, 231, 142, 122,
	211, 247, 0, 160, 219, 185, 123, 184, 213, 246,
	245, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 258, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 168, 209, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 256, 269, 730, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 194, 195, 196, 197, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 162, 0, 164, 136, 208, 159, 266, 171,
	200, 167, 232, 172, 179, 220, 265, 206, 225, 135,
	255, 233, 183, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 176, 264, 218, 155, 83, 84, 85, 86, 87,
	88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
	98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 205, 0, 272, 273, 274, 257, 0, 0, 0,
	77, 150, 0, 0, 0, 175, 0, 177, 0, 0,
	234, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 239, 253, 134, 230, 267, 138,
	237, 130, 204, 226, 126, 251, 236, 187, 169, 170,
	125, 0, 221, 148, 161, 145, 202, 0, 0, 144,
	270, 0, 261, 128, 129, 260, 201, 248, 252, 188,
	182, 127, 250, 186, 181, 173, 152, 165, 214, 180,
	215, 166, 192, 191, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 174,
	0, 0, 0, 0, 0, 224, 207, 0, 0, 212,
	222, 178, 249, 216, 254, 240, 262, 0, 217, 120,
	241, 147, 189, 131, 132, 143, 149, 151, 153, 154,
	198, 199, 210, 229, 242, 243, 244, 146, 139, 223,
	140, 163, 141, 121, 231, 142, 122, 211, 247, 0,
	160, 219, 185, 123, 184, 213, 246, 245, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	258, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 168, 209, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 256,
	269, 259, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 194, 195, 196, 197, 0, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 162,
	0, 164, 136, 208, 159, 266, 171, 200, 167, 232,
	172, 179, 220, 265, 206, 225, 135, 255, 233, 183,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 0, 176, 264,
	218, 155, 83, 84, 85, 86, 87, 88, 89, 90,
	91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
	101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 205, 0,
	272, 273, 274, 257, 0, 0, 0, 0, 150, 0,
	0, 0, 175, 0, 177, 0, 0, 234, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 0, 0,
	0, 0, 0, 0, 133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 239, 253, 134, 230, 267, 138, 237, 130, 204,
	226, 126, 251, 236, 187, 169, 170, 125, 0, 221,
	148, 161, 145, 202, 0, 0, 144, 270, 0, 261,
	128, 129, 260, 201, 248, 252, 188, 182, 127, 250,
	186, 181, 173, 152, 165, 214, 180, 215, 166, 192,
	191, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 174, 0, 0, 0,
	0, 0, 224, 207, 0, 0, 212, 222, 178, 249,
	216, 254, 240, 262, 0, 217, 120, 241, 147, 189,
	131, 132, 143, 149, 151, 153, 154, 198, 199, 210,
	229, 242, 243, 244, 146, 139, 223, 140, 163, 141,
	121, 231, 142, 122, 211, 247, 0, 160, 219, 185,
	123, 184, 213, 246, 245, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 258, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 168,
	209, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 256, 269, 259, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 194,
	195, 196, 197, 0, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 162, 0, 164, 136,
	208, 159, 266, 171, 200, 167, 232, 172, 179, 220,
	265, 206, 225, 135, 255, 233, 183, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 0, 176, 264, 218, 155, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 0, 205, 272, 273, 274,
	257, 432, 0, 0, 0, 0, 150, 0, 0, 0,
	175, 0, 177, 0, 0, 234, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 437, 438, 439, 434, 0,
	0, 0, 133, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 239,
	253, 134, 230, 267, 138, 237, 130, 204, 226, 126,
	251, 236, 187, 169, 170, 125, 0, 221, 148, 161,
	145, 202, 0, 0, 144, 270, 0, 261, 128, 129,
	260, 201, 248, 252, 188, 182, 127, 250, 186, 181,
	173, 152, 165, 214, 180, 215, 166, 192, 191, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 174, 0, 0, 0, 0, 0,
	224, 207, 0, 0, 212, 222, 178, 249, 216, 254,
	240, 262, 0, 217, 120, 241, 147, 189, 131, 132,
	143, 149, 151, 153, 154, 198, 199, 210, 229, 242,
	243, 244, 146, 139, 223, 140, 163, 141, 121, 231,
	142, 122, 211, 247, 0, 160, 219, 185, 123, 184,
	213, 246, 245, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 258, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 168, 209, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 256, 269, 259, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 194, 195, 196,
	197, 0, 137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 162, 0, 164, 136, 208, 159,
	266, 171, 200, 167, 232, 172, 179, 220, 265, 206,
	225, 135, 255, 233, 183, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 119, 0, 176, 264, 218, 155, 150, 0, 0,
	0, 175, 0, 177, 0, 0, 234, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 438, 439, 434,
	0, 0, 0, 133, 0, 272, 273, 274, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	239, 253, 134, 230, 267, 138, 237, 130, 204, 226,
	126, 251, 236, 187, 169, 170, 125, 0, 221, 148,
	161, 145, 202, 0, 0, 144, 270, 0, 261, 128,
	129, 260, 201, 248, 252, 188, 182, 127, 250, 186,
	181, 173, 152, 165, 214, 180, 215, 166, 192, 191,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 174, 0, 0, 0, 0,
	0, 224, 207, 0, 0, 212, 222, 178, 249, 216,
	254, 240, 262, 0, 217, 120, 241, 147, 189, 131,
	132, 143, 149, 151, 153, 154, 198, 199, 210, 229,
	242, 243, 244, 146, 139, 223, 140, 163, 141, 121,
	231, 142, 122, 211, 247, 0, 160, 219, 185, 123,
	184, 213, 246, 245, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 258, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 0, 0, 168, 209,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 256, 269, 259, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 194, 195,
	196, 197, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 162, 0, 164, 136, 208,
	159, 266, 171, 200, 167, 232, 172, 179, 220, 265,
	206, 225, 135, 255, 233, 183, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 0,
	0, 0, 119, 0, 176, 264, 218, 155, 150, 0,
	0, 0, 175, 0, 177, 0, 0, 234, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 437, 438, 439,
	0, 0, 0, 0, 133, 0, 272, 273, 274, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 239, 253, 134, 230, 267, 138, 237, 130, 204,
	226, 126, 251, 236, 187, 169, 170, 125, 0, 221,
	148, 161, 145, 202, 0, 0, 144, 270, 0, 261,
	128, 129, 260, 201, 248, 252, 188, 182, 127, 250,
	186, 181, 173, 152, 165, 214, 180, 215, 166, 192,
	191, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 174, 0, 0, 0,
	0, 0, 224, 207, 0, 0, 212, 222, 178, 249,
	216, 254, 240, 262, 0, 217, 120, 241, 147, 189,
	131, 132, 143, 149, 151, 153, 154, 198, 199, 210,
	229, 242, 243, 244, 146, 139, 223, 140, 163, 141,
	121, 231, 142, 122, 211, 247, 0, 160, 219, 185,
	123, 184, 213, 246, 245, 271, 1564, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 258, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1060, 0, 0, 227, 0, 0, 0, 0, 0, 168,
	209, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 256, 269, 259, 0,
	0, 0, 268, 0, 0, 1546, 0, 0, 0, 194,
	195, 196, 197, 0, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 162, 0, 164, 136,
	208, 159, 266, 171, 200, 167, 232, 172, 179, 220,
	265, 206, 225, 135, 255, 233, 183, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 0, 176, 264, 218, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 273, 274,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1543, 0, 0,
	0, 1545, 1547, 1549, 0, 1551, 1552, 1553, 1555, 1556,
	1557, 1559, 1560, 1561, 1562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1565, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1558,
	0, 0, 0, 0, 0, 1548,
}

var yyPact = [...]int{
	683, -1000, -293, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 14033, 1590, -1000, 6862, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 12445, 14430, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 6050, 5635, 94, -1000,
	1573, -1000, -1000, -1000, 117, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 533, -92, 263, 268, 306, 306, 7259,
	1578, 1277, -34, -1000, 1524, 683, 134, 14430, -1000, 349,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 12445, 14430, -119, 463, -1000,
	1213, 345, -1000, -1000, -1000, -1000, 1381, -1000, -1000, -1000,
	1473, 14828, 1277, -1000, 1211, 1227, -1000, -1000, 1392, -1000,
	72, -51, -72, 188, -1000, -1000, 108, -1000, -1000, -1000,
	-1000, -1000, -9, -1000, -58, -1000, -65, -1000, -1000, -1000,
	-158, -1000, -1000, -1000, -1000, -1000, 1205, 321, 1411, -201,
	-1000, 1458, 1506, 1277, -282, 1566, 1528, 153, 153, 168,
	153, 173, -1000, -1000, -1000, -1000, -1000, -1000, 506, 124,
	-1000, -1000, -173, -162, 396, -162, -30, -1000, -1000, -1000,
	-1000, -1000, -1000, 155, -1000, -204, -1000, 256, -1000, 243,
	-1000, 8457, 107, 1224, 571, -1000, 406, 14430, 14430, 14430,
	406, 648, 382, 343, -1000, -1000, -1000, 1446, 1449, 1506,
	1277, -1000, 1147, 968, 155, 155, 155, 155, 155, 3999,
	-1000, -1000, -1000, -1000, -1000, 1207, 1391, -1000, 14430, 1293,
	-1000, 341, 771, 887, -1000, 14430, 14430, 12445, 12445, 12445,
	12445, -1000, 1427, 1424, -1000, 1426, 1425, 1434, 15530, -1000,
	-1000, -1000, 15179, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1128, 1578, 65, 1376, 11651, 13239, 14430, 11651, -1000, -1000,
	-1000, -1000, -1000, -159, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 65, 11651, 11651, -128, -1000, -1000,
	1458, 4406, -1000, -1000, 883, 4406, -1000, -1000, 11651, 480,
	13239, 795, 14430, 153, 14430, -1000, -1000, 396, 396, -1000,
	506, 506, -1000, -1000, -167, 1583, 4813, -169, 14430, 153,
	13636, 1470, -194, 261, 230, 247, -1000, -1000, -205, -1000,
	-1000, 1216, 9269, 8054, 154, 11651, 2363, -1000, -1000, 406,
	406, 406, 2363, 279, -1000, -1000, -1000, -1000, -1000, -1000,
	14430, -1000, -1000, 1458, -1000, -1000, -1000, -1000, -1000, 11651,
	13239, 14430, 14430, 15530, 1175, -1000, -1000, 7657, 331, 4406,
	655, 1389, -1000, 1388, 1387, 1386, 1383, 1382, 1378, 1373,
	1329, 1367, 1364, -1000, -1000, -1000, 1355, 1349, 1329, 1341,
	1340, 1339, -1000, -1000, 2258, -1000, -1000, -1000, -1000, 3592,
	4813, 4813, 4813, 4813, -1000, -1000, 1338, 1337, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 5220, -1000, 1335, 1334, 1329, 1327, 882, 881, 877,
	1326, 1324, 1322, 4813, 1321, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-280, -1000, 8866, 14430, 14430, -1000, 1570, 4406, 1960, -1000,
	1198, 319, 1193, -1000, 462, 1398, 1410, 1398, -1000, -1000,
	-1000, -1000, 1423, -1000, 1413, -1000, -1000, -1000, -1000, -1000,
	489, -1000, -1000, -1000, -1000, -1000, -58, -65, 1210, -1000,
	-86, 69, -1000, -1000, 1177, -1000, -1000, -1000, 489, 1210,
	165, 876, -1000, 898, 314, -175, 1223, -1000, 734, 156,
	1468, 1216, 1400, 1451, 14430, 1583, 1583, 1583, 396, 15530,
	506, 14430, 506, -1000, -1000, 506, -1000, 311, 14430, 156,
	1320, -1000, -1000, -1000, 250, 241, 253, 13239, 163, -1000,
	-1000, 1216, -1000, -1000, -1000, 1319, 460, -1000, -1000, 4813,
	-1000, 711, -1000, 2363, 2363, 2363, -1000, 10460, -1000, -1000,
	1210, 1216, 1409, 1222, -1000, -1000, -1000, -1000, 1583, 3999,
	-1000, 12445, -1000, 4406, 4406, 4406, -1000, 14430, 12842, -1000,
	514, 4813, -1000, -1000, -1000, -1000, -1000, -1000, 4406, 1521,
	1521, 1521, 4406, 554, 4406, 4406, -1000, 611, 1521, 1521,
	1521, 1521, -1000, 1521, 1521, 1521, 4813, 4813, 4813, 4813,
	4813, 4813, 4813, 4813, 4813, 4813, 4813, 4813, 1312, 575,
	4813, 4813, 4813, 968, 1117, 1221, -1000, -1000, -1000, -1000,
	-1000, 4406, 205, 4406, -1000, 1124, -1000, -1000, 4406, -1000,
	-1000, -1000, 4406, 4813, 4406, -1000, 1521, 1169, -1000, 1317,
	-1000, 1173, 1314, -1000, 308, 1220, -1000, 450, 1156, -1000,
	1506, 711, -1000, 305, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -121, -1000, 14430, 1570, 14430, 4406, -1000,
	-1000, 4406, 1316, -1000, 4406, -1000, -1000, -1000, 1585, 295,
	291, 11651, -1000, 128, 11651, -1000, -1000, 14430, 161, 11651,
	-39, 4406, 4406, 14430, -143, -132, 4406, -1000, -1000, -1000,
	-229, -1000, -104, -1000, 1408, 32, -1000, 1451, -1000, 245,
	-1000, 1315, -1000, -1000, -1000, 1583, -1000, 396, -1000, 396,
	506, 14430, -1000, -1000, -229, 1119, -1000, -1000, -1000, 237,
	1216, 11651, 837, 154, -1000, -1000, -1000, -1000, -1000, 14430,
	14430, 1581, -1000, 1215, 1357, -1000, 497, 517, -1000, 289,
	-1000, -1000, 555, -1000, 1111, 1163, 711, 4406, -1000, -1000,
	4406, 4406, 942, 4406, 1066, 1145, 1143, -1000, 1057, -1000,
	4406, 4406, 4406, 4406, 4406, 4406, 4406, 782, 1460, -1000,
	573, 573, 365, 365, 365, 365, 365, 851, 851, -1000,
	-1000, -1000, 3592, 1312, 4813, 4813, 4813, 140, 1614, 1753,
	-1000, 4406, 647, -1000, -1000, 1046, -1000, 896, 1033, 1403,
	1025, 4406, -280, 3177, 1094, 14430, -280, 14430, 14430, 3177,
	-1000, 14430, -1000, 1960, 752, -1000, 1506, -1000, 711, 711,
	14430, 711, 11651, 330, 476, -1000, 10063, 11651, -1000, -1000,
	11651, 83, 1454, -1000, -1000, 711, 711, 280, -284, -139,
	1565, 1564, -1000, -1000, -120, -1000, -1000, -1000, 275, -1000,
	874, 873, 862, 858, 14430, -1000, -1000, -1000, -1000, -1000,
	426, 426, 426, 1446, 6447, -1000, 1583, 1583, 396, -1000,
	-47, -94, -1000, 1210, 1018, -1000, -1000, -1000, -1000, 1575,
	1563, 12445, 12048, -1000, -1000, 4406, 1076, 1032, 1029, 222,
	1137, -1000, -1000, -1000, -1000, 1017, 1000, 997, 972, 963,
	933, 926, 1134, -1000, 140, 1614, 1704, -1000, 4813, 4813,
	918, 222, 347, -1000, -1000, 347, -1000, 4813, -1000, 915,
	-1000, 983, 1214, -1000, -280, -1000, -1000, 1169, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1123, -1000,
	1210, -1000, -1000, -1000, -1000, 11651, 1472, 156, -1000, -56,
	172, 14430, -286, 857, -1000, 1561, 854, 564, -120, -1000,
	746, 745, 744, 737, -93, -1000, -1000, -1000, -1000, -1000,
	1308, 347, -1000, 559, 842, 980, 1186, -1000, -1000, -1000,
	106, 442, -1000, 14430, 536, 266, 153, 266, 530, 1307,
	-1000, -1000, -1000, -1000, 1583, -1000, -47, -1000, 265, 228,
	-29, 1560, -1000, -1000, 4406, 4406, 1357, -1000, -1000, 711,
	-1000, -1000, -1000, 977, -1000, 1295, 1301, -1000, 1295, 1295,
	1295, 229, 229, 1302, 1306, 1302, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 4813, -1000, -1000, -1000,
	969, 958, 951, 1217, -1000, -1000, 3177, 1169, -1000, 14430,
	-1000, 11651, 11651, -235, -59, 14430, -288, 735, -1000, 840,
	-135, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 11254,
	-1000, -1000, -1000, -1000, -1000, -1000, 15781, 6447, 911, -80,
	-1000, -1000, -1000, 1295, -1000, 1301, 1295, 1295, 1295, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1299, 1298,
	-1000, 1295, 1295, 1295, 1295, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 14430, 14430, -1000, 14430, 14430, 153, 4406, -1000,
	-1000, -1000, -1000, 720, -1000, -1000, -1000, 837, 711, 1163,
	-1000, -1000, -1000, 719, -1000, 715, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 706, -1000, 704, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -169,
	-1000, 1296, -1000, -1000, 1559, 1115, -1000, 1295, 4406, 133,
	1304, -1000, 426, 426, 283, 426, 426, 426, 426, 92,
	91, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 1294, -1000, -1000, 911, -1000,
	-1000, 550, 4813, -1000, -1000, 836, 559, 325, 318, 1292,
	-1000, 63, 529, 492, -1000, 14430, -1000, -83, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 823, 823, -1000, -1000, -1000,
	-1000, 1289, 1229, -7, 1288, -1000, 1278, 1261, 14430, 889,
	-33, -1000, -1000, 947, 945, 1161, 1106, -145, -144, 14430,
	564, -1000, 11254, 1465, 656, -1000, 1558, 15781, -1000, 700,
	697, 426, 426, 696, 817, 811, 810, 426, 426, 690,
	807, 15179, 678, 668, 666, 687, 805, 374, 665, 621,
	606, 14430, 1260, 783, -1000, -1000, 1614, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 652, 1257,
	-1000, -1000, 1256, -1000, -1000, 1104, -1000, 1090, 11254, 27,
	27, 11254, 11254, 11254, 1253, 242, -1000, -1000, -1000, 649,
	-1000, 646, 157, -141, -144, -1000, 1543, -138, 1542, 1540,
	1085, -1000, -1000, 76, -1000, -1000, 1465, 53, -1000, -1000,
	-1000, 347, 347, -1000, -1000, -1000, -1000, 796, 790, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 102, 14430, 1074, -1000, 435, 930, 4406, -224, 11254,
	-1000, 789, -1000, 1063, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1049, 1043, 1038, 11254, -1000, -1000, -1000, 61, 928,
	923, 1236, 636, -139, 1536, -1000, 564, 1534, 564, 564,
	-1000, 14430, -1000, 426, 786, 2, -1000, -1000, -1000, 51,
	119, 105, -1000, 167, -1000, -1000, -1000, -1000, -1000, -1000,
	99, 1031, -1000, 783, 779, -1000, 641, 1405, -1000, -63,
	1028, -1000, -1000, -1000, -1000, -1000, 1002, -1000, -1000, -1000,
	1328, 9666, -154, -1000, 739, -1000, 564, -1000, -1000, -1000,
	625, -1000, 795, 46, 597, 4813, 1234, 4813, 1233, 57,
	1232, -1000, -1000, -1000, -1000, -1000, 242, -1000, -1000, 1404,
	1402, 1589, -1000, -1000, -1000, -1000, 76, 76, 76, 76,
	-61, -1000, 14430, -1000, 993, -1000, -1000, -1000, 276, -1000,
	-1000, -1000, -1000, -1000, 1230, 1511, -1000, 1190, 14430, 959,
	14430, 1226, 421, 4813, -1000, -1000, 1594, -1000, 1592, 303,
	303, -1000, 1154, -1000, 411, -1000, 10857, 14430, -1000, 126,
	54, -1000, 990, -1000, 974, 14430, 594, 537, -1000, -1000,
	-1000, 599, 70, -1000, 14430, 2770, -1000, 273, 954, -1000,
	913, 43, -1000, -1000, 944, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 711, 14430, -1000, 126, 1235, -1000, 591, -1000,
	-1000, -1000, 699, 118, -1000, -1000, 699, 45, -1000, 121,
	-1000, -1000, 935, -1000, 907, 1199, -1000, 45, 15781, 4406,
	-1000, 15781, 894, -1000,
}

var yyPgo = [...]int{
	0, 622, 1945, 1944, 904, 863, 1943, 1941, 1940, 1939,
	1938, 1937, 1936, 1935, 1933, 1932, 1931, 1930, 1929, 1927,
	1925, 1924, 1921, 1920, 1919, 1918, 1917, 1913, 1910, 1909,
	1908, 1905, 775, 1904, 1903, 1902, 1901, 1900, 1899, 116,
	1896, 1894, 1893, 1892, 1887, 1886, 1885, 1884, 123, 86,
	88, 1883, 120, 139, 1882, 102, 1880, 75, 137, 1877,
	1876, 31, 96, 1875, 100, 97, 77, 179, 89, 1874,
	1873, 1872, 1868, 106, 1867, 1852, 1850, 1848, 55, 1846,
	64, 35, 30, 1845, 73, 1844, 1843, 1842, 1837, 1835,
	67, 1834, 61, 44, 1832, 1831, 1830, 1829, 1828, 40,
	1827, 42, 1825, 1824, 1823, 1821, 1820, 1817, 1800, 16,
	18, 21, 1799, 1798, 17, 2, 1797, 1796, 76, 1795,
	1793, 1792, 652, 1791, 1790, 1789, 126, 1788, 107, 1787,
	1786, 1785, 1783, 9, 1777, 41, 1776, 1772, 1771, 46,
	1770, 1769, 85, 36, 142, 83, 1768, 1767, 1766, 124,
	20, 57, 0, 111, 45, 1764, 108, 115, 1763, 79,
	153, 114, 49, 1762, 43, 63, 1761, 1759, 1758, 60,
	11, 1757, 82, 12, 74, 1756, 92, 101, 1, 84,
	1755, 118, 1754, 1751, 95, 1749, 1748, 50, 94, 1747,
	1746, 1745, 29, 1744, 34, 25, 1742, 110, 125, 1741,
	1740, 1739, 99, 81, 71, 1737, 1736, 65, 1735, 90,
	68, 98, 1734, 634, 1733, 93, 59, 19, 1732, 119,
	1731, 143, 109, 103, 1730, 1729, 129, 1474, 122, 1728,
	117, 10, 1710, 1709, 13, 1693, 27, 1692, 1681, 1680,
	1675, 6, 1674, 1670, 1669, 3, 5, 1666, 4, 91,
	1661, 1660, 54, 51, 52, 62, 1659, 1658, 1656, 1654,
	1653, 204, 1651, 1650, 1649, 1648, 1647, 1644, 1643, 72,
	1642, 1641, 1640, 1639, 56, 1637, 1636, 1635, 1634, 1633,
	32, 1632, 1631, 24, 1629, 28, 1627, 1626, 1625, 14,
	1624, 1618, 15, 1617, 1616, 7, 8, 1615, 1614, 53,
	37, 33, 66, 69, 1611, 22, 1610, 80, 1608, 1606,
	1605, 112, 1604,
}

//line mysql_sql.y:5938
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) intervalTypeUnion() tree.IntervalType {
	v, _ := st.union.(tree.IntervalType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 309, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	47, 298, 298, 297, 297, 296, 296, 295, 295, 295,
	294, 294, 294, 293, 293, 292, 292, 290, 290, 291,
	289, 288, 288, 286, 286, 284, 284, 285, 285, 279,
	279, 282, 282, 280, 280, 280, 280, 283, 278, 278,
	278, 277, 277, 46, 46, 46, 216, 216, 45, 45,
	230, 230, 230, 230, 230, 228, 228, 228, 228, 227,
	227, 226, 226, 231, 231, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 40, 40,
	40, 40, 43, 44, 224, 224, 224, 224, 224, 225,
	225, 225, 41, 42, 42, 215, 215, 220, 220, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	214, 214, 223, 223, 223, 222, 222, 221, 221, 34,
	34, 34, 37, 36, 213, 213, 213, 213, 213, 213,
	213, 213, 35, 35, 35, 35, 35, 35, 33, 33,
	32, 212, 212, 211, 39, 39, 39, 39, 38, 38,
	38, 38, 38, 38, 38, 155, 155, 155, 7, 31,
	31, 261, 261, 166, 166, 167, 167, 165, 165, 165,
	165, 165, 165, 264, 265, 162, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 30, 310, 310, 310,
	28, 29, 260, 260, 260, 27, 26, 25, 24, 24,
	23, 22, 22, 159, 159, 161, 161, 157, 311, 311,
	236, 236, 160, 160, 21, 21, 158, 158, 140, 156,
	156, 156, 6, 8, 8, 8, 8, 8, 13, 12,
	11, 10, 9, 5, 4, 268, 268, 268, 268, 268,
	268, 306, 306, 306, 307, 72, 72, 68, 68, 269,
	269, 179, 308, 308, 276, 276, 275, 275, 274, 274,
	70, 70, 71, 71, 60, 60, 48, 48, 281, 281,
	281, 281, 287, 287, 258, 258, 106, 106, 136, 136,
	137, 137, 49, 49, 50, 50, 50, 66, 66, 67,
	67, 67, 65, 65, 64, 63, 63, 62, 61, 61,
	61, 52, 52, 51, 51, 51, 51, 51, 122, 122,
	122, 53, 262, 262, 262, 267, 267, 119, 119, 120,
	120, 118, 118, 54, 54, 55, 55, 55, 55, 117,
	117, 116, 56, 56, 57, 57, 59, 59, 59, 59,
	127, 127, 126, 126, 126, 126, 75, 75, 125, 124,
	124, 124, 74, 74, 73, 73, 69, 69, 58, 58,
	123, 312, 312, 121, 148, 148, 148, 154, 154, 147,
	147, 147, 153, 153, 149, 149, 150, 150, 150, 3,
	3, 3, 16, 16, 16, 14, 209, 209, 208, 208,
	210, 210, 210, 210, 204, 204, 205, 205, 205, 205,
	206, 206, 206, 207, 207, 207, 207, 203, 203, 202,
	200, 200, 200, 201, 201, 201, 201, 201, 201, 151,
	151, 15, 197, 197, 198, 198, 198, 199, 199, 191,
	191, 191, 191, 19, 195, 195, 196, 196, 196, 196,
	196, 192, 192, 194, 194, 190, 190, 190, 190, 190,
	18, 189, 189, 187, 187, 185, 185, 186, 186, 184,
	184, 184, 188, 188, 17, 263, 263, 232, 232, 235,
	235, 242, 242, 243, 243, 241, 241, 248, 248, 247,
	247, 246, 246, 245, 245, 244, 244, 239, 239, 238,
	238, 233, 233, 233, 233, 233, 234, 234, 237, 237,
	240, 240, 97, 97, 98, 98, 98, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 304, 304, 305, 100,
	100, 100, 104, 104, 104, 104, 104, 104, 99, 99,
	99, 101, 101, 101, 82, 82, 81, 81, 76, 76,
	77, 77, 78, 78, 79, 79, 80, 80, 80, 80,
	80, 80, 218, 218, 302, 302, 303, 303, 299, 299,
	299, 301, 301, 301, 301, 301, 300, 300, 83, 134,
	134, 134, 152, 152, 152, 133, 133, 133, 96, 96,
	95, 95, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 217, 217, 163, 163, 164,
	164, 114, 112, 112, 113, 113, 113, 113, 110, 111,
	109, 109, 109, 109, 109, 108, 108, 107, 107, 107,
	193, 193, 105, 105, 103, 103, 103, 102, 102, 102,
	249, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 92, 92, 92, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	273, 273, 273, 129, 131, 131, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 180, 180,
	181, 181, 270, 270, 270, 270, 270, 270, 271, 271,
	272, 272, 272, 272, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 171, 128, 128, 128, 250, 182, 177, 177,
	178, 178, 173, 173, 173, 173, 173, 175, 175, 175,
	175, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	174, 174, 176, 176, 183, 183, 183, 183, 183, 183,
	94, 94, 94, 94, 251, 168, 168, 168, 168, 168,
	168, 168, 85, 85, 85, 85, 89, 89, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 90, 90, 90, 88, 88, 88, 88, 88,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 87, 135, 135, 252, 252,
	253, 253, 254, 255, 255, 256, 256, 256, 257, 257,
	257, 259, 259, 139, 139, 139, 144, 144, 138, 138,
	145, 145, 146, 146, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	14, 0, 2, 1, 3, 3, 3, 1, 3, 5,
	0, 2, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	2, 1, 2, 3, 4, 3, 3, 1, 0, 1,
	1, 0, 1, 9, 4, 7, 0, 3, 7, 4,
	1, 3, 3, 3, 1, 0, 1, 1, 1, 1,
	3, 1, 4, 1, 3, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 2, 1, 1, 1, 3, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 3, 6, 3, 1, 1, 1, 1, 1,
	1, 1, 2, 4, 6, 1, 4, 1, 3, 3,
	4, 4, 4, 3, 2, 4, 4, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 2, 0, 4, 2, 4, 1, 5,
	3, 2, 1, 2, 2, 4, 4, 5, 2, 1,
	7, 1, 3, 3, 1, 1, 1, 1, 2, 3,
	4, 7, 2, 5, 3, 1, 1, 1, 1, 7,
	9, 0, 2, 0, 1, 1, 2, 2, 2, 1,
	4, 2, 2, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 5, 1, 1, 1,
	5, 5, 0, 1, 1, 2, 2, 3, 6, 7,
	4, 7, 8, 0, 2, 0, 2, 2, 1, 1,
	1, 1, 0, 1, 4, 5, 1, 3, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 4, 4,
	6, 4, 4, 6, 4, 2, 1, 5, 4, 4,
	2, 0, 1, 3, 3, 1, 3, 1, 3, 1,
	3, 4, 0, 1, 0, 1, 1, 3, 1, 1,
	0, 4, 1, 3, 2, 1, 0, 8, 0, 4,
	7, 4, 0, 2, 0, 2, 0, 2, 0, 4,
	1, 3, 1, 2, 4, 3, 4, 0, 1, 2,
	4, 4, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 1, 2,
	2, 7, 0, 1, 1, 1, 1, 0, 2, 0,
	3, 0, 2, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 3, 1, 1, 4, 4, 4, 3,
	2, 2, 2, 3, 2, 3, 0, 2, 1, 1,
	2, 2, 0, 1, 2, 4, 1, 3, 1, 3,
	3, 0, 1, 2, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 0, 2, 1, 2,
	2, 2, 2, 2, 0, 1, 2, 2, 2, 2,
	1, 3, 2, 2, 2, 2, 2, 1, 3, 2,
	1, 3, 2, 0, 3, 3, 5, 5, 4, 1,
	1, 4, 1, 3, 1, 3, 2, 1, 1, 0,
	1, 1, 1, 11, 0, 2, 3, 2, 3, 1,
	1, 1, 3, 3, 4, 0, 2, 2, 2, 2,
	5, 1, 1, 0, 3, 0, 1, 1, 2, 4,
	4, 4, 0, 1, 10, 0, 1, 0, 6, 0,
	4, 0, 3, 1, 3, 4, 5, 0, 3, 1,
	3, 2, 3, 1, 2, 0, 6, 0, 2, 0,
	2, 4, 5, 4, 5, 1, 6, 5, 0, 3,
	0, 1, 0, 1, 1, 3, 2, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 4, 1, 3, 3, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 1, 2, 1, 7, 7, 7, 7,
	8, 5, 0, 1, 0, 1, 1, 1, 1, 3,
	3, 1, 1, 1, 1, 1, 0, 1, 3, 1,
	3, 5, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 2, 1, 2, 2, 1, 1, 2, 2, 2,
	2, 2, 1, 5, 6, 1, 2, 0, 1, 1,
	2, 5, 0, 1, 1, 1, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 2, 2,
	0, 3, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 3, 5, 2,
	2, 2, 2, 1, 1, 2, 6, 6, 6, 1,
	1, 1, 1, 1, 2, 2, 1, 2, 2, 2,
	2, 2, 0, 1, 1, 5, 4, 4, 5, 5,
	5, 5, 4, 5, 5, 5, 5, 5, 5, 5,
	1, 1, 1, 4, 2, 2, 4, 2, 2, 4,
	6, 2, 2, 2, 4, 6, 4, 2, 0, 1,
	2, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 1, 1, 3, 0, 1,
	1, 3, 3, 3, 3, 2, 1, 3, 4, 3,
	1, 3, 4, 4, 5, 3, 4, 5, 6, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 1, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 1, 1, 3, 0, 1,
	0, 3, 3, 0, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -309, -2, -1, -3, -4, -5, -6, -38, -20,
	-7, -32, -33, -34, -40, -45, -46, -47, -49, -16,
	-15, -14, 8, 10, -8, -155, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -31, 9, 49, -35,
	-36, -37, -41, -42, -43, -44, 283, 289, 325, -50,
	-52, -17, -18, -19, 177, -9, -10, -11, -12, -13,
	199, 198, 26, 197, 178, 120, 121, 123, 124, 30,
	-51, 54, 179, -53, 6, 421, -60, 27, -81, -152,
	57, -141, -143, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 373,
	216, 240, 243, 250, 120, 137, 131, 158, 150, 151,
	128, 220, 221, 64, 123, 353, 339, 324, 126, 235,
	237, 239, 242, 222, 146, 142, 234, 218, 140, 223,
	28, 224, 163, 225, 226, 378, 335, 265, 357, 341,
	247, 141, 336, 238, 338, 164, 168, 345, 289, 135,
	136, 343, 347, 162, 196, 32, 375, 34, 208, 348,
	166, 161, 157, 356, 251, 249, 160, 134, 156, 219,
	38, 170, 169, 171, 319, 320, 321, 322, 227, 228,
	344, 153, 143, 269, 129, 18, 351, 203, 340, 290,
	229, 244, 206, 252, 165, 167, 210, 215, 377, 248,
	349, 139, 207, 236, 202, 352, 130, 283, 292, 230,
	124, 241, 346, 355, 37, 305, 133, 127, 193, 121,
	212, 217, 231, 232, 233, 254, 253, 245, 154, 209,
	159, 132, 155, 122, 211, 354, 306, 420, 267, 308,
	152, 149, 213, 186, 376, 350, 342, 125, 312, 307,
	147, 255, 417, 418, 419, 11, -156, 19, 323, -39,
	181, -152, -5, -4, -32, -49, -57, -58, -59, -121,
	-123, -81, 54, -152, -227, -197, -226, -198, -229, -199,
	-151, 20, 178, 177, 211, 10, 179, 287, 185, 8,
	6, 288, 197, 9, 289, 291, 292, 295, 296, 297,
	31, 300, 301, 57, 60, -152, -227, -197, 215, 222,
	-48, -64, -65, -122, 27, 15, 5, 308, 214, -191,
	-189, -263, 194, 193, 76, 359, 183, 298, -310, -260,
	342, 341, -160, 340, 333, 335, 177, 185, 343, 32,
	345, 346, 336, 308, 125, 122, -213, 80, 130, 129,
	-213, 214, 29, -220, 318, -219, -221, 345, 346, 356,
	-214, 344, -139, -152, 58, 59, 75, 151, 148, -65,
	-122, -64, -50, -52, 308, 214, 185, 184, 359, -262,
	20, -267, 21, 22, -1, -70, 206, -81, 119, -57,
	-133, -152, 324, 89, -39, 119, 30, -124, -125, -126,
	-127, 41, 45, 47, 42, 43, 44, 48, -312, 23,
	-148, -154, 23, -149, 60, -150, -143, 57, 58, 59,
	-50, -52, 51, 55, 11, 55, 54, 422, 58, 285,
	299, 308, 286, 298, 186, 214, 299, 214, 333, 186,
	290, 293, 294, 334, 51, 187, 51, -277, 356, -48,
	-67, 17, -53, -52, 416, 16, 20, 21, -187, 189,
	-187, 185, -187, 184, -311, 11, 99, 213, 212, 337,
	334, -236, 338, 339, -160, -159, 97, -160, 184, 359,
	-261, 189, 349, 376, 128, 129, 130, -224, 20, 29,
	317, -197, 214, 55, 89, 19, -222, 89, 100, -221,
	-221, -221, -222, -99, 29, -150, 60, 116, -99, 29,
	119, 30, 30, -66, -67, -53, -52, 56, 56, -261,
	-261, -261, -261, -261, -54, -55, 107, -173, -152, 81,
	-175, 57, -169, 380, 381, 382, 383, 384, 385, 386,
	388, 393, 395, 399, 400, 401, 402, 406, 407, 412,
	413, 414, 308, 147, -170, -172, -295, -290, -168, 54,
	105, 106, 113, 82, -171, -249, 24, 367, -129, -130,
	-131, -132, -291, -289, 60, 65, 69, 71, 72, 70,
	67, 118, -52, -266, -272, -270, 148, 200, 144, 145,
	8, 111, 318, 116, -273, 59, 58, 271, 75, 272,
	273, 359, 268, 274, 189, 323, 43, 275, 276, 277,
	278, 279, 366, 280, 44, 281, 270, 204, 282, 370,
	369, 371, 363, 360, 358, 361, 362, 364, 365, -268,
	33, -49, 54, 30, 54, -152, -118, 12, 119, 65,
	60, -152, -212, -211, -133, -58, -58, -58, -58, 41,
	41, 41, 46, 41, 46, 41, -126, -149, -154, 56,
	-228, 184, 284, 210, -226, 211, 289, 292, -203, -202,
	-200, -151, 60, -198, -231, -133, -151, 334, -228, -203,
	-202, 326, -48, -173, -152, 60, -63, -62, -173, -203,
	81, -197, -150, -152, -187, -81, -159, -159, -161, -311,
	-157, -311, 334, -118, -172, -236, -158, -152, -187, -203,
	308, 24, 350, 351, 126, 129, 128, 357, -225, 317,
	20, -197, -219, -215, 60, 318, -202, -223, 51, 116,
	-274, -173, 29, -222, -222, -222, -223, 115, -152, -48,
	-203, -197, -152, -82, -81, -153, -150, -143, -117, 55,
	-116, 11, -147, 80, 78, 79, -152, 23, 119, -173,
	96, -183, 89, 90, 91, 92, 93, 94, 54, 54,
	54, 54, 54, 54, 54, 54, -181, 54, 54, 54,
	54, 54, -181, 54, 54, 54, 102, 101, 112, 105,
	106, 107, 108, 109, 110, 111, 103, 104, 99, 81,
	97, 98, 83, -52, -173, -178, -172, -172, -172, -172,
	-249, 54, -173, 54, -271, 54, -180, -181, 54, 60,
	60, 60, 54, 54, 54, -172, 54, -269, -179, -308,
	415, -72, 56, -68, -152, -306, -307, -68, -71, -152,
	-65, -173, -145, -146, -138, -142, -149, -150, -143, 266,
	182, 20, 80, 23, 25, 271, 303, 83, 116, 16,
	84, 148, 115, 273, 367, 272, 177, 47, 75, 369,
	371, 370, 360, 358, 310, 314, 316, 313, 359, 333,
	29, 10, 26, 198, 21, 22, 109, 179, 200, 87,
	88, 201, 24, 199, 72, 19, 50, 11, 323, 13,
	14, 274, 309, 189, 188, 99, 326, 185, 45, 8,
	118, 27, 96, 311, 41, 77, 43, 97, 17, 361,
	362, 31, 325, 372, 205, 111, 275, 276, 277, 48,
	81, 317, 70, 51, 78, 15, 46, 98, 180, 366,
	44, 214, 315, 279, 281, 280, 183, 6, 270, 368,
	30, 197, 42, 184, 334, 86, 187, 71, 204, 144,
	145, 5, 76, 9, 49, 52, 363, 364, 365, 33,
	85, 12, 282, 278, 318, 327, 328, 329, 330, 331,
	332, 172, 173, 174, 175, 176, 246, 192, 190, 194,
	195, 415, 416, 19, -39, 119, -118, 55, 89, -74,
	-73, 51, 52, -75, 51, -73, 41, 41, -230, 107,
	57, 55, -201, 309, 422, 58, 56, 55, -230, 187,
	60, 55, 18, 119, -281, 338, 55, -61, 25, 26,
	-204, -205, 315, 24, -190, 52, -185, -186, -184, -188,
	29, -81, -118, -118, -118, -159, -153, -161, -156, -161,
	-157, 119, -140, -152, -204, 54, 127, 130, 130, 129,
	-197, 187, 54, 89, -223, -223, -223, 29, -151, 51,
	55, -118, -55, -56, -57, -173, -173, -173, -152, -152,
	107, 70, 81, -169, -177, -178, -173, -128, 21, 20,
	-128, -128, -173, -128, 107, -178, -178, 56, -251, 65,
	-128, -128, -128, -128, -128, -128, -128, -170, -170, -170,
	-170, -170, -170, -170, -170, -170, -170, -170, -170, -176,
	-182, -249, 54, 99, 97, 98, 83, -172, -170, -170,
	56, 55, -173, -250, 270, -177, 56, -178, -177, -170,
	-177, -128, 55, 54, 56, 55, 33, 119, 55, 89,
	56, 55, -66, 119, 324, -152, -65, -211, -173, -173,
	54, -173, 11, 119, 119, -202, 16, 376, -151, -133,
	187, -203, -278, 188, 366, -173, -173, -152, -287, 332,
	327, 329, -62, -209, 376, 317, 316, 312, -206, -207,
	311, 313, 310, 314, 51, 260, 261, 262, 263, -184,
	-139, 115, 225, 151, 54, -118, -159, -159, -161, -152,
	-209, 56, 130, -203, -162, 60, -215, -81, -81, -120,
	13, 55, 119, 70, 56, 55, -173, -173, -173, 23,
	-178, 56, 56, 56, 56, -173, -173, -173, -173, -173,
	-173, -173, -178, -176, -172, -170, -170, -174, 201, 80,
	-173, 55, 52, 56, 56, 52, 56, 55, 56, -173,
	-179, -276, -275, -274, 33, -49, -68, -269, -152, -307,
	-274, -152, -145, -142, -150, -143, 65, -66, -69, -152,
	-203, 107, 107, 57, -151, 318, -151, -203, -216, 376,
	27, 119, -258, 417, -285, 327, 16, 16, -208, -210,
	319, 320, 321, 322, 80, -207, 60, 60, 60, 60,
	-81, -144, 89, -144, -144, -76, -77, -78, -83, -79,
	-133, -164, -80, 192, 190, 194, -303, 76, 195, 246,
	77, 185, -118, -118, -159, -166, -167, -165, 266, -264,
	318, 309, 56, -119, 14, 16, -57, -152, 107, -173,
	56, 56, 56, -84, -90, 116, 148, 200, 147, 146,
	144, 305, 306, 140, 141, 139, 56, 56, 56, 56,
	56, 56, 56, 56, 56, -174, 80, -172, -169, 56,
	-84, -99, -99, -170, 56, 56, 55, -269, 56, 55,
	-151, 16, 23, -204, 289, 184, -106, 418, 60, 16,
	60, -283, 60, -210, 65, 65, 65, 65, -207, 54,
	-99, -101, -150, 60, 116, 60, 56, 55, -85, -89,
	-86, -88, -87, -91, -90, 148, 149, 116, 152, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 30,
	200, 144, 145, 146, 147, 164, 131, 150, 374, 172,
	132, 173, 133, 174, 134, 175, 135, 136, 176, 137,
	-80, -152, 77, -302, -303, -187, -302, 77, 54, -118,
	-165, 267, 31, 118, 269, 29, 265, 16, -173, -178,
	56, -252, -254, 54, -253, 54, -252, -252, -252, -92,
	136, 135, -92, -255, 54, -256, 54, -255, -169, 56,
	56, 56, 56, -274, -152, -151, -151, -216, 290, -81,
	-136, 419, 65, 60, 329, -192, -194, -133, 54, -97,
	-98, -115, 303, 216, -188, 220, 64, 221, 324, 222,
	185, 224, 225, 226, 196, 227, 228, 229, 318, 230,
	231, 232, 233, 286, 5, 256, -78, -96, -95, -93,
	70, 81, 29, 303, -94, 64, 115, 239, 217, 240,
	-114, -163, 190, 76, 77, 291, -164, -257, 306, 305,
	-252, -253, -254, -252, -252, 54, 54, -252, -252, -252,
	-252, -299, -300, -152, -300, -152, -299, -299, -187, -173,
	65, -265, -162, 65, 65, 65, 65, -279, -236, 54,
	16, 56, 55, -252, -173, -232, 206, 55, -115, -144,
	-144, -139, 115, -144, -144, -144, -144, 223, 223, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, 54, -93, 70, -170, 60, -101, -102,
	29, 238, 234, -103, 29, 218, 219, -105, 54, 246,
	77, 77, -81, -259, 307, -135, 60, -135, 54, 52,
	255, 54, 54, 54, -300, 56, 268, 56, 56, 55,
	56, 55, -286, 332, -282, -280, 327, 328, 329, 330,
	-137, -152, -283, -195, -194, -61, 56, 16, -115, 65,
	65, -144, -144, 65, 60, 60, 60, -144, -144, 65,
	60, -154, 65, 65, 65, 65, 29, 60, -104, 29,
	234, 238, 235, 236, 237, 65, 29, 65, 29, 65,
	29, -152, 54, -304, -305, 60, 65, 54, -193, 54,
	56, 55, 56, -192, -301, 260, 261, 262, 264, 263,
	-301, -192, -192, -192, 54, -218, -217, 247, 81, 65,
	65, -288, 188, -284, 331, -280, 16, 329, 16, 16,
	56, 55, -196, 196, 64, 376, 258, 259, -61, -233,
	248, 249, -234, -240, 251, -99, -99, 60, 60, -100,
	217, -82, 56, 55, 89, 56, -173, -108, -107, 372,
	-192, 60, 56, 56, 56, 56, -192, 247, 56, 56,
	-294, 54, 65, -285, 16, -283, 16, -283, -283, -152,
	-144, 60, 257, -238, 252, 54, -236, 54, -236, 77,
	261, 218, 219, 56, -305, 60, 56, -112, -113, -110,
	-111, 51, 336, 244, 245, 56, -195, -195, -195, -195,
	56, -298, 30, 56, -293, -292, -134, -289, -152, 332,
	60, -283, 65, -150, -235, 253, 65, -170, 54, -170,
	54, -237, 250, 54, -217, -111, 51, -110, 51, 10,
	9, -114, -297, -296, -295, 56, 55, 119, -242, 54,
	16, 56, -231, 56, -231, 54, 89, -170, -109, 241,
	242, 30, 129, -109, 55, 89, -292, -152, -243, -241,
	206, -234, 56, 56, -231, 65, 56, 70, 29, 243,
	-296, 29, -173, 119, 56, 55, 57, -239, 254, 56,
	-152, -241, -244, 33, 65, -248, -245, 54, -115, 208,
	-248, -115, -247, -246, 253, 209, 56, 55, 57, 54,
	-246, -245, -178, 56,
}

var yyDef = [...]int{
	19, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 419,
	420, 421, 0, 0, 262, 0, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 198, 0, 179, 159,
	160, 161, 118, 119, 120, 121, 0, 0, 0, 322,
	-2, 422, 423, 424, -2, 263, 264, 265, 266, 267,
	195, 196, 197, -2, 0, 172, 0, 164, 164, 0,
	332, 0, 0, 343, 352, 19, 300, 0, 305, 596,
	632, 633, 634, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1078,
	1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088,
	1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098,
	1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108,
	1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118,
	1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128,
	1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138,
	1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148,
	1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188,
	1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198,
	1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
	1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
	1229, 1230, 1231, 1232, 1233, 0, 188, 0, 0, 192,
	0, 259, 184, 185, 186, 187, 0, 374, 375, 398,
	401, 404, 0, 178, 0, 0, 79, 462, 81, 464,
	0, 85, 87, 88, -2, 92, 93, 94, 95, 96,
	97, 98, 0, 100, 1127, 102, 1187, 105, 106, 107,
	0, 116, 117, -2, -2, 459, 0, 0, 1176, 61,
	323, -2, 0, 0, 0, 0, 348, 493, 493, 0,
	493, 0, 470, 471, 472, 491, 492, 506, 0, 0,
	235, 236, 0, 252, 243, 252, 0, 227, 228, 229,
	233, 234, 253, 201, 173, 174, 163, 0, 168, 0,
	162, 0, 0, 132, 0, 137, 0, 1126, 1191, 1142,
	0, 1159, 0, 157, 150, 151, 923, 1088, 0, 327,
	0, 333, 0, 332, 201, 201, 201, 201, 201, 0,
	353, 354, 355, 356, 3, 0, 0, 304, 0, 361,
	189, 635, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 388, 0, 0, 0, 0, 402,
	403, 405, 0, 407, 408, 414, 415, 416, 417, 418,
	0, 332, 75, 0, 0, 0, 0, 0, 466, 86,
	115, 89, 90, 0, 110, 112, 114, 113, 99, 111,
	101, 103, 104, 109, 75, 0, 0, 0, 62, 325,
	306, 0, 345, 347, 0, 0, 349, 350, 0, 0,
	0, 0, 0, 493, 0, 248, 249, 243, 243, 237,
	245, 0, 250, 251, 0, 361, 0, 0, 0, 493,
	0, 0, 0, 0, 166, 0, 171, 122, 127, 125,
	126, 128, 0, 0, 0, 0, 0, 155, 156, 0,
	0, 0, 0, 144, 147, 588, 589, 590, 148, 149,
	0, 924, 925, 306, 328, 344, 346, 341, 342, 0,
	0, 0, 0, 0, 369, 363, 365, 409, 27, 0,
	826, 632, 830, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1243, 1248, 1250, -2, -2, -2, 1257, 1261, 1262, 1267,
	1268, 1269, -2, -2, 839, 703, 704, 705, 706, 0,
	0, 0, 0, 0, 713, 714, 0, 0, 719, 720,
	721, 722, 37, 38, 855, 856, 857, 858, 859, 860,
	861, 793, 690, 0, 778, 768, 0, 788, 806, 807,
	0, 0, 0, 0, 0, 39, 40, 784, 785, 786,
	787, 789, 790, 791, 792, 794, 795, 796, 797, 798,
	799, 800, 801, 802, 803, 804, 805, 808, 810, 780,
	781, 782, 783, 772, 773, 774, 775, 776, 777, 274,
	292, 276, 0, 281, 0, 597, 332, 0, 0, 190,
	0, 260, 361, 181, 0, 392, 386, 0, 379, 390,
	391, 382, 0, 384, 0, 380, 381, 399, 406, 400,
	0, 76, 77, 78, 80, 91, 0, 0, 69, 447,
	453, 450, 460, 463, 0, 83, 465, 108, 0, 64,
	0, 0, 326, 329, 27, 308, 334, 335, 338, 434,
	0, 461, 485, -2, 0, 361, 361, 361, 243, 0,
	245, 0, 245, 240, 244, 0, 254, 256, 0, 434,
	1218, 202, 175, 176, 0, 0, 170, 0, 0, 129,
	130, 131, 138, 133, 135, 0, 0, 139, 152, 153,
	154, 298, 299, 0, 0, 0, 143, 0, 158, 324,
	268, 269, 0, 271, 594, 272, 412, 413, 361, 0,
	370, 0, 366, 0, 0, 0, 410, 0, 0, 825,
	0, 0, 844, 845, 846, 847, 848, 849, 818, 813,
	813, 813, 0, 813, 0, 0, 754, 0, 813, 813,
	813, 813, 755, 813, 813, 813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 820, 0, 709, 710, 711, 712,
	715, 0, 0, 818, 757, 0, 758, 769, 0, 761,
	762, 763, 818, 0, 818, 767, 813, 275, 289, 0,
	293, 0, 0, 285, 287, 280, 282, 0, 0, 302,
	327, 362, 636, 0, 930, -2, 932, -2, -2, 934,
	935, 936, 937, 938, 939, 940, 941, 942, 943, 944,
	945, 946, 947, 948, 949, 950, 951, 952, 953, 954,
	955, 956, 957, 958, 959, 960, 961, 962, 963, 964,
	965, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054,
	1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074,
	1075, 1076, 1077, 0, 193, 0, 332, 0, 0, 376,
	393, 0, 0, 377, 0, 378, 383, 385, 0, 70,
	74, 0, 449, 0, 0, 452, 82, 0, 0, 0,
	58, 0, 0, 0, 312, 0, 0, 337, 339, 340,
	426, 435, 0, 494, 0, 0, 490, -2, 497, 0,
	503, 0, 226, 230, 231, 361, 246, 243, 247, 243,
	245, 0, 255, 258, 426, 0, 177, 165, 167, 0,
	124, 0, 0, 0, 140, 141, 142, 145, 146, 0,
	0, 359, 364, 371, 372, 822, 823, 824, 411, 28,
	367, 827, 0, 829, 0, 819, 820, 0, 814, 815,
	0, 0, 0, 0, 0, 0, 0, 770, 0, 854,
	0, 0, 0, 0, 0, 0, 0, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 831,
	842, 843, 0, 0, 0, 0, 0, 840, 835, 0,
	707, 0, 0, 812, 816, 0, 779, 0, 0, 0,
	0, 0, 292, 294, 0, 0, 292, 0, 0, 0,
	301, 0, 273, 0, 0, 261, 327, 182, 183, 394,
	0, 387, 0, 0, 0, 448, 0, 0, 451, 84,
	0, 66, 0, 59, 60, 330, 331, 28, 314, 47,
	0, 0, 336, 425, 0, 436, 437, 438, 439, 440,
	0, 0, 0, 0, 0, 486, 487, 488, 489, 498,
	926, 926, 926, 0, 598, 238, 361, 361, 243, 257,
	203, 0, 169, 123, 0, 215, 134, 270, 595, 357,
	0, 0, 0, 828, 753, 0, 0, 0, 0, 0,
	0, 742, 736, 737, 771, 0, 0, 0, 0, 0,
	0, 0, 0, 832, 840, 836, 0, 833, 0, 0,
	821, 0, 0, 756, 759, 0, 764, 0, 766, 0,
	290, 0, 295, 296, 292, 279, 286, 278, 288, 283,
	284, 303, 637, 931, 928, 929, 191, 180, 0, 396,
	68, 71, 72, 73, 454, 0, 455, 434, 65, 0,
	0, 0, 316, 0, 313, 0, 0, 0, 427, 428,
	0, 0, 0, 0, 0, 442, 443, 444, 445, 446,
	0, 0, 927, 0, 0, 0, 599, 600, 602, 603,
	0, 0, 605, 659, 0, 614, 493, 614, 0, 0,
	616, 617, 241, 239, 361, 199, 204, 205, 0, 209,
	0, 0, 136, 351, 0, 0, 373, 29, 368, 821,
	738, 739, 740, 0, 723, 908, 910, 726, 908, 908,
	908, 732, 732, 913, 915, 913, 741, 743, 744, 747,
	745, 748, 749, 735, 817, 834, 0, 841, 837, 708,
	0, 0, 0, 0, 746, 291, 0, 277, 395, 0,
	458, 0, 0, 66, 0, 0, 318, 0, 315, 0,
	309, 311, 57, 429, 430, 431, 432, 433, 441, 0,
	499, 500, 591, 592, 593, 501, -2, 0, -2, 918,
	863, 864, 865, 908, 867, 910, 0, 908, 908, 894,
	895, 896, 897, 898, 899, 900, 901, 902, 0, 0,
	885, 908, 908, 908, 908, 905, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	604, 660, 626, 626, 615, 626, 626, 493, 0, 242,
	206, 207, 208, 0, 211, 212, 214, 0, 358, 360,
	716, 724, 909, 0, 725, 0, 727, 728, 729, 730,
	733, 734, 731, 882, 0, 883, 0, 884, 838, 717,
	718, 760, 765, 297, 397, 456, 457, 63, 67, 49,
	307, 0, 317, 48, 0, 0, 481, 908, 0, 507,
	-2, 544, 926, 926, 0, 926, 926, 926, 926, 0,
	0, 926, 926, 926, 926, 926, 926, 926, 926, 926,
	926, 926, 926, 926, 926, 0, 601, 628, -2, 640,
	642, 0, 0, 645, 646, 0, 0, 0, 0, 682,
	652, 0, 0, 852, 853, 0, 658, 921, 919, 920,
	866, 890, 891, 892, 893, 0, 0, 886, 887, 888,
	889, 0, 618, 627, 0, 627, 0, 0, 626, 0,
	0, 213, 200, 0, 0, 0, 0, 43, 0, 0,
	0, 474, 0, 338, 0, 504, 0, 502, 546, 0,
	0, 926, 926, 0, 0, 0, 0, 926, 926, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 641, 643, 644, 647, 648, 649,
	687, 688, 689, 650, 684, 685, 686, 651, 0, 0,
	850, 851, 680, 862, 922, 0, 906, 0, 0, 0,
	0, 0, 0, 0, 0, 612, 210, 912, 911, 0,
	916, 0, 41, 45, 50, 51, 0, 0, 0, 0,
	0, 320, 310, 473, 482, 483, 338, 540, 545, 547,
	548, 0, 0, 551, 552, 553, 554, 0, 0, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 582,
	583, 584, 585, 586, 587, 567, 568, 569, 570, 571,
	572, 579, 0, 0, 576, 0, 0, 0, 675, 0,
	903, 0, 904, 0, 619, 621, 622, 623, 624, 625,
	620, 0, 0, 0, 0, 611, 613, 655, 0, 0,
	0, 30, 0, 47, 0, 52, 0, 0, 0, 0,
	319, 0, 475, 926, 0, 0, 479, 480, 484, 529,
	0, 0, 535, 0, 541, 549, 550, 555, 556, 573,
	0, 0, 575, 0, 0, 683, 0, 662, 676, 0,
	0, 907, 474, 474, 474, 474, 0, 656, 914, 917,
	21, 0, 0, 44, 0, 53, 0, 55, 56, 321,
	0, 477, 0, 509, 0, 0, 0, 0, 0, 538,
	0, 580, 581, 574, 577, 578, 653, 661, 663, 664,
	665, 0, 677, 678, 679, 681, 606, 607, 608, 609,
	0, 20, 0, 31, 0, 33, 35, 36, 629, 42,
	46, 54, 476, 478, 511, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 654, 666, 0, 667, 0, 0,
	0, 610, 22, 23, 0, 32, 0, 0, 508, 0,
	540, 531, 0, 533, 0, 0, 0, 0, 668, 670,
	671, 0, 0, 669, 0, 0, 34, 630, 0, 513,
	0, 527, 532, 534, 0, 539, 537, 672, 674, 673,
	24, 25, 26, 0, 512, 0, 525, 510, 0, 536,
	631, 514, -2, 0, 528, 515, -2, 0, 523, 0,
	516, 524, 0, 519, 0, 0, 518, 0, -2, 0,
	520, -2, 0, 526,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 82, 3, 3, 3, 110, 102, 3,
	54, 56, 107, 105, 55, 106, 119, 108, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 421,
	90, 89, 91, 3, 422, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 112, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 101, 3, 113,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 83, 84, 85,
	86, 87, 88, 92, 93, 94, 95, 96, 97, 98,
	99, 100, 103, 104, 109, 111, 114, 115, 116, 117,
	118, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:473
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:479
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:501
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:505
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:511
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				File:              yyDollar[5].str,
				DuplicateHandling: yyDollar[6].duplicateKeyUnion(),
				Table:             yyDollar[9].tableNameUnion(),
				Fields:            yyDollar[10].fieldsUnion(),
				Lines:             yyDollar[11].linesUnion(),
				IgnoredLines:      uint64(yyDollar[12].int64ValUnion()),
				ColumnList:        yyDollar[13].loadColumnsUnion(),
				Assignments:       yyDollar[14].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 21:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:526
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:530
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:536
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 24:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:540
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 25:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:546
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 26:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:553
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:562
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 28:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:566
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:570
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:575
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:579
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:583
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:589
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:598
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:609
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:613
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:619
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:623
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:629
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:653
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:672
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:676
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:681
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:685
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:693
		{
			yyVAL.str = ""
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:697
		{
			yyVAL.str = yyDollar[3].str
		}
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:702
		{
			yyVAL.str = "\n"
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:706
		{
			yyVAL.str = yyDollar[3].str
		}
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:711
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:715
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:739
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:743
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:749
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:755
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:773
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:790
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:813
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:817
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:821
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:826
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:830
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:836
		{
			yyLOCAL = &tree.Grant{
				Privileges:  yyDollar[2].privilegesUnion(),
				ObjType:     yyDollar[4].objectTypeUnion(),
				Level:       yyDollar[5].privilegeLevelUnion(),
				Users:       yyDollar[7].usersUnion(),
				GrantOption: yyDollar[9].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:846
		{
			yyLOCAL = &tree.Grant{
				IsGrantRole:      true,
				RolesInGrantRole: yyDollar[2].rolesUnion(),
				Users:            yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:854
		{
			yyLOCAL = &tree.Grant{
				IsProxy:     true,
				ProxyUser:   yyDollar[4].userUnion(),
				Users:       yyDollar[6].usersUnion(),
				GrantOption: yyDollar[7].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:864
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:868
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:878
		{
			yyLOCAL = &tree.Revoke{
				Privileges: yyDollar[2].privilegesUnion(),
				ObjType:    yyDollar[4].objectTypeUnion(),
				Level:      yyDollar[5].privilegeLevelUnion(),
				Users:      yyDollar[7].usersUnion(),
				Roles:      nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:888
		{
			yyLOCAL = &tree.Revoke{
				IsRevokeRole:      true,
				RolesInRevokeRole: yyDollar[2].rolesUnion(),
				Users:             yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:898
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_DATABASE,
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:904
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_GLOBAL,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:910
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:917
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:925
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:933
		{
			yyLOCAL = tree.OBJECT_TYPE_NONE
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:937
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:941
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:945
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:951
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:955
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:961
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:968
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:977
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:981
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:987
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:991
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:995
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:999
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1003
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1007
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1011
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1015
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1019
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1023
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1027
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1031
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1035
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1039
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1043
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1047
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1051
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1055
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1059
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1063
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1067
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1071
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1075
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1079
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1083
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1087
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1091
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1095
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1099
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1103
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1107
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1111
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1115
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1127
		{
			yyLOCAL = yyDollar[3].setRoleUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1133
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1141
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL_EXCEPT, Roles: yyDollar[3].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1145
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_DEFAULT, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1149
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1153
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetRole
//line mysql_sql.y:1157
		{
			yyLOCAL = &tree.SetRole{Type: tree.SET_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1163
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1167
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1171
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1177
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1183
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1187
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1194
		{
			yyVAL.str = yyDollar[3].str
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1200
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1204
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1210
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1218
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1227
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1235
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1243
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1266
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1273
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1280
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false),
				Reserved: tree.NewNumVal(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1288
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1295
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false),
			}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1302
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1315
		{
			yyLOCAL = tree.NewNumVal(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1319
		{
			yyLOCAL = tree.NewNumVal(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1323
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1329
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1333
		{
			yyVAL.str = yyDollar[1].str
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1340
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1351
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1357
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1362
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1366
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1370
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1374
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1378
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1382
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1386
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1390
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1396
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1400
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1404
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1408
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1413
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1418
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1424
		{
			yyLOCAL = &tree.Use{Name: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1428
		{
			yyLOCAL = &tree.Use{}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1434
		{
			yyLOCAL = &tree.Update{
				Table:   yyDollar[2].tableExprUnion(),
				Exprs:   yyDollar[4].updateExprsUnion(),
				Where:   yyDollar[5].whereUnion(),
				OrderBy: yyDollar[6].orderByUnion(),
				Limit:   yyDollar[7].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1447
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1451
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1457
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1466
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1472
		{
			st := &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
			yyLOCAL = tree.NewExplainStmt(st, "")
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1477
		{
			st := &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
			yyLOCAL = tree.NewExplainStmt(st, "")
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1482
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1486
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1490
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "row")
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1494
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[5].statementUnion(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1498
		{
			yyLOCAL = tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "")
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1513
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:   yyDollar[3].boolValUnion(),
				IsUserFunc: false,
				Users:      yyDollar[4].usersUnion(),
				TlsOpts:    yyDollar[5].tlsOptionsUnion(),
				ResOpts:    yyDollar[6].resourceOptionsUnion(),
				MiscOpts:   yyDollar[7].userMiscOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1524
		{
			auth := &tree.User{
				AuthString: yyDollar[9].str,
				ByAuth:     true,
			}
			yyLOCAL = &tree.AlterUser{
				IfExists:   yyDollar[3].boolValUnion(),
				IsUserFunc: true,
				UserFunc:   auth,
			}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1537
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1541
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1550
		{
			yyLOCAL = yyDollar[1].userMiscOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1556
		{
			yyLOCAL = []tree.UserMiscOption{yyDollar[1].userMiscOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.UserMiscOption
//line mysql_sql.y:1560
		{
			yyLOCAL = append(yyDollar[1].userMiscOptionsUnion(), yyDollar[2].userMiscOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1566
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1570
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1574
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1578
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1582
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:1586
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1592
		{
			yyVAL.item = nil
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1597
		{
			yyVAL.item = nil
		}
	case 226:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1618
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[4].tableNameUnion(),
				Where:     yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1632
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1642
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1651
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1655
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1659
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1665
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1671
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1677
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1683
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1693
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1705
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1711
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1723
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:1736
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:1740
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1745
		{
			yyVAL.str = ""
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:1749
		{
			yyVAL.str = yyDollar[2].str
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1755
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1768
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1772
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1778
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1782
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1788
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1792
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1801
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1825
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1834
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1843
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1853
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1859
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1865
		{
			yyLOCAL = &tree.Delete{
				Table:   yyDollar[3].tableExprUnion(),
				Where:   yyDollar[4].whereUnion(),
				OrderBy: yyDollar[5].orderByUnion(),
				Limit:   yyDollar[6].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1880
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1889
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1896
		{
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(yyDollar[1].selectUnion(), nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1902
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1910
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1917
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(yyDollar[4].selectUnion(), nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:1924
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:1943
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:1947
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:1951
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:1957
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:1966
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:1970
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1976
		{
			yyVAL.str = yyDollar[1].str
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1980
		{
			yyVAL.str = yyDollar[3].str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:1986
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:1990
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:1996
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2001
		{
		}
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2005
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2012
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2016
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2023
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2028
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2032
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2038
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2042
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2048
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2052
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2057
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2061
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2074
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2081
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2088
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2106
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2125
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2131
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2138
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2142
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2155
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2159
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2164
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2168
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2175
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2180
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2187
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), Ep: yyDollar[2].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2193
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2197
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:2201
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2206
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2210
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2216
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2220
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:2224
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2229
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2233
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2239
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2245
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:2249
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:2255
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2260
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2264
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:2268
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2275
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2279
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2285
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2289
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2299
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2319
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2331
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2339
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:2347
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:2357
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2369
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2373
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2377
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2386
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2390
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:2395
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:2399
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2404
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:2408
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:2414
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:2418
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2424
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2428
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2432
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:2436
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:2442
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier("dual"), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:2450
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:2456
		{
			yyLOCAL = &tree.From{
				Tables: yyDollar[2].tableExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2464
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2468
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2478
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2487
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2497
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2506
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2516
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2520
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2530
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2534
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2538
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2542
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2552
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2558
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2564
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2568
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2572
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2578
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2582
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2588
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:2592
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2598
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2602
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2608
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2612
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:2624
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2629
		{
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2630
		{
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:2634
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2646
		{
			yyVAL.str = ""
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2650
		{
			yyVAL.str = yyDollar[1].str
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2654
		{
			yyVAL.str = yyDollar[2].str
		}
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2663
		{
			yyVAL.str = ""
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2667
		{
			yyVAL.str = yyDollar[1].str
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2671
		{
			yyVAL.str = yyDollar[2].str
		}
	case 425:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2700
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Users:       yyDollar[4].usersUnion(),
				TlsOpts:     yyDollar[5].tlsOptionsUnion(),
				ResOpts:     yyDollar[6].resourceOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:2710
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:2714
		{
			yyLOCAL = yyDollar[2].resourceOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:2720
		{
			yyLOCAL = []tree.ResourceOption{yyDollar[1].resourceOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ResourceOption
//line mysql_sql.y:2724
		{
			yyLOCAL = append(yyDollar[1].resourceOptionsUnion(), yyDollar[2].resourceOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:2730
		{
			yyLOCAL = &tree.ResourceOptionMaxQueriesPerHour{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:2734
		{
			yyLOCAL = &tree.ResourceOptionMaxUpdatesPerHour{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:2738
		{
			yyLOCAL = &tree.ResourceOptionMaxConnectionPerHour{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ResourceOption
//line mysql_sql.y:2742
		{
			yyLOCAL = &tree.ResourceOptionMaxUserConnections{Count: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2748
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2755
		{
			t := &tree.TlsOptionNone{}
			yyLOCAL = []tree.TlsOption{t}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2760
		{
			t := &tree.TlsOptionSSL{}
			yyLOCAL = []tree.TlsOption{t}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2765
		{
			t := &tree.TlsOptionX509{}
			yyLOCAL = []tree.TlsOption{t}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2770
		{
			yyLOCAL = yyDollar[2].tlsOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2776
		{
			yyLOCAL = []tree.TlsOption{yyDollar[1].tlsOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2780
		{
			yyLOCAL = append(yyDollar[1].tlsOptionsUnion(), yyDollar[3].tlsOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TlsOption
//line mysql_sql.y:2784
		{
			yyLOCAL = append(yyDollar[1].tlsOptionsUnion(), yyDollar[2].tlsOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:2790
		{
			yyLOCAL = &tree.TlsOptionIssuer{Issuer: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:2794
		{
			yyLOCAL = &tree.TlsOptionSubject{Subject: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:2798
		{
			yyLOCAL = &tree.TlsOptionCipher{Cipher: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TlsOption
//line mysql_sql.y:2802
		{
			yyLOCAL = &tree.TlsOptionSan{San: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2808
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2812
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2818
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthPlugin: yyDollar[2].authRecordUnion().AuthPlugin,
				AuthString: yyDollar[2].authRecordUnion().AuthString,
				HashString: yyDollar[2].authRecordUnion().HashString,
				ByAuth:     yyDollar[2].authRecordUnion().ByAuth,
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:2831
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:2835
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:2839
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2844
		{
			yyLOCAL = &tree.AuthRecord{}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2848
		{
			yyLOCAL = &tree.AuthRecord{
				AuthString: yyDollar[3].str,
				ByAuth:     true,
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2855
		{
			yyLOCAL = &tree.AuthRecord{
				AuthPlugin: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2861
		{
			yyLOCAL = &tree.AuthRecord{
				AuthPlugin: yyDollar[3].str,
				AuthString: yyDollar[5].str,
				ByAuth:     true,
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2869
		{
			yyLOCAL = &tree.AuthRecord{
				AuthPlugin: yyDollar[3].str,
				HashString: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AuthRecord
//line mysql_sql.y:2876
		{
			yyLOCAL = &tree.AuthRecord{
				HashString: yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2888
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2897
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2901
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2907
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str, HostName: "%"}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2911
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str, HostName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2915
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str, HostName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:2924
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:2928
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:2932
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:2936
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2942
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2961
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2965
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2987
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2991
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2995
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:2999
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:3003
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3009
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:3013
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:3019
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:3024
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3029
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3033
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3037
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3041
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:3045
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3051
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3065
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3069
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3074
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3078
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3084
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:3088
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3094
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3098
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:3102
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3107
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3111
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3117
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3129
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3133
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:3138
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:3142
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3152
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3156
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:3165
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:3169
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:3175
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:3179
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:3185
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:3194
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:3204
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:3208
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:3214
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:3218
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:3224
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:3231
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3240
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3244
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:3249
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:3253
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3258
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3262
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3272
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3276
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3287
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3295
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3303
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3311
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3322
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:3332
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3342
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3346
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3351
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3355
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3360
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3364
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3370
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3374
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:3378
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3384
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3388
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3392
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3396
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3400
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3404
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3408
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3412
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3416
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3420
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3424
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3428
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3432
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3436
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3440
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3444
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3448
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3452
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3456
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3460
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3464
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3468
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3472
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3476
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3480
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3484
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3488
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3492
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:3496
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:3503
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:3507
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:3513
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3518
		{
			yyVAL.str = ""
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3522
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3526
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3532
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3536
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3540
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3544
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3548
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:3552
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:3568
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:3572
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3581
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3586
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:3592
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:3599
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:3603
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3609
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3613
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3619
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3629
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3635
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3644
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3653
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3676
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3685
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:3695
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3703
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3709
		{
			yyVAL.str = ""
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3713
		{
			yyVAL.str = yyDollar[1].str
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3723
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3729
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3735
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3749
		{
			yyVAL.str = ""
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:3756
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3762
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3766
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3770
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3781
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3785
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:3789
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:3794
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:3798
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:3804
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:3808
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3814
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3818
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3822
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3826
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3830
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3834
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false))
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3838
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3842
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3846
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3850
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3854
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3858
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:3862
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3872
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3876
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3881
		{
			yyVAL.str = ""
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3885
		{
			yyVAL.str = yyDollar[1].str
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3891
		{
			yyVAL.str = ""
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3895
		{
			yyVAL.str = yyDollar[2].str
		}
	case 661:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:3901
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:3912
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:3922
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:3929
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:3936
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:3943
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3952
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3958
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3964
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3968
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3972
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3976
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:3980
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:3985
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:3992
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:3996
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:4000
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4005
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4009
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4014
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4018
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:4034
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4040
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4044
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4048
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4052
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4056
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4060
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4064
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4068
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4072
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4076
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4080
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4084
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4088
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4094
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4098
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4102
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4106
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4110
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4114
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4118
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4122
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4126
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4130
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4134
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4138
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4143
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4147
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4151
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumVal(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4160
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4164
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4168
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4172
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4179
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4192
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4205
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4217
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4231
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          0,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4246
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4261
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4274
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4289
		{
		}
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4295
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4304
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4312
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4320
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4329
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4338
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4347
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4356
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumVal(constant.MakeString("*"), "*", false)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4365
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4374
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4383
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4392
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4401
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4410
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4419
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4435
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4453
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4465
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4479
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4487
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4494
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4506
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4514
		{
			cn := tree.NewNumVal(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4525
		{
			val := tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4534
		{
			val := tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4543
		{
			val := tree.NewNumVal(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4552
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4560
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4570
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:4578
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4587
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4591
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4597
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4601
		{
			yyLOCAL = yyDollar[2].numValUnion()
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4614
		{
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4616
		{
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4656
		{
			yyLOCAL = &tree.IntervalExpr{
				Expr: yyDollar[2].exprUnion(),
				Type: yyDollar[3].intervalTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:4664
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:4668
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:4672
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IntervalType
//line mysql_sql.y:4678
		{
			yyLOCAL = tree.INTERVAL_TYPE_SECOND
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:4684
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4689
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4693
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4699
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4703
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4710
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4714
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4718
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4722
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4726
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4732
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4736
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4740
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4747
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4751
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4755
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4759
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4763
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4767
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4771
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4775
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4781
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4785
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4791
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4795
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4802
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4806
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4810
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4814
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4818
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:4822
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4829
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4833
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4837
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:4841
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.NumVal
//line mysql_sql.y:4847
		{
			ival, errStr := util.GetInt64(yyDollar[1].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			if ival > 0 {
				yyLOCAL = tree.NewNumValWithResInt(constant.MakeInt64(ival), yylex.(*Lexer).scanner.LastToken, false, ival)
			} else {
				yyLOCAL = tree.NewNumValWithResInt(constant.MakeInt64(ival), yylex.(*Lexer).scanner.LastToken, true, ival)
			}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4862
		{
			yyLOCAL = tree.NewNumVal(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false)
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4866
		{
			ival := util.GetUint64(yyDollar[1].item)
			yyLOCAL = tree.NewNumVal(constant.MakeUint64(ival), yylex.(*Lexer).scanner.LastToken, false)
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4871
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithResFoalt(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, fval)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4876
		{
			yyLOCAL = tree.NewNumVal(constant.MakeBool(true), "", false)
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4880
		{
			yyLOCAL = tree.NewNumVal(constant.MakeBool(false), "", false)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4884
		{
			yyLOCAL = tree.NewNumVal(constant.MakeUnknown(), "", false)
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4888
		{
			ival := util.GetUint64(yyDollar[1].item)
			yyLOCAL = tree.NewNumVal(constant.MakeUint64(ival), yylex.(*Lexer).scanner.LastToken, false)
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4898
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4909
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4914
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4920
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4932
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4944
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4956
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4969
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4982
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:4995
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5008
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5021
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5034
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5047
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5060
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5073
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5086
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5101
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5124
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 53 {
				yylex.Error("For float(M), M must between 0 and 53.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5172
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5189
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5201
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          0,
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5216
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          0,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5231
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          0,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5246
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5262
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5275
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5288
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5301
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5314
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5326
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5338
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5350
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5362
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5374
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5386
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5398
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5410
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5422
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5435
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5450
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5473
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5478
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:5484
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:5490
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:5494
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:5500
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5506
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5513
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5522
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5529
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:5536
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5545
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5549
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5553
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5559
		{
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5561
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5571
		{
			yyVAL.str = ""
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5575
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
