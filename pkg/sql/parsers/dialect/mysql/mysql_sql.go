// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const VALUES = 57389
const NEXT = 57390
const VALUE = 57391
const SHARE = 57392
const MODE = 57393
const SQL_NO_CACHE = 57394
const SQL_CACHE = 57395
const JOIN = 57396
const STRAIGHT_JOIN = 57397
const LEFT = 57398
const RIGHT = 57399
const INNER = 57400
const OUTER = 57401
const CROSS = 57402
const NATURAL = 57403
const USE = 57404
const FORCE = 57405
const LOWER_THAN_ON = 57406
const ON = 57407
const USING = 57408
const SUBQUERY_AS_EXPR = 57409
const LOWER_THAN_STRING = 57410
const ID = 57411
const AT_ID = 57412
const AT_AT_ID = 57413
const STRING = 57414
const VALUE_ARG = 57415
const LIST_ARG = 57416
const COMMENT = 57417
const COMMENT_KEYWORD = 57418
const QUOTE_ID = 57419
const INTEGRAL = 57420
const HEX = 57421
const BIT_LITERAL = 57422
const FLOAT = 57423
const HEXNUM = 57424
const NULL = 57425
const TRUE = 57426
const FALSE = 57427
const LOWER_THAN_CHARSET = 57428
const CHARSET = 57429
const UNIQUE = 57430
const KEY = 57431
const OR = 57432
const PIPE_CONCAT = 57433
const XOR = 57434
const AND = 57435
const NOT = 57436
const BETWEEN = 57437
const CASE = 57438
const WHEN = 57439
const THEN = 57440
const ELSE = 57441
const END = 57442
const ELSEIF = 57443
const LOWER_THAN_EQ = 57444
const LE = 57445
const GE = 57446
const NE = 57447
const NULL_SAFE_EQUAL = 57448
const IS = 57449
const LIKE = 57450
const REGEXP = 57451
const IN = 57452
const ASSIGNMENT = 57453
const ILIKE = 57454
const SHIFT_LEFT = 57455
const SHIFT_RIGHT = 57456
const DIV = 57457
const MOD = 57458
const UNARY = 57459
const COLLATE = 57460
const BINARY = 57461
const UNDERSCORE_BINARY = 57462
const INTERVAL = 57463
const OUT = 57464
const INOUT = 57465
const BEGIN = 57466
const START = 57467
const TRANSACTION = 57468
const COMMIT = 57469
const ROLLBACK = 57470
const WORK = 57471
const CONSISTENT = 57472
const SNAPSHOT = 57473
const CHAIN = 57474
const NO = 57475
const RELEASE = 57476
const PRIORITY = 57477
const QUICK = 57478
const BIT = 57479
const TINYINT = 57480
const SMALLINT = 57481
const MEDIUMINT = 57482
const INT = 57483
const INTEGER = 57484
const BIGINT = 57485
const INTNUM = 57486
const REAL = 57487
const DOUBLE = 57488
const FLOAT_TYPE = 57489
const DECIMAL = 57490
const NUMERIC = 57491
const DECIMAL_VALUE = 57492
const TIME = 57493
const TIMESTAMP = 57494
const DATETIME = 57495
const YEAR = 57496
const CHAR = 57497
const VARCHAR = 57498
const BOOL = 57499
const CHARACTER = 57500
const VARBINARY = 57501
const NCHAR = 57502
const TEXT = 57503
const TINYTEXT = 57504
const MEDIUMTEXT = 57505
const LONGTEXT = 57506
const BLOB = 57507
const TINYBLOB = 57508
const MEDIUMBLOB = 57509
const LONGBLOB = 57510
const JSON = 57511
const ENUM = 57512
const UUID = 57513
const GEOMETRY = 57514
const POINT = 57515
const LINESTRING = 57516
const POLYGON = 57517
const GEOMETRYCOLLECTION = 57518
const MULTIPOINT = 57519
const MULTILINESTRING = 57520
const MULTIPOLYGON = 57521
const INT1 = 57522
const INT2 = 57523
const INT3 = 57524
const INT4 = 57525
const INT8 = 57526
const S3OPTION = 57527
const SQL_SMALL_RESULT = 57528
const SQL_BIG_RESULT = 57529
const SQL_BUFFER_RESULT = 57530
const LOW_PRIORITY = 57531
const HIGH_PRIORITY = 57532
const DELAYED = 57533
const CREATE = 57534
const ALTER = 57535
const DROP = 57536
const RENAME = 57537
const ANALYZE = 57538
const ADD = 57539
const RETURNS = 57540
const SCHEMA = 57541
const TABLE = 57542
const SEQUENCE = 57543
const INDEX = 57544
const VIEW = 57545
const TO = 57546
const IGNORE = 57547
const IF = 57548
const PRIMARY = 57549
const COLUMN = 57550
const CONSTRAINT = 57551
const SPATIAL = 57552
const FULLTEXT = 57553
const FOREIGN = 57554
const KEY_BLOCK_SIZE = 57555
const SHOW = 57556
const DESCRIBE = 57557
const EXPLAIN = 57558
const DATE = 57559
const ESCAPE = 57560
const REPAIR = 57561
const OPTIMIZE = 57562
const TRUNCATE = 57563
const MAXVALUE = 57564
const PARTITION = 57565
const REORGANIZE = 57566
const LESS = 57567
const THAN = 57568
const PROCEDURE = 57569
const TRIGGER = 57570
const STATUS = 57571
const VARIABLES = 57572
const ROLE = 57573
const PROXY = 57574
const AVG_ROW_LENGTH = 57575
const STORAGE = 57576
const DISK = 57577
const MEMORY = 57578
const CHECKSUM = 57579
const COMPRESSION = 57580
const DATA = 57581
const DIRECTORY = 57582
const DELAY_KEY_WRITE = 57583
const ENCRYPTION = 57584
const ENGINE = 57585
const MAX_ROWS = 57586
const MIN_ROWS = 57587
const PACK_KEYS = 57588
const ROW_FORMAT = 57589
const STATS_AUTO_RECALC = 57590
const STATS_PERSISTENT = 57591
const STATS_SAMPLE_PAGES = 57592
const DYNAMIC = 57593
const COMPRESSED = 57594
const REDUNDANT = 57595
const COMPACT = 57596
const FIXED = 57597
const COLUMN_FORMAT = 57598
const AUTO_RANDOM = 57599
const RESTRICT = 57600
const CASCADE = 57601
const ACTION = 57602
const PARTIAL = 57603
const SIMPLE = 57604
const CHECK = 57605
const ENFORCED = 57606
const RANGE = 57607
const LIST = 57608
const ALGORITHM = 57609
const LINEAR = 57610
const PARTITIONS = 57611
const SUBPARTITION = 57612
const SUBPARTITIONS = 57613
const CLUSTER = 57614
const TYPE = 57615
const ANY = 57616
const SOME = 57617
const EXTERNAL = 57618
const LOCALFILE = 57619
const URL = 57620
const PREPARE = 57621
const DEALLOCATE = 57622
const RESET = 57623
const EXTENSION = 57624
const INCREMENT = 57625
const CYCLE = 57626
const MINVALUE = 57627
const PUBLICATION = 57628
const SUBSCRIPTIONS = 57629
const PUBLICATIONS = 57630
const PROPERTIES = 57631
const PARSER = 57632
const VISIBLE = 57633
const INVISIBLE = 57634
const BTREE = 57635
const HASH = 57636
const RTREE = 57637
const BSI = 57638
const ZONEMAP = 57639
const LEADING = 57640
const BOTH = 57641
const TRAILING = 57642
const UNKNOWN = 57643
const EXPIRE = 57644
const ACCOUNT = 57645
const ACCOUNTS = 57646
const UNLOCK = 57647
const DAY = 57648
const NEVER = 57649
const PUMP = 57650
const MYSQL_COMPATIBILITY_MODE = 57651
const SECOND = 57652
const ASCII = 57653
const COALESCE = 57654
const COLLATION = 57655
const HOUR = 57656
const MICROSECOND = 57657
const MINUTE = 57658
const MONTH = 57659
const QUARTER = 57660
const REPEAT = 57661
const REVERSE = 57662
const ROW_COUNT = 57663
const WEEK = 57664
const REVOKE = 57665
const FUNCTION = 57666
const PRIVILEGES = 57667
const TABLESPACE = 57668
const EXECUTE = 57669
const SUPER = 57670
const GRANT = 57671
const OPTION = 57672
const REFERENCES = 57673
const REPLICATION = 57674
const SLAVE = 57675
const CLIENT = 57676
const USAGE = 57677
const RELOAD = 57678
const FILE = 57679
const TEMPORARY = 57680
const ROUTINE = 57681
const EVENT = 57682
const SHUTDOWN = 57683
const NULLX = 57684
const AUTO_INCREMENT = 57685
const APPROXNUM = 57686
const SIGNED = 57687
const UNSIGNED = 57688
const ZEROFILL = 57689
const ENGINES = 57690
const LOW_CARDINALITY = 57691
const ADMIN_NAME = 57692
const RANDOM = 57693
const SUSPEND = 57694
const ATTRIBUTE = 57695
const HISTORY = 57696
const REUSE = 57697
const CURRENT = 57698
const OPTIONAL = 57699
const FAILED_LOGIN_ATTEMPTS = 57700
const PASSWORD_LOCK_TIME = 57701
const UNBOUNDED = 57702
const SECONDARY = 57703
const USER = 57704
const IDENTIFIED = 57705
const CIPHER = 57706
const ISSUER = 57707
const X509 = 57708
const SUBJECT = 57709
const SAN = 57710
const REQUIRE = 57711
const SSL = 57712
const NONE = 57713
const PASSWORD = 57714
const MAX_QUERIES_PER_HOUR = 57715
const MAX_UPDATES_PER_HOUR = 57716
const MAX_CONNECTIONS_PER_HOUR = 57717
const MAX_USER_CONNECTIONS = 57718
const FORMAT = 57719
const VERBOSE = 57720
const CONNECTION = 57721
const TRIGGERS = 57722
const PROFILES = 57723
const LOAD = 57724
const INFILE = 57725
const TERMINATED = 57726
const OPTIONALLY = 57727
const ENCLOSED = 57728
const ESCAPED = 57729
const STARTING = 57730
const LINES = 57731
const ROWS = 57732
const IMPORT = 57733
const MODUMP = 57734
const OVER = 57735
const PRECEDING = 57736
const FOLLOWING = 57737
const GROUPS = 57738
const DATABASES = 57739
const TABLES = 57740
const SEQUENCES = 57741
const EXTENDED = 57742
const FULL = 57743
const PROCESSLIST = 57744
const FIELDS = 57745
const COLUMNS = 57746
const OPEN = 57747
const ERRORS = 57748
const WARNINGS = 57749
const INDEXES = 57750
const SCHEMAS = 57751
const NODE = 57752
const LOCKS = 57753
const ROLES = 57754
const TABLE_NUMBER = 57755
const COLUMN_NUMBER = 57756
const TABLE_VALUES = 57757
const TABLE_SIZE = 57758
const NAMES = 57759
const GLOBAL = 57760
const PERSIST = 57761
const SESSION = 57762
const ISOLATION = 57763
const LEVEL = 57764
const READ = 57765
const WRITE = 57766
const ONLY = 57767
const REPEATABLE = 57768
const COMMITTED = 57769
const UNCOMMITTED = 57770
const SERIALIZABLE = 57771
const LOCAL = 57772
const EVENTS = 57773
const PLUGINS = 57774
const CURRENT_TIMESTAMP = 57775
const DATABASE = 57776
const CURRENT_TIME = 57777
const LOCALTIME = 57778
const LOCALTIMESTAMP = 57779
const UTC_DATE = 57780
const UTC_TIME = 57781
const UTC_TIMESTAMP = 57782
const REPLACE = 57783
const CONVERT = 57784
const SEPARATOR = 57785
const TIMESTAMPDIFF = 57786
const CURRENT_DATE = 57787
const CURRENT_USER = 57788
const CURRENT_ROLE = 57789
const SECOND_MICROSECOND = 57790
const MINUTE_MICROSECOND = 57791
const MINUTE_SECOND = 57792
const HOUR_MICROSECOND = 57793
const HOUR_SECOND = 57794
const HOUR_MINUTE = 57795
const DAY_MICROSECOND = 57796
const DAY_SECOND = 57797
const DAY_MINUTE = 57798
const DAY_HOUR = 57799
const YEAR_MONTH = 57800
const SQL_TSI_HOUR = 57801
const SQL_TSI_DAY = 57802
const SQL_TSI_WEEK = 57803
const SQL_TSI_MONTH = 57804
const SQL_TSI_QUARTER = 57805
const SQL_TSI_YEAR = 57806
const SQL_TSI_SECOND = 57807
const SQL_TSI_MINUTE = 57808
const RECURSIVE = 57809
const CONFIG = 57810
const DRAINER = 57811
const MATCH = 57812
const AGAINST = 57813
const BOOLEAN = 57814
const LANGUAGE = 57815
const WITH = 57816
const QUERY = 57817
const EXPANSION = 57818
const ADDDATE = 57819
const BIT_AND = 57820
const BIT_OR = 57821
const BIT_XOR = 57822
const CAST = 57823
const COUNT = 57824
const APPROX_COUNT_DISTINCT = 57825
const APPROX_PERCENTILE = 57826
const CURDATE = 57827
const CURTIME = 57828
const DATE_ADD = 57829
const DATE_SUB = 57830
const EXTRACT = 57831
const GROUP_CONCAT = 57832
const MAX = 57833
const MID = 57834
const MIN = 57835
const NOW = 57836
const POSITION = 57837
const SESSION_USER = 57838
const STD = 57839
const STDDEV = 57840
const MEDIAN = 57841
const STDDEV_POP = 57842
const STDDEV_SAMP = 57843
const SUBDATE = 57844
const SUBSTR = 57845
const SUBSTRING = 57846
const SUM = 57847
const SYSDATE = 57848
const SYSTEM_USER = 57849
const TRANSLATE = 57850
const TRIM = 57851
const VARIANCE = 57852
const VAR_POP = 57853
const VAR_SAMP = 57854
const AVG = 57855
const RANK = 57856
const NEXTVAL = 57857
const SETVAL = 57858
const CURRVAL = 57859
const LASTVAL = 57860
const ARROW = 57861
const ROW = 57862
const OUTFILE = 57863
const HEADER = 57864
const MAX_FILE_SIZE = 57865
const FORCE_QUOTE = 57866
const PARALLEL = 57867
const UNUSED = 57868
const BINDINGS = 57869
const DO = 57870
const DECLARE = 57871
const LOOP = 57872
const WHILE = 57873
const LEAVE = 57874
const ITERATE = 57875
const UNTIL = 57876
const CALL = 57877
const SPBEGIN = 57878
const BACKEND = 57879
const SERVERS = 57880
const KILL = 57881
const QUERY_RESULT = 57882

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:9482

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 110,
	21, 636,
	-2, 617,
	-1, 124,
	219, 853,
	-2, 924,
	-1, 146,
	42, 457,
	219, 457,
	246, 464,
	247, 464,
	425, 457,
	-2, 490,
	-1, 182,
	559, 1586,
	-2, 375,
	-1, 500,
	295, 130,
	400, 130,
	-2, 1499,
	-1, 563,
	68, 1305,
	-2, 1640,
	-1, 564,
	68, 1323,
	-2, 1611,
	-1, 568,
	68, 1324,
	-2, 1639,
	-1, 591,
	68, 1235,
	-2, 1701,
	-1, 592,
	68, 1236,
	-2, 1700,
	-1, 593,
	68, 1237,
	-2, 1690,
	-1, 594,
	68, 1665,
	-2, 1685,
	-1, 595,
	68, 1666,
	-2, 1686,
	-1, 596,
	68, 1667,
	-2, 1692,
	-1, 597,
	68, 1668,
	-2, 1675,
	-1, 598,
	68, 1669,
	-2, 1683,
	-1, 599,
	68, 1670,
	-2, 1693,
	-1, 600,
	68, 1671,
	-2, 1694,
	-1, 601,
	68, 1672,
	-2, 1699,
	-1, 602,
	68, 1673,
	-2, 1704,
	-1, 603,
	68, 1674,
	-2, 1705,
	-1, 605,
	68, 1302,
	-2, 1491,
	-1, 612,
	68, 1311,
	-2, 1517,
	-1, 616,
	68, 1315,
	-2, 1557,
	-1, 617,
	68, 1316,
	-2, 1635,
	-1, 625,
	68, 1326,
	-2, 1620,
	-1, 627,
	68, 1328,
	-2, 1630,
	-1, 628,
	68, 1329,
	-2, 1655,
	-1, 639,
	68, 1213,
	-2, 1695,
	-1, 640,
	68, 1214,
	-2, 1696,
	-1, 641,
	68, 1215,
	-2, 1697,
	-1, 645,
	21, 637,
	-2, 600,
	-1, 715,
	420, 490,
	421, 490,
	-2, 458,
	-1, 757,
	106, 1491,
	117, 1491,
	137, 1491,
	-2, 1466,
	-1, 857,
	21, 637,
	-2, 600,
	-1, 956,
	21, 636,
	-2, 1118,
	-1, 1298,
	68, 1373,
	-2, 1637,
	-1, 1299,
	68, 1374,
	-2, 1638,
	-1, 1431,
	69, 778,
	-2, 784,
	-1, 1758,
	69, 1452,
	138, 1452,
	-2, 1622,
	-1, 1759,
	69, 1452,
	138, 1452,
	-2, 1621,
	-1, 1760,
	69, 1430,
	138, 1430,
	-2, 1608,
	-1, 1761,
	69, 1431,
	138, 1431,
	-2, 1613,
	-1, 1762,
	69, 1432,
	138, 1432,
	-2, 1545,
	-1, 1763,
	69, 1433,
	138, 1433,
	-2, 1539,
	-1, 1764,
	69, 1434,
	138, 1434,
	-2, 1482,
	-1, 1765,
	69, 1435,
	138, 1435,
	-2, 1610,
	-1, 1766,
	69, 1436,
	138, 1436,
	-2, 1543,
	-1, 1767,
	69, 1437,
	138, 1437,
	-2, 1538,
	-1, 1768,
	69, 1438,
	138, 1438,
	-2, 1531,
	-1, 1770,
	69, 1441,
	138, 1441,
	-2, 1655,
	-1, 1771,
	69, 1421,
	138, 1421,
	-2, 1640,
	-1, 1772,
	69, 1450,
	138, 1450,
	-2, 1611,
	-1, 1773,
	69, 1450,
	138, 1450,
	-2, 1639,
	-1, 1774,
	69, 1450,
	138, 1450,
	-2, 1500,
	-1, 1775,
	69, 1448,
	138, 1448,
	-2, 1630,
	-1, 1776,
	69, 1445,
	138, 1445,
	-2, 1522,
	-1, 1777,
	68, 1403,
	69, 1403,
	138, 1403,
	362, 1403,
	363, 1403,
	364, 1403,
	-2, 1481,
	-1, 1778,
	68, 1404,
	69, 1404,
	138, 1404,
	362, 1404,
	363, 1404,
	364, 1404,
	-2, 1483,
	-1, 1779,
	68, 1407,
	69, 1407,
	138, 1407,
	362, 1407,
	363, 1407,
	364, 1407,
	-2, 1612,
	-1, 1780,
	68, 1409,
	69, 1409,
	138, 1409,
	362, 1409,
	363, 1409,
	364, 1409,
	-2, 1595,
	-1, 1781,
	68, 1411,
	69, 1411,
	138, 1411,
	362, 1411,
	363, 1411,
	364, 1411,
	-2, 1544,
	-1, 1782,
	68, 1413,
	69, 1413,
	138, 1413,
	362, 1413,
	363, 1413,
	364, 1413,
	-2, 1527,
	-1, 1783,
	68, 1414,
	69, 1414,
	138, 1414,
	362, 1414,
	363, 1414,
	364, 1414,
	-2, 1528,
	-1, 1784,
	68, 1416,
	69, 1416,
	138, 1416,
	362, 1416,
	363, 1416,
	364, 1416,
	-2, 1480,
	-1, 1785,
	69, 1455,
	138, 1455,
	362, 1455,
	363, 1455,
	364, 1455,
	-2, 1505,
	-1, 1786,
	69, 1455,
	138, 1455,
	362, 1455,
	363, 1455,
	364, 1455,
	-2, 1518,
	-1, 1787,
	69, 1458,
	138, 1458,
	362, 1458,
	363, 1458,
	364, 1458,
	-2, 1501,
	-1, 1788,
	69, 1455,
	138, 1455,
	362, 1455,
	363, 1455,
	364, 1455,
	-2, 1580,
	-1, 1801,
	89, 888,
	133, 888,
	172, 888,
	175, 888,
	259, 888,
	-2, 881,
	-1, 1915,
	21, 636,
	-2, 728,
	-1, 2094,
	89, 888,
	133, 888,
	172, 888,
	175, 888,
	259, 888,
	-2, 882,
	-1, 2106,
	66, 544,
	138, 544,
	-2, 1019,
	-1, 2128,
	280, 1086,
	-2, 1065,
	-1, 2396,
	280, 1086,
	-2, 1066,
	-1, 2530,
	89, 888,
	133, 888,
	172, 888,
	175, 888,
	-2, 967,
	-1, 2533,
	89, 888,
	133, 888,
	172, 888,
	175, 888,
	-2, 967,
	-1, 2543,
	66, 544,
	138, 544,
	-2, 1020,
	-1, 2642,
	89, 888,
	133, 888,
	172, 888,
	175, 888,
	-2, 968,
	-1, 2932,
	69, 939,
	138, 939,
	-2, 888,
	-1, 2936,
	69, 939,
	138, 939,
	-2, 888,
	-1, 2950,
	69, 943,
	138, 943,
	-2, 888,
	-1, 2955,
	69, 944,
	138, 944,
	-2, 888,
}

const yyPrivate = 57344

const yyLast = 35881

var yyAct = [...]int{
	530, 1217, 1494, 2935, 2936, 2636, 173, 2944, 509, 2915,
	1279, 511, 2826, 2874, 2866, 532, 2702, 2844, 2614, 2408,
	2785, 2609, 2786, 1736, 2485, 2674, 1091, 2773, 2635, 2753,
	2696, 646, 2769, 2486, 2634, 987, 2718, 2686, 2612, 419,
	1208, 1452, 2663, 2368, 560, 1454, 2109, 2641, 425, 1282,
	430, 430, 1142, 2604, 2196, 2553, 430, 446, 453, 2195,
	2197, 453, 1550, 1553, 1840, 2181, 2513, 2420, 2397, 2192,
	2483, 1275, 158, 2189, 1646, 513, 1756, 1999, 2471, 2218,
	1843, 2454, 2343, 1615, 464, 2340, 1909, 2419, 2338, 2124,
	2366, 1528, 851, 2095, 1049, 1861, 1810, 2287, 458, 2248,
	1754, 1567, 1133, 1204, 508, 1498, 1589, 502, 1624, 503,
	1199, 1642, 1413, 53, 1746, 1623, 756, 1067, 1998, 1546,
	1949, 1616, 2231, 2040, 1641, 1910, 1898, 692, 762, 1529,
	2073, 1531, 2077, 1065, 2369, 36, 1481, 6, 2130, 1841,
	1490, 169, 8, 168, 7, 1439, 1809, 1421, 806, 1674,
	419, 1643, 1273, 1209, 1966, 1173, 1151, 1794, 512, 748,
	1752, 109, 35, 1278, 2371, 2041, 2370, 424, 1464, 501,
	1328, 520, 1312, 173, 1080, 173, 1463, 797, 798, 1264,
	1023, 14, 1622, 1653, 760, 868, 503, 1619, 442, 1180,
	1605, 1272, 451, 1579, 1917, 747, 26, 1438, 418, 15,
	439, 1216, 1076, 13, 691, 643, 1334, 1125, 466, 1333,
	152, 23, 16, 10, 1092, 689, 155, 452, 467, 159,
	710, 2281, 1172, 1536, 1660, 2281, 988, 1047, 2001, 1650,
	2478, 1955, 1953, 1952, 1950, 1099, 1187, 1183, 449, 645,
	790, 789, 794, 790, 790, 793, 157, 795, 461, 426,
	1112, 1185, 2602, 450, 2244, 2242, 447, 1594, 2692, 2687,
	448, 2605, 2484, 722, 435, 1417, 982, 766, 2762, 1618,
	644, 1100, 654, 429, 429, 2627, 1994, 156, 456, 437,
	925, 926, 927, 924, 2728, 925, 926, 927, 924, 156,
	156, 49, 148, 125, 156, 788, 49, 148, 125, 8,
	888, 7, 156, 156, 1986, 156, 1647, 156, 2817, 49,
	148, 125, 156, 156, 2263, 763, 765, 2626, 1039, 2737,
	462, 2310, 1231, 1224, 504, 1658, 1798, 2256, 2729, 1930,
	634, 922, 633, 635, 636, 153, 637, 638, 1565, 1228,
	1221, 463, 108, 896, 1425, 1426, 898, 153, 153, 108,
	1931, 2075, 153, 1249, 510, 1967, 772, 767, 771, 773,
	1230, 1223, 647, 153, 1108, 153, 2862, 1109, 655, 1040,
	153, 153, 2860, 731, 899, 1265, 1097, 1098, 1269, 2789,
	2790, 903, 2622, 777, 904, 1477, 1088, 770, 736, 1095,
	915, 735, 1354, 1094, 1097, 1098, 156, 1729, 49, 148,
	125, 1281, 1268, 920, 2074, 759, 758, 2694, 925, 926,
	927, 924, 906, 2763, 2764, 2249, 149, 2848, 2849, 2697,
	2698, 2699, 2700, 141, 2487, 2755, 2487, 150, 2755, 430,
	2250, 2758, 2251, 108, 2690, 775, 1284, 1981, 862, 430,
	861, 2768, 778, 2496, 1539, 860, 892, 1547, 97, 871,
	1111, 2514, 1654, 1260, 153, 453, 453, 2521, 430, 768,
	2816, 1543, 1186, 1184, 2354, 2632, 2710, 856, 858, 894,
	2352, 1888, 1793, 2080, 740, 2344, 1602, 1991, 1270, 2276,
	776, 897, 900, 2415, 901, 1193, 1192, 2065, 124, 2603,
	154, 737, 918, 919, 800, 791, 792, 2243, 2348, 1267,
	796, 497, 2274, 917, 499, 893, 2185, 2621, 871, 498,
	146, 891, 1891, 2623, 2359, 761, 958, 1890, 769, 2788,
	2713, 1894, 2349, 2350, 855, 2629, 2855, 112, 113, 2864,
	114, 115, 2664, 2665, 2666, 2668, 2667, 2351, 2819, 2820,
	2365, 1283, 2375, 902, 1350, 2778, 883, 2102, 1347, 455,
	739, 2574, 1349, 1346, 1348, 1352, 1353, 2428, 2429, 766,
	1351, 1659, 861, 1086, 454, 857, 2774, 992, 2945, 1663,
	1665, 1666, 1563, 1564, 2929, 2883, 2859, 895, 2890, 451,
	451, 2828, 1120, 2725, 913, 914, 2089, 2090, 2091, 2092,
	774, 1290, 1293, 1294, 2346, 124, 147, 154, 1110, 95,
	2824, 2825, 1291, 2828, 1075, 2676, 2744, 763, 765, 1266,
	2566, 2894, 1871, 2557, 1870, 905, 2435, 146, 140, 139,
	2869, 2946, 738, 2086, 55, 449, 449, 1129, 766, 1128,
	873, 872, 864, 865, 2579, 2580, 881, 991, 2916, 1073,
	450, 450, 1072, 447, 447, 2500, 2561, 448, 448, 2280,
	1090, 1089, 853, 1648, 1071, 2952, 2719, 1648, 852, 1648,
	2326, 1675, 859, 2940, 2600, 1045, 425, 1048, 2535, 2166,
	1050, 462, 876, 877, 1020, 2752, 763, 765, 880, 866,
	1987, 879, 142, 143, 144, 790, 790, 790, 790, 873,
	872, 692, 790, 964, 1126, 2727, 790, 1357, 1358, 1359,
	1360, 1361, 1362, 1355, 1356, 2279, 1920, 1860, 151, 888,
	1651, 1661, 908, 1859, 1849, 909, 1055, 1649, 1097, 1098,
	1059, 2818, 2220, 2222, 1097, 1098, 104, 2765, 2766, 1096,
	145, 1058, 105, 1951, 2726, 644, 1093, 430, 1188, 1122,
	2870, 1057, 50, 911, 457, 2334, 2628, 1995, 1662, 2865,
	419, 419, 419, 419, 2079, 50, 1146, 1146, 126, 430,
	2711, 2355, 1548, 1051, 1052, 1053, 1054, 2345, 1056, 1087,
	126, 126, 1060, 2277, 1062, 126, 453, 1048, 425, 2064,
	1176, 1176, 2347, 126, 126, 106, 126, 1153, 126, 2939,
	2675, 173, 887, 126, 126, 48, 1000, 1001, 761, 2633,
	419, 1540, 1664, 882, 686, 687, 688, 2083, 2084, 1148,
	1261, 2289, 2288, 1242, 1243, 907, 1074, 1740, 1542, 1742,
	1741, 2082, 1043, 1084, 1292, 660, 2951, 1144, 1144, 1428,
	928, 1102, 1103, 1046, 1105, 1106, 1107, 1041, 1042, 957,
	732, 2559, 1850, 1429, 50, 2558, 1194, 966, 1215, 1739,
	1218, 912, 781, 786, 787, 1226, 1140, 1141, 2562, 2563,
	732, 1025, 1427, 684, 1027, 2867, 2868, 656, 657, 971,
	960, 961, 962, 963, 910, 1247, 659, 126, 1082, 1083,
	662, 661, 2221, 1232, 1865, 2649, 2895, 1796, 1146, 2913,
	1146, 861, 1749, 645, 1846, 923, 1280, 2167, 2169, 2170,
	2171, 2168, 2958, 2957, 2363, 1246, 1064, 1121, 2451, 1136,
	1137, 1138, 1139, 1245, 2878, 1750, 1751, 2447, 1197, 1455,
	1200, 1201, 1706, 734, 1455, 1705, 733, 1113, 1114, 1206,
	1207, 107, 38, 1101, 1907, 888, 1104, 2107, 47, 5,
	2948, 1969, 111, 734, 2930, 1169, 733, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1189,
	1118, 1127, 2925, 1323, 1324, 766, 2531, 2919, 2380, 766,
	1332, 923, 923, 1077, 1081, 1081, 1081, 435, 1154, 1371,
	1372, 1373, 1152, 1381, 1117, 1795, 1119, 1222, 1123, 1124,
	2918, 1229, 1387, 1167, 923, 1388, 1077, 1077, 1211, 2899,
	1214, 1277, 451, 1177, 1168, 2876, 1390, 1395, 1396, 2949,
	1178, 1256, 741, 1656, 2838, 648, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 783, 784, 785, 1171, 1845, 1730,
	2364, 2926, 648, 1847, 2796, 1295, 1656, 1258, 1233, 2791,
	2108, 1908, 1908, 1262, 2746, 1986, 2451, 1411, 449, 1908,
	430, 1274, 1437, 1146, 1441, 1238, 1443, 1444, 2745, 1656,
	2108, 430, 2070, 450, 692, 1734, 447, 1453, 1656, 1582,
	448, 1146, 1255, 1234, 2877, 1252, 1263, 1122, 2742, 1251,
	2067, 2741, 446, 2839, 1848, 645, 1414, 1254, 1253, 1250,
	2740, 1380, 1974, 1078, 2739, 1271, 925, 926, 927, 924,
	2714, 1476, 2581, 2715, 1175, 1175, 1932, 1276, 2715, 1482,
	1482, 1436, 1122, 2747, 1122, 1122, 886, 1647, 430, 2437,
	1437, 1437, 1314, 1480, 1146, 1526, 1538, 1814, 2215, 1685,
	1469, 419, 1833, 1146, 923, 925, 926, 927, 924, 1442,
	1735, 2046, 2308, 2002, 1984, 1475, 1710, 2715, 1478, 1479,
	2715, 1021, 1445, 1446, 1447, 925, 926, 927, 924, 2715,
	430, 1437, 1146, 2715, 1572, 430, 430, 1575, 1978, 2715,
	885, 1932, 1578, 1638, 1363, 1364, 1584, 1367, 1561, 1521,
	1522, 1733, 1063, 173, 1366, 1382, 173, 173, 2438, 173,
	1461, 1462, 1580, 1976, 1079, 1326, 1130, 1908, 1389, 888,
	1391, 1684, 2546, 1558, 1559, 1484, 1418, 1471, 1472, 1392,
	923, 658, 923, 1814, 1544, 854, 1440, 1971, 2381, 1964,
	1569, 2233, 2110, 1989, 1381, 1381, 1626, 1412, 1962, 1988,
	1960, 1381, 1381, 1958, 1458, 1813, 1633, 1972, 1980, 1554,
	1555, 1556, 1557, 886, 1549, 1731, 1483, 1571, 1285, 1286,
	1287, 1288, 1289, 1714, 1713, 1593, 1830, 1701, 1596, 1597,
	1453, 1599, 1977, 1686, 1146, 1645, 1573, 1574, 1450, 1449,
	1637, 1474, 1587, 1434, 1460, 1433, 1704, 1695, 1235, 1694,
	1485, 1693, 1466, 1655, 1448, 2520, 1972, 1440, 1965, 969,
	1486, 1487, 1330, 1331, 874, 854, 2376, 1963, 1365, 1959,
	849, 1639, 1959, 1239, 1814, 847, 1375, 1321, 1322, 1919,
	1368, 1560, 1627, 940, 1730, 2385, 1465, 1668, 1467, 1468,
	1527, 1525, 923, 923, 2271, 1274, 1545, 663, 1672, 1673,
	2908, 1473, 1621, 2779, 1566, 2650, 2538, 766, 2536, 1621,
	1078, 1488, 1132, 1077, 766, 923, 923, 1415, 923, 2896,
	923, 1419, 1656, 1570, 1422, 1862, 2377, 1470, 948, 949,
	941, 942, 943, 944, 945, 946, 947, 940, 1081, 1590,
	1134, 1588, 1240, 1370, 1369, 451, 2452, 2780, 854, 2651,
	2539, 1135, 2537, 1568, 2442, 763, 765, 1068, 1568, 1568,
	2439, 1069, 763, 765, 1607, 1711, 2282, 2187, 533, 542,
	2378, 1975, 1718, 1922, 534, 863, 541, 535, 539, 538,
	536, 537, 1950, 1631, 1630, 1632, 2476, 2009, 1628, 1944,
	1329, 449, 1681, 1456, 1457, 1131, 1636, 1329, 1635, 766,
	1181, 502, 1591, 861, 1789, 1591, 450, 2235, 1757, 447,
	1435, 1079, 1640, 448, 927, 924, 430, 430, 430, 2813,
	1811, 943, 944, 945, 946, 947, 940, 924, 1415, 543,
	1818, 1122, 2569, 1320, 2568, 1415, 1415, 1401, 1667, 2252,
	2142, 1823, 1676, 925, 926, 927, 924, 763, 765, 1317,
	1319, 1316, 2141, 1318, 2479, 1122, 2136, 2134, 1314, 1669,
	2923, 540, 861, 1854, 2893, 2550, 2934, 1839, 1680, 925,
	926, 927, 924, 2922, 2884, 1385, 1592, 1820, 1821, 1595,
	1954, 2879, 1598, 1737, 1738, 1600, 1386, 1824, 1825, 939,
	938, 948, 949, 941, 942, 943, 944, 945, 946, 947,
	940, 2829, 2804, 2781, 1912, 1912, 1538, 1912, 1708, 2892,
	939, 938, 948, 949, 941, 942, 943, 944, 945, 946,
	947, 940, 2190, 861, 925, 926, 927, 924, 992, 2630,
	2730, 1146, 430, 2477, 925, 926, 927, 924, 1790, 925,
	926, 927, 924, 2011, 2688, 2656, 1728, 861, 425, 2653,
	2652, 1176, 1757, 1538, 2540, 1683, 1939, 2517, 1941, 2518,
	2177, 1826, 173, 1863, 2353, 1866, 1867, 1868, 1869, 2631,
	1743, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880,
	1881, 1882, 1883, 1884, 1885, 1864, 2267, 1923, 1924, 1925,
	1926, 1914, 1832, 1918, 1797, 1936, 1835, 1916, 991, 2519,
	2176, 2854, 1928, 2247, 1943, 2246, 2161, 1819, 1982, 2160,
	2159, 1645, 2783, 925, 926, 927, 924, 2156, 1146, 766,
	1146, 1678, 1146, 1831, 1682, 1829, 1838, 861, 1837, 2175,
	2150, 2147, 1996, 2146, 1945, 925, 926, 927, 924, 1803,
	1804, 1805, 1670, 1671, 1938, 941, 942, 943, 944, 945,
	946, 947, 940, 1892, 1610, 2173, 1146, 2027, 925, 926,
	927, 924, 497, 1692, 1822, 499, 1181, 763, 765, 2174,
	498, 1699, 2034, 925, 926, 927, 924, 1146, 1609, 2033,
	1827, 2163, 1946, 1828, 1608, 1604, 1603, 2036, 1929, 1712,
	1236, 1992, 1715, 1716, 1717, 2172, 1038, 1720, 1721, 1722,
	1723, 1724, 1725, 1726, 1727, 2018, 1937, 1934, 2026, 925,
	926, 927, 924, 2038, 2339, 1935, 2610, 2301, 1182, 861,
	2850, 2162, 1081, 2814, 2068, 2750, 2712, 1144, 2689, 2035,
	2013, 2640, 2608, 846, 843, 844, 845, 2606, 2732, 2023,
	1689, 2022, 2021, 2019, 2585, 2583, 1993, 2182, 1144, 2552,
	1815, 2772, 2007, 2516, 2515, 1152, 925, 926, 927, 924,
	2947, 2512, 1985, 2300, 2057, 2505, 1146, 1983, 2701, 2087,
	1990, 2499, 2000, 1437, 925, 926, 927, 924, 2446, 2106,
	2444, 1274, 2433, 2432, 2331, 2112, 925, 926, 927, 924,
	2003, 2004, 931, 932, 933, 934, 935, 936, 937, 929,
	2330, 2121, 2278, 2017, 2071, 2020, 2245, 861, 2042, 2226,
	2164, 2157, 1839, 2047, 2153, 2133, 2152, 925, 926, 927,
	924, 2151, 1697, 2138, 2139, 1732, 2140, 590, 589, 2533,
	2143, 1482, 2097, 545, 110, 1612, 1606, 1424, 2115, 110,
	1201, 1237, 2117, 999, 995, 1912, 994, 1206, 1207, 1415,
	1415, 1415, 1415, 2061, 2103, 2178, 970, 2058, 850, 2076,
	156, 419, 2532, 148, 125, 1437, 861, 1538, 1538, 1538,
	1538, 2198, 2113, 2530, 2504, 1175, 1696, 2096, 861, 1538,
	2491, 2482, 1912, 2198, 2481, 2470, 2128, 436, 2469, 2386,
	110, 1146, 2306, 2131, 2299, 2291, 2286, 2131, 2230, 925,
	926, 927, 924, 430, 430, 2069, 2066, 2114, 2132, 1961,
	1211, 2085, 1214, 1957, 1956, 2118, 2119, 173, 153, 156,
	2111, 1719, 173, 1709, 8, 2105, 7, 1707, 1703, 1440,
	2148, 2149, 2211, 2024, 2025, 1702, 2154, 2155, 2616, 1700,
	1691, 2127, 1688, 1381, 2123, 1381, 1687, 1611, 2262, 2615,
	2129, 2266, 1410, 1384, 2184, 2135, 2578, 1146, 1383, 1374,
	2273, 925, 926, 927, 924, 1158, 1156, 2145, 2907, 2901,
	2158, 2891, 925, 926, 927, 924, 2010, 153, 2888, 925,
	926, 927, 924, 2886, 2028, 2029, 2803, 764, 2183, 2236,
	2748, 110, 2031, 2032, 2240, 2188, 2199, 2200, 2201, 2202,
	2006, 989, 2104, 2210, 1414, 2037, 110, 2214, 110, 2261,
	2212, 1196, 2227, 2213, 645, 2224, 925, 926, 927, 924,
	2186, 2672, 2660, 2657, 2237, 1415, 2594, 2259, 2059, 2060,
	1422, 2592, 2294, 2265, 2296, 2120, 2234, 2576, 2275, 2238,
	2575, 861, 2270, 2572, 2571, 2565, 1757, 2342, 2525, 1205,
	1198, 2258, 1066, 2255, 2179, 766, 2137, 2357, 2100, 430,
	2260, 2253, 766, 2099, 2098, 2116, 1210, 1213, 2269, 861,
	861, 861, 1202, 2056, 1839, 1839, 1839, 2257, 1538, 1811,
	2284, 2384, 1970, 2290, 2264, 2502, 1921, 2388, 1886, 1812,
	2283, 2223, 2297, 2298, 1315, 153, 2295, 861, 2304, 2292,
	2293, 2418, 2393, 2421, 1576, 2421, 2421, 1432, 925, 926,
	927, 924, 2426, 1431, 1259, 2333, 1225, 1203, 1022, 1146,
	1146, 925, 926, 927, 924, 1019, 2228, 2229, 2327, 1018,
	2387, 1017, 1016, 2311, 2389, 2390, 1015, 2312, 2313, 2314,
	2315, 2335, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323,
	430, 1014, 2332, 1013, 1012, 2342, 766, 1011, 2361, 1010,
	2372, 2373, 1009, 2416, 1437, 1437, 1008, 2379, 2417, 2382,
	2096, 2430, 2431, 2303, 1007, 2383, 1006, 1005, 2337, 1004,
	1003, 1002, 998, 2362, 997, 996, 993, 2394, 986, 985,
	1144, 1144, 2422, 2423, 983, 982, 925, 926, 927, 924,
	981, 2424, 980, 979, 2027, 978, 766, 977, 2391, 976,
	2400, 975, 2450, 2480, 939, 938, 948, 949, 941, 942,
	943, 944, 945, 946, 947, 940, 974, 2462, 2392, 973,
	972, 968, 967, 2448, 2449, 2410, 890, 848, 2455, 2456,
	2441, 2445, 2440, 2573, 1817, 2239, 1800, 2241, 2403, 878,
	430, 2436, 2834, 2459, 2832, 2398, 2787, 2458, 2088, 2443,
	2413, 2414, 1933, 1614, 889, 1415, 2399, 2463, 2461, 2207,
	1415, 2466, 2467, 2468, 2208, 2205, 2460, 110, 110, 764,
	2206, 2204, 2360, 2475, 1393, 1394, 2203, 2933, 1397, 1398,
	1399, 1400, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1979, 1973, 427, 2404, 2905, 2125, 2285, 2126, 2302, 2063,
	2492, 649, 650, 651, 652, 2495, 2209, 2493, 1904, 1905,
	2328, 2329, 96, 2494, 648, 1520, 2506, 2336, 2305, 2498,
	1437, 925, 926, 927, 924, 1190, 2529, 938, 948, 949,
	941, 942, 943, 944, 945, 946, 947, 940, 956, 52,
	1912, 1538, 2543, 431, 939, 938, 948, 949, 941, 942,
	943, 944, 945, 946, 947, 940, 2055, 1968, 2508, 2597,
	1997, 2596, 1024, 1568, 1157, 1146, 432, 1737, 1738, 2551,
	51, 2510, 2511, 1791, 1219, 2054, 430, 2841, 1577, 925,
	926, 927, 924, 884, 2412, 2418, 1844, 2767, 2544, 2524,
	2053, 2545, 2523, 433, 2547, 2122, 2595, 2548, 925, 926,
	927, 924, 2072, 1807, 2052, 1451, 1430, 1889, 1437, 1370,
	1369, 2406, 861, 925, 926, 927, 924, 2198, 2526, 2527,
	2528, 2416, 2425, 2051, 434, 2549, 2541, 925, 926, 927,
	924, 1524, 2542, 2405, 2407, 2599, 2554, 1116, 173, 1036,
	1037, 1115, 2588, 1034, 1035, 916, 925, 926, 927, 924,
	2465, 861, 2577, 2902, 2050, 1634, 2198, 1070, 2049, 1032,
	1033, 1030, 1031, 2497, 2582, 1026, 2586, 2587, 2584, 2624,
	2822, 1028, 2589, 2810, 2808, 2048, 2590, 925, 926, 927,
	924, 925, 926, 927, 924, 2775, 861, 1146, 1146, 2045,
	2760, 2759, 861, 2643, 2757, 2749, 2643, 1839, 925, 926,
	927, 924, 2683, 2682, 2044, 2611, 2607, 648, 2415, 2507,
	2601, 2489, 925, 926, 927, 924, 2488, 2473, 1029, 2472,
	2401, 2232, 2625, 1455, 2836, 2835, 2411, 925, 926, 927,
	924, 2268, 861, 861, 1802, 2644, 861, 861, 2835, 2638,
	1690, 2647, 2646, 2639, 875, 2836, 2567, 2654, 2655, 2490,
	2545, 160, 3, 1453, 1085, 2680, 2043, 60, 1144, 2554,
	2, 1562, 1150, 2684, 2685, 1, 2661, 2662, 1423, 653,
	2670, 2671, 2658, 2216, 2217, 2677, 2464, 2669, 2039, 925,
	926, 927, 924, 2030, 2219, 1155, 2501, 2709, 2617, 1652,
	436, 1887, 2008, 2503, 2678, 1792, 2356, 1061, 685, 2570,
	1376, 925, 926, 927, 924, 2721, 925, 926, 927, 924,
	1244, 780, 870, 1241, 110, 925, 926, 927, 924, 869,
	867, 861, 1327, 2707, 1325, 649, 650, 651, 652, 547,
	1617, 2180, 1895, 861, 2679, 2840, 2873, 2716, 648, 2802,
	2843, 1257, 531, 2751, 2723, 2722, 2731, 925, 926, 927,
	924, 2693, 2806, 2695, 2734, 2738, 1900, 1903, 1904, 1905,
	1901, 2613, 1902, 1906, 1657, 921, 2254, 2743, 706, 583,
	558, 984, 1227, 1220, 2309, 110, 861, 782, 557, 110,
	2761, 2522, 2081, 2776, 2724, 674, 2756, 779, 2754, 707,
	110, 1900, 1903, 1904, 1905, 1901, 1601, 1902, 1906, 110,
	2771, 2691, 1191, 1212, 2770, 1195, 2648, 2534, 2797, 2800,
	2374, 2777, 2101, 2943, 2932, 2914, 2900, 2827, 2782, 2928,
	2858, 2889, 2620, 2618, 2619, 2882, 2823, 468, 1415, 1541,
	417, 2801, 2792, 2793, 2794, 2795, 745, 1415, 2805, 2809,
	2591, 2811, 2812, 2593, 2807, 2673, 1613, 469, 1816, 2815,
	2659, 672, 1799, 673, 2094, 2093, 2821, 2598, 1296, 930,
	1313, 2324, 2325, 965, 2847, 507, 1679, 2833, 2831, 2830,
	519, 2078, 2409, 2225, 59, 58, 2837, 57, 56, 2846,
	1583, 181, 549, 861, 180, 2799, 2845, 529, 2856, 528,
	2852, 527, 2851, 526, 525, 1899, 1897, 1896, 1533, 1532,
	2872, 1581, 2427, 2861, 2863, 2144, 1858, 1851, 1489, 2784,
	2735, 2871, 2736, 2875, 2564, 2165, 2880, 2560, 861, 2556,
	2434, 2642, 2395, 1280, 2396, 2402, 1806, 821, 2881, 2885,
	2903, 2887, 805, 801, 803, 804, 802, 2016, 2847, 2898,
	2012, 1834, 2367, 1748, 1747, 1745, 1744, 861, 1044, 861,
	2708, 2509, 1280, 2846, 1280, 2897, 1755, 2904, 1753, 2906,
	2909, 2457, 2453, 2358, 1625, 1420, 2062, 2875, 861, 2910,
	1534, 1530, 2853, 1280, 2924, 2917, 1893, 2927, 2921, 1801,
	939, 938, 948, 949, 941, 942, 943, 944, 945, 946,
	947, 940, 87, 86, 94, 2938, 2931, 137, 46, 2942,
	2941, 165, 164, 167, 166, 2706, 2950, 163, 1947, 2953,
	1948, 162, 1179, 2938, 2956, 2955, 161, 2954, 2942, 2645,
	642, 37, 2717, 33, 12, 11, 34, 21, 22, 20,
	1248, 809, 19, 25, 32, 799, 31, 30, 103, 102,
	29, 101, 2733, 100, 99, 98, 28, 18, 41, 1537,
	40, 829, 833, 835, 837, 839, 840, 842, 39, 846,
	843, 844, 845, 2307, 9, 824, 825, 826, 827, 807,
	808, 830, 93, 810, 91, 811, 812, 813, 814, 815,
	816, 817, 818, 819, 820, 822, 828, 27, 2706, 92,
	89, 90, 88, 71, 832, 834, 836, 838, 841, 70,
	69, 84, 83, 82, 81, 80, 110, 79, 2005, 110,
	110, 77, 110, 939, 938, 948, 949, 941, 942, 943,
	944, 945, 946, 947, 940, 78, 705, 68, 67, 66,
	65, 823, 939, 938, 948, 949, 941, 942, 943, 944,
	945, 946, 947, 940, 64, 75, 85, 764, 76, 74,
	73, 72, 63, 62, 764, 61, 122, 123, 121, 120,
	119, 1677, 118, 110, 117, 116, 42, 43, 44, 45,
	133, 132, 134, 353, 565, 136, 138, 135, 130, 128,
	131, 129, 127, 54, 316, 939, 938, 948, 949, 941,
	942, 943, 944, 945, 946, 947, 940, 521, 2706, 17,
	24, 261, 4, 0, 286, 0, 0, 0, 0, 556,
	0, 0, 345, 300, 0, 0, 0, 0, 613, 621,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	514, 0, 0, 546, 590, 589, 533, 542, 0, 956,
	243, 179, 534, 0, 541, 535, 539, 538, 536, 537,
	0, 605, 0, 0, 0, 0, 0, 0, 505, 518,
	2703, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2912, 0, 0, 0, 515, 516, 0, 0, 0,
	0, 566, 0, 517, 0, 0, 561, 543, 544, 0,
	0, 0, 0, 234, 350, 366, 244, 341, 379, 249,
	348, 239, 315, 338, 0, 0, 236, 364, 347, 297,
	280, 281, 235, 0, 333, 259, 272, 256, 313, 540,
	564, 568, 255, 627, 562, 374, 238, 0, 373, 312,
	360, 365, 298, 292, 237, 362, 296, 291, 284, 263,
	628, 276, 324, 290, 325, 277, 302, 301, 303, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 559, 0,
	0, 0, 376, 0, 0, 611, 831, 0, 0, 349,
	0, 0, 285, 0, 0, 0, 563, 0, 336, 318,
	624, 506, 0, 334, 288, 361, 326, 367, 351, 375,
	330, 327, 229, 352, 258, 299, 240, 242, 254, 260,
	262, 264, 265, 308, 309, 321, 340, 354, 355, 356,
	257, 250, 335, 251, 274, 252, 230, 342, 253, 232,
	322, 359, 0, 270, 331, 295, 233, 294, 323, 358,
	357, 241, 383, 389, 390, 395, 0, 396, 0, 1915,
	0, 404, 409, 410, 411, 413, 414, 415, 416, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	388, 268, 226, 227, 423, 609, 314, 0, 0, 623,
	604, 606, 607, 610, 614, 615, 616, 617, 618, 620,
	622, 626, 422, 0, 0, 0, 1537, 0, 421, 320,
	0, 339, 0, 0, 0, 110, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 369, 381, 399, 402, 0,
	0, 0, 231, 401, 0, 2704, 0, 0, 0, 2705,
	0, 625, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 567, 304, 305, 306, 307, 612, 1354, 248, 400,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 267,
	273, 412, 275, 247, 319, 269, 378, 282, 0, 405,
	0, 406, 0, 0, 0, 0, 311, 278, 279, 343,
	283, 289, 332, 377, 317, 337, 245, 368, 344, 293,
	0, 0, 634, 608, 633, 635, 636, 632, 637, 638,
	619, 524, 0, 571, 630, 629, 631, 0, 0, 0,
	0, 0, 0, 0, 0, 821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 287, 0, 328, 266, 597, 576, 577, 578,
	523, 579, 574, 575, 598, 569, 594, 595, 548, 572,
	580, 593, 581, 596, 599, 600, 639, 640, 587, 641,
	584, 601, 592, 591, 582, 570, 602, 603, 555, 550,
	585, 586, 573, 588, 551, 552, 553, 554, 0, 0,
	0, 384, 385, 386, 408, 370, 0, 420, 0, 1350,
	0, 0, 0, 1347, 0, 0, 0, 1349, 1346, 1348,
	1352, 1353, 951, 0, 955, 1351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 0, 0, 809,
	952, 954, 950, 0, 953, 939, 938, 948, 949, 941,
	942, 943, 944, 945, 946, 947, 940, 0, 0, 829,
	833, 835, 837, 839, 840, 842, 0, 846, 843, 844,
	845, 0, 0, 824, 825, 826, 827, 807, 808, 830,
	0, 810, 0, 811, 812, 813, 814, 815, 816, 817,
	818, 819, 820, 822, 828, 0, 0, 0, 0, 0,
	0, 0, 832, 834, 836, 838, 841, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1537, 1537, 1537, 1537, 0, 0, 0, 0, 0, 0,
	0, 0, 1537, 0, 0, 0, 0, 0, 0, 823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1357, 1358, 1359, 1360, 1361, 1362, 1355, 1356,
	110, 0, 0, 0, 0, 110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 110, 0, 0, 0, 0,
	0, 0, 110, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 565, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 521, 0, 0, 0, 261, 0,
	0, 286, 0, 0, 0, 0, 556, 2014, 2015, 345,
	300, 0, 0, 0, 0, 613, 621, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 514, 0, 0,
	546, 590, 589, 533, 542, 0, 110, 243, 179, 534,
	0, 541, 535, 539, 538, 536, 537, 0, 605, 0,
	0, 0, 0, 0, 0, 505, 518, 0, 522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1537, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 515, 516, 0, 0, 110, 0, 566, 0,
	517, 0, 0, 561, 543, 544, 0, 0, 0, 0,
	234, 350, 366, 244, 341, 379, 249, 348, 239, 315,
	338, 0, 0, 236, 364, 347, 297, 280, 281, 235,
	0, 333, 259, 272, 256, 313, 540, 564, 568, 255,
	627, 562, 374, 238, 831, 373, 312, 360, 365, 298,
	292, 237, 362, 296, 291, 284, 263, 628, 276, 324,
	290, 325, 277, 302, 301, 303, 0, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 559, 0, 0, 0, 376,
	0, 0, 611, 0, 0, 0, 349, 0, 0, 285,
	0, 0, 0, 563, 0, 336, 318, 624, 506, 0,
	334, 288, 361, 326, 367, 351, 375, 330, 327, 229,
	352, 258, 299, 240, 242, 254, 260, 262, 264, 265,
	308, 309, 321, 340, 354, 355, 356, 257, 250, 335,
	251, 274, 252, 230, 342, 253, 232, 322, 359, 0,
	270, 331, 295, 233, 294, 323, 358, 357, 241, 383,
	389, 390, 395, 0, 396, 0, 0, 0, 404, 409,
	410, 411, 413, 414, 415, 416, 0, 0, 0, 0,
	398, 0, 0, 0, 1378, 1377, 1379, 388, 268, 226,
	227, 423, 609, 314, 0, 0, 623, 604, 606, 607,
	610, 614, 615, 616, 617, 618, 620, 622, 626, 422,
	0, 0, 0, 0, 0, 421, 320, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 369, 381, 399, 402, 0, 0, 0, 231,
	401, 0, 0, 0, 0, 0, 0, 0, 625, 0,
	0, 0, 380, 0, 1537, 0, 0, 0, 567, 304,
	305, 306, 307, 612, 0, 248, 400, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 267, 273, 412, 275,
	247, 319, 269, 378, 282, 0, 405, 0, 406, 0,
	0, 0, 0, 311, 278, 279, 343, 283, 289, 332,
	377, 317, 337, 245, 368, 344, 293, 0, 0, 634,
	608, 633, 635, 636, 632, 637, 638, 619, 524, 0,
	571, 630, 629, 631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 0, 0, 0, 0, 0, 228, 0, 287,
	0, 328, 266, 597, 576, 577, 578, 523, 579, 574,
	575, 598, 569, 594, 595, 548, 572, 580, 593, 581,
	596, 599, 600, 639, 640, 587, 641, 584, 601, 592,
	591, 582, 570, 602, 603, 555, 550, 585, 586, 573,
	588, 551, 552, 553, 554, 353, 565, 0, 384, 385,
	386, 408, 370, 0, 420, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 521,
	0, 0, 0, 261, 0, 0, 286, 0, 0, 0,
	0, 556, 0, 0, 345, 300, 0, 0, 0, 0,
	613, 621, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 514, 0, 0, 546, 590, 589, 533, 542,
	0, 0, 243, 179, 534, 0, 541, 535, 539, 538,
	536, 537, 0, 605, 0, 0, 0, 0, 0, 0,
	505, 518, 0, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 515, 516, 0,
	0, 0, 0, 566, 0, 517, 0, 0, 561, 543,
	544, 0, 0, 0, 0, 234, 350, 366, 244, 341,
	379, 249, 348, 239, 315, 338, 0, 0, 236, 364,
	347, 297, 280, 281, 235, 0, 333, 259, 272, 256,
	313, 540, 564, 568, 255, 627, 562, 374, 238, 0,
	373, 312, 360, 365, 298, 292, 237, 362, 296, 291,
	284, 263, 628, 276, 324, 290, 325, 277, 302, 301,
	303, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	559, 0, 0, 0, 376, 0, 0, 611, 0, 0,
	0, 349, 0, 0, 285, 0, 0, 0, 563, 0,
	336, 318, 624, 506, 0, 334, 288, 361, 326, 367,
	351, 375, 330, 327, 229, 352, 258, 299, 240, 242,
	254, 260, 262, 264, 265, 308, 309, 321, 340, 354,
	355, 356, 257, 250, 335, 251, 274, 252, 230, 342,
	253, 232, 322, 359, 0, 270, 331, 295, 233, 294,
	323, 358, 357, 241, 383, 389, 390, 395, 0, 396,
	0, 0, 0, 404, 409, 410, 411, 413, 414, 415,
	416, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 388, 268, 226, 227, 423, 609, 314, 0,
	0, 623, 604, 606, 607, 610, 614, 615, 616, 617,
	618, 620, 622, 626, 422, 0, 0, 0, 0, 0,
	421, 320, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 369, 381, 399,
	402, 0, 0, 0, 231, 401, 0, 2704, 0, 0,
	0, 2705, 0, 625, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 567, 304, 305, 306, 307, 612, 0,
	248, 400, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 267, 273, 412, 275, 247, 319, 269, 378, 282,
	0, 405, 0, 406, 0, 0, 0, 0, 311, 278,
	279, 343, 283, 289, 332, 377, 317, 337, 245, 368,
	344, 293, 0, 0, 634, 608, 633, 635, 636, 632,
	637, 638, 619, 524, 0, 571, 630, 629, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 287, 0, 328, 266, 597, 576,
	577, 578, 523, 579, 574, 575, 598, 569, 594, 595,
	548, 572, 580, 593, 581, 596, 599, 600, 639, 640,
	587, 641, 584, 601, 592, 591, 582, 570, 602, 603,
	555, 550, 585, 586, 573, 588, 551, 552, 553, 554,
	353, 565, 0, 384, 385, 386, 408, 370, 0, 420,
	0, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 521, 0, 0, 0, 261, 1416,
	0, 286, 0, 0, 0, 0, 556, 0, 0, 345,
	300, 0, 0, 0, 0, 613, 621, 0, 0, 0,
	0, 0, 0, 0, 1551, 0, 0, 514, 0, 0,
	546, 590, 589, 533, 542, 0, 0, 243, 179, 534,
	0, 541, 535, 539, 538, 536, 537, 0, 605, 0,
	0, 0, 0, 0, 0, 505, 518, 0, 522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 515, 516, 0, 0, 0, 0, 566, 0,
	517, 0, 0, 1552, 543, 544, 0, 0, 0, 0,
	234, 350, 366, 244, 341, 379, 249, 348, 239, 315,
	338, 0, 0, 236, 364, 347, 297, 280, 281, 235,
	0, 333, 259, 272, 256, 313, 540, 564, 568, 255,
	627, 562, 374, 238, 0, 373, 312, 360, 365, 298,
	292, 237, 362, 296, 291, 284, 263, 628, 276, 324,
	290, 325, 277, 302, 301, 303, 0, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 559, 0, 0, 0, 376,
	0, 0, 611, 0, 0, 0, 349, 0, 0, 285,
	0, 0, 0, 563, 0, 336, 318, 624, 506, 0,
	334, 288, 361, 326, 367, 351, 375, 330, 327, 229,
	352, 258, 299, 240, 242, 254, 260, 262, 264, 265,
	308, 309, 321, 340, 354, 355, 356, 257, 250, 335,
	251, 274, 252, 230, 342, 253, 232, 322, 359, 0,
	270, 331, 295, 233, 294, 323, 358, 357, 241, 383,
	389, 390, 395, 0, 396, 0, 0, 0, 404, 409,
	410, 411, 413, 414, 415, 416, 0, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 0, 388, 268, 226,
	227, 423, 609, 314, 0, 0, 623, 604, 606, 607,
	610, 614, 615, 616, 617, 618, 620, 622, 626, 422,
	0, 0, 0, 0, 0, 421, 320, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 369, 381, 399, 402, 0, 0, 0, 231,
	401, 0, 0, 0, 0, 0, 0, 0, 625, 0,
	0, 0, 380, 0, 0, 0, 0, 0, 567, 304,
	305, 306, 307, 612, 0, 248, 400, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 267, 273, 412, 275,
	247, 319, 269, 378, 282, 0, 405, 0, 406, 0,
	0, 0, 0, 311, 278, 279, 343, 283, 289, 332,
	377, 317, 337, 245, 368, 344, 293, 0, 0, 634,
	608, 633, 635, 636, 632, 637, 638, 619, 524, 0,
	571, 630, 629, 631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 287,
	0, 328, 266, 597, 576, 577, 578, 523, 579, 574,
	575, 598, 569, 594, 595, 548, 572, 580, 593, 581,
	596, 599, 600, 639, 640, 587, 641, 584, 601, 592,
	591, 582, 570, 602, 603, 555, 550, 585, 586, 573,
	588, 551, 552, 553, 554, 156, 353, 565, 384, 385,
	386, 408, 370, 0, 420, 0, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	521, 0, 0, 0, 261, 0, 0, 286, 0, 0,
	0, 0, 959, 0, 0, 345, 300, 0, 0, 0,
	0, 613, 621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 0, 0, 546, 590, 589, 533,
	542, 0, 0, 243, 179, 534, 0, 541, 535, 539,
	538, 536, 537, 0, 605, 0, 0, 0, 0, 0,
	0, 505, 518, 0, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 515, 516,
	0, 0, 0, 0, 566, 0, 517, 0, 0, 561,
	543, 544, 0, 0, 0, 0, 234, 350, 366, 244,
	341, 379, 249, 348, 239, 315, 338, 0, 0, 236,
	364, 347, 297, 280, 281, 235, 0, 333, 259, 272,
	256, 313, 540, 564, 568, 255, 627, 562, 374, 238,
	0, 373, 312, 360, 365, 298, 292, 237, 362, 296,
	291, 284, 263, 628, 276, 324, 290, 325, 277, 302,
	301, 303, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 376, 0, 0, 611, 0,
	0, 0, 349, 0, 0, 285, 0, 0, 0, 563,
	0, 336, 318, 624, 506, 0, 334, 288, 361, 326,
	367, 351, 375, 330, 327, 229, 352, 258, 299, 240,
	242, 254, 260, 262, 264, 265, 308, 309, 321, 340,
	354, 355, 356, 257, 250, 335, 251, 274, 252, 230,
	342, 253, 232, 322, 359, 0, 270, 331, 295, 233,
	294, 323, 358, 357, 241, 383, 389, 390, 395, 0,
	396, 0, 0, 0, 404, 409, 410, 411, 413, 414,
	415, 416, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 388, 268, 226, 227, 423, 609, 314,
	0, 0, 623, 604, 606, 607, 610, 614, 615, 616,
	617, 618, 620, 622, 626, 422, 0, 0, 0, 0,
	0, 421, 320, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 369, 381,
	399, 402, 0, 0, 0, 231, 401, 0, 0, 0,
	0, 0, 0, 0, 625, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 567, 304, 305, 306, 307, 612,
	0, 248, 400, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 267, 273, 412, 275, 247, 319, 269, 378,
	282, 0, 405, 0, 406, 0, 0, 0, 0, 311,
	278, 279, 343, 283, 289, 332, 377, 317, 337, 245,
	368, 344, 293, 0, 0, 634, 608, 633, 635, 636,
	632, 637, 638, 619, 524, 0, 571, 630, 629, 631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 287, 126, 328, 266, 597,
	576, 577, 578, 523, 579, 574, 575, 598, 569, 594,
	595, 548, 572, 580, 593, 581, 596, 599, 600, 639,
	640, 587, 641, 584, 601, 592, 591, 582, 570, 602,
	603, 555, 550, 585, 586, 573, 588, 551, 552, 553,
	554, 353, 565, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 521, 0, 0, 0, 261,
	2911, 0, 286, 0, 0, 0, 0, 556, 0, 0,
	345, 300, 0, 0, 0, 0, 613, 621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 514, 0,
	0, 546, 590, 589, 533, 542, 0, 0, 243, 179,
	534, 0, 541, 535, 539, 538, 536, 537, 0, 605,
	0, 0, 0, 0, 0, 0, 505, 518, 0, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 515, 516, 0, 0, 0, 0, 566,
	0, 517, 0, 0, 561, 543, 544, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 540, 564, 568,
	255, 627, 562, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 628, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 559, 0, 0, 0,
	376, 0, 0, 611, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 563, 0, 336, 318, 624, 506,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 609, 314, 0, 0, 623, 604, 606,
	607, 610, 614, 615, 616, 617, 618, 620, 622, 626,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 625,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 567,
	304, 305, 306, 307, 612, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	634, 608, 633, 635, 636, 632, 637, 638, 619, 524,
	0, 571, 630, 629, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 597, 576, 577, 578, 523, 579,
	574, 575, 598, 569, 594, 595, 548, 572, 580, 593,
	581, 596, 599, 600, 639, 640, 587, 641, 584, 601,
	592, 591, 582, 570, 602, 603, 555, 550, 585, 586,
	573, 588, 551, 552, 553, 554, 353, 565, 0, 384,
	385, 386, 408, 370, 0, 420, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	521, 0, 0, 0, 261, 1416, 0, 286, 0, 0,
	0, 0, 556, 0, 0, 345, 300, 0, 0, 0,
	0, 613, 621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 0, 0, 546, 590, 589, 533,
	542, 0, 0, 243, 179, 534, 0, 541, 535, 539,
	538, 536, 537, 0, 605, 0, 0, 0, 0, 0,
	0, 505, 518, 0, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 515, 516,
	0, 0, 0, 0, 566, 0, 517, 0, 0, 561,
	543, 544, 0, 0, 0, 0, 234, 350, 366, 244,
	341, 379, 249, 348, 239, 315, 338, 0, 0, 236,
	364, 347, 297, 280, 281, 235, 0, 333, 259, 272,
	256, 313, 540, 564, 568, 255, 627, 562, 374, 238,
	0, 373, 312, 360, 365, 298, 292, 237, 362, 296,
	291, 284, 263, 628, 276, 324, 290, 325, 277, 302,
	301, 303, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 376, 0, 0, 611, 0,
	0, 0, 349, 0, 0, 285, 0, 0, 0, 563,
	0, 336, 318, 624, 506, 0, 334, 288, 361, 326,
	367, 351, 375, 330, 327, 229, 352, 258, 299, 240,
	242, 254, 260, 262, 264, 265, 308, 309, 321, 340,
	354, 355, 356, 257, 250, 335, 251, 274, 252, 230,
	342, 253, 232, 322, 359, 0, 270, 331, 295, 233,
	294, 323, 358, 357, 241, 383, 389, 390, 395, 0,
	396, 0, 0, 0, 404, 409, 410, 411, 413, 414,
	415, 416, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 388, 268, 226, 227, 423, 609, 314,
	0, 0, 623, 604, 606, 607, 610, 614, 615, 616,
	617, 618, 620, 622, 626, 422, 0, 0, 0, 0,
	0, 421, 320, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 369, 381,
	399, 402, 0, 0, 0, 231, 401, 0, 0, 0,
	0, 0, 0, 0, 625, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 567, 304, 305, 306, 307, 612,
	0, 248, 400, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 267, 273, 412, 275, 247, 319, 269, 378,
	282, 0, 405, 0, 406, 0, 0, 0, 0, 311,
	278, 279, 343, 283, 289, 332, 377, 317, 337, 245,
	368, 344, 293, 0, 0, 634, 608, 633, 635, 636,
	632, 637, 638, 619, 524, 0, 571, 630, 629, 631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 287, 0, 328, 266, 597,
	576, 577, 578, 523, 579, 574, 575, 598, 569, 594,
	595, 548, 572, 580, 593, 581, 596, 599, 600, 639,
	640, 587, 641, 584, 601, 592, 591, 582, 570, 602,
	603, 555, 550, 585, 586, 573, 588, 551, 552, 553,
	554, 353, 565, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 521, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 556, 0, 0,
	345, 300, 0, 0, 0, 0, 613, 621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 514, 0,
	0, 546, 590, 589, 533, 542, 0, 0, 243, 179,
	534, 0, 541, 535, 539, 538, 536, 537, 0, 605,
	0, 0, 0, 0, 0, 0, 505, 518, 0, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 515, 516, 1174, 0, 0, 0, 566,
	0, 517, 0, 0, 561, 543, 544, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 540, 564, 568,
	255, 627, 562, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 628, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 559, 0, 0, 0,
	376, 0, 0, 611, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 563, 0, 336, 318, 624, 506,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 609, 314, 0, 0, 623, 604, 606,
	607, 610, 614, 615, 616, 617, 618, 620, 622, 626,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 625,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 567,
	304, 305, 306, 307, 612, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	634, 608, 633, 635, 636, 632, 637, 638, 619, 524,
	0, 571, 630, 629, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 597, 576, 577, 578, 523, 579,
	574, 575, 598, 569, 594, 595, 548, 572, 580, 593,
	581, 596, 599, 600, 639, 640, 587, 641, 584, 601,
	592, 591, 582, 570, 602, 603, 555, 550, 585, 586,
	573, 588, 551, 552, 553, 554, 0, 0, 0, 384,
	385, 386, 408, 370, 0, 420, 353, 565, 0, 0,
	1698, 0, 0, 0, 0, 0, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	521, 0, 0, 0, 261, 0, 0, 286, 0, 0,
	0, 0, 556, 0, 0, 345, 300, 0, 0, 0,
	0, 613, 621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 0, 0, 546, 590, 589, 533,
	542, 0, 0, 243, 179, 534, 0, 541, 535, 539,
	538, 536, 537, 0, 605, 0, 0, 0, 0, 0,
	0, 505, 518, 0, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 515, 516,
	0, 0, 0, 0, 566, 0, 517, 0, 0, 561,
	543, 544, 0, 0, 0, 0, 234, 350, 366, 244,
	341, 379, 249, 348, 239, 315, 338, 0, 0, 236,
	364, 347, 297, 280, 281, 235, 0, 333, 259, 272,
	256, 313, 540, 564, 568, 255, 627, 562, 374, 238,
	0, 373, 312, 360, 365, 298, 292, 237, 362, 296,
	291, 284, 263, 628, 276, 324, 290, 325, 277, 302,
	301, 303, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 376, 0, 0, 611, 0,
	0, 0, 349, 0, 0, 285, 0, 0, 0, 563,
	0, 336, 318, 624, 506, 0, 334, 288, 361, 326,
	367, 351, 375, 330, 327, 229, 352, 258, 299, 240,
	242, 254, 260, 262, 264, 265, 308, 309, 321, 340,
	354, 355, 356, 257, 250, 335, 251, 274, 252, 230,
	342, 253, 232, 322, 359, 0, 270, 331, 295, 233,
	294, 323, 358, 357, 241, 383, 389, 390, 395, 0,
	396, 0, 0, 0, 404, 409, 410, 411, 413, 414,
	415, 416, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 388, 268, 226, 227, 423, 609, 314,
	0, 0, 623, 604, 606, 607, 610, 614, 615, 616,
	617, 618, 620, 622, 626, 422, 0, 0, 0, 0,
	0, 421, 320, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 369, 381,
	399, 402, 0, 0, 0, 231, 401, 0, 0, 0,
	0, 0, 0, 0, 625, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 567, 304, 305, 306, 307, 612,
	0, 248, 400, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 267, 273, 412, 275, 247, 319, 269, 378,
	282, 0, 405, 0, 406, 0, 0, 0, 0, 311,
	278, 279, 343, 283, 289, 332, 377, 317, 337, 245,
	368, 344, 293, 0, 0, 634, 608, 633, 635, 636,
	632, 637, 638, 619, 524, 0, 571, 630, 629, 631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 287, 0, 328, 266, 597,
	576, 577, 578, 523, 579, 574, 575, 598, 569, 594,
	595, 548, 572, 580, 593, 581, 596, 599, 600, 639,
	640, 587, 641, 584, 601, 592, 591, 582, 570, 602,
	603, 555, 550, 585, 586, 573, 588, 551, 552, 553,
	554, 353, 565, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 521, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 556, 0, 0,
	345, 300, 0, 0, 0, 0, 613, 621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 514, 0,
	0, 546, 590, 589, 533, 542, 0, 0, 243, 179,
	534, 0, 541, 535, 539, 538, 536, 537, 0, 605,
	0, 0, 0, 0, 0, 0, 505, 518, 0, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 515, 516, 0, 0, 0, 0, 566,
	0, 517, 0, 0, 561, 543, 544, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 540, 564, 568,
	255, 627, 562, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 628, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 559, 0, 0, 0,
	376, 0, 0, 611, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 563, 0, 336, 318, 624, 506,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 609, 314, 0, 0, 623, 604, 606,
	607, 610, 614, 615, 616, 617, 618, 620, 622, 626,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 625,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 567,
	304, 305, 306, 307, 612, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	634, 608, 633, 635, 636, 632, 637, 638, 619, 524,
	0, 571, 630, 629, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 597, 576, 577, 578, 523, 579,
	574, 575, 598, 569, 594, 595, 548, 572, 580, 593,
	581, 596, 599, 600, 639, 640, 587, 641, 584, 601,
	592, 591, 582, 570, 602, 603, 555, 550, 585, 586,
	573, 588, 551, 552, 553, 554, 353, 565, 0, 384,
	385, 386, 408, 370, 0, 420, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 1297, 0, 0, 0,
	521, 0, 0, 0, 261, 0, 0, 286, 0, 0,
	0, 0, 556, 0, 0, 345, 300, 0, 0, 0,
	0, 613, 621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 0, 0, 546, 590, 589, 533,
	542, 0, 0, 243, 179, 534, 0, 541, 535, 539,
	538, 536, 537, 0, 605, 0, 0, 0, 0, 0,
	0, 0, 518, 0, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 515, 516,
	0, 0, 0, 0, 566, 0, 517, 0, 0, 561,
	543, 544, 0, 0, 0, 0, 234, 350, 366, 244,
	341, 379, 249, 348, 239, 315, 338, 0, 0, 236,
	364, 347, 297, 280, 281, 235, 0, 333, 259, 272,
	256, 313, 540, 564, 568, 255, 627, 562, 374, 238,
	0, 373, 312, 360, 365, 298, 292, 237, 362, 296,
	291, 284, 263, 628, 276, 324, 290, 325, 277, 302,
	301, 303, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 376, 0, 0, 611, 0,
	0, 0, 349, 0, 0, 285, 0, 0, 0, 563,
	0, 336, 318, 624, 0, 0, 334, 288, 361, 326,
	367, 351, 375, 330, 327, 229, 352, 258, 299, 240,
	242, 254, 260, 262, 264, 265, 308, 309, 321, 340,
	354, 355, 356, 257, 250, 335, 251, 274, 252, 230,
	342, 253, 232, 322, 359, 0, 270, 331, 295, 233,
	294, 323, 358, 357, 241, 383, 1298, 1299, 395, 0,
	396, 0, 0, 0, 404, 409, 410, 411, 413, 414,
	415, 416, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 388, 268, 226, 227, 423, 609, 314,
	0, 0, 623, 604, 606, 607, 610, 614, 615, 616,
	617, 618, 620, 622, 626, 422, 0, 0, 0, 0,
	0, 421, 320, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 369, 381,
	399, 402, 0, 0, 0, 231, 401, 0, 0, 0,
	0, 0, 0, 0, 625, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 567, 304, 305, 306, 307, 612,
	0, 248, 400, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 267, 273, 412, 275, 247, 319, 269, 378,
	282, 0, 405, 0, 406, 0, 0, 0, 0, 311,
	278, 279, 343, 283, 289, 332, 377, 317, 337, 245,
	368, 344, 293, 0, 0, 634, 608, 633, 635, 636,
	632, 637, 638, 619, 524, 0, 571, 630, 629, 631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 287, 0, 328, 266, 597,
	576, 577, 578, 523, 579, 574, 575, 598, 569, 594,
	595, 548, 572, 580, 593, 581, 596, 599, 600, 639,
	640, 587, 641, 584, 601, 592, 591, 582, 570, 602,
	603, 555, 550, 585, 586, 573, 588, 551, 552, 553,
	554, 353, 565, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 521, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 556, 0, 0,
	345, 300, 0, 0, 0, 0, 613, 621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 590, 589, 533, 542, 0, 0, 243, 179,
	534, 0, 541, 535, 539, 538, 536, 537, 0, 605,
	0, 0, 0, 0, 0, 0, 505, 518, 0, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 515, 516, 0, 0, 0, 0, 566,
	0, 517, 0, 0, 561, 543, 544, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 540, 564, 568,
	255, 627, 562, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 628, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 559, 0, 0, 0,
	376, 0, 0, 611, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 563, 0, 336, 318, 624, 506,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 609, 314, 0, 0, 623, 604, 606,
	607, 610, 614, 615, 616, 617, 618, 620, 622, 626,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 625,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 567,
	304, 305, 306, 307, 612, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	634, 608, 633, 635, 636, 632, 637, 638, 619, 524,
	0, 571, 630, 629, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 597, 576, 577, 578, 523, 579,
	574, 575, 598, 569, 594, 595, 548, 572, 580, 593,
	581, 596, 599, 600, 639, 640, 587, 641, 584, 601,
	592, 591, 582, 570, 602, 603, 555, 550, 585, 586,
	573, 588, 551, 552, 553, 554, 353, 565, 0, 384,
	385, 386, 408, 370, 0, 420, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	521, 0, 0, 0, 261, 0, 0, 286, 0, 0,
	0, 0, 556, 0, 0, 345, 300, 0, 0, 0,
	0, 613, 621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 0, 0, 546, 590, 589, 533,
	542, 0, 0, 243, 179, 534, 0, 541, 535, 539,
	538, 536, 537, 0, 605, 0, 0, 0, 0, 0,
	0, 0, 518, 0, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 515, 516,
	0, 0, 0, 0, 566, 0, 517, 0, 0, 561,
	543, 544, 0, 0, 0, 0, 234, 350, 366, 244,
	341, 379, 249, 348, 239, 315, 338, 0, 0, 236,
	364, 347, 297, 280, 281, 235, 0, 333, 259, 272,
	256, 313, 540, 564, 568, 255, 627, 562, 374, 238,
	0, 373, 312, 360, 365, 298, 292, 237, 362, 296,
	291, 284, 263, 628, 276, 324, 290, 325, 277, 302,
	301, 303, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 376, 0, 0, 611, 0,
	0, 0, 349, 0, 0, 285, 0, 0, 0, 563,
	0, 336, 318, 624, 0, 0, 334, 288, 361, 326,
	367, 351, 375, 330, 327, 229, 352, 258, 299, 240,
	242, 254, 260, 262, 264, 265, 308, 309, 321, 340,
	354, 355, 356, 257, 250, 335, 251, 274, 252, 230,
	342, 253, 232, 322, 359, 0, 270, 331, 295, 233,
	294, 323, 358, 357, 241, 383, 389, 390, 395, 0,
	396, 0, 0, 0, 404, 409, 410, 411, 413, 414,
	415, 416, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 388, 268, 226, 227, 423, 609, 314,
	0, 0, 623, 604, 606, 607, 610, 614, 615, 616,
	617, 618, 620, 622, 626, 422, 0, 0, 0, 0,
	0, 421, 320, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 369, 381,
	399, 402, 0, 0, 0, 231, 401, 0, 0, 0,
	0, 0, 0, 0, 625, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 567, 304, 305, 306, 307, 612,
	0, 248, 400, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 267, 273, 412, 275, 247, 319, 269, 378,
	282, 0, 405, 0, 406, 0, 0, 0, 0, 311,
	278, 279, 343, 283, 289, 332, 377, 317, 337, 245,
	368, 344, 293, 0, 0, 634, 608, 633, 635, 636,
	632, 637, 638, 619, 524, 0, 571, 630, 629, 631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 287, 0, 328, 266, 597,
	576, 577, 578, 523, 579, 574, 575, 598, 569, 594,
	595, 548, 572, 580, 593, 581, 596, 599, 600, 639,
	640, 587, 641, 584, 601, 592, 591, 582, 570, 602,
	603, 555, 550, 585, 586, 573, 588, 551, 552, 553,
	554, 0, 0, 0, 384, 385, 386, 408, 370, 0,
	420, 156, 353, 49, 148, 125, 0, 0, 0, 0,
	0, 0, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 0, 0, 0, 0, 141, 0,
	261, 0, 150, 286, 0, 0, 0, 0, 108, 0,
	0, 345, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 0, 0, 0, 0, 0, 153,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 350, 366, 244, 341, 379, 249, 348,
	239, 315, 338, 0, 0, 236, 364, 347, 297, 280,
	281, 235, 0, 333, 259, 272, 256, 313, 0, 363,
	391, 255, 382, 0, 374, 238, 0, 373, 312, 360,
	365, 298, 292, 237, 362, 296, 291, 284, 263, 407,
	276, 324, 290, 325, 277, 302, 301, 303, 0, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	124, 147, 154, 0, 95, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 171, 0, 0, 0, 349, 0,
	0, 285, 146, 140, 139, 392, 0, 336, 318, 55,
	0, 0, 334, 288, 361, 326, 367, 351, 375, 330,
	327, 229, 352, 258, 299, 240, 242, 254, 260, 262,
	264, 265, 308, 309, 321, 340, 354, 355, 356, 257,
	250, 335, 251, 274, 252, 230, 342, 253, 232, 322,
	359, 0, 270, 331, 295, 233, 294, 323, 358, 357,
	241, 383, 389, 390, 395, 0, 396, 142, 143, 144,
	404, 409, 410, 411, 413, 414, 415, 416, 0, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 0, 388,
	268, 226, 227, 371, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 387, 174, 0, 0,
	0, 182, 0, 0, 0, 145, 0, 183, 320, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 369, 381, 399, 402, 0, 0,
	0, 231, 401, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	397, 304, 305, 306, 307, 271, 0, 248, 400, 329,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	48, 0, 0, 0, 0, 0, 393, 394, 267, 273,
	412, 275, 247, 319, 269, 378, 282, 0, 405, 0,
	406, 0, 0, 0, 0, 311, 278, 279, 343, 283,
	289, 332, 377, 317, 337, 245, 368, 344, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 50,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 287, 126, 328, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 0, 0, 0,
	384, 385, 386, 408, 370, 353, 184, 38, 172, 175,
	177, 176, 0, 47, 5, 0, 316, 111, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 345, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 990, 0, 0, 178, 0, 0, 533, 542,
	0, 0, 243, 179, 534, 0, 541, 535, 539, 538,
	536, 537, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	0, 0, 0, 0, 0, 234, 350, 366, 244, 341,
	379, 249, 348, 239, 315, 338, 0, 0, 236, 364,
	347, 297, 280, 281, 235, 0, 333, 259, 272, 256,
	313, 540, 363, 391, 255, 382, 0, 374, 238, 0,
	373, 312, 360, 365, 298, 292, 237, 362, 296, 291,
	284, 263, 407, 276, 324, 290, 325, 277, 302, 301,
	303, 0, 0, 0, 680, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 349, 0, 0, 285, 0, 0, 0, 392, 0,
	336, 318, 0, 0, 0, 334, 288, 361, 326, 367,
	351, 375, 330, 327, 229, 352, 258, 299, 240, 242,
	254, 260, 262, 264, 265, 308, 309, 321, 340, 354,
	355, 356, 257, 250, 335, 251, 274, 252, 230, 342,
	253, 232, 322, 359, 0, 270, 331, 295, 233, 294,
	323, 358, 357, 241, 383, 389, 390, 395, 0, 396,
	0, 0, 0, 404, 409, 410, 411, 413, 414, 415,
	416, 0, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 0, 388, 268, 226, 227, 423, 0, 314, 0,
	682, 0, 677, 0, 667, 0, 0, 0, 310, 387,
	0, 679, 678, 0, 422, 0, 0, 0, 0, 0,
	421, 320, 0, 339, 0, 0, 0, 0, 665, 0,
	0, 0, 671, 0, 0, 0, 346, 369, 381, 399,
	402, 0, 0, 0, 231, 401, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 397, 304, 305, 306, 307, 271, 0,
	248, 400, 329, 676, 0, 0, 0, 675, 0, 0,
	0, 0, 0, 664, 0, 0, 0, 670, 0, 393,
	394, 267, 273, 412, 275, 247, 319, 269, 378, 282,
	0, 405, 0, 406, 668, 0, 0, 0, 311, 278,
	279, 343, 283, 289, 332, 377, 317, 337, 245, 368,
	344, 293, 0, 0, 0, 666, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 683,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 669, 287, 0, 328, 266, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 222, 223, 224, 225,
	0, 0, 0, 384, 385, 386, 408, 370, 0, 420,
	156, 353, 49, 148, 125, 0, 0, 0, 0, 0,
	0, 0, 316, 440, 0, 681, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 445, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 0, 363, 391,
	255, 382, 0, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 444, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 441, 443, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 50, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 126, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 353, 0, 0, 384,
	385, 386, 408, 370, 0, 420, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 821, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 345, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 809,
	0, 0, 0, 0, 0, 0, 234, 350, 366, 244,
	341, 379, 249, 348, 239, 315, 338, 0, 0, 1777,
	1779, 1780, 1781, 1782, 1783, 1784, 0, 1788, 1785, 1786,
	1787, 313, 0, 1772, 1773, 1774, 1775, 807, 1758, 1778,
	0, 1759, 312, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1776, 324, 290, 325, 277, 302,
	301, 303, 832, 834, 836, 838, 841, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 285, 0, 0, 0, 1771,
	0, 336, 318, 0, 0, 0, 334, 288, 361, 326,
	367, 351, 375, 330, 327, 229, 352, 258, 299, 240,
	242, 254, 260, 262, 264, 265, 308, 309, 321, 340,
	354, 355, 356, 257, 250, 335, 251, 274, 252, 230,
	342, 253, 232, 322, 359, 0, 270, 331, 295, 233,
	294, 323, 358, 357, 241, 383, 389, 390, 395, 0,
	396, 0, 0, 0, 404, 409, 410, 411, 413, 414,
	415, 416, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 388, 268, 226, 227, 423, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	387, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 421, 320, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 369, 381,
	399, 402, 0, 0, 0, 231, 401, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 397, 304, 305, 306, 307, 271,
	0, 248, 400, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 267, 273, 412, 275, 247, 319, 269, 378,
	282, 0, 405, 0, 406, 0, 0, 0, 0, 311,
	278, 279, 343, 283, 289, 332, 377, 317, 337, 245,
	368, 344, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 831, 287, 0, 328, 266, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 222, 223, 224,
	225, 353, 0, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	1846, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 0, 363, 391,
	255, 382, 0, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	376, 0, 0, 0, 1845, 1836, 1844, 349, 1842, 1847,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	1848, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 271, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 353, 0, 0, 384,
	385, 386, 408, 370, 0, 420, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 345, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 1846, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 350, 366, 244,
	341, 379, 249, 348, 239, 315, 338, 0, 0, 236,
	364, 347, 297, 280, 281, 235, 0, 333, 259, 272,
	256, 313, 0, 363, 391, 255, 382, 0, 374, 238,
	0, 373, 312, 360, 365, 298, 292, 237, 362, 296,
	291, 284, 263, 407, 276, 324, 290, 325, 277, 302,
	301, 303, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 376, 0, 0, 0, 1845,
	0, 1844, 349, 1842, 1847, 285, 0, 0, 0, 392,
	0, 336, 318, 0, 0, 0, 334, 288, 361, 326,
	367, 351, 375, 330, 327, 229, 352, 258, 299, 240,
	242, 254, 260, 262, 264, 265, 308, 309, 321, 340,
	354, 355, 356, 257, 250, 335, 251, 274, 252, 230,
	342, 253, 232, 322, 359, 1848, 270, 331, 295, 233,
	294, 323, 358, 357, 241, 383, 389, 390, 395, 0,
	396, 0, 0, 0, 404, 409, 410, 411, 413, 414,
	415, 416, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 388, 268, 226, 227, 423, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	387, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 421, 320, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 369, 381,
	399, 402, 0, 0, 0, 231, 401, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 397, 304, 305, 306, 307, 271,
	0, 248, 400, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 267, 273, 412, 275, 247, 319, 269, 378,
	282, 0, 405, 0, 406, 0, 0, 0, 0, 311,
	278, 279, 343, 283, 289, 332, 377, 317, 337, 245,
	368, 344, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 287, 0, 328, 266, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 222, 223, 224,
	225, 353, 0, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1585, 0, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 1586, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 925, 926, 927, 924, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 0, 363, 391,
	255, 382, 0, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 0, 0, 0, 0, 0, 349, 0, 0,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 271, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 353, 0, 0, 384,
	385, 386, 408, 370, 0, 420, 0, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 744, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 345, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 753, 754, 0,
	0, 0, 0, 243, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 350, 366, 244,
	341, 379, 249, 348, 239, 315, 338, 0, 0, 236,
	364, 347, 297, 280, 281, 235, 0, 333, 259, 272,
	256, 313, 0, 363, 391, 255, 382, 734, 374, 238,
	733, 373, 312, 360, 365, 298, 292, 237, 362, 296,
	291, 284, 263, 407, 276, 324, 290, 325, 277, 302,
	301, 303, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 349, 0, 0, 285, 0, 0, 0, 392,
	0, 336, 318, 0, 0, 0, 334, 288, 361, 326,
	367, 351, 375, 742, 327, 229, 352, 258, 299, 240,
	242, 254, 260, 262, 264, 265, 308, 309, 321, 340,
	354, 355, 356, 257, 250, 335, 251, 274, 252, 230,
	342, 253, 232, 322, 359, 0, 270, 331, 295, 233,
	294, 323, 358, 357, 241, 383, 389, 390, 395, 0,
	396, 0, 0, 0, 404, 409, 410, 411, 413, 414,
	415, 416, 0, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 0, 388, 268, 226, 227, 423, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	387, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 421, 320, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 369, 381,
	399, 402, 0, 0, 0, 231, 401, 0, 0, 0,
	0, 0, 0, 743, 372, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 746, 304, 305, 306, 307, 271,
	0, 248, 400, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 267, 273, 412, 275, 247, 319, 269, 378,
	282, 0, 405, 0, 406, 0, 0, 0, 0, 755,
	749, 750, 751, 283, 289, 332, 377, 317, 337, 245,
	368, 344, 752, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 287, 0, 328, 266, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 0, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 222, 223, 224,
	225, 353, 0, 0, 384, 385, 386, 408, 370, 0,
	420, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	345, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 243, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 350, 366, 244, 341, 379, 249, 348, 239,
	315, 338, 0, 0, 236, 364, 347, 297, 280, 281,
	235, 0, 333, 259, 272, 256, 313, 0, 363, 391,
	255, 382, 0, 374, 238, 0, 373, 312, 360, 365,
	298, 292, 237, 362, 296, 291, 284, 263, 407, 276,
	324, 290, 325, 277, 302, 301, 303, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	376, 0, 0, 0, 1857, 1855, 0, 349, 0, 1856,
	285, 0, 0, 0, 392, 0, 336, 318, 0, 0,
	0, 334, 288, 361, 326, 367, 351, 375, 330, 327,
	229, 352, 258, 299, 240, 242, 254, 260, 262, 264,
	265, 308, 309, 321, 340, 354, 355, 356, 257, 250,
	335, 251, 274, 252, 230, 342, 253, 232, 322, 359,
	0, 270, 331, 295, 233, 294, 323, 358, 357, 241,
	383, 389, 390, 395, 0, 396, 0, 0, 0, 404,
	409, 410, 411, 413, 414, 415, 416, 0, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 0, 388, 268,
	226, 227, 423, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 387, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 421, 320, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 369, 381, 399, 402, 0, 0, 0,
	231, 401, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 397,
	304, 305, 306, 307, 271, 0, 248, 400, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 267, 273, 412,
	275, 247, 319, 269, 378, 282, 0, 405, 0, 406,
	0, 0, 0, 0, 311, 278, 279, 343, 283, 289,
	332, 377, 317, 337, 245, 368, 344, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	287, 0, 328, 266, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 0, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 0, 222, 223, 224, 225, 156, 353, 0, 384,
	385, 386, 408, 370, 0, 420, 0, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 0, 108, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 1629, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 0, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	392, 0, 336, 318, 0, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 397, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 126, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 156, 353, 0, 384, 385, 386, 408, 370,
	0, 420, 0, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 286, 0, 0, 0, 0, 108,
	0, 0, 345, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 1620, 0, 178, 0, 0, 0, 0, 0, 0,
	243, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 350, 366, 244, 341, 379, 249,
	348, 239, 315, 338, 0, 0, 236, 364, 347, 297,
	280, 281, 235, 0, 333, 259, 272, 256, 313, 0,
	363, 391, 255, 382, 0, 374, 238, 0, 373, 312,
	360, 365, 298, 292, 237, 362, 296, 291, 284, 263,
	407, 276, 324, 290, 325, 277, 302, 301, 303, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 0, 0, 0, 0, 349,
	0, 0, 285, 0, 0, 0, 392, 0, 336, 318,
	0, 0, 0, 334, 288, 361, 326, 367, 351, 375,
	330, 327, 229, 352, 258, 299, 240, 242, 254, 260,
	262, 264, 265, 308, 309, 321, 340, 354, 355, 356,
	257, 250, 335, 251, 274, 252, 230, 342, 253, 232,
	322, 359, 0, 270, 331, 295, 233, 294, 323, 358,
	357, 241, 383, 389, 390, 395, 0, 396, 0, 0,
	0, 404, 409, 410, 411, 413, 414, 415, 416, 0,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 0,
	388, 268, 226, 227, 423, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 387, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 421, 320,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 369, 381, 399, 402, 0,
	0, 0, 231, 401, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 397, 304, 305, 306, 307, 271, 0, 248, 400,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 267,
	273, 412, 275, 247, 319, 269, 378, 282, 0, 405,
	0, 406, 0, 0, 0, 0, 311, 278, 279, 343,
	283, 289, 332, 377, 317, 337, 245, 368, 344, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 287, 126, 328, 266, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 0, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 0, 222, 223, 224, 225, 156, 353,
	0, 384, 385, 386, 408, 370, 0, 420, 0, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 108, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1535, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 126,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 353, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 753, 754, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	0, 363, 391, 255, 382, 734, 374, 238, 733, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 407, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 392, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 755, 749, 750,
	751, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	752, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 2191,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 2194,
	0, 0, 2193, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 353, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 1149, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 1147, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1145, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	0, 363, 391, 255, 382, 0, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 407, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 392, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 1143, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 1147, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1145, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 353, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2842, 0, 178, 590, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	0, 363, 391, 255, 382, 0, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 407, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 392, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 1147, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2555, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 353, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 1147, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1145, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	0, 363, 391, 255, 382, 0, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 407, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 392, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1911, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 1913, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 353, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 1927, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 1147, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	0, 363, 391, 255, 382, 0, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 407, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 392, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2920, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 353, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 590, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	0, 363, 391, 255, 382, 0, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 407, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 392, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2857, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 353, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	0, 363, 391, 255, 382, 0, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 407, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 2798, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 392, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2637, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 353, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	0, 363, 391, 255, 382, 0, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 407, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 2681, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 392, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 353, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1535, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	0, 363, 391, 255, 382, 0, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 407, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 392, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2474, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 353, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 2341, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	0, 363, 391, 255, 382, 0, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 407, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 392, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 353, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 1147, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	0, 363, 391, 255, 382, 0, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 407, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 392, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 1913, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 353, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	0, 363, 391, 255, 382, 0, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 407, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 392, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 353,
	0, 0, 384, 385, 386, 408, 370, 0, 420, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 345, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 243, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1942, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	350, 366, 244, 341, 379, 249, 348, 239, 315, 338,
	0, 0, 236, 364, 347, 297, 280, 281, 235, 0,
	333, 259, 272, 256, 313, 0, 363, 391, 255, 382,
	0, 374, 238, 0, 373, 312, 360, 365, 298, 292,
	237, 362, 296, 291, 284, 263, 407, 276, 324, 290,
	325, 277, 302, 301, 303, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	0, 0, 0, 0, 0, 349, 0, 0, 285, 0,
	0, 0, 392, 0, 336, 318, 0, 0, 0, 334,
	288, 361, 326, 367, 351, 375, 330, 327, 229, 352,
	258, 299, 240, 242, 254, 260, 262, 264, 265, 308,
	309, 321, 340, 354, 355, 356, 257, 250, 335, 251,
	274, 252, 230, 342, 253, 232, 322, 359, 0, 270,
	331, 295, 233, 294, 323, 358, 357, 241, 383, 389,
	390, 395, 0, 396, 0, 0, 0, 404, 409, 410,
	411, 413, 414, 415, 416, 0, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 0, 388, 268, 226, 227,
	423, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 387, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 421, 320, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 369, 381, 399, 402, 0, 0, 0, 231, 401,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 397, 304, 305,
	306, 307, 271, 0, 248, 400, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 267, 273, 412, 275, 247,
	319, 269, 378, 282, 0, 405, 0, 406, 0, 0,
	0, 0, 311, 278, 279, 343, 283, 289, 332, 377,
	317, 337, 245, 368, 344, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 287, 0,
	328, 266, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 0, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	222, 223, 224, 225, 353, 0, 0, 384, 385, 386,
	408, 370, 0, 420, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 345, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 1940, 0, 0,
	0, 243, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 350, 366, 244, 341, 379,
	249, 348, 239, 315, 338, 0, 0, 236, 364, 347,
	297, 280, 281, 235, 0, 333, 259, 272, 256, 313,
	0, 363, 391, 255, 382, 0, 374, 238, 0, 373,
	312, 360, 365, 298, 292, 237, 362, 296, 291, 284,
	263, 407, 276, 324, 290, 325, 277, 302, 301, 303,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 0, 0, 0, 0, 0,
	349, 0, 0, 285, 0, 0, 0, 392, 0, 336,
	318, 0, 0, 0, 334, 288, 361, 326, 367, 351,
	375, 330, 327, 229, 352, 258, 299, 240, 242, 254,
	260, 262, 264, 265, 308, 309, 321, 340, 354, 355,
	356, 257, 250, 335, 251, 274, 252, 230, 342, 253,
	232, 322, 359, 0, 270, 331, 295, 233, 294, 323,
	358, 357, 241, 383, 389, 390, 395, 0, 396, 0,
	0, 0, 404, 409, 410, 411, 413, 414, 415, 416,
	0, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 388, 268, 226, 227, 423, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 387, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 421,
	320, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 369, 381, 399, 402,
	0, 0, 0, 231, 401, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 397, 304, 305, 306, 307, 271, 0, 248,
	400, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	267, 273, 412, 275, 247, 319, 269, 378, 282, 0,
	405, 0, 406, 0, 0, 0, 0, 311, 278, 279,
	343, 283, 289, 332, 377, 317, 337, 245, 368, 344,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 287, 0, 328, 266, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 0,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 222, 223, 224, 225, 0,
	0, 0, 384, 385, 386, 408, 370, 353, 420, 0,
	0, 1808, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 0, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	392, 0, 336, 318, 0, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 397, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 0, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 353, 0, 0, 384, 385, 386, 408, 370,
	0, 420, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 1523, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 345, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 350, 366, 244, 341, 379, 249, 348,
	239, 315, 338, 0, 0, 236, 364, 347, 297, 280,
	281, 235, 0, 333, 259, 272, 256, 313, 0, 363,
	391, 255, 382, 0, 374, 238, 0, 373, 312, 360,
	365, 298, 292, 237, 362, 296, 291, 284, 263, 407,
	276, 324, 290, 325, 277, 302, 301, 303, 0, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 285, 0, 0, 0, 392, 0, 336, 318, 0,
	0, 0, 334, 288, 361, 326, 367, 351, 375, 330,
	327, 229, 352, 258, 299, 240, 242, 254, 260, 262,
	264, 265, 308, 309, 321, 340, 354, 355, 356, 257,
	250, 335, 251, 274, 252, 230, 342, 253, 232, 322,
	359, 0, 270, 331, 295, 233, 294, 323, 358, 357,
	241, 383, 389, 390, 395, 0, 396, 0, 0, 0,
	404, 409, 410, 411, 413, 414, 415, 416, 0, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 0, 388,
	268, 226, 227, 423, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 387, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 421, 320, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 369, 381, 399, 402, 0, 0,
	0, 231, 401, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	397, 304, 305, 306, 307, 271, 0, 248, 400, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 267, 273,
	412, 275, 247, 319, 269, 378, 282, 0, 405, 0,
	406, 0, 0, 0, 0, 311, 278, 279, 343, 283,
	289, 332, 377, 317, 337, 245, 368, 344, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 287, 0, 328, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 353, 0, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	1147, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 0, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	392, 0, 336, 318, 0, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 1459, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 397, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 0, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 353, 0, 0, 384, 385, 386, 408, 370,
	0, 420, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 345, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 350, 366, 244, 341, 379, 249, 348,
	239, 315, 338, 0, 0, 236, 364, 347, 297, 280,
	281, 235, 0, 333, 259, 272, 256, 313, 0, 363,
	391, 255, 382, 0, 374, 238, 0, 373, 312, 360,
	365, 298, 292, 237, 362, 296, 291, 284, 263, 407,
	276, 324, 290, 325, 277, 302, 301, 303, 0, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 1170, 0, 0, 0, 349, 0,
	0, 285, 0, 0, 0, 392, 0, 336, 318, 0,
	0, 0, 334, 288, 361, 326, 367, 351, 375, 330,
	327, 229, 352, 258, 299, 240, 242, 254, 260, 262,
	264, 265, 308, 309, 321, 340, 354, 355, 356, 257,
	250, 335, 251, 274, 252, 230, 342, 253, 232, 322,
	359, 0, 270, 331, 295, 233, 294, 323, 358, 357,
	241, 383, 389, 390, 395, 0, 396, 0, 0, 0,
	404, 409, 410, 411, 413, 414, 415, 416, 0, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 0, 388,
	268, 226, 227, 423, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 387, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 421, 320, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 369, 381, 399, 402, 0, 0,
	0, 231, 401, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	397, 304, 305, 306, 307, 271, 0, 248, 400, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 267, 273,
	412, 275, 247, 319, 269, 378, 282, 0, 405, 0,
	406, 0, 0, 0, 0, 311, 278, 279, 343, 283,
	289, 332, 377, 317, 337, 245, 368, 344, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 287, 0, 328, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 353, 0, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 0, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	392, 0, 336, 318, 0, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 397, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	690, 0, 0, 0, 228, 0, 287, 0, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 353, 0, 0, 384, 385, 386, 408, 370,
	0, 420, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 345, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 350, 366, 244, 341, 379, 249, 348,
	239, 315, 338, 0, 0, 236, 364, 347, 297, 280,
	281, 235, 0, 333, 259, 272, 256, 313, 0, 363,
	391, 255, 382, 0, 374, 238, 0, 373, 312, 360,
	365, 298, 292, 237, 362, 296, 291, 284, 263, 407,
	276, 324, 290, 325, 277, 302, 301, 303, 0, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 285, 0, 0, 0, 392, 0, 336, 318, 0,
	0, 0, 334, 288, 361, 326, 367, 351, 375, 459,
	327, 229, 352, 258, 299, 240, 242, 254, 260, 262,
	264, 265, 308, 309, 321, 340, 354, 355, 356, 257,
	250, 335, 251, 274, 252, 230, 342, 253, 232, 322,
	359, 0, 270, 331, 295, 233, 294, 323, 358, 357,
	241, 383, 389, 390, 395, 0, 396, 0, 0, 0,
	404, 409, 410, 411, 413, 414, 415, 416, 0, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 0, 388,
	268, 226, 227, 423, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 387, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 421, 320, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 369, 381, 399, 402, 0, 0,
	0, 231, 401, 0, 0, 0, 0, 0, 0, 460,
	372, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	397, 304, 305, 306, 307, 271, 0, 248, 400, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 267, 273,
	412, 275, 247, 319, 269, 378, 282, 0, 405, 0,
	406, 0, 0, 0, 0, 311, 278, 279, 343, 283,
	289, 332, 377, 317, 337, 245, 368, 344, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 287, 0, 328, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 353, 0, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 0, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	392, 0, 336, 318, 0, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 397, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 0, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 353, 0, 0, 384, 385, 386, 408, 370,
	0, 420, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	261, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 345, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 350, 366, 244, 341, 379, 249, 348,
	239, 315, 338, 0, 0, 236, 364, 347, 297, 280,
	281, 235, 0, 333, 259, 272, 256, 313, 0, 363,
	391, 255, 382, 0, 374, 238, 0, 373, 312, 360,
	365, 298, 292, 237, 362, 296, 291, 284, 263, 407,
	276, 324, 290, 325, 277, 302, 301, 303, 0, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 285, 0, 0, 0, 392, 0, 336, 318, 0,
	0, 0, 334, 288, 361, 326, 367, 351, 375, 330,
	327, 229, 352, 258, 299, 240, 242, 254, 260, 262,
	264, 265, 308, 309, 321, 340, 354, 355, 356, 257,
	250, 335, 251, 274, 252, 230, 342, 253, 232, 322,
	359, 0, 270, 331, 295, 233, 294, 323, 358, 357,
	241, 383, 389, 390, 395, 0, 396, 0, 0, 0,
	404, 409, 410, 411, 413, 414, 415, 416, 0, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 0, 388,
	268, 226, 227, 423, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 387, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 421, 320, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 369, 381, 399, 402, 0, 0,
	0, 231, 401, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	397, 304, 305, 306, 307, 271, 0, 248, 400, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 267, 273,
	412, 275, 247, 319, 269, 378, 282, 0, 405, 0,
	406, 0, 0, 0, 0, 311, 278, 279, 343, 283,
	289, 332, 377, 317, 337, 245, 368, 344, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 287, 0, 328, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 353, 0, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 345, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 243, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 350, 366,
	244, 341, 379, 249, 348, 239, 315, 338, 0, 0,
	236, 364, 347, 297, 280, 281, 235, 0, 333, 259,
	272, 256, 313, 0, 363, 391, 255, 382, 0, 374,
	238, 0, 373, 312, 360, 365, 298, 292, 237, 362,
	296, 291, 284, 263, 407, 276, 324, 290, 325, 277,
	302, 301, 303, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 285, 0, 0, 0,
	392, 0, 336, 318, 0, 0, 0, 334, 288, 361,
	326, 367, 351, 375, 330, 327, 229, 352, 258, 299,
	240, 242, 254, 260, 262, 264, 265, 308, 309, 321,
	340, 354, 355, 356, 257, 250, 335, 251, 274, 252,
	230, 342, 253, 232, 322, 359, 0, 270, 331, 295,
	233, 294, 323, 358, 357, 241, 383, 389, 390, 395,
	0, 396, 0, 0, 0, 404, 409, 410, 411, 413,
	414, 415, 416, 0, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 0, 388, 268, 226, 227, 423, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 387, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 421, 320, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 369,
	381, 399, 402, 0, 0, 0, 231, 401, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 397, 304, 305, 306, 307,
	271, 0, 248, 400, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 267, 273, 412, 275, 247, 319, 269,
	378, 282, 0, 405, 0, 406, 0, 0, 0, 0,
	311, 278, 279, 343, 283, 289, 332, 377, 317, 337,
	245, 368, 344, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 287, 0, 328, 266,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 0, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 222, 223,
	224, 225, 353, 0, 0, 384, 385, 386, 408, 370,
	0, 420, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 345, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 243,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 350, 366, 244, 341, 379, 249, 348,
	239, 315, 338, 0, 0, 236, 364, 347, 297, 280,
	281, 235, 0, 333, 259, 272, 256, 313, 0, 363,
	391, 255, 382, 0, 374, 238, 0, 373, 312, 360,
	365, 298, 292, 237, 362, 296, 291, 284, 263, 407,
	276, 324, 290, 325, 277, 302, 301, 303, 0, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 349, 0,
	0, 285, 0, 0, 0, 392, 0, 336, 318, 0,
	0, 0, 334, 288, 361, 326, 367, 351, 375, 330,
	327, 229, 352, 258, 299, 240, 242, 500, 260, 262,
	264, 265, 308, 309, 321, 340, 354, 355, 356, 257,
	250, 335, 251, 274, 252, 230, 342, 253, 232, 322,
	359, 0, 270, 331, 295, 233, 294, 323, 358, 357,
	241, 383, 389, 390, 395, 0, 396, 0, 0, 0,
	404, 409, 410, 411, 413, 414, 415, 416, 0, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 0, 388,
	268, 226, 227, 423, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 387, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 421, 320, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 369, 381, 399, 402, 0, 0,
	0, 231, 401, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	397, 304, 305, 306, 307, 271, 0, 248, 400, 329,
	0, 0, 0, 0, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 267, 273,
	412, 275, 247, 319, 269, 378, 282, 0, 405, 156,
	406, 49, 148, 125, 0, 311, 278, 279, 343, 283,
	289, 332, 377, 317, 337, 245, 368, 344, 293, 149,
	821, 0, 0, 0, 0, 0, 141, 0, 0, 0,
	150, 0, 221, 0, 0, 0, 108, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 0, 0, 153, 0, 228,
	0, 287, 0, 328, 266, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 0, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 222, 223, 224, 225, 0, 0, 0,
	384, 385, 386, 408, 370, 0, 420, 0, 0, 0,
	734, 0, 0, 733, 809, 0, 0, 0, 0, 0,
	112, 113, 0, 114, 115, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 829, 833, 835, 837, 839, 840,
	842, 0, 846, 843, 844, 845, 0, 719, 824, 825,
	826, 827, 807, 808, 830, 695, 810, 0, 811, 812,
	813, 814, 815, 816, 817, 818, 819, 820, 822, 828,
	925, 926, 927, 924, 0, 0, 0, 832, 834, 836,
	838, 841, 697, 0, 0, 0, 0, 0, 124, 147,
	154, 0, 95, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	146, 140, 139, 0, 823, 0, 0, 55, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 718, 717, 0, 0, 0, 0, 0, 1354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 716,
	0, 1520, 0, 0, 0, 0, 0, 0, 693, 0,
	0, 0, 0, 0, 0, 142, 143, 144, 0, 696,
	727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1500,
	0, 151, 0, 723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 104,
	0, 0, 0, 145, 0, 105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 724, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 713, 0, 711, 715, 731, 0, 0, 0,
	712, 709, 708, 0, 714, 699, 700, 698, 701, 702,
	703, 704, 1518, 729, 0, 730, 0, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 725, 726, 48, 0,
	1518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1350, 0, 0, 0, 1347, 1520, 0, 0, 1349,
	1346, 1348, 1352, 1353, 0, 0, 0, 1351, 0, 0,
	0, 0, 0, 721, 1520, 0, 0, 0, 0, 0,
	0, 1493, 1492, 1495, 2937, 1491, 0, 50, 0, 1518,
	1504, 0, 0, 0, 1500, 0, 0, 0, 0, 0,
	0, 1508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1500, 0, 0, 0, 0, 0, 0, 831,
	126, 1497, 0, 1520, 0, 1499, 1501, 1503, 0, 1505,
	1506, 1507, 1509, 1510, 1511, 1513, 1514, 1515, 1516, 0,
	0, 0, 720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 479, 0, 478, 485, 475, 0, 0, 0,
	0, 1500, 0, 0, 0, 0, 482, 483, 0, 484,
	488, 0, 2720, 470, 107, 38, 0, 1519, 0, 0,
	0, 47, 0, 493, 0, 111, 0, 0, 0, 0,
	0, 0, 0, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1357, 1358, 1359, 1360, 1361, 1362,
	1355, 1356, 0, 497, 1517, 0, 499, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1496, 0, 0, 0, 1504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	1512, 0, 0, 0, 1508, 0, 1497, 1502, 0, 0,
	1499, 1501, 1503, 0, 1505, 1506, 1507, 1509, 1510, 1511,
	1513, 1514, 1515, 1516, 1497, 0, 0, 0, 1499, 1501,
	1503, 0, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1514,
	1515, 1516, 1504, 479, 0, 478, 485, 475, 0, 0,
	0, 0, 0, 1508, 0, 0, 0, 482, 483, 0,
	484, 488, 1519, 0, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 1497, 493, 0, 0, 1499, 1501, 1503,
	1519, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1514, 1515,
	1516, 471, 473, 472, 0, 0, 0, 0, 0, 1517,
	0, 477, 0, 0, 497, 0, 0, 499, 0, 0,
	0, 0, 498, 481, 0, 0, 1496, 1517, 0, 0,
	496, 0, 479, 0, 478, 485, 475, 474, 0, 1519,
	0, 465, 0, 0, 1496, 0, 482, 483, 0, 484,
	488, 0, 0, 470, 0, 1512, 0, 0, 0, 0,
	0, 0, 1502, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1512, 0, 0, 1517, 0, 0, 0,
	1502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1512, 0, 0, 0, 0, 0, 0, 1502,
	0, 0, 0, 0, 0, 0, 476, 480, 486, 0,
	487, 489, 0, 0, 490, 491, 492, 0, 0, 494,
	495, 0, 471, 473, 472, 0, 0, 0, 0, 0,
	0, 0, 477, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 481, 0, 0, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 0, 0, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 473, 472, 0, 0, 0, 0, 0, 0,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 481, 0, 0, 0, 0, 0, 0,
	496, 0, 0, 0, 0, 0, 0, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 476, 480, 486,
	0, 487, 489, 0, 0, 490, 491, 492, 0, 0,
	494, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 476, 480, 486, 0,
	487, 489, 0, 0, 490, 491, 492, 0, 0, 494,
	495,
}

var yyPact = [...]int{
	386, -1000, -1000, -1000, -312, 10181, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33836, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 33836, -308, 33311,
	33311, -1000, -1000, 1880, -1000, 32786, 11250, 33836, 268, 253,
	33836, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 527, -1000, 32261, -1000, -1000,
	-1000, -1000, -1000, -1000, 448, 35292, 34361, 8070, -267, -1000,
	2659, -124, 721, 725, 730, 730, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 10824, 598, 31736, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 34738, 171, 598, 13875,
	-9, -10, 2659, 302, 139, -1000, 821, 34779, 138, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	8070, 8070, 10181, -317, 10181, 8070, 33836, 33836, -1000, -1000,
	-1000, -1000, 448, 35292, 8070, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -10, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2837, -1000, 1168,
	-1000, -1000, -1000, -1000, 2199, 1163, 1814, 418, 33836, -1000,
	1158, 418, -1000, -1000, -1000, 2659, 2659, -1000, 33836, 33836,
	42, 1299, -1000, 297, 284, 295, 1157, -1000, -1000, -1000,
	-1000, -1000, 2569, -1000, 33836, 33836, 2213, 33836, -1000, 1621,
	388, 35443, 2388, 1105, 571, 2229, -1000, -1000, 2198, -1000,
	169, 126, 164, 495, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 170, -1000, 2459, -1000, -1000, 156, -1000, -1000, 142,
	-1000, -1000, -1000, -12, -1000, -1000, -1000, -1000, -1000, -1000,
	-116, -1000, -1000, 757, 1954, 8070, -1000, 1716, -1000, 3566,
	-1000, -1000, -1000, -1000, 5435, 9645, 9645, 9645, 9645, -1000,
	-1000, 2057, 8070, 2194, 2193, -1000, -1000, -1000, -1000, -1000,
	1152, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1812, 9120, -1000, 2192, 2191, 2188, 2173,
	2171, 2169, 2167, 2165, 2164, 2162, 2157, 2156, 2151, 2150,
	1963, 10714, 2148, 1802, 1800, 2147, 2146, 2144, 1799, 1963,
	1963, 2143, 2142, 2141, 2139, 2138, 2136, 2128, 2124, 2121,
	2119, 2116, 2115, 2113, 2098, 2094, 2093, 2091, 2087, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1013, -1000, 2080, 2364, 2484, 1939, 2538, 2470,
	2468, 2452, 2448, 1646, -1000, -1000, -1000, -122, -1000, -1000,
	688, -1000, 671, -1000, 33836, 33836, 33836, 447, 447, 447,
	447, 447, 497, 447, 524, 514, 503, 447, -1000, -1000,
	-1000, -1000, -1000, -1000, 621, -1000, -1000, -1000, -1000, 1044,
	33836, -1000, 2014, 1273, 2474, 408, 396, 393, 1273, 321,
	-1000, 1325, 1325, 1325, 1325, 1273, 344, 404, 2484, 2484,
	-26, 1325, -45, 1273, 1273, -45, 1273, 1273, 1273, 147,
	-305, -1000, -1000, -1000, 1325, 1325, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2451, 2447, 448, 33836, 97, 33836, 448,
	448, 472, 1621, 381, 379, 1058, 1319, -1000, 1264, 33836,
	33836, 33836, 33836, 1264, 1264, 18078, 17553, -1000, 33836, -1000,
	2484, 1939, -1000, 1927, 2335, 1926, 1939, 448, 448, 448,
	448, 448, 448, 448, 448, 33836, 33836, 31211, 448, 7010,
	7010, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	10181, 1596, 1647, 134, -85, -315, 193, -1000, -1000, 33836,
	2325, 123, -1000, -1000, -1000, 1973, -1000, 2012, 2012, 2012,
	2012, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2034, 2079, -1000, -1000, 2011, 2011, 2011, 1973, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2028, 2028, 2029, 2028, 33836, 8070, 33836,
	2376, 293, 2078, -1000, 33836, 292, 2484, 2364, 2484, -1000,
	-1000, 1141, 1640, 1797, -1000, -1000, 297, 1234, -1000, 727,
	-1000, -1000, -1000, -1000, 33836, 279, -1000, -1000, 1785, 2076,
	-1000, 422, 978, 1061, -1000, 158, 35522, 27003, 1621, 27003,
	33836, -1000, -1000, -1000, -1000, -1000, -1000, -14, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 141, -1000, 8070, 8070, 8070, 8070, 8070, -1000, 506,
	8595, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9645, 9645,
	9645, 9645, 9645, 9645, 9645, 9645, 9645, 9645, 9645, 9645,
	2056, 1365, 9645, 9645, 9645, 9645, 2335, 2595, 1057, 198,
	-1000, -1000, -1000, -1000, -1000, 1327, 1954, 8070, 8070, 33836,
	-1000, 34878, 8070, 8070, 3326, 8070, 2418, 8070, 8070, 8070,
	1920, 3859, 33836, 8070, -1000, 1919, 1914, -1000, -1000, 1436,
	8070, -1000, -1000, 8070, -1000, -1000, 8070, 9645, 8070, -1000,
	-1000, -1000, 221, 2418, 2418, 8070, 8070, 2418, 2418, 2418,
	1342, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 2418, 1913,
	2484, -267, 6485, -1000, -273, 2364, 8070, -1000, -1000, 8070,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1793, -97,
	715, 679, 694, -1000, 2412, -1000, 2075, 2069, 1138, 33836,
	1344, 33836, 27003, 33836, 1621, 33836, 33836, 447, 447, 447,
	33836, 472, -1000, 33836, 1044, 2411, 33836, 2547, 9645, 9645,
	30686, 1325, 1273, 1273, -1000, -1000, 33836, -1000, -1000, -1000,
	1325, 33836, 1325, 1325, 2547, 1325, -1000, -1000, -1000, 1273,
	1273, -1000, -1000, -1000, -1000, 1325, 1325, -1000, -1000, 2547,
	33836, -30, 2547, 2547, -44, -1000, -1000, -1000, 33836, 33836,
	447, 33836, -1000, 33836, 33836, -1000, -1000, 33836, 35021, 33836,
	30161, 2441, -1000, 27003, 33836, 24903, -1000, -1000, 413, 430,
	16503, 373, 27003, 4909, -1000, -1000, 1264, 1264, 1264, 1264,
	4909, 4909, 1178, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1040, -1000, 132, 2364, -1000, -1000, -1000, -1000, -1000, 33836,
	33836, 27003, 1621, 33836, 33836, 33836, 33836, -1000, 2066, -1000,
	2383, 33836, 1054, -1000, -1000, 13350, 1135, 1054, -1000, 1330,
	-1000, 8070, 10181, -290, 8070, 10181, 10181, 8070, 10181, -1000,
	8070, 112, -1000, -1000, -1000, -1000, 1636, -1000, 1635, -1000,
	-1000, -1000, 1792, 1792, -1000, 1634, -1000, -1000, -1000, -1000,
	1628, -1000, -1000, 1604, -1000, -1000, 1908, 757, -1000, 1791,
	2228, -268, -1000, 15452, 33836, 33836, -1000, -1000, -268, -1000,
	14926, 33836, 2364, -1000, 2364, 33836, -1000, 2472, -1000, 297,
	236, -1000, -1000, -1000, -1000, -1000, -1000, 1133, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1035, -1000, 33836,
	-1000, -1000, 158, 27003, 28053, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 168, -1000, -1000, 157, -1000, 489, 72, 1214,
	-1000, -1000, 103, 150, 546, 1954, -1000, 1350, 1350, 1362,
	-1000, 484, -1000, -1000, -1000, -1000, 2057, -1000, -1000, -1000,
	1237, 2247, -1000, 1326, 1326, 1183, 1183, 1183, 1183, 1183,
	1552, 1552, -1000, -1000, -1000, 5435, 2056, 9645, 9645, 9645,
	9645, 426, 426, 2125, 3006, -1000, 8070, 1320, -1000, 8070,
	1551, 1063, 1126, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1907, 1903, 1755, 2565, 1901, 8070, -1000,
	-1000, 1212, 1210, 1208, -1000, 1837, 7545, -1000, -1000, -1000,
	1900, 1120, 1896, -1000, -1000, -1000, 1889, 1207, 856, 1888,
	1400, 1884, 1008, 8070, 8070, 1185, 1184, 8070, 8070, 8070,
	8070, 1882, 8070, 8070, 8070, 8070, 8070, 8070, 8070, 8070,
	-13, -1000, -1000, 1176, -1000, 1954, -1000, 1781, -1000, 1043,
	1002, -1000, 1477, -1000, -1000, -1000, -1000, 701, 666, 669,
	33836, 776, 11775, 33836, 2014, 2378, 105, -1000, 847, -1000,
	72, -125, 797, 2210, 2559, 33836, 33836, 33836, 2409, 29636,
	-1000, 2051, 1166, -1000, -1000, 8070, -1000, -1000, 2208, 33836,
	33836, 2547, 2547, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	33836, 2547, 2547, 1273, 1325, -1000, -1000, 1325, -1000, -1000,
	1325, -1000, 1119, -1000, 33836, -1000, -1000, -1000, 2014, 994,
	-1000, 12300, 14400, 494, -1000, 486, 1249, 1249, 751, 1249,
	1249, 1249, 1249, 357, 355, 1249, 1249, 1249, 1249, 1249,
	1249, 1249, 1249, 1249, 1249, 1249, 1249, 1249, 1249, 2050,
	-1000, 104, 2417, 191, 186, 847, 201, 2642, 904, -1000,
	-1000, -1000, -1000, 20178, 20178, 15978, 20178, -1000, 1241, -1000,
	-1000, 485, -1000, -1000, 797, -1000, -1000, -1000, 2048, 1297,
	-1000, -1000, 10714, -1000, 4909, 4909, 4909, 4909, -1000, -1000,
	20703, 33836, -1000, -118, -1000, -91, -1000, 968, -1000, -1000,
	979, 797, 2227, 968, 968, -1000, 11775, 33836, -1000, 2547,
	7010, -1000, 24903, -1000, -1000, 29103, -1000, 28578, 2547, 1316,
	-1000, 10181, 1611, 130, -1000, 188, -318, 129, 1407, 128,
	1954, -1000, -1000, 1875, 1874, 1164, -1000, 1161, 1870, 1159,
	1150, -1000, -65, -1000, 2358, 803, -1000, 2044, -1000, 1148,
	2284, -1000, 954, -1000, 1295, 1124, -1000, 803, 1099, 2283,
	954, -1000, -1000, 1101, 41, -1000, -1000, 33836, 1785, 1075,
	28053, 907, -1000, 459, 1092, 1086, -1000, 27003, 131, 27003,
	-1000, 27003, -1000, -1000, 256, -1000, 33836, 2362, -1000, -1000,
	-1000, 1728, -333, -1000, -1000, -1000, -1000, -1000, 1074, -1000,
	426, 426, 2125, 2953, -1000, 9645, -1000, 9645, 2563, 1314,
	-1000, 8070, 1472, 3545, 1601, 19653, 33836, -1000, -1000, 8070,
	8070, -1000, 2554, -1000, -1000, -1000, -1000, 8070, 8070, 1694,
	-1000, 33836, -1000, -1000, -1000, -1000, 19653, -1000, 9645, -1000,
	8070, 996, 2549, -13, -13, 2527, 2475, 2460, 1072, -13,
	2446, 2429, 2425, 2394, 2375, 2361, 2346, 2327, -1000, 2035,
	6485, -1000, -65, 8070, 8070, 8070, 2296, -1000, -1000, -1000,
	-1000, -1000, 628, 133, 1867, 942, -1000, -1000, 33836, -1000,
	-1000, -1000, 1866, 924, -1000, -1000, -1000, 34780, 2012, 2012,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2034,
	-1000, -1000, 2011, 2011, 2011, 1973, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2028, 2028, 2029, 2028, -1000,
	2408, -1000, -18, 1249, 432, 27003, 375, -1000, 33836, 2223,
	276, 2315, 33836, 2026, 2025, 2020, 247, 34780, 33836, 922,
	-1000, 1085, 34779, -1000, 33836, 1954, -1000, 1621, -1000, 1273,
	-1000, -1000, 2547, 1078, -1000, -1000, 2547, 1273, 1273, 1325,
	33836, -1000, 2401, 35021, -1000, 2291, 33836, -1000, -1000, 34780,
	804, -1000, 623, 447, 33836, 1396, 623, 1395, 2018, -1000,
	-1000, -1000, 33836, 33836, -1000, 33836, 1391, 1379, -1000, 33836,
	33836, 1583, -1000, 1581, 1249, 1249, 1580, 1777, 1772, 1770,
	1249, 1249, 1567, 1767, 27528, 1560, 1559, 1556, 1671, 1766,
	629, 1645, 1619, 1550, 33836, 2016, 1703, -18, 1249, 180,
	33836, 1291, 432, 1474, 17028, 33836, 24903, 24903, 24903, 24903,
	-1000, 2262, 2257, -1000, 2251, 2245, 2292, 33836, 24903, 2014,
	-1000, 27528, -1000, -1000, -1000, 2335, 1059, 2677, 660, 8070,
	27003, 1765, 373, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 33836, 33836, 1859, -1000, 2544, -1000, 911, -1000,
	-1000, 1084, -1000, 2544, 1338, -314, 10181, 1333, 1308, -1000,
	8070, 10181, 8070, -292, 161, -294, -1000, -1000, -1000, 1762,
	-1000, -1000, -1000, 1555, -1000, 1553, 9, 29, 1378, -268,
	6485, 280, 33836, -268, 33836, 6485, -1000, 33836, 267, -268,
	33836, 1536, -1000, -1000, -1000, 2556, 27003, 1621, 1199, 26478,
	-1000, 155, -1000, 166, 405, 1758, -1000, 488, 87, -1000,
	1290, 1728, -1000, -1000, -1000, 9645, -1000, -1000, -1000, -1000,
	1954, 8070, 1857, -1000, 653, 653, 1856, -1000, 2012, 2012,
	-1000, 1973, 2011, 1973, 653, 653, 1855, -1000, 1724, 2269,
	-1000, 2134, 2059, 8070, -1000, 1853, 2934, 1004, -139, -13,
	-1000, -1000, -1000, -13, -13, -13, -13, -1000, -13, -13,
	-13, -13, -13, -13, -13, -13, 420, -1000, 9, 1954,
	1954, -1000, -1000, 2306, -1000, 1756, 1740, 776, 34780, 530,
	11775, 2317, 303, 1666, -1000, -1000, 25953, 397, -1000, -1000,
	-1000, 458, 151, 1514, 384, -1000, 33836, 194, 33836, -1000,
	-1000, -1000, -1000, -1000, 2315, -1000, 771, 237, 12825, 12825,
	12825, 240, 1276, -1000, 418, 902, 1081, 24903, 33836, -1000,
	24378, 1850, -1000, 797, 2547, -1000, 33836, -1000, 2547, 2547,
	1273, -1000, 303, -1000, -1000, -1000, 33836, 2291, 2200, -1000,
	33836, -1000, 33836, -1000, 33836, 33836, 447, 8070, -1000, -1000,
	-1000, 33836, -1000, 249, -1000, -1000, -1000, -1000, 19653, 19653,
	-1000, -1000, -1000, -1000, 1739, 1738, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 365, 33836,
	1050, -1000, 1284, 1666, 25953, 1278, 1264, 1736, 397, -1000,
	1734, -1000, 779, 33836, 33836, -1000, 908, -1000, 1270, 2203,
	2222, 2203, -1000, -1000, -1000, -1000, 2252, -1000, 2244, -1000,
	-1000, 908, -1000, -1000, -1000, -1000, -1000, 660, -1000, 2467,
	623, 623, 623, 1849, 907, 1846, -1000, -1000, -1000, -1000,
	-1000, 2541, 2537, 25428, 2541, -1000, -314, 1313, -1000, 1462,
	127, 1381, 33836, -1000, -1000, -1000, 1845, 1842, -277, 25,
	2536, 2531, 2576, -1000, 1841, 891, -268, -1000, -1000, 803,
	-1000, -1000, -1000, -268, -1000, 803, -1000, -1000, 1621, -1000,
	162, -1000, -1000, -1000, -1000, -1000, -1000, 54, -1000, 33836,
	-1000, 1728, 1727, 83, -1000, 1954, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 8070, -1000, -1000, -1000, 2046, -1000, -1000, 8070, 1835,
	1721, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2528, -1000, 2529, -277, -1000, -1000,
	-1000, -1000, -1000, -1000, 34780, -1000, 1324, -1000, -1000, 1717,
	71, -1000, -1000, -1000, 1710, 1709, 1507, -1000, -1000, 1549,
	1149, 84, -1000, -1000, -1000, -1000, -1000, -1000, 1474, 33836,
	2010, -1000, 1249, 1249, 1249, 33836, 1834, 828, -1000, -1000,
	-1000, -1000, 1823, 1790, 429, 1258, 1256, -1000, 1504, 20178,
	24903, 24378, 903, -1000, 1065, -1000, -1000, -1000, 2547, -1000,
	-1000, 2547, -1000, -1000, -1000, -1000, 2200, -1000, -1000, 1410,
	9645, -1000, -1000, 1705, 19128, 573, 606, 2007, -1000, 330,
	2573, -1000, 1373, 1371, -1000, 33836, -1000, 2006, -1000, 2005,
	2207, 261, 2002, 1999, 33836, 1917, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 382, 1033, -1000, 1703, 1701,
	-1000, 71, 1700, 4909, -1000, -1000, -1000, 33836, 779, 779,
	2528, 33836, 6485, -1000, -1000, 8070, 1993, -1000, 8070, -1000,
	-1000, -1000, -1000, -1000, 1988, 2382, -1000, -1000, -1000, -1000,
	-1000, -1000, 8070, 8070, -1000, -1000, 441, 10181, -296, 153,
	-1000, -1000, -1000, -279, 1693, -1000, -1000, 2526, 1688, 1672,
	33836, -1000, 803, 803, 797, -1000, -1000, -44, -1000, -1000,
	-1000, 1910, -1000, 1899, -13, -1000, 100, 8070, -279, -173,
	-1000, -1000, -1000, -1000, 255, -1000, -1000, 202, -1000, -1000,
	1519, 425, -1000, -1000, 779, 23328, 19653, 19128, 1687, -1000,
	35233, 12825, 141, 35233, 743, 1255, -1000, 1500, -1000, 1499,
	-1000, 2547, 903, 1065, -1000, -1000, 1190, -1000, -1000, -1000,
	-1000, 2125, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1495, 1985, -120, -1000, -1000,
	1984, 23328, 23328, 222, 222, 23328, 23328, 1983, 509, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2484, -1000,
	-1000, 1954, 33836, 1954, 23853, -1000, 2523, 2522, 1954, 757,
	-1000, -314, 33836, 33836, -282, 1494, -1000, 1684, 31, -1000,
	-1000, 770, -284, 1, 18, -1000, -1000, -1000, 1729, -1000,
	3102, -1000, -1000, -1000, 757, -282, 33836, 392, 1682, -1000,
	-1000, 197, -1000, -1000, 1031, -1000, 1973, 8070, -1000, -1000,
	-1000, 416, 35184, -1000, -1000, -1000, -44, 416, 433, 204,
	-1000, 1480, -1000, -1000, 2528, -1000, 1699, 8070, 1963, -168,
	23328, 1025, 1021, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1012, 1009, 23328, -1000, -1000, -1000, 325, -1000, 989, 975,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1952, -1000, -1000,
	2515, -1000, 1681, 453, 23, 18, -1000, 2514, 28, 2511,
	2510, -1000, -1000, 4384, -269, 2, 316, -1000, 2393, -1000,
	-1000, 52, -1000, -1000, -1000, 23328, 2371, 1712, 277, 2505,
	35233, -1000, -1000, 277, -1000, 244, -1000, 1253, -1000, 1453,
	-1000, 2484, -1000, 1573, -1000, 2221, -1000, 101, 970, -1000,
	-1000, -1000, -1000, 965, -1000, -1000, -1000, 22803, 33836, 1672,
	-1000, 1948, 1452, 25, 20, 2494, -1000, 1672, 2493, 1672,
	1672, 1354, -1000, -1000, -1000, -1000, -1000, 1679, -1000, 230,
	-1000, -1000, 2371, -1000, 2490, 318, -1000, -1000, -1000, -1000,
	1451, -1000, -1000, 509, -1000, 2219, 2217, 2551, -1000, -1000,
	-1000, -1000, 230, 230, 230, 230, 135, -1000, -1000, 945,
	-1000, -1000, 2387, 18603, 11, -1000, -1000, -1000, 1676, -1000,
	1672, -1000, -1000, 4384, -1000, -1000, 1249, 1557, 219, -1000,
	-1000, -1000, 22278, 290, 304, 298, -1000, 438, -1000, -1000,
	-1000, -1000, 2572, -1000, 2564, 590, 590, -1000, -1000, 33836,
	-1000, 33836, -1000, 936, -1000, -1000, -1000, 777, -1000, -1000,
	-1000, -1000, -1000, 1431, -1000, 33836, -1000, 33836, 288, 1424,
	9645, 1945, 9645, 1940, 294, 1933, -1000, -1000, -1000, 1454,
	334, -1000, -1000, 748, -1000, 1243, -1000, 21753, 33836, -1000,
	-1000, 930, 1931, 2473, -1000, 2801, 33836, 2265, 33836, 1930,
	1224, 9645, -1000, -1000, -1000, 33836, 5960, -1000, 752, -1000,
	-1000, 398, 296, -1000, 921, -1000, 898, 21228, 1423, 1421,
	-1000, -1000, 1954, 33836, 893, -1000, 33836, 286, -1000, -1000,
	-1000, 875, -1000, -1000, -1000, -1000, 398, 2270, -1000, 1416,
	-1000, -1000, 35166, 547, -1000, -1000, 35166, 281, -1000, 378,
	1722, -1000, -1000, 871, -1000, 33836, 587, 8070, -1000, 281,
	35233, -1000, 8070, 834, -1000, 35233, 833, -1000, -1000,
}

var yyPgo = [...]int{
	0, 137, 2591, 219, 143, 3142, 72, 213, 203, 199,
	212, 3140, 3139, 2410, 2379, 3123, 3122, 3121, 3120, 3119,
	3118, 3117, 3116, 3115, 3112, 3111, 3110, 3109, 3108, 3107,
	3106, 3105, 3104, 3102, 3100, 3099, 3098, 3097, 3096, 211,
	3095, 3093, 3092, 3091, 3090, 3089, 3088, 3086, 3085, 3084,
	3070, 3069, 3068, 3067, 3066, 3065, 3051, 3047, 3045, 3044,
	3043, 3042, 3041, 3040, 3039, 3033, 3032, 3031, 3030, 3029,
	196, 3027, 2352, 3014, 3012, 3004, 2998, 2990, 2988, 2987,
	188, 2986, 2985, 2984, 2983, 2981, 2980, 2979, 2978, 2977,
	2976, 2974, 2973, 2972, 2970, 2969, 2968, 2967, 181, 2966,
	141, 162, 2965, 2964, 2963, 2961, 2960, 205, 180, 49,
	2959, 38, 2956, 189, 2952, 106, 2951, 120, 2950, 2948,
	2947, 2944, 2943, 2942, 2941, 2938, 2937, 2934, 2933, 2932,
	73, 2919, 2916, 135, 161, 210, 1863, 216, 222, 155,
	146, 91, 2911, 2332, 2910, 129, 194, 131, 23, 2906,
	147, 2905, 128, 31, 26, 214, 108, 41, 133, 92,
	2904, 187, 69, 2903, 81, 2902, 2901, 227, 160, 2898,
	100, 2896, 2891, 2890, 2888, 169, 167, 2886, 2885, 114,
	2884, 2883, 90, 2882, 43, 166, 139, 164, 2881, 223,
	96, 101, 134, 2880, 2877, 76, 2876, 2875, 2874, 2873,
	148, 2872, 2866, 97, 68, 2865, 2864, 2862, 47, 2861,
	52, 2860, 55, 2859, 2857, 2855, 2854, 53, 2852, 2850,
	14, 20, 22, 2849, 19, 2848, 140, 2847, 2846, 2845,
	89, 2842, 2, 2841, 193, 45, 78, 122, 2839, 362,
	2838, 2837, 2836, 126, 2835, 1310, 2834, 2833, 2831, 2829,
	2827, 5, 2826, 190, 37, 2825, 77, 118, 116, 168,
	176, 2824, 2822, 2821, 95, 86, 71, 0, 2820, 125,
	2818, 2817, 2815, 217, 2814, 200, 174, 136, 117, 220,
	235, 2813, 2812, 64, 2811, 132, 75, 104, 8, 2810,
	354, 2806, 324, 149, 2805, 172, 2803, 201, 1, 121,
	2802, 2801, 35, 226, 2800, 2799, 2798, 93, 2795, 2794,
	94, 105, 2793, 2792, 2791, 34, 2790, 28, 32, 2789,
	84, 2788, 218, 2787, 163, 111, 152, 145, 124, 191,
	197, 60, 54, 2786, 1211, 119, 74, 25, 2785, 195,
	2776, 159, 102, 2770, 62, 2769, 208, 341, 179, 2767,
	151, 10, 36, 27, 2766, 12, 2765, 123, 165, 2764,
	2763, 16, 2762, 18, 2761, 2760, 2759, 2757, 9, 2756,
	2755, 2754, 4, 7, 2753, 3, 171, 2752, 2750, 2747,
	2746, 40, 110, 2745, 103, 153, 2743, 2742, 70, 2741,
	2736, 2729, 248, 2727, 2725, 2724, 2722, 2721, 2718, 2717,
	2714, 2713, 2712, 83, 44, 2711, 2710, 2709, 2708, 63,
	112, 2706, 2705, 2704, 2701, 30, 154, 2693, 21, 2692,
	24, 29, 33, 2691, 99, 2683, 15, 158, 2682, 2681,
	17, 2680, 2679, 11, 13, 2676, 2675, 87, 2674, 67,
	42, 138, 80, 2671, 65, 182, 115, 2670, 2669, 209,
	206, 170, 2662, 113, 204, 215, 2660, 185, 2659, 2653,
	2652, 2651, 2650, 2640, 863, 2638, 2637, 207, 46, 59,
	85, 2636, 2635, 2631, 66, 130, 88, 82, 183, 2629,
	157, 2624, 2616, 79, 2614, 2613, 2609, 2608, 2605, 156,
	2602, 2601, 2600, 2597, 202, 271, 2594,
}

//line mysql_sql.y:9482
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColposUnion() *tree.AlterColPos {
	v, _ := st.union.(*tree.AlterColPos)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 488, 492, 492, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 105, 486, 486, 486, 487, 487, 102, 122,
	121, 124, 124, 123, 123, 120, 120, 116, 119, 119,
	118, 118, 117, 112, 114, 114, 113, 115, 115, 103,
	91, 104, 436, 436, 435, 435, 434, 434, 389, 389,
	433, 433, 433, 432, 432, 432, 431, 431, 430, 430,
	429, 429, 427, 427, 428, 426, 425, 425, 425, 423,
	423, 423, 419, 419, 421, 420, 420, 422, 414, 414,
	417, 417, 415, 415, 415, 415, 418, 413, 413, 413,
	412, 412, 90, 90, 90, 336, 336, 89, 89, 350,
	350, 350, 350, 350, 348, 348, 348, 348, 348, 348,
	347, 347, 346, 346, 351, 351, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 81, 81, 81, 81,
	84, 84, 84, 85, 345, 345, 345, 82, 83, 83,
	335, 335, 340, 340, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 344, 344, 344,
	342, 342, 341, 341, 343, 343, 75, 75, 75, 78,
	77, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	76, 76, 76, 76, 76, 76, 71, 71, 71, 71,
	71, 70, 70, 72, 72, 332, 332, 331, 86, 86,
	87, 490, 490, 489, 491, 491, 491, 491, 88, 94,
	94, 94, 94, 94, 94, 94, 93, 93, 96, 96,
	95, 97, 80, 80, 80, 80, 80, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 460, 460, 460, 462,
	462, 271, 272, 493, 274, 270, 270, 270, 456, 456,
	457, 458, 459, 459, 459, 92, 11, 11, 11, 11,
	11, 11, 69, 74, 225, 225, 226, 226, 226, 226,
	226, 226, 226, 230, 230, 230, 229, 227, 227, 227,
	227, 227, 227, 228, 231, 231, 67, 73, 73, 73,
	473, 473, 68, 480, 480, 392, 392, 285, 285, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 396, 397, 281, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 46, 45, 45, 45,
	321, 321, 44, 494, 494, 260, 260, 56, 55, 48,
	57, 58, 59, 60, 61, 62, 43, 54, 54, 54,
	54, 54, 54, 54, 54, 65, 65, 408, 408, 496,
	496, 496, 63, 64, 391, 391, 391, 53, 52, 51,
	50, 49, 49, 42, 42, 41, 41, 47, 128, 129,
	278, 278, 278, 280, 280, 276, 495, 495, 363, 363,
	279, 279, 40, 40, 40, 40, 66, 277, 277, 259,
	275, 275, 275, 12, 12, 10, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 23, 24,
	26, 329, 329, 326, 25, 18, 17, 20, 16, 19,
	21, 22, 22, 9, 9, 9, 9, 13, 13, 14,
	140, 140, 190, 190, 468, 468, 464, 464, 465, 465,
	465, 466, 466, 467, 467, 98, 402, 402, 402, 402,
	402, 402, 8, 163, 163, 162, 162, 401, 401, 401,
	401, 401, 401, 333, 333, 445, 445, 445, 446, 161,
	161, 156, 156, 403, 403, 299, 447, 447, 411, 411,
	410, 410, 409, 409, 159, 159, 160, 160, 143, 143,
	108, 108, 416, 416, 416, 416, 424, 424, 388, 388,
	217, 217, 254, 254, 255, 255, 133, 133, 134, 134,
	134, 134, 134, 134, 453, 453, 455, 455, 454, 158,
	158, 154, 154, 155, 155, 155, 153, 153, 152, 151,
	151, 150, 148, 148, 148, 149, 149, 149, 136, 136,
	136, 135, 135, 135, 135, 135, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 137, 137,
	461, 461, 461, 393, 393, 393, 399, 399, 236, 236,
	237, 237, 235, 235, 138, 138, 139, 139, 139, 139,
	234, 234, 233, 141, 141, 147, 146, 146, 142, 142,
	142, 142, 244, 244, 243, 243, 243, 243, 101, 106,
	106, 107, 166, 166, 242, 241, 241, 241, 165, 165,
	164, 164, 157, 157, 145, 145, 145, 145, 240, 144,
	238, 485, 485, 484, 484, 483, 481, 481, 481, 482,
	482, 482, 482, 438, 438, 438, 438, 438, 265, 265,
	265, 269, 269, 268, 268, 268, 268, 268, 273, 7,
	7, 7, 7, 7, 30, 30, 30, 30, 30, 30,
	30, 30, 36, 174, 175, 37, 176, 176, 177, 177,
	178, 178, 179, 180, 181, 181, 181, 181, 35, 167,
	167, 168, 168, 169, 169, 170, 171, 171, 171, 173,
	172, 34, 27, 469, 472, 470, 470, 474, 474, 474,
	475, 475, 475, 476, 476, 28, 125, 130, 130, 127,
	132, 132, 132, 132, 132, 126, 471, 477, 477, 477,
	330, 330, 327, 328, 328, 325, 324, 324, 324, 479,
	479, 478, 478, 478, 266, 266, 29, 320, 320, 322,
	323, 323, 323, 314, 314, 314, 314, 33, 318, 318,
	319, 319, 319, 319, 319, 315, 315, 317, 317, 313,
	313, 313, 313, 313, 32, 131, 131, 312, 312, 310,
	310, 308, 308, 309, 309, 307, 307, 307, 311, 311,
	31, 31, 31, 110, 109, 109, 109, 257, 257, 256,
	256, 111, 38, 202, 202, 377, 377, 377, 377, 377,
	395, 395, 395, 378, 378, 378, 379, 379, 379, 380,
	380, 380, 380, 380, 394, 394, 352, 352, 353, 353,
	353, 356, 356, 369, 369, 370, 370, 368, 368, 375,
	375, 374, 374, 373, 373, 372, 372, 371, 371, 371,
	371, 366, 366, 365, 365, 354, 354, 354, 354, 354,
	355, 355, 355, 364, 364, 367, 367, 208, 208, 209,
	209, 209, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 443, 443, 444, 211, 211, 211, 215, 215, 215,
	215, 215, 215, 210, 210, 212, 212, 191, 191, 189,
	189, 182, 182, 183, 183, 184, 184, 184, 188, 188,
	187, 187, 185, 185, 186, 186, 186, 186, 338, 338,
	441, 441, 442, 442, 437, 437, 437, 440, 440, 440,
	440, 440, 439, 439, 192, 252, 252, 252, 267, 267,
	267, 267, 251, 251, 251, 207, 207, 206, 206, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 337, 337, 282, 282, 283, 283,
	224, 223, 223, 223, 223, 223, 221, 222, 220, 220,
	220, 220, 220, 219, 219, 218, 218, 218, 316, 316,
	216, 216, 214, 214, 214, 213, 213, 213, 376, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 250, 291, 291, 296, 296, 452, 452,
	451, 193, 193, 193, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 203, 203, 203, 361, 361, 361, 361,
	361, 362, 362, 362, 359, 359, 360, 360, 300, 301,
	301, 400, 400, 357, 357, 358, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 407, 407, 407, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 463, 463, 463, 448, 448, 448, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	450, 450, 450, 450, 450, 450, 450, 450, 450, 450,
	450, 450, 450, 450, 450, 450, 450, 248, 248, 248,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 302, 302, 303, 303, 404,
	404, 404, 404, 404, 404, 405, 405, 406, 406, 406,
	406, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	289, 245, 245, 245, 304, 297, 297, 298, 298, 292,
	292, 292, 292, 292, 292, 292, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 293, 293,
	295, 295, 306, 306, 306, 305, 305, 305, 305, 305,
	305, 305, 205, 205, 205, 205, 286, 286, 286, 286,
	286, 286, 286, 286, 286, 286, 286, 195, 195, 195,
	195, 199, 199, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 200, 200, 200,
	200, 198, 198, 198, 198, 198, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 99, 100, 100, 197, 253, 253, 381, 381,
	384, 384, 382, 382, 383, 385, 385, 385, 386, 386,
	386, 387, 387, 387, 390, 390, 258, 258, 258, 264,
	264, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 4, 6, 1, 1, 1, 2, 4, 6,
	1, 4, 1, 3, 3, 4, 4, 4, 4, 3,
	3, 2, 4, 4, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 2,
	2, 0, 1, 4, 2, 4, 1, 5, 3, 2,
	1, 2, 2, 4, 4, 5, 2, 1, 3, 4,
	4, 1, 2, 9, 7, 1, 3, 3, 1, 1,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 2, 4,
	3, 3, 1, 1, 1, 1, 1, 2, 3, 4,
	7, 2, 3, 3, 4, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	2, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 7, 4, 1, 3, 2, 2, 2, 1,
	3, 3, 4, 0, 1, 2, 1, 2, 2, 1,
	2, 3, 2, 3, 1, 1, 7, 7, 8, 8,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 2, 5, 5,
	0, 2, 7, 0, 1, 0, 1, 5, 5, 3,
	3, 2, 4, 4, 4, 4, 4, 1, 1, 1,
	3, 3, 1, 1, 1, 6, 8, 0, 1, 1,
	1, 1, 5, 5, 0, 1, 1, 3, 3, 3,
	4, 6, 7, 4, 4, 7, 8, 3, 3, 3,
	0, 2, 2, 0, 2, 2, 1, 1, 1, 1,
	0, 1, 4, 4, 5, 4, 3, 1, 3, 1,
	1, 3, 5, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	4, 1, 3, 1, 4, 6, 4, 4, 4, 3,
	6, 3, 5, 1, 1, 2, 2, 11, 8, 9,
	1, 3, 2, 4, 0, 2, 0, 1, 1, 1,
	1, 0, 1, 0, 1, 4, 2, 1, 5, 4,
	4, 2, 5, 0, 2, 1, 3, 2, 1, 5,
	4, 4, 2, 0, 5, 0, 1, 3, 3, 1,
	3, 1, 3, 1, 3, 4, 0, 1, 0, 1,
	1, 3, 1, 1, 0, 4, 1, 3, 2, 1,
	0, 8, 0, 4, 7, 4, 0, 2, 0, 2,
	0, 2, 0, 4, 1, 3, 1, 1, 4, 3,
	4, 5, 4, 5, 2, 3, 1, 3, 6, 0,
	3, 0, 1, 2, 4, 4, 0, 1, 3, 1,
	3, 3, 0, 1, 1, 0, 2, 2, 3, 3,
	3, 1, 3, 3, 3, 3, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 7, 7,
	1, 1, 1, 0, 1, 1, 1, 1, 0, 2,
	0, 3, 0, 2, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 4,
	4, 3, 2, 2, 2, 3, 2, 3, 4, 1,
	3, 4, 0, 2, 1, 1, 2, 2, 0, 1,
	2, 4, 1, 3, 1, 3, 2, 3, 1, 4,
	3, 0, 1, 1, 2, 5, 2, 2, 2, 0,
	2, 3, 3, 0, 1, 3, 1, 3, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 7, 1, 1, 7, 1, 3, 0, 1,
	1, 3, 1, 3, 0, 1, 1, 1, 12, 1,
	3, 0, 1, 1, 3, 1, 1, 2, 4, 1,
	1, 7, 7, 1, 4, 1, 1, 3, 4, 3,
	0, 1, 1, 0, 2, 7, 8, 0, 2, 6,
	0, 2, 2, 3, 3, 4, 1, 0, 2, 2,
	1, 3, 2, 1, 3, 2, 1, 3, 2, 0,
	1, 3, 4, 3, 1, 1, 4, 1, 3, 1,
	1, 1, 1, 0, 1, 1, 1, 11, 0, 2,
	3, 2, 3, 1, 1, 1, 3, 3, 4, 0,
	2, 2, 2, 2, 6, 0, 4, 1, 1, 0,
	3, 0, 1, 1, 2, 4, 4, 4, 0, 1,
	11, 9, 11, 2, 2, 4, 5, 1, 3, 0,
	3, 5, 10, 0, 2, 0, 3, 2, 4, 3,
	0, 2, 1, 0, 2, 3, 0, 2, 3, 0,
	3, 2, 4, 3, 0, 1, 0, 6, 0, 3,
	5, 0, 4, 0, 3, 1, 3, 4, 5, 0,
	3, 1, 3, 2, 3, 1, 2, 0, 4, 6,
	5, 0, 2, 0, 2, 4, 5, 4, 5, 1,
	5, 6, 5, 0, 3, 0, 1, 0, 1, 1,
	3, 2, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 5,
	4, 1, 3, 3, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 1, 1, 1, 1,
	7, 7, 2, 1, 7, 7, 8, 5, 0, 1,
	0, 1, 1, 1, 1, 3, 3, 1, 1, 1,
	1, 1, 0, 1, 3, 1, 3, 5, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 2, 1,
	2, 2, 1, 1, 2, 2, 2, 2, 2, 1,
	5, 6, 4, 1, 1, 2, 0, 1, 1, 2,
	5, 0, 1, 1, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 2, 2, 0, 3,
	0, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 3, 5, 2, 2, 2,
	2, 1, 1, 2, 5, 6, 6, 6, 1, 1,
	1, 1, 1, 4, 0, 2, 0, 1, 1, 2,
	4, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	2, 2, 2, 0, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 5, 0, 1, 3, 0,
	1, 0, 2, 0, 1, 6, 8, 6, 5, 5,
	6, 6, 6, 6, 5, 6, 6, 6, 6, 6,
	6, 6, 6, 1, 1, 1, 4, 4, 6, 8,
	6, 4, 5, 4, 4, 4, 3, 4, 6, 6,
	7, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 8,
	4, 2, 3, 2, 4, 2, 2, 4, 6, 2,
	2, 4, 6, 4, 2, 0, 1, 2, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 1, 3, 0, 1, 1, 3, 3,
	3, 3, 3, 2, 1, 1, 3, 4, 3, 4,
	3, 4, 3, 4, 3, 4, 1, 3, 4, 4,
	5, 4, 5, 3, 4, 5, 6, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 1, 2, 3, 5, 1, 1, 3, 0, 1,
	0, 3, 0, 3, 3, 0, 3, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 1, 2, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -488, -492, -2, -5, 553, -1, -4, -100, -75,
	-7, -102, -103, -8, -98, -9, -10, -12, -79, -93,
	-95, -97, -96, -39, -11, -92, -70, -71, -81, -86,
	-89, -90, -91, -104, -99, -101, -133, -105, 546, -76,
	-77, -78, -30, -29, -28, -27, -125, 552, 409, 12,
	458, -13, -14, -453, -15, 238, -270, -271, -272, -274,
	-493, -40, -41, -42, -49, -50, -51, -52, -53, -63,
	-64, -65, -43, -44, -45, -48, -46, -56, -55, -57,
	-58, -59, -60, -61, -62, -47, -128, -129, -66, -68,
	-67, -73, -69, -74, -127, 213, -72, 62, -82, -83,
	-84, -85, -87, -88, 340, 346, 399, 545, 47, -134,
	-136, 556, 141, 142, 144, 145, -31, -32, -33, -34,
	-35, -36, -38, -37, 209, 14, 491, -16, -19, -17,
	-20, -18, -25, -26, -24, -21, -23, -126, -22, 233,
	232, 37, 296, 297, 298, 344, 231, 210, 13, 30,
	41, 322, -135, 68, 211, -137, 10, 558, -6, -3,
	-2, -112, -116, -120, -123, -124, -121, -122, -4, -100,
	99, 223, 547, -267, 336, 548, 550, 549, 71, 79,
	-261, -263, 340, 346, 545, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 461, 532, 533, 534, 535, 320, 321, 488, 250,
	274, 370, 277, 284, 141, 160, 154, 182, 174, 149,
	254, 289, 255, 78, 144, 444, 89, 421, 396, 147,
	269, 271, 273, 276, 256, 170, 165, 268, 252, 163,
	257, 39, 258, 187, 259, 260, 493, 417, 319, 423,
	281, 394, 164, 418, 272, 420, 189, 193, 435, 436,
	158, 159, 425, 438, 186, 230, 42, 490, 242, 439,
	191, 185, 181, 447, 285, 283, 184, 157, 180, 253,
	51, 195, 194, 196, 390, 391, 392, 393, 261, 262,
	334, 434, 177, 166, 324, 150, 22, 442, 237, 422,
	347, 263, 278, 286, 190, 192, 244, 249, 492, 398,
	248, 282, 440, 162, 241, 270, 236, 443, 151, 349,
	264, 145, 275, 437, 446, 50, 362, 156, 148, 227,
	142, 246, 251, 11, 265, 266, 267, 288, 287, 279,
	178, 243, 183, 168, 155, 179, 143, 245, 445, 363,
	543, 322, 379, 176, 173, 247, 220, 441, 424, 146,
	383, 364, 171, 290, 539, 540, 541, 335, 318, 291,
	292, 169, 234, 415, 416, 293, 295, 389, 311, 365,
	397, 371, 366, 202, 299, 427, 429, 188, 542, 300,
	301, 302, 419, 303, 304, 305, 306, -343, -341, -267,
	545, 346, 340, 322, -176, -267, 557, -143, 38, -189,
	-267, -143, -72, -14, -13, -135, -136, -189, 217, -275,
	23, 394, -80, 395, 213, 68, -267, -9, -8, -98,
	-70, -133, -273, -267, 296, 296, -273, 217, -267, 248,
	378, -392, 223, -347, -320, 249, -346, -322, -349, -323,
	31, 209, 211, 210, 245, 14, 344, 219, 12, 10,
	345, 231, 24, 25, 27, 13, 346, 348, 28, 349,
	352, 353, 354, 41, 357, 358, 238, 71, 79, 74,
	256, -175, -267, -298, -292, 96, 239, -294, -287, -288,
	-290, -433, -427, -286, 68, 123, 124, 131, 97, -289,
	-376, 35, 99, 498, 459, -246, -247, -248, -249, -250,
	-267, -428, -426, 74, 80, 83, 86, 87, 85, 84,
	167, 82, 75, 135, 136, -136, 71, -448, 506, -262,
	527, 532, 533, 534, 535, 526, 47, -398, -406, 216,
	-404, 134, 172, 234, 168, 12, 129, 389, 169, 503,
	523, 461, 507, 530, 500, 501, 495, 496, 497, 499,
	508, 510, 522, -407, 518, 528, 529, 516, 531, 73,
	72, 521, 520, 509, 504, 505, 511, 494, 502, 512,
	513, 519, 524, 525, 328, 89, 329, 330, 451, 323,
	331, 223, 394, 56, 332, 333, 334, 335, 336, 458,
	337, 57, 338, 327, 238, 379, 339, 171, 188, 463,
	462, 464, 455, 452, 450, 453, 454, 456, 457, 514,
	515, 517, -106, -107, 537, -152, -153, -239, 19, 6,
	7, 8, 9, -486, 396, 492, 146, 143, -334, 146,
	95, 151, 150, -334, 299, 244, 341, 220, 320, 379,
	303, 248, -314, -312, -394, 293, 289, 218, 228, 227,
	90, 451, 216, 355, -464, -465, 206, 207, 208, -455,
	484, -454, -267, 330, 26, 217, 341, 244, 429, 427,
	428, 430, 431, 432, 433, -54, -408, -391, 424, 423,
	-279, 416, 422, 414, 426, 417, 321, 305, 304, 209,
	554, 485, -258, 365, 397, 448, 449, 342, 398, 435,
	437, 418, 89, 175, 172, 220, 217, 320, 451, 379,
	303, -464, 248, 378, 40, -340, 389, -339, -341, 435,
	436, 437, 447, 72, 73, 434, -258, 89, 415, 415,
	-153, -239, -152, -134, -136, -101, -453, 218, 320, 379,
	248, 219, 217, 220, 451, 296, 341, 244, 303, -393,
	-461, 31, -399, 203, 204, 205, 32, 33, -1, 103,
	558, -292, -292, -6, 559, -6, -292, -267, -267, 138,
	-195, -199, -196, -198, -197, -201, -200, 172, 173, 134,
	176, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 30, 188, 234, 168, 169, 170, 171, 189, 154,
	174, 489, 197, 155, 198, 156, 199, 157, 200, 158,
	159, 201, 160, 163, 164, 165, 162, 137, 68, 137,
	74, -159, 240, -189, 137, -159, -153, -152, -153, -189,
	-251, -267, 396, 106, -80, -80, 395, -456, -457, -458,
	-460, 213, 395, 394, 137, 15, -273, -273, 66, -189,
	-322, 248, -347, -320, 35, 65, 138, 221, 138, 65,
	68, 342, 320, 379, 343, 451, 217, 355, 220, 248,
	356, 320, 379, 217, 220, 451, 248, 320, 217, 220,
	379, 248, 356, 414, 415, 220, 26, 347, 350, 351,
	415, -412, 447, 138, 95, 92, 93, 94, -292, 113,
	-305, 106, 107, 108, 109, 110, 111, 112, 120, 119,
	130, 123, 124, 125, 126, 127, 128, 129, 121, 122,
	116, 96, 114, 118, 115, 98, -136, -292, -298, 47,
	-290, -290, -290, -290, -376, -296, -292, 68, 68, 137,
	74, -292, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, -405, 68, 68, -302, -303, 68,
	68, -286, -251, 68, 74, 74, 68, 68, 68, 74,
	-303, -303, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	-153, 138, 68, -108, 38, -155, 21, -137, -136, 20,
	31, 32, 31, 32, 31, 32, 31, 32, 80, 440,
	491, 149, 150, 151, -174, -267, -176, -167, -267, -310,
	223, -310, -310, -310, -310, 219, -310, 217, 217, 217,
	-310, -466, 153, 138, -455, -158, 68, -278, 114, 118,
	23, 246, 246, 246, -278, 283, -494, -495, 15, 116,
	-276, -495, -276, -276, -278, -496, 219, 425, 42, 247,
	246, -154, -155, -154, 419, 415, -363, 420, 421, -280,
	-495, -279, -278, -278, -279, -278, -278, -278, 217, 220,
	451, 303, 555, -494, -494, 30, 30, -392, -189, -392,
	485, -259, -267, -392, -392, -467, 222, -322, 248, 248,
	138, 106, 23, -342, 106, 117, -341, -341, -341, -341,
	-342, -342, -210, 40, -266, 134, -267, 74, -210, 40,
	-490, -489, -189, -154, -137, -136, 69, 69, 69, -392,
	-392, -392, -392, -392, -392, -392, -392, -273, -167, -176,
	223, -392, -138, -139, 125, -292, -267, -138, -3, -114,
	-113, 100, 101, 103, 548, 336, 547, 551, 545, -341,
	40, -387, 363, 362, -381, -383, 68, -382, 68, -382,
	-382, -382, 68, 68, -384, 68, -384, -384, -381, -385,
	68, -385, -386, 68, -385, -267, -297, -298, -267, 38,
	-401, 47, -133, 68, 30, 68, -267, -402, 47, -133,
	68, 30, -154, -108, -155, 137, 80, 74, -80, 69,
	138, -459, 86, 87, -462, 186, 178, -267, -94, 74,
	-7, -8, -9, -10, -39, -70, -133, -429, -427, 68,
	31, 388, 65, 15, -348, 217, 451, 341, 244, 220,
	320, -346, -329, -326, -324, -266, -322, -325, -324, -351,
	-251, 415, -109, 400, 295, -292, -292, -292, -292, -292,
	85, 96, 318, 86, 87, -287, -306, 31, 291, 292,
	-288, -288, -288, -288, -288, -288, -288, -288, -288, -288,
	-288, -288, -295, -304, -376, 68, 116, 114, 118, 115,
	98, -290, -290, -288, -288, 69, 138, -452, -451, 100,
	-292, -292, -267, -449, -450, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 332, 327, 333, 331,
	323, 339, 334, 335, 171, 482, 483, 476, 477, 478,
	479, 480, 481, -297, -297, -292, -449, -297, -245, 32,
	31, -298, -298, -298, 69, -292, -463, 316, 315, 317,
	-156, -267, -297, 69, 69, 69, 80, -298, -298, -297,
	-288, -297, -450, -245, -245, -298, -298, -245, -245, -245,
	-245, 125, -245, -245, -245, -245, -245, -245, -245, -245,
	69, -154, -107, -410, -409, -292, 40, 538, -108, -292,
	-151, -150, -292, -487, 74, 441, 442, 147, 150, 149,
	34, 68, 68, 137, -189, 96, -469, -267, -330, -327,
	-324, -267, -320, -267, -267, -310, -310, -310, -189, -467,
	-454, 34, -157, -267, -235, 16, -290, -290, -324, 248,
	-494, -278, -278, -260, -259, -280, -275, -280, -280, -235,
	-495, -278, -278, -280, -276, -235, -267, 415, -235, -235,
	-363, -277, -267, -277, -310, -259, -260, -260, -189, -225,
	-226, 214, 211, 210, -232, 212, 360, 250, -311, 254,
	78, 255, 396, 256, 219, 258, 259, 260, 230, 261,
	262, 263, 389, 264, 265, 266, 267, 343, 6, 306,
	40, -469, -469, 30, 30, -330, -267, -146, -141, -145,
	-142, -147, -238, -240, -144, 68, -189, -136, -267, 31,
	388, -345, 388, 31, -320, -339, -335, 74, 389, -325,
	-344, 65, 134, -409, -342, -342, -342, -342, -344, -344,
	133, 138, -491, 440, 441, 206, -108, -191, -189, -469,
	-329, -320, -267, -191, -191, -267, 68, 35, -267, -234,
	138, -233, 15, -268, -267, 34, 74, 137, -234, -115,
	-113, 102, -292, -6, 547, -292, -6, -6, -292, -6,
	-292, -390, 364, 80, 80, -253, 74, -253, 80, 80,
	80, 69, 74, -333, 65, -403, -299, -447, 537, -161,
	69, -156, -445, -446, -156, -160, -267, -403, -161, 69,
	-445, -108, -108, -267, 23, -80, -457, 137, 138, -157,
	-348, -328, -325, -350, 125, -267, -336, 138, 491, 560,
	72, 221, -479, -478, 380, 69, 138, -413, 222, 458,
	74, 561, 202, 85, 318, 86, 87, -376, -298, -295,
	-290, -290, -288, -288, -293, 235, -293, 95, -292, -291,
	-451, 102, -292, 34, 138, 66, 137, 69, 69, 15,
	15, 69, -292, 69, 69, 69, 69, 15, 15, -292,
	69, 137, 69, 69, 69, 69, 66, 69, 138, 69,
	138, -298, -292, 69, 69, -292, -292, -292, -298, 69,
	-292, -292, -292, -292, -292, -292, -292, -292, -358, 410,
	138, 69, 74, 138, 22, 138, -148, 36, 37, 148,
	151, 151, 150, -175, -177, -178, -179, -180, -181, 116,
	139, 140, -168, -169, -170, -171, -195, -251, 173, 176,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 234, 168, 169, 170, 171, 189, 154, 174, 155,
	156, 157, 158, 159, 160, 163, 164, 165, 162, -267,
	-158, 35, -472, 367, -480, 138, 40, -478, 451, -313,
	66, -131, 15, -189, -189, -189, -202, 34, 15, -140,
	-190, -267, 68, 69, 138, -292, -321, 66, -267, -260,
	-235, -235, -189, -267, -235, -235, -278, -280, -280, -276,
	137, -259, -158, 138, -188, -192, 225, -185, -187, -251,
	-283, -186, 228, -442, 226, 224, 90, 229, 280, 91,
	219, -227, 219, 91, -267, 225, 229, 224, -228, 219,
	221, -264, 106, -264, -258, 133, -264, -264, -264, -264,
	257, 257, -264, -264, -264, -264, -264, -264, -264, -264,
	-264, -264, -264, -264, -264, -264, 68, -473, 367, 30,
	326, 326, -480, -132, 320, 30, -241, -242, -243, -244,
	54, 58, 60, 55, 56, 57, 61, 30, 138, -265,
	-269, 34, -267, 74, -265, -136, -141, -146, -265, 68,
	221, 68, 106, -344, -344, -344, -344, 40, -266, -489,
	447, 441, 138, 65, -168, -176, -235, -139, -141, -267,
	74, -267, 125, -235, 103, -6, 101, -119, -118, -117,
	104, 545, 551, 103, 103, 103, 69, 69, 69, 138,
	69, 69, 69, 138, 69, 138, -416, 420, 39, 138,
	68, 69, 138, 47, 138, 106, 69, 138, 69, 47,
	137, 396, -267, -427, 69, -350, 138, 221, 137, 137,
	-326, 346, -266, -328, 20, 491, -251, 38, -257, -256,
	74, 561, 69, -293, -293, 95, -290, -287, 69, 103,
	-292, 101, -193, -195, 362, 363, -194, -200, 134, 172,
	234, 171, 170, 168, 362, 363, -210, -267, -292, -292,
	69, -292, -292, 15, -267, -210, -288, -292, -153, 69,
	-357, -358, -357, 69, 69, 69, 69, -357, 69, 69,
	69, 69, 69, 69, 69, 69, 68, -409, -416, -292,
	-292, -150, -149, 43, 151, 354, 69, 138, -251, 69,
	138, -195, 34, -475, 422, 369, -264, -285, -284, 322,
	41, -396, 389, 375, 376, -327, 248, -267, 65, 310,
	311, 312, 313, -308, -309, -307, -311, -469, 68, 68,
	68, -377, 300, -195, -189, -140, -267, 15, 138, -468,
	137, -1, -267, -320, -278, -235, -495, -235, -278, -278,
	-280, -267, 34, -226, -230, 44, 46, -192, -195, -186,
	-441, -442, -310, -267, 91, -441, 91, 68, -267, -267,
	-267, 91, 91, -267, -229, -277, 80, 80, -264, -264,
	80, 74, 74, 74, -264, -264, 80, 74, -269, 80,
	80, 80, 80, 40, 74, -215, 40, 268, 272, 269,
	270, 271, 80, 40, 80, 40, 80, 40, -267, 68,
	-443, -444, 74, -475, -264, 326, -341, 106, -285, -130,
	78, 31, -162, 214, 211, -469, -332, -331, -251, -145,
	-145, -145, -145, 54, 54, 54, 59, 54, 59, 54,
	-243, -332, -147, -158, -269, 69, -485, -484, -483, -481,
	62, 222, 63, -297, -328, -281, 74, -335, -189, -189,
	69, -237, 17, 137, -237, 99, -6, -115, -117, -292,
	-6, -292, 547, 336, 548, 74, 80, 80, -424, 406,
	401, 403, 91, -299, -411, -410, 47, -133, -156, -403,
	-446, -409, -267, 47, -133, -403, -267, 80, 15, -325,
	-320, 125, 125, -267, 347, -336, 74, 368, 74, 217,
	562, 138, 106, -257, -287, -292, 69, -203, 159, 158,
	-203, 69, -382, -382, -381, -384, -381, -203, -203, 69,
	69, 23, 69, 69, 69, -292, 69, 69, 138, -400,
	460, -357, -357, -357, -357, -357, -357, -357, -357, -357,
	-357, -357, -357, -357, -301, -300, 240, -424, 44, 45,
	74, 74, -179, -195, 215, -170, 40, -133, -476, 78,
	-470, 74, -267, -477, 78, 370, 136, 324, 40, 371,
	372, 386, 319, 80, 80, 377, -471, -267, -163, 320,
	-189, -307, -258, 133, 259, 303, -182, -183, -184, -192,
	-185, -187, -182, -182, -378, 302, 20, 80, 124, -159,
	66, 137, -141, -190, -267, 125, 69, -235, -267, -235,
	-235, -278, -133, -251, -230, -207, -206, -204, 85, 96,
	40, 360, -205, 78, 133, 273, 251, 274, -224, -282,
	65, 366, 224, 90, 91, 348, -283, -439, -267, -437,
	-439, -267, -437, -437, -310, -292, -267, -231, 308, 309,
	-210, -210, 74, 74, -211, 251, -191, 69, 138, 106,
	-476, -470, 106, -342, 74, -477, 74, 138, -162, -162,
	-235, 138, 106, -165, -164, 65, 66, -166, 65, -164,
	54, 54, -235, -483, -482, 23, -442, -442, -442, 69,
	69, -236, 18, 20, 125, -236, 103, 101, 103, 103,
	-267, 69, 69, -388, 539, -420, -422, 401, 20, 20,
	13, 69, -403, -403, -320, -336, 389, -189, -256, 74,
	562, -292, 69, -292, 69, 74, -153, 20, -388, -172,
	-195, -286, 74, -474, 380, 74, 74, 80, 40, 80,
	136, 373, -397, -130, -162, 68, -264, -264, -264, -267,
	69, 138, 69, 69, -379, 239, 80, 124, 80, 124,
	80, -265, -141, -267, -235, -468, 137, -235, -235, -204,
	85, -288, 74, -212, -266, 134, -213, 40, 272, 268,
	-214, 40, 252, 253, -216, 68, 280, 13, 91, 91,
	-189, 68, 68, 66, 290, 68, 68, -439, 69, 252,
	253, 69, -444, 74, -474, 74, -344, -469, -153, -331,
	-409, -292, 68, -292, 68, 54, 19, 17, -292, -298,
	223, -6, 548, 336, -217, 540, 74, 20, 74, -418,
	74, -332, -111, -414, -363, 69, 69, -357, -360, -359,
	-362, 407, 282, 413, -298, -217, 490, 20, 491, 323,
	40, 80, 40, 374, -315, -317, -251, 68, -210, -212,
	74, -208, -209, -232, -184, -110, -109, -208, -380, 142,
	80, 124, 80, 80, -235, -235, 80, 68, -404, -316,
	68, -315, -315, -440, 310, 311, 312, 314, 313, -440,
	-315, -315, 68, -338, -337, 281, 96, -154, -157, -438,
	-267, 224, 20, 20, -267, -267, -254, 541, 80, 74,
	403, -389, 542, -423, 406, -417, -415, 401, 402, 403,
	404, 69, -361, 98, 373, 377, -292, -254, -173, -267,
	74, 368, 74, 323, 69, 138, -381, -292, -352, 240,
	138, -232, -111, -352, -395, 150, 301, 491, 80, 124,
	80, -153, 69, -292, -302, -219, -218, 487, -315, 69,
	69, 69, 69, -315, 281, 69, 69, 138, 68, 20,
	74, -425, 222, -421, -422, 405, -415, 20, 403, 20,
	20, -361, 537, 411, 412, 411, 412, 34, 389, -318,
	-317, -148, 69, -353, 289, 20, -232, -353, 301, 80,
	124, 80, -154, 69, -223, -221, -222, 65, 418, 278,
	279, 69, -318, -318, -318, -318, 69, -267, 224, -255,
	-267, -418, -432, 68, 80, -420, -419, -421, 20, -418,
	20, -418, -418, 95, 74, -319, 230, 78, 491, 308,
	309, -148, 20, -354, 282, 283, -355, -367, 285, 80,
	-337, -222, 65, -221, 65, 14, 13, -224, 69, 138,
	-436, 30, 69, -431, -430, -252, -426, -267, 406, 407,
	74, -418, -361, -264, 74, 307, -251, 68, -365, 286,
	68, -363, 68, -363, 91, 311, -220, 275, 276, 30,
	150, -220, -267, -435, -434, -433, 69, 138, 137, 80,
	-267, -351, -356, 287, 80, -288, 68, -288, 68, -364,
	284, 68, 85, 40, 277, 138, 106, -430, -267, 69,
	-369, 68, 20, 69, -351, 69, -351, 68, 106, -288,
	-434, 40, -292, 137, -370, -368, 240, -355, 69, 69,
	69, -351, 80, 69, -267, 69, 138, -267, -366, 288,
	69, -368, -371, 47, 80, -375, -372, 68, -232, 242,
	116, -375, -232, -374, -373, 287, 243, 68, 69, 138,
	-267, 239, 68, -298, -373, -372, -298, 69, 69,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 246,
	247, 248, 759, 760, 761, 762, 763, 0, 0, 0,
	0, 533, 534, 0, 505, 0, 0, 0, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 336,
	337, 338, 339, 340, 341, 0, 271, 267, 206, 207,
	208, 209, 278, 279, 375, 0, 0, 0, 0, 616,
	-2, 53, 260, 0, 251, 251, 764, 765, 766, 767,
	768, 769, 770, 771, -2, 546, 0, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 325,
	326, 327, 321, 322, 324, 323, -2, 0, 546, 0,
	0, 0, 636, 0, 0, 651, 673, 23, 0, 7,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	0, 0, 19, 0, 19, 0, 0, 0, 1058, 1059,
	1060, 1061, -2, 1526, 1504, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637,
	1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 0, 244, 242,
	1504, 1526, 1586, 1619, 0, 776, 0, 594, 0, 599,
	1019, 594, 272, 535, 536, 636, 636, 503, 0, 307,
	0, 1517, 311, 0, 0, 0, 500, 302, 303, 304,
	305, 306, 0, 758, 0, 0, 298, 0, 266, 1577,
	0, 0, 0, 0, 0, 0, 150, 847, 152, 849,
	156, 163, 0, 0, 168, 169, 172, 173, 174, 175,
	176, 0, 180, 0, 182, 185, 0, 187, 188, 0,
	191, 192, 193, 0, 203, 204, 205, 850, 851, 852,
	-2, 81, 774, 1442, 1337, 0, 1344, 1345, 1356, 1367,
	1131, 1132, 1133, 1134, 0, 0, 0, 0, 0, 1141,
	1142, 0, 1156, 1679, 0, 1148, 1149, 1150, 1151, 1152,
	90, 102, 103, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 0, 1310, 1118, 1058, 0, 1687, 0,
	1707, 1712, 1713, 1714, 1715, 1706, 0, 0, 1295, 0,
	1285, 0, 0, -2, -2, 0, 0, 1645, -2, 1684,
	1703, 1711, 1688, 1710, 1681, 1682, 1676, 1677, 1678, 1680,
	1689, 1691, 1702, 0, 1698, 1708, 1709, 0, 0, 104,
	105, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1301, -2, 1303, 1304, 1306, 1307,
	1308, 1309, -2, 1312, 1313, 1314, -2, -2, 1317, 1318,
	1319, 1320, 1321, 1322, 1325, -2, 1327, -2, -2, 1297,
	1298, 1299, 1300, 1289, 1290, 1291, 1292, 1293, 1294, -2,
	-2, -2, 636, 709, 0, -2, 0, 0, 0, 656,
	659, 662, 665, 0, 54, 55, 261, 262, 250, 252,
	0, 256, 0, 249, 0, 0, 0, 879, 879, 879,
	879, 879, 0, 879, 0, 0, 0, 879, 854, 855,
	856, 877, 878, 925, 551, 547, 548, 549, 550, 624,
	0, 626, 629, 480, 427, 0, 0, 0, 480, 0,
	441, 433, 0, 0, 0, 480, 0, 0, 631, 631,
	0, 483, 490, 480, 480, -2, 480, 480, 480, 0,
	0, 447, 448, 449, 433, 433, 452, 453, 454, 465,
	466, 491, 1466, 0, 0, 375, 0, 375, 0, 375,
	375, 553, 1577, 0, 0, 217, 1645, 222, 0, 1524,
	1525, 1591, 1540, 0, 0, 1558, 0, -2, 0, 288,
	631, 0, 637, 0, 636, 0, 0, 375, 375, 375,
	375, 375, 375, 375, 375, 0, 0, 0, 375, 0,
	0, 674, 675, 670, 671, 672, 676, 677, 5, 6,
	19, 0, 0, 0, 0, 0, 0, 60, 59, 0,
	1443, 1461, 1398, 1399, 1400, 1448, 1402, 1452, 1452, 1452,
	1452, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	0, 0, 1441, 1421, 1450, 1450, 1450, 1448, 1445, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1455, 1455, 1458, 1455, 0, 1335, 0,
	0, 0, 0, 598, 0, 0, 631, -2, 0, 504,
	308, 1062, 0, 0, 312, 313, 0, 0, 328, 0,
	331, 316, 317, 318, 0, 0, 300, 301, 0, 0,
	268, 0, 0, 0, 376, 0, 0, 0, 0, 0,
	0, 160, 157, 164, 167, 177, 184, 0, 196, 198,
	201, 158, 165, 170, 171, 178, 199, 159, 161, 162,
	166, 200, 202, 179, 183, 197, 181, 186, 189, 190,
	195, 0, 131, 0, 0, 0, 0, 0, 1343, 0,
	0, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 1337, 0, 0,
	1137, 1138, 1139, 1140, 1143, 0, 1157, 0, 0, 0,
	1396, 0, 1335, 1335, 0, 1335, 1331, 0, 0, 0,
	0, 0, 0, 1335, 1271, 0, 0, 1273, 1286, 0,
	0, 1275, 1276, 0, 1279, 1280, 1335, 0, 1335, 1284,
	1267, 1268, 0, 1331, 1331, 0, 0, 1331, 1331, 1331,
	1331, 1331, 1331, 1331, 1331, 1331, 1331, 1331, 1331, 0,
	631, 0, 0, 619, 0, 600, 0, 653, 655, 0,
	657, 658, 660, 661, 663, 664, 666, 667, 56, 0,
	0, 254, 0, 259, 0, 773, 0, 0, 789, 0,
	0, 0, 0, 0, 0, 0, 0, 879, 879, 879,
	0, 553, 552, 0, 625, 0, 0, 682, 0, 0,
	0, 433, 480, 480, 439, 440, 435, 434, 486, 487,
	483, 0, 483, 483, 682, 0, 459, 460, 461, 480,
	480, 467, 632, 468, 469, 483, 0, 488, 489, 682,
	0, 0, 682, 682, 0, 477, 478, 479, 0, 0,
	879, 0, 496, 435, 435, 1467, 1468, 0, 888, 0,
	0, 0, 499, 0, 0, 0, 554, 210, 0, 0,
	0, 0, 0, 0, 240, 241, 0, 0, 0, 0,
	0, 0, 231, 234, 1013, 1014, 844, 845, 235, 236,
	280, 281, 0, 600, 652, 654, 648, 649, 650, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 0, 531,
	0, 0, 690, 684, 686, 753, 90, 690, 8, 77,
	74, 0, 19, 0, 0, 19, 19, 0, 19, 245,
	0, 1464, 1462, 1463, 1401, 1449, 0, 1426, 0, 1427,
	1428, 1429, 0, 0, 1422, 0, 1423, 1424, 1425, 1417,
	0, 1418, 1419, 0, 1420, 243, 0, 1336, 777, 0,
	573, 586, 568, 0, 575, 0, 1020, 555, 586, 557,
	0, 575, 600, 622, 600, 0, 309, 0, 314, 0,
	0, 330, 332, 333, 334, 319, 320, 501, 296, 297,
	289, 290, 291, 292, 293, 294, 295, 299, 100, 0,
	269, 270, 0, 0, 0, 144, 145, 146, 147, 148,
	149, 151, 135, 521, 523, 836, 848, 0, 839, 0,
	154, 194, 127, 0, 0, 1338, 1339, 1340, 1341, 1342,
	1346, 0, 1348, 1350, 1352, 1354, 0, 1372, -2, -2,
	1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128,
	1129, 1130, 1357, 1370, 1371, 0, 0, 0, 0, 0,
	0, 1368, 1368, 1363, 0, 1135, 0, 1154, 1158, 0,
	0, 0, 91, 1330, 1238, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 0, 0, 1337, 0, 0, 0, 1332,
	1333, 0, 0, 0, 1226, 0, 0, 1232, 1233, 1234,
	0, 581, 0, 1296, 1272, 1287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 708, 710, 0, 590, 592, 593, 0, 620, 633,
	638, 639, 642, 52, 57, 263, 264, 0, 0, 258,
	0, -2, 791, 0, 629, 0, 0, 803, 373, 830,
	0, 0, 846, 869, 875, 0, 0, 0, 903, 0,
	627, 0, 0, 722, 426, 0, 481, 482, 430, 1577,
	435, 682, 682, 442, 436, 443, 485, 444, 445, 446,
	0, 682, 682, 480, 483, 470, 484, 483, 473, 474,
	0, 492, 497, 493, 0, 495, 450, 451, 629, 343,
	344, 0, 0, 0, 349, 0, 1469, 1469, 0, 1469,
	1469, 1469, 1469, 0, 0, 1469, 1469, 1469, 1469, 1469,
	1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 1469, 0,
	889, 370, 0, 0, 0, 373, 820, 695, 0, 696,
	697, 693, 724, 748, 748, 0, 748, 728, 1019, 211,
	212, 0, 214, 215, 216, 223, 218, 220, 0, 0,
	224, 237, 238, 239, 0, 0, 0, 0, 229, 230,
	0, 0, 283, 284, 286, 0, 618, 518, 1017, 519,
	520, 524, 0, 526, 527, 528, 791, 0, 825, 682,
	0, 691, 0, 687, 754, 0, 756, 0, 682, 0,
	75, 19, 0, 68, 65, 0, 0, 0, 0, 0,
	1444, 1397, 1465, 0, 0, 0, 1446, 0, 0, 0,
	0, 58, 602, 562, 0, 567, 583, 0, 587, 0,
	0, 579, 572, 576, 0, 0, 596, 556, 0, 0,
	561, 621, 623, 1063, 0, 315, 329, 0, 0, 0,
	0, 138, 833, 0, 139, 143, 133, 0, 0, 0,
	838, 0, 835, 840, 0, 153, 0, 0, 128, 129,
	894, 899, 0, 1347, 1349, 1351, 1353, 1355, 0, 1358,
	1368, 1368, 1364, 0, 1359, 0, 1361, 0, 1338, 0,
	1159, 0, 0, 0, 0, 0, 0, 1216, 1217, 0,
	0, 1221, 0, 1223, 1224, 1225, 1227, 0, 0, 0,
	1231, 0, 1270, 1288, 1274, 1277, 0, 1281, 0, 1283,
	0, 636, 0, 1193, 1193, 0, 0, 0, 0, 1193,
	0, 0, 0, 0, 0, 0, 0, 0, 1153, 0,
	0, 711, 602, 0, 0, 0, 645, 643, 644, 265,
	253, 255, 0, 0, 0, 779, 780, 782, 0, 785,
	786, 787, 0, 792, 793, 795, 796, 0, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1509,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 790,
	0, 880, 810, 1469, 377, 0, 0, 832, 0, 0,
	0, -2, 0, 0, 0, 0, 905, 0, 0, 0,
	540, 544, 23, 630, 0, 683, 428, 0, 429, 480,
	437, 438, 682, 1019, 462, 463, 682, 480, 480, 483,
	0, 494, 0, 888, 346, 353, 0, 1028, 1029, 0,
	0, 1033, 1040, 879, 1088, 0, 1040, 0, 0, 1042,
	1043, 347, 0, 0, 359, 0, 0, 0, 348, 0,
	0, 0, 1470, 0, 1469, 1469, 0, 0, 0, 0,
	1469, 1469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 810, 1469, 0,
	0, 0, 377, 817, 0, 0, 0, 0, 0, 0,
	715, 0, 0, 714, 0, 0, 0, 0, 0, 629,
	749, 0, 751, 752, 726, -2, 0, 695, 731, 1335,
	0, 0, 0, 225, 226, 227, 228, 232, 233, 282,
	285, 287, 0, 0, 0, 532, 680, 685, 692, 755,
	757, 91, 688, 680, 0, 78, 19, 77, 69, 70,
	0, 19, 0, 0, 0, 0, 1454, 1453, 1439, 0,
	1440, 1451, 1456, 0, 1459, 0, 606, 0, 0, 586,
	588, 0, 0, 586, 0, 0, 595, 0, 0, 586,
	0, 0, 502, 101, 335, 0, 0, 0, 0, 0,
	522, 0, 837, 135, 0, 0, 155, 0, 0, 897,
	0, 899, 1334, 1360, 1362, 0, 1369, 1365, 1136, 1144,
	1155, 0, 0, 1161, 1173, 1173, 0, 1164, 1452, 1452,
	1167, 1448, 1450, 1448, 1173, 1173, 0, 92, 0, 0,
	1222, 0, 0, 0, 582, 0, 0, 0, 1191, 1193,
	1198, 1194, 1199, 1193, 1193, 1193, 1193, 1204, 1193, 1193,
	1193, 1193, 1193, 1193, 1193, 1193, 1189, 591, 606, 634,
	635, 640, 641, 0, 257, 0, 0, 784, 0, 0,
	0, 797, 0, 813, 811, 812, 0, 827, 378, 379,
	380, 381, 0, 0, 0, 831, 0, 563, 0, 870,
	871, 872, 873, 874, -2, 883, 0, 0, 1021, 1021,
	1021, 913, 0, 904, 594, 0, -2, 0, 0, 542,
	0, 0, 723, 431, 682, 455, 0, 471, 682, 682,
	480, 498, 0, 345, 351, 354, 0, 353, -2, 1032,
	1052, 1041, 1052, 1089, 1052, 1052, 879, 0, 357, 358,
	360, 0, 362, 0, 350, 356, 972, 973, 0, 0,
	976, 977, 978, 979, 0, 0, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 1007, 1008, 1009, 1010,
	1011, 1012, 992, 993, 994, 995, 996, 997, 1004, 0,
	0, 1001, 0, 813, 0, 0, 0, 0, 827, 819,
	0, 821, 822, 0, 0, 565, 682, 275, 0, 718,
	712, 0, 701, 716, 717, 704, 0, 706, 0, 702,
	703, 682, 694, 725, 750, 727, 730, 732, 733, 739,
	0, 0, 0, 0, 213, 0, 397, 219, 1018, 525,
	530, 678, 0, 0, 678, 73, 76, 0, 71, 0,
	0, 0, 0, 63, 61, 1447, 0, 0, 608, 115,
	0, 0, 0, 584, 0, 589, 586, 571, 580, 570,
	577, 578, 597, 586, 560, 559, 1064, 310, 0, 834,
	135, 140, 141, 142, 136, 134, 841, 0, 843, 0,
	895, 899, 0, 0, 1366, 1160, 1145, 1162, 1174, 1175,
	1163, 1146, 1165, 1166, 1168, 1169, 1170, 1171, 1172, 1147,
	1218, 0, 1220, 1228, 1229, 0, 1278, 1282, 0, 0,
	0, 1197, 1200, 1201, 1202, 1203, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 636, 1190, 0, 608, 646, 647,
	772, 775, 781, 783, 0, 794, 0, 801, 802, 0,
	0, 805, 806, 815, 0, 0, 0, 383, 384, 0,
	0, 0, 396, 392, 393, 394, 374, 826, 817, 0,
	0, 884, 1469, 1469, 1469, 0, 0, 1022, 1023, 1025,
	1026, 1027, 0, 0, 916, 0, 0, 907, 0, 748,
	0, 0, 682, 541, 544, 545, 628, 432, 682, 475,
	472, 682, 342, 355, 352, 1054, -2, 1067, 1069, 0,
	0, 1072, 1073, 0, 0, 0, 0, 1110, 1079, 0,
	0, 1083, 0, 1384, 1385, 0, 1087, 0, 1053, 0,
	1044, 1053, 0, 0, 1052, 0, 361, 363, 364, 365,
	974, 975, 980, 981, 998, 0, 0, 1000, 0, 0,
	366, 0, 0, 0, 367, 372, 818, 0, 823, 824,
	636, 0, 0, 698, 719, 0, 0, 699, 0, 700,
	705, 707, 274, 734, 0, 0, 736, 737, 738, 729,
	221, 668, 0, 0, 689, 669, 0, 19, 0, 0,
	66, 1457, 1460, 610, 0, 607, 116, 0, 0, 0,
	0, 585, 569, 558, 137, 132, 842, 118, 898, 900,
	896, 0, 1230, 0, 1193, 1192, 1186, 0, 610, 0,
	800, 798, 814, 804, 0, 828, 829, 0, 385, 386,
	0, 389, 395, 816, 564, 0, 0, 0, 0, 876,
	-2, 0, 0, -2, 919, 0, 914, 0, 906, 0,
	909, 682, 682, -2, 538, 543, 0, 456, 476, 1068,
	1070, 1071, 1074, 1075, 1015, 1016, 1076, 1115, 1116, 1117,
	1077, 1112, 1113, 1114, 1078, 0, 0, 0, 1382, 1383,
	1108, 0, 0, 0, 0, 0, 0, 0, 1038, 1005,
	1006, 999, 1002, 1003, 371, 368, 369, 566, 631, 276,
	277, 720, 0, 713, 743, 740, 0, 0, 679, 681,
	67, 72, 0, 0, 612, 0, 609, 0, 603, 605,
	126, 574, 88, 109, 0, 1219, 1269, 1196, 0, 1187,
	0, 1181, 1182, 1183, 1188, 612, 0, 0, 0, 382,
	387, 0, 390, 391, 0, 865, 1448, 0, 885, 886,
	887, 926, -2, 969, 1024, 891, 118, 926, 910, 0,
	917, 0, 915, 908, 636, 539, 0, 0, 1285, 1103,
	0, 0, 0, 1045, 1047, 1048, 1049, 1050, 1051, 1046,
	0, 0, 0, 1037, 1039, 1084, 0, 273, 0, 0,
	744, 746, 741, 742, 62, 64, 79, 0, 611, 117,
	0, 80, 0, 106, 0, 119, 120, 0, 0, 0,
	0, 1195, 1184, 0, 0, 0, 0, 601, 0, 799,
	807, 0, 809, 388, 858, 0, 642, 0, 928, 0,
	888, 971, 893, 928, 902, 0, 912, 0, 921, 0,
	918, 631, 1111, 0, 1082, 1091, 1104, 0, 0, 858,
	858, 858, 858, 0, 1085, 721, 735, 0, 0, 0,
	89, 93, 0, 115, 112, 0, 121, 0, 0, 0,
	0, 0, 1176, 1177, 1179, 1178, 1180, 0, 808, 857,
	866, 867, 642, 890, 0, 965, 970, 892, 911, 920,
	0, 923, 537, 1080, 1090, 1092, 1093, 0, 1105, 1106,
	1107, 1109, 1030, 1031, 1034, 1035, 0, 745, 747, 0,
	614, 604, 82, 0, 0, 110, 111, 113, 0, 122,
	0, 124, 125, 0, 788, 859, 1469, 0, 0, 863,
	864, 868, 0, 953, 0, 0, 959, 0, 966, 922,
	1081, 1094, 0, 1095, 0, 0, 0, 1036, 613, 0,
	901, 0, 94, 0, 96, 98, 99, 1055, 107, 108,
	114, 123, 1185, 0, 861, 0, 929, 0, 931, 0,
	0, 0, 0, 0, 963, 0, 1096, 1098, 1099, 0,
	0, 1097, 615, 83, 84, 0, 95, 0, 0, 860,
	862, 0, 933, 0, 954, 0, 0, 0, 0, 0,
	0, 0, 1100, 1102, 1101, 0, 0, 97, 1056, 930,
	927, 0, 965, 955, 0, 957, 0, 0, 0, 0,
	85, 86, 87, 0, 0, 935, 0, 951, 956, 958,
	960, 0, 964, 962, 1057, 934, 0, 947, 932, 0,
	961, 936, -2, 0, 952, 937, -2, 0, 945, 0,
	0, 938, 946, 0, 941, 0, 0, 0, 940, 0,
	-2, 948, 0, 0, 942, -2, 0, 950, 949,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 97, 3, 3, 3, 128, 120, 3,
	68, 69, 125, 123, 138, 124, 137, 126, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 559, 558,
	107, 106, 108, 3, 560, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 130, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 561, 119, 562, 131,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 98, 99, 100, 101, 102, 103, 104,
	105, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 121, 122, 127, 129, 132, 133, 134, 135, 136,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:712
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:719
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:725
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:733
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:739
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:743
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:758
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:762
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:768
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:773
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:777
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:809
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:816
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:836
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:842
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:849
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:857
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:863
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:872
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:882
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:890
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:898
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:906
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:916
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:924
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:934
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:941
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:950
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:960
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:964
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:970
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:974
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:980
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:989
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:999
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1003
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1009
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1018
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1022
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1028
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1049
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1062
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1069
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1073
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1079
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1083
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1089
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1096
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1104
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1108
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1122
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1126
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1130
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1135
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1139
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1143
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1149
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1158
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1169
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1173
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1179
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1183
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1189
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1193
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1199
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1223
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1242
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1246
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1250
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1255
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1259
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1266
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1274
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1281
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1286
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1293
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1298
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1302
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1326
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1330
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1336
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1342
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1360
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1377
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1400
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1404
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1408
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1413
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1417
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1423
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1436
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1447
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1460
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1464
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1474
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1487
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1500
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1506
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1512
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1519
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1527
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1536
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1540
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1544
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1548
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1552
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1556
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1563
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1567
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1573
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1580
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1589
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1593
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1599
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1603
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1607
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1611
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1615
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1619
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1623
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1627
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1631
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1635
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1639
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1643
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1647
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1651
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1655
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1659
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1663
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1667
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1671
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1675
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1679
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1683
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1687
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1691
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1695
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1699
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1703
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1707
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1711
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1715
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1719
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1723
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1727
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1731
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1735
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1739
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1743
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1747
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1751
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1755
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1759
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1763
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1767
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1779
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1783
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1787
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1791
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1795
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1807
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1814
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1821
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1830
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1860
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1864
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1868
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1874
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1880
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1884
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1891
		{
			yyVAL.str = yyDollar[3].str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1897
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1901
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1907
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1915
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1924
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1933
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1941
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1949
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1972
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1995
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2002
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2009
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2017
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2024
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2031
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2040
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2044
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2048
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2054
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2058
		{
			yyVAL.str = yyDollar[1].str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2064
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2068
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2074
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2078
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2089
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2095
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2100
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2104
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2108
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2112
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2116
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2120
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2124
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2128
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2132
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2138
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2142
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2146
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2150
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2155
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2160
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2166
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2173
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2179
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2186
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2193
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2203
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2210
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2221
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2232
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2236
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2242
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2252
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2258
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2262
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2268
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2274
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2278
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2282
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2286
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2292
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2304
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2310
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2314
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2320
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2324
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2330
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2336
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2352
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2356
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2360
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2364
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2368
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2372
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2380
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2388
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2398
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2439
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2443
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2449
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2455
		{
			yyVAL.str = yyDollar[1].str
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2460
		{
			yyVAL.str = "true"
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2461
		{
			yyVAL.str = "false"
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2462
		{
			yyVAL.str = yyDollar[1].str
		}
	case 335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2467
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2482
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2493
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2502
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2506
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2512
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2519
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2523
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2527
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2531
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2535
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[2].columnTableDefUnion(),
					Pos:    yyDollar[3].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2544
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[3].columnTableDefUnion(),
					Pos:    yyDollar[4].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2554
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: -1,
			}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2560
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: 0,
			}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2566
		{
			yyLOCAL = &tree.AlterColPos{
				PreColName: yyDollar[2].unresolvedNameUnion(),
				Pos:        -2,
			}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2576
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2584
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2591
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2598
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2605
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2612
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2619
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2627
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2636
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2640
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2647
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2659
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2667
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2675
		{
			assignments := []*tree.VarAssignmentExpr{
				{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2688
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2694
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2705
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2716
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2720
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2725
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2729
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2734
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2738
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2754
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2758
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2762
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2766
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2770
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2774
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2778
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2782
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2786
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2790
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2794
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2798
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2802
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2806
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2810
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2814
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2820
		{
			yyVAL.item = nil
		}
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2825
		{
			yyVAL.item = nil
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2864
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2869
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2873
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2877
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2886
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2890
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2896
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2901
		{
		}
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2905
		{
		}
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2910
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2920
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2930
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2938
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2944
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2950
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2956
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2962
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2968
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2974
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2983
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2987
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2991
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2995
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2999
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3003
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3007
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3011
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3017
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3024
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3034
		{
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3036
		{
		}
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3045
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3055
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3064
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3068
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3072
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3078
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3084
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3090
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3096
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3105
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3115
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3127
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3131
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3137
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3149
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3163
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3169
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3176
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3181
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3185
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3189
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3194
		{
			yyVAL.str = ""
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3198
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3204
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3217
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3221
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3227
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3232
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3236
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3240
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3246
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3252
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3256
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3262
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3268
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3272
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3276
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3282
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3286
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3309
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3318
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3327
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3336
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3340
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3346
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3355
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3364
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3374
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3380
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3386
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3392
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3398
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3407
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3414
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3425
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3430
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3437
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3453
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3466
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3477
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3481
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3487
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3492
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3499
		{
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3501
		{
		}
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3504
		{
		}
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3513
		{
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3517
		{
		}
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3522
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3531
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3538
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3544
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3552
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3559
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3566
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3586
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3595
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3599
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3605
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3609
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3615
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3622
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3628
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3636
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3643
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3650
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3669
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3673
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3678
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3682
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3686
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3692
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3701
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3705
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3711
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3715
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3721
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3725
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3731
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3736
		{
		}
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3740
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3747
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3751
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3758
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3763
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3767
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3773
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3777
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3783
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3787
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3792
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3796
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3809
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3816
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3823
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3841
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3860
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3866
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3873
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3877
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3890
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3894
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3899
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3903
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3910
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3915
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3922
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3928
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3932
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3936
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3940
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3944
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3948
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3954
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3961
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3970
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3974
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3980
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3988
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3992
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3997
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4001
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4007
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4011
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4015
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4020
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4024
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4030
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4036
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4040
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4046
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4051
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4055
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4059
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4064
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4068
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4072
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4078
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4082
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4086
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4100
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4104
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4114
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4124
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4134
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4146
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4154
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4162
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4171
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4179
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4187
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4195
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4203
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4211
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4219
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4227
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4235
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4245
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4256
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4270
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4274
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4278
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4283
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4287
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4291
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4300
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4304
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4309
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4313
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4322
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4328
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4332
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4338
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4342
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4347
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4351
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4356
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4364
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4370
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4378
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4386
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4396
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4402
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4411
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4420
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4429
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4439
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4443
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4453
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4457
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4461
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4465
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4471
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4481
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4485
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4491
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4497
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4501
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4507
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4513
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4517
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4521
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4527
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4531
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4537
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4541
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4547
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4551
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4557
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4561
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4571
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4584
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4590
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4596
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4609
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4620
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4627
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4631
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4637
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4647
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4651
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4655
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4660
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4664
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4668
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4672
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4677
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4681
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4685
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4689
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4693
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4698
		{
			yyVAL.str = ""
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4702
		{
			yyVAL.str = yyDollar[1].str
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4706
		{
			yyVAL.str = yyDollar[2].str
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4712
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4718
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4722
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4726
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4730
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4734
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4740
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 772:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4773
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4783
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4789
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 775:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4795
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4805
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4810
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4816
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4823
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4827
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:4833
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:4839
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4844
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4848
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4852
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4856
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4863
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4875
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4880
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4886
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4893
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4897
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4903
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4909
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4913
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4917
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4923
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4929
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4935
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4946
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4958
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4964
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4974
		{
			yyVAL.str = yyDollar[1].str
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4978
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4984
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4991
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4997
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5005
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5011
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5018
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5026
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5032
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5041
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5053
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				Accounts:    yyDollar[7].identifierListUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5064
		{
			yyVAL.str = ""
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5068
		{
			yyVAL.str = yyDollar[2].str
		}
	case 819:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5074
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5084
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5088
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5094
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5100
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5106
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5115
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5124
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5129
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5135
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5143
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5249
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5253
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5259
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5269
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5273
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5279
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5289
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5293
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5297
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5302
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5306
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5312
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5319
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5325
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5334
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5341
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5350
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5354
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5360
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5374
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5378
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5382
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5387
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5391
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5395
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5399
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5405
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5424
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5428
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5450
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5454
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5458
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5462
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5466
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5472
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5476
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5482
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5487
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5492
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5496
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5500
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5504
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5508
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5514
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5525
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5529
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5539
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5543
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5552
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5558
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5562
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5568
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5572
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5576
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5581
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5585
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5591
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5603
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5612
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5625
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5632
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5642
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5650
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5661
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5665
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5670
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5674
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5681
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5692
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5705
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5719
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5723
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5727
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5734
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5741
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5748
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5755
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5759
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5763
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5767
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5771
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5778
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5785
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5789
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5796
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5803
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5807
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5814
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5821
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5828
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5835
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5839
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5844
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5848
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5858
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5862
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5869
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5876
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5880
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5889
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5893
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5899
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5903
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5909
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5918
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5928
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5932
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5938
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5942
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5948
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5955
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5964
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5968
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5973
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5977
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5982
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5986
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5991
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5995
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6005
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6009
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6020
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6028
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6036
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6044
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6055
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6064
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6074
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6084
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6088
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6093
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6097
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6102
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6106
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6112
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6116
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6120
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6126
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6130
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6134
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6138
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6142
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6146
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6151
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6155
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6159
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6163
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6167
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6171
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6175
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6179
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6183
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6187
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6191
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6195
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6199
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6203
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6207
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6211
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6215
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6219
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6223
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6227
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6231
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6235
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6239
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6246
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6250
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6256
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6261
		{
			yyVAL.str = ""
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6265
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6269
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6275
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6279
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6283
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6287
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6291
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6295
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6309
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6313
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6322
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6327
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6333
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6340
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6344
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6350
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6354
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6358
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6364
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6368
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6374
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6383
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6408
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6422
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6428
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6437
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6446
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6456
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6464
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6470
		{
			yyVAL.str = ""
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6474
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6484
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6490
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6496
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6510
		{
			yyVAL.str = ""
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6514
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6520
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6526
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6530
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6534
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6540
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6544
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6548
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6552
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6558
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6562
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6566
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6571
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6575
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6581
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6585
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6591
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6595
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6599
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6603
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6607
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6611
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6616
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6620
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6624
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6628
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6632
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6636
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6640
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6644
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6657
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6663
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6667
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6672
		{
			yyVAL.str = ""
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6676
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6682
		{
			yyVAL.str = ""
		}
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6686
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6692
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6704
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6711
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6718
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6725
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6732
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6741
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6747
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6753
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6757
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6761
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6765
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6769
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6774
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6781
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6785
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6789
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6794
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6798
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6803
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6807
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6823
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6829
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6833
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6837
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6841
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6845
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6849
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6853
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6857
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6861
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6865
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6869
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6873
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6877
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6883
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6887
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6891
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6895
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6899
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6903
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6907
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6911
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6915
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6919
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6923
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6927
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6932
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6940
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6945
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6949
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6958
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6962
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6966
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6970
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6974
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6980
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6989
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6993
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6998
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7002
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7008
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7012
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7018
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7027
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7039
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7056
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7073
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7086
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7099
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7111
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7125
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7140
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7155
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7172
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7187
		{
		}
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7193
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7197
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7201
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7207
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:7211
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7219
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7223
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:7227
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7233
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7240
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7249
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:7253
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7260
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7265
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7269
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7274
		{
			yyVAL.str = ","
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7278
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7283
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7290
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7300
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7311
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7321
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7330
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7339
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7349
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7359
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7369
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7379
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7389
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7399
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7409
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7419
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7429
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7439
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7449
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7459
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7476
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7484
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7492
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7500
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7508
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7518
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7526
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7535
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7543
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7551
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7559
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7567
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7578
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7588
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7600
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7611
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7633
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7669
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7681
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7693
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7704
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7712
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7719
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7726
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7738
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7746
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7756
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7766
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7774
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7785
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7794
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7803
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7811
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7821
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7829
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7839
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7843
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7849
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7853
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7872
		{
		}
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7874
		{
		}
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7915
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7926
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7930
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7934
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7940
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7945
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7949
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7955
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7959
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7966
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7970
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7974
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7982
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7986
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7990
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7994
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8000
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8004
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8008
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8012
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8016
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8020
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8024
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8028
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8032
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8036
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8044
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8048
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8052
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8056
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8060
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8064
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8068
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8072
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8076
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8080
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8086
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8090
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8096
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8100
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8107
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8111
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8115
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8121
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8125
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8129
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8133
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8137
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8141
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8145
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8151
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8155
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8159
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8163
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8169
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8173
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8186
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8191
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8195
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8199
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8203
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8207
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8211
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8225
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8229
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8236
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8247
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8252
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8258
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8270
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8282
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8294
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8307
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8320
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8333
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8346
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8359
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8372
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8385
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8398
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8411
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8424
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8439
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8466
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8508
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8556
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8573
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8585
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8605
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8625
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8645
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8661
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8674
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8687
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8700
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8713
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8725
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8737
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8749
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8761
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8773
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8785
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8797
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8809
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8821
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8834
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8847
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8862
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8870
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8879
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8889
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8912
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8917
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8923
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8930
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8934
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8939
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8943
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8949
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8955
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8962
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8969
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8978
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8985
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8992
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9001
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9005
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9009
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9015
		{
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9017
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9027
		{
			yyVAL.str = ""
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9031
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
