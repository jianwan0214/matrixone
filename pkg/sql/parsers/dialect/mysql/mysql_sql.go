// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const VALUES = 57394
const NEXT = 57395
const VALUE = 57396
const SHARE = 57397
const MODE = 57398
const SQL_NO_CACHE = 57399
const SQL_CACHE = 57400
const JOIN = 57401
const STRAIGHT_JOIN = 57402
const LEFT = 57403
const RIGHT = 57404
const INNER = 57405
const OUTER = 57406
const CROSS = 57407
const NATURAL = 57408
const USE = 57409
const FORCE = 57410
const LOWER_THAN_ON = 57411
const ON = 57412
const USING = 57413
const SUBQUERY_AS_EXPR = 57414
const LOWER_THAN_STRING = 57415
const ID = 57416
const AT_ID = 57417
const AT_AT_ID = 57418
const STRING = 57419
const VALUE_ARG = 57420
const LIST_ARG = 57421
const COMMENT = 57422
const COMMENT_KEYWORD = 57423
const QUOTE_ID = 57424
const INTEGRAL = 57425
const HEX = 57426
const BIT_LITERAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const NULL = 57430
const TRUE = 57431
const FALSE = 57432
const LOWER_THAN_CHARSET = 57433
const CHARSET = 57434
const UNIQUE = 57435
const KEY = 57436
const OR = 57437
const PIPE_CONCAT = 57438
const XOR = 57439
const AND = 57440
const NOT = 57441
const BETWEEN = 57442
const CASE = 57443
const WHEN = 57444
const THEN = 57445
const ELSE = 57446
const END = 57447
const ELSEIF = 57448
const LOWER_THAN_EQ = 57449
const LE = 57450
const GE = 57451
const NE = 57452
const NULL_SAFE_EQUAL = 57453
const IS = 57454
const LIKE = 57455
const REGEXP = 57456
const IN = 57457
const ASSIGNMENT = 57458
const ILIKE = 57459
const SHIFT_LEFT = 57460
const SHIFT_RIGHT = 57461
const DIV = 57462
const MOD = 57463
const UNARY = 57464
const COLLATE = 57465
const BINARY = 57466
const UNDERSCORE_BINARY = 57467
const INTERVAL = 57468
const OUT = 57469
const INOUT = 57470
const BEGIN = 57471
const START = 57472
const TRANSACTION = 57473
const COMMIT = 57474
const ROLLBACK = 57475
const WORK = 57476
const CONSISTENT = 57477
const SNAPSHOT = 57478
const CHAIN = 57479
const NO = 57480
const RELEASE = 57481
const PRIORITY = 57482
const QUICK = 57483
const BIT = 57484
const TINYINT = 57485
const SMALLINT = 57486
const MEDIUMINT = 57487
const INT = 57488
const INTEGER = 57489
const BIGINT = 57490
const INTNUM = 57491
const REAL = 57492
const DOUBLE = 57493
const FLOAT_TYPE = 57494
const DECIMAL = 57495
const NUMERIC = 57496
const DECIMAL_VALUE = 57497
const TIME = 57498
const TIMESTAMP = 57499
const DATETIME = 57500
const YEAR = 57501
const CHAR = 57502
const VARCHAR = 57503
const BOOL = 57504
const CHARACTER = 57505
const VARBINARY = 57506
const NCHAR = 57507
const TEXT = 57508
const TINYTEXT = 57509
const MEDIUMTEXT = 57510
const LONGTEXT = 57511
const BLOB = 57512
const TINYBLOB = 57513
const MEDIUMBLOB = 57514
const LONGBLOB = 57515
const JSON = 57516
const ENUM = 57517
const UUID = 57518
const GEOMETRY = 57519
const POINT = 57520
const LINESTRING = 57521
const POLYGON = 57522
const GEOMETRYCOLLECTION = 57523
const MULTIPOINT = 57524
const MULTILINESTRING = 57525
const MULTIPOLYGON = 57526
const INT1 = 57527
const INT2 = 57528
const INT3 = 57529
const INT4 = 57530
const INT8 = 57531
const S3OPTION = 57532
const SQL_SMALL_RESULT = 57533
const SQL_BIG_RESULT = 57534
const SQL_BUFFER_RESULT = 57535
const LOW_PRIORITY = 57536
const HIGH_PRIORITY = 57537
const DELAYED = 57538
const CREATE = 57539
const ALTER = 57540
const DROP = 57541
const RENAME = 57542
const ANALYZE = 57543
const ADD = 57544
const RETURNS = 57545
const SCHEMA = 57546
const TABLE = 57547
const SEQUENCE = 57548
const INDEX = 57549
const VIEW = 57550
const TO = 57551
const IGNORE = 57552
const IF = 57553
const PRIMARY = 57554
const COLUMN = 57555
const CONSTRAINT = 57556
const SPATIAL = 57557
const FULLTEXT = 57558
const FOREIGN = 57559
const KEY_BLOCK_SIZE = 57560
const SHOW = 57561
const DESCRIBE = 57562
const EXPLAIN = 57563
const DATE = 57564
const ESCAPE = 57565
const REPAIR = 57566
const OPTIMIZE = 57567
const TRUNCATE = 57568
const MAXVALUE = 57569
const PARTITION = 57570
const REORGANIZE = 57571
const LESS = 57572
const THAN = 57573
const PROCEDURE = 57574
const TRIGGER = 57575
const STATUS = 57576
const VARIABLES = 57577
const ROLE = 57578
const PROXY = 57579
const AVG_ROW_LENGTH = 57580
const STORAGE = 57581
const DISK = 57582
const MEMORY = 57583
const CHECKSUM = 57584
const COMPRESSION = 57585
const DATA = 57586
const DIRECTORY = 57587
const DELAY_KEY_WRITE = 57588
const ENCRYPTION = 57589
const ENGINE = 57590
const MAX_ROWS = 57591
const MIN_ROWS = 57592
const PACK_KEYS = 57593
const ROW_FORMAT = 57594
const STATS_AUTO_RECALC = 57595
const STATS_PERSISTENT = 57596
const STATS_SAMPLE_PAGES = 57597
const DYNAMIC = 57598
const COMPRESSED = 57599
const REDUNDANT = 57600
const COMPACT = 57601
const FIXED = 57602
const COLUMN_FORMAT = 57603
const AUTO_RANDOM = 57604
const ENGINE_ATTRIBUTE = 57605
const SECONDARY_ENGINE_ATTRIBUTE = 57606
const INSERT_METHOD = 57607
const RESTRICT = 57608
const CASCADE = 57609
const ACTION = 57610
const PARTIAL = 57611
const SIMPLE = 57612
const CHECK = 57613
const ENFORCED = 57614
const RANGE = 57615
const LIST = 57616
const ALGORITHM = 57617
const LINEAR = 57618
const PARTITIONS = 57619
const SUBPARTITION = 57620
const SUBPARTITIONS = 57621
const CLUSTER = 57622
const TYPE = 57623
const ANY = 57624
const SOME = 57625
const EXTERNAL = 57626
const LOCALFILE = 57627
const URL = 57628
const PREPARE = 57629
const DEALLOCATE = 57630
const RESET = 57631
const EXTENSION = 57632
const INCREMENT = 57633
const CYCLE = 57634
const MINVALUE = 57635
const PUBLICATION = 57636
const SUBSCRIPTIONS = 57637
const PUBLICATIONS = 57638
const PROPERTIES = 57639
const PARSER = 57640
const VISIBLE = 57641
const INVISIBLE = 57642
const BTREE = 57643
const HASH = 57644
const RTREE = 57645
const BSI = 57646
const ZONEMAP = 57647
const LEADING = 57648
const BOTH = 57649
const TRAILING = 57650
const UNKNOWN = 57651
const EXPIRE = 57652
const ACCOUNT = 57653
const ACCOUNTS = 57654
const UNLOCK = 57655
const DAY = 57656
const NEVER = 57657
const PUMP = 57658
const MYSQL_COMPATIBILITY_MODE = 57659
const SECOND = 57660
const ASCII = 57661
const COALESCE = 57662
const COLLATION = 57663
const HOUR = 57664
const MICROSECOND = 57665
const MINUTE = 57666
const MONTH = 57667
const QUARTER = 57668
const REPEAT = 57669
const REVERSE = 57670
const ROW_COUNT = 57671
const WEEK = 57672
const REVOKE = 57673
const FUNCTION = 57674
const PRIVILEGES = 57675
const TABLESPACE = 57676
const EXECUTE = 57677
const SUPER = 57678
const GRANT = 57679
const OPTION = 57680
const REFERENCES = 57681
const REPLICATION = 57682
const SLAVE = 57683
const CLIENT = 57684
const USAGE = 57685
const RELOAD = 57686
const FILE = 57687
const TEMPORARY = 57688
const ROUTINE = 57689
const EVENT = 57690
const SHUTDOWN = 57691
const NULLX = 57692
const AUTO_INCREMENT = 57693
const APPROXNUM = 57694
const SIGNED = 57695
const UNSIGNED = 57696
const ZEROFILL = 57697
const ENGINES = 57698
const LOW_CARDINALITY = 57699
const AUTOEXTEND_SIZE = 57700
const ADMIN_NAME = 57701
const RANDOM = 57702
const SUSPEND = 57703
const ATTRIBUTE = 57704
const HISTORY = 57705
const REUSE = 57706
const CURRENT = 57707
const OPTIONAL = 57708
const FAILED_LOGIN_ATTEMPTS = 57709
const PASSWORD_LOCK_TIME = 57710
const UNBOUNDED = 57711
const SECONDARY = 57712
const RESTRICTED = 57713
const USER = 57714
const IDENTIFIED = 57715
const CIPHER = 57716
const ISSUER = 57717
const X509 = 57718
const SUBJECT = 57719
const SAN = 57720
const REQUIRE = 57721
const SSL = 57722
const NONE = 57723
const PASSWORD = 57724
const SHARED = 57725
const EXCLUSIVE = 57726
const MAX_QUERIES_PER_HOUR = 57727
const MAX_UPDATES_PER_HOUR = 57728
const MAX_CONNECTIONS_PER_HOUR = 57729
const MAX_USER_CONNECTIONS = 57730
const FORMAT = 57731
const VERBOSE = 57732
const CONNECTION = 57733
const TRIGGERS = 57734
const PROFILES = 57735
const LOAD = 57736
const INFILE = 57737
const TERMINATED = 57738
const OPTIONALLY = 57739
const ENCLOSED = 57740
const ESCAPED = 57741
const STARTING = 57742
const LINES = 57743
const ROWS = 57744
const IMPORT = 57745
const DISCARD = 57746
const MODUMP = 57747
const OVER = 57748
const PRECEDING = 57749
const FOLLOWING = 57750
const GROUPS = 57751
const DATABASES = 57752
const TABLES = 57753
const SEQUENCES = 57754
const EXTENDED = 57755
const FULL = 57756
const PROCESSLIST = 57757
const FIELDS = 57758
const COLUMNS = 57759
const OPEN = 57760
const ERRORS = 57761
const WARNINGS = 57762
const INDEXES = 57763
const SCHEMAS = 57764
const NODE = 57765
const LOCKS = 57766
const ROLES = 57767
const TABLE_NUMBER = 57768
const COLUMN_NUMBER = 57769
const TABLE_VALUES = 57770
const TABLE_SIZE = 57771
const NAMES = 57772
const GLOBAL = 57773
const PERSIST = 57774
const SESSION = 57775
const ISOLATION = 57776
const LEVEL = 57777
const READ = 57778
const WRITE = 57779
const ONLY = 57780
const REPEATABLE = 57781
const COMMITTED = 57782
const UNCOMMITTED = 57783
const SERIALIZABLE = 57784
const LOCAL = 57785
const EVENTS = 57786
const PLUGINS = 57787
const CURRENT_TIMESTAMP = 57788
const DATABASE = 57789
const CURRENT_TIME = 57790
const LOCALTIME = 57791
const LOCALTIMESTAMP = 57792
const UTC_DATE = 57793
const UTC_TIME = 57794
const UTC_TIMESTAMP = 57795
const REPLACE = 57796
const CONVERT = 57797
const SEPARATOR = 57798
const TIMESTAMPDIFF = 57799
const CURRENT_DATE = 57800
const CURRENT_USER = 57801
const CURRENT_ROLE = 57802
const SECOND_MICROSECOND = 57803
const MINUTE_MICROSECOND = 57804
const MINUTE_SECOND = 57805
const HOUR_MICROSECOND = 57806
const HOUR_SECOND = 57807
const HOUR_MINUTE = 57808
const DAY_MICROSECOND = 57809
const DAY_SECOND = 57810
const DAY_MINUTE = 57811
const DAY_HOUR = 57812
const YEAR_MONTH = 57813
const SQL_TSI_HOUR = 57814
const SQL_TSI_DAY = 57815
const SQL_TSI_WEEK = 57816
const SQL_TSI_MONTH = 57817
const SQL_TSI_QUARTER = 57818
const SQL_TSI_YEAR = 57819
const SQL_TSI_SECOND = 57820
const SQL_TSI_MINUTE = 57821
const RECURSIVE = 57822
const CONFIG = 57823
const DRAINER = 57824
const MATCH = 57825
const AGAINST = 57826
const BOOLEAN = 57827
const LANGUAGE = 57828
const WITH = 57829
const QUERY = 57830
const EXPANSION = 57831
const WITHOUT = 57832
const VALIDATION = 57833
const ADDDATE = 57834
const BIT_AND = 57835
const BIT_OR = 57836
const BIT_XOR = 57837
const CAST = 57838
const COUNT = 57839
const APPROX_COUNT_DISTINCT = 57840
const APPROX_PERCENTILE = 57841
const CURDATE = 57842
const CURTIME = 57843
const DATE_ADD = 57844
const DATE_SUB = 57845
const EXTRACT = 57846
const GROUP_CONCAT = 57847
const MAX = 57848
const MID = 57849
const MIN = 57850
const NOW = 57851
const POSITION = 57852
const SESSION_USER = 57853
const STD = 57854
const STDDEV = 57855
const MEDIAN = 57856
const STDDEV_POP = 57857
const STDDEV_SAMP = 57858
const SUBDATE = 57859
const SUBSTR = 57860
const SUBSTRING = 57861
const SUM = 57862
const SYSDATE = 57863
const SYSTEM_USER = 57864
const TRANSLATE = 57865
const TRIM = 57866
const VARIANCE = 57867
const VAR_POP = 57868
const VAR_SAMP = 57869
const AVG = 57870
const RANK = 57871
const ROW_NUMBER = 57872
const DENSE_RANK = 57873
const NEXTVAL = 57874
const SETVAL = 57875
const CURRVAL = 57876
const LASTVAL = 57877
const ARROW = 57878
const ROW = 57879
const OUTFILE = 57880
const HEADER = 57881
const MAX_FILE_SIZE = 57882
const FORCE_QUOTE = 57883
const PARALLEL = 57884
const UNUSED = 57885
const BINDINGS = 57886
const DO = 57887
const DECLARE = 57888
const LOOP = 57889
const WHILE = 57890
const LEAVE = 57891
const ITERATE = 57892
const UNTIL = 57893
const CALL = 57894
const SPBEGIN = 57895
const BACKEND = 57896
const SERVERS = 57897
const KILL = 57898
const QUERY_RESULT = 57899

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:9864

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 111,
	21, 675,
	-2, 656,
	-1, 125,
	224, 895,
	-2, 966,
	-1, 147,
	42, 497,
	224, 497,
	251, 504,
	252, 504,
	438, 497,
	-2, 530,
	-1, 183,
	576, 1661,
	-2, 415,
	-1, 508,
	303, 130,
	412, 130,
	-2, 1573,
	-1, 571,
	73, 1372,
	-2, 1715,
	-1, 572,
	73, 1390,
	-2, 1686,
	-1, 576,
	73, 1391,
	-2, 1714,
	-1, 601,
	73, 1302,
	-2, 1777,
	-1, 602,
	73, 1303,
	-2, 1776,
	-1, 603,
	73, 1304,
	-2, 1766,
	-1, 604,
	73, 1741,
	-2, 1761,
	-1, 605,
	73, 1742,
	-2, 1762,
	-1, 606,
	73, 1743,
	-2, 1768,
	-1, 607,
	73, 1744,
	-2, 1751,
	-1, 608,
	73, 1745,
	-2, 1759,
	-1, 609,
	73, 1746,
	-2, 1769,
	-1, 610,
	73, 1747,
	-2, 1770,
	-1, 611,
	73, 1748,
	-2, 1775,
	-1, 612,
	73, 1749,
	-2, 1780,
	-1, 613,
	73, 1750,
	-2, 1781,
	-1, 615,
	73, 1369,
	-2, 1562,
	-1, 619,
	73, 1374,
	-2, 1574,
	-1, 622,
	73, 1378,
	-2, 1592,
	-1, 626,
	73, 1382,
	-2, 1632,
	-1, 627,
	73, 1383,
	-2, 1710,
	-1, 635,
	73, 1393,
	-2, 1695,
	-1, 636,
	73, 1394,
	-2, 1740,
	-1, 637,
	73, 1395,
	-2, 1705,
	-1, 638,
	73, 1396,
	-2, 1730,
	-1, 649,
	73, 1280,
	-2, 1771,
	-1, 650,
	73, 1281,
	-2, 1772,
	-1, 651,
	73, 1282,
	-2, 1773,
	-1, 655,
	21, 676,
	-2, 639,
	-1, 725,
	433, 530,
	434, 530,
	-2, 498,
	-1, 768,
	111, 1562,
	122, 1562,
	142, 1562,
	-2, 1537,
	-1, 870,
	21, 676,
	-2, 639,
	-1, 970,
	21, 675,
	-2, 1180,
	-1, 1323,
	73, 1440,
	-2, 1712,
	-1, 1324,
	73, 1441,
	-2, 1713,
	-1, 1458,
	74, 819,
	-2, 825,
	-1, 1816,
	74, 1523,
	143, 1523,
	-2, 1697,
	-1, 1817,
	74, 1523,
	143, 1523,
	-2, 1696,
	-1, 1818,
	74, 1501,
	143, 1501,
	-2, 1683,
	-1, 1819,
	74, 1502,
	143, 1502,
	-2, 1688,
	-1, 1820,
	74, 1503,
	143, 1503,
	-2, 1620,
	-1, 1821,
	74, 1504,
	143, 1504,
	-2, 1614,
	-1, 1822,
	74, 1505,
	143, 1505,
	-2, 1553,
	-1, 1823,
	74, 1506,
	143, 1506,
	-2, 1685,
	-1, 1824,
	74, 1507,
	143, 1507,
	-2, 1618,
	-1, 1825,
	74, 1508,
	143, 1508,
	-2, 1613,
	-1, 1826,
	74, 1509,
	143, 1509,
	-2, 1606,
	-1, 1828,
	74, 1512,
	143, 1512,
	-2, 1730,
	-1, 1829,
	74, 1492,
	143, 1492,
	-2, 1715,
	-1, 1830,
	74, 1521,
	143, 1521,
	-2, 1686,
	-1, 1831,
	74, 1521,
	143, 1521,
	-2, 1714,
	-1, 1832,
	74, 1521,
	143, 1521,
	-2, 1575,
	-1, 1833,
	74, 1519,
	143, 1519,
	-2, 1705,
	-1, 1834,
	74, 1516,
	143, 1516,
	-2, 1597,
	-1, 1835,
	73, 1473,
	74, 1473,
	143, 1473,
	370, 1473,
	371, 1473,
	372, 1473,
	-2, 1552,
	-1, 1836,
	73, 1474,
	74, 1474,
	143, 1474,
	370, 1474,
	371, 1474,
	372, 1474,
	-2, 1554,
	-1, 1837,
	73, 1477,
	74, 1477,
	143, 1477,
	370, 1477,
	371, 1477,
	372, 1477,
	-2, 1687,
	-1, 1838,
	73, 1479,
	74, 1479,
	143, 1479,
	370, 1479,
	371, 1479,
	372, 1479,
	-2, 1670,
	-1, 1839,
	73, 1481,
	74, 1481,
	143, 1481,
	370, 1481,
	371, 1481,
	372, 1481,
	-2, 1619,
	-1, 1840,
	73, 1483,
	74, 1483,
	143, 1483,
	370, 1483,
	371, 1483,
	372, 1483,
	-2, 1602,
	-1, 1841,
	73, 1484,
	74, 1484,
	143, 1484,
	370, 1484,
	371, 1484,
	372, 1484,
	-2, 1603,
	-1, 1842,
	73, 1486,
	74, 1486,
	143, 1486,
	370, 1486,
	371, 1486,
	372, 1486,
	-2, 1551,
	-1, 1843,
	74, 1526,
	143, 1526,
	370, 1526,
	371, 1526,
	372, 1526,
	-2, 1580,
	-1, 1844,
	74, 1526,
	143, 1526,
	370, 1526,
	371, 1526,
	372, 1526,
	-2, 1593,
	-1, 1845,
	74, 1529,
	143, 1529,
	370, 1529,
	371, 1529,
	372, 1529,
	-2, 1576,
	-1, 1846,
	74, 1529,
	143, 1529,
	370, 1529,
	371, 1529,
	372, 1529,
	-2, 1635,
	-1, 1847,
	74, 1526,
	143, 1526,
	370, 1526,
	371, 1526,
	372, 1526,
	-2, 1655,
	-1, 1860,
	94, 930,
	138, 930,
	177, 930,
	180, 930,
	264, 930,
	-2, 923,
	-1, 1989,
	21, 675,
	-2, 769,
	-1, 2178,
	94, 930,
	138, 930,
	177, 930,
	180, 930,
	264, 930,
	-2, 924,
	-1, 2190,
	71, 585,
	143, 585,
	-2, 1069,
	-1, 2212,
	180, 930,
	288, 1148,
	-2, 1122,
	-1, 2506,
	180, 930,
	288, 1148,
	-2, 1123,
	-1, 2647,
	94, 930,
	138, 930,
	177, 930,
	180, 930,
	-2, 1012,
	-1, 2650,
	94, 930,
	138, 930,
	177, 930,
	180, 930,
	-2, 1012,
	-1, 2660,
	71, 585,
	143, 585,
	-2, 1070,
	-1, 2763,
	94, 930,
	138, 930,
	177, 930,
	180, 930,
	-2, 1013,
	-1, 3087,
	74, 984,
	143, 984,
	-2, 930,
	-1, 3091,
	74, 984,
	143, 984,
	-2, 930,
	-1, 3105,
	74, 988,
	143, 988,
	-2, 930,
	-1, 3110,
	74, 989,
	143, 989,
	-2, 930,
}

const yyPrivate = 57344

const yyLast = 37301

var yyAct = [...]int{
	538, 1242, 1521, 3090, 3091, 2757, 174, 3099, 1304, 3070,
	519, 517, 2972, 3029, 2905, 540, 527, 2735, 2995, 2520,
	3017, 2894, 2730, 2788, 2923, 1794, 2924, 2545, 1107, 1300,
	2886, 1165, 2603, 2756, 2821, 2909, 2604, 2755, 1001, 425,
	2848, 656, 767, 2811, 2733, 2895, 1232, 2897, 431, 1479,
	436, 436, 568, 2762, 2193, 1307, 436, 452, 461, 2478,
	2725, 461, 2670, 2300, 1610, 2631, 2301, 2285, 2535, 1899,
	2507, 2293, 1575, 521, 2601, 1983, 2082, 1671, 2589, 1814,
	2299, 472, 2322, 1702, 2765, 159, 2572, 2296, 2451, 2454,
	1607, 2449, 2534, 2208, 1902, 1869, 1065, 864, 466, 1622,
	2179, 1812, 1804, 1967, 2398, 1223, 2081, 516, 510, 2476,
	511, 1698, 2359, 2123, 1680, 1228, 1672, 1679, 36, 2031,
	1158, 2342, 1440, 1603, 1481, 1083, 1645, 1697, 702, 1578,
	773, 2156, 1984, 2214, 1241, 1972, 1508, 1900, 1448, 2161,
	1517, 1868, 1466, 1233, 6, 2479, 170, 8, 169, 7,
	2048, 425, 1576, 818, 1236, 1730, 1298, 1699, 1081, 2011,
	1197, 520, 1174, 110, 1853, 1810, 35, 1144, 53, 430,
	2481, 2480, 1490, 1303, 174, 458, 174, 509, 809, 810,
	1491, 1709, 1353, 1337, 528, 881, 1678, 511, 1289, 1675,
	732, 26, 1204, 761, 1115, 771, 1635, 1096, 15, 760,
	1297, 518, 448, 1661, 1991, 13, 445, 1465, 653, 1092,
	1143, 1359, 1358, 474, 2124, 23, 14, 16, 10, 32,
	701, 1141, 1108, 160, 1196, 1063, 684, 2392, 2392, 153,
	475, 1039, 424, 1716, 699, 720, 460, 1002, 512, 156,
	2084, 1706, 655, 2596, 2037, 2035, 2034, 2032, 457, 1211,
	1207, 806, 801, 802, 802, 453, 802, 158, 432, 805,
	1128, 807, 455, 2723, 2355, 1209, 939, 940, 941, 938,
	2353, 1650, 2817, 456, 2812, 2726, 454, 939, 940, 941,
	938, 2602, 1444, 441, 996, 2899, 1674, 654, 157, 1930,
	49, 149, 126, 664, 1379, 2748, 902, 464, 2069, 2077,
	2963, 157, 2747, 800, 2859, 8, 2869, 7, 157, 1055,
	1703, 157, 157, 157, 157, 470, 157, 2421, 774, 1714,
	2009, 776, 1857, 777, 1124, 936, 1116, 1125, 471, 2329,
	2330, 1256, 1249, 157, 1620, 49, 149, 126, 1588, 1589,
	2010, 1290, 2328, 157, 1294, 49, 149, 126, 2860, 1587,
	109, 154, 2049, 1253, 1246, 2374, 2367, 1274, 109, 644,
	1056, 643, 645, 646, 154, 647, 648, 1997, 1293, 657,
	1996, 154, 741, 1998, 1255, 1248, 154, 154, 1104, 154,
	1452, 1453, 1504, 2158, 786, 783, 778, 782, 784, 1145,
	665, 1147, 917, 2159, 1306, 918, 154, 3013, 910, 3011,
	2743, 912, 1113, 1114, 746, 934, 154, 745, 2927, 2928,
	803, 804, 789, 1127, 1111, 808, 781, 770, 1110, 1113,
	1114, 929, 769, 920, 2902, 2959, 2901, 2958, 2902, 913,
	2900, 2957, 2901, 2900, 1785, 436, 2999, 3000, 2819, 2360,
	2157, 2822, 2823, 2824, 2825, 436, 874, 1295, 2888, 1375,
	2605, 873, 2962, 1372, 2888, 2891, 2815, 1374, 1371, 1373,
	1377, 1378, 2605, 461, 461, 1376, 436, 787, 1292, 2361,
	2064, 2362, 884, 875, 790, 1309, 2904, 2164, 2241, 2614,
	1594, 1604, 2753, 869, 871, 1210, 1208, 2632, 2463, 1285,
	1710, 779, 125, 750, 155, 2639, 1962, 1852, 915, 1658,
	1217, 1216, 1598, 812, 906, 2530, 693, 2148, 2465, 905,
	747, 2385, 788, 931, 147, 2724, 884, 2455, 2289, 2840,
	2387, 2354, 2074, 772, 972, 1928, 1965, 908, 1393, 2742,
	2459, 932, 933, 2965, 2966, 868, 2744, 1964, 2843, 911,
	914, 2460, 2461, 2750, 1968, 2543, 2544, 505, 3006, 3015,
	507, 897, 780, 2926, 1922, 506, 2475, 2462, 2485, 916,
	1102, 2856, 2915, 1715, 2186, 907, 1126, 463, 458, 458,
	874, 749, 462, 870, 2694, 1006, 1618, 1619, 1315, 1318,
	1319, 2910, 3084, 1291, 1308, 1136, 3045, 3100, 3038, 1316,
	1719, 1721, 1722, 469, 3010, 2685, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1382, 1383, 1384,
	1385, 1386, 1387, 1380, 1381, 774, 2833, 3049, 776, 2834,
	777, 2974, 1091, 927, 928, 2970, 2971, 785, 2974, 2833,
	2699, 2457, 2834, 2674, 919, 2789, 2790, 2791, 2793, 2792,
	909, 457, 457, 1005, 2547, 1939, 748, 2828, 453, 453,
	1938, 888, 877, 878, 2680, 455, 455, 1704, 2269, 1704,
	886, 885, 3020, 2618, 2391, 2170, 456, 456, 1154, 454,
	454, 1704, 2836, 1959, 1960, 1061, 431, 1064, 2173, 2174,
	2175, 2176, 1153, 2013, 895, 2836, 774, 2652, 1089, 776,
	1088, 777, 3071, 3101, 1036, 1106, 1105, 1087, 894, 890,
	891, 702, 3095, 2835, 886, 885, 3107, 2849, 865, 2437,
	802, 802, 802, 802, 978, 2857, 2835, 802, 1731, 802,
	2721, 2964, 1918, 2858, 1066, 974, 975, 976, 977, 1920,
	879, 2033, 1717, 470, 459, 2885, 2324, 2326, 1112, 1905,
	922, 1705, 1212, 923, 459, 1071, 1142, 436, 1109, 1138,
	902, 2070, 942, 2001, 425, 425, 1926, 1113, 1114, 1113,
	1114, 971, 1921, 425, 425, 654, 2163, 1169, 1169, 980,
	436, 925, 3016, 1707, 1103, 1067, 1068, 1069, 1070, 2749,
	1072, 1908, 127, 2078, 1076, 2390, 1919, 3021, 461, 1064,
	431, 985, 1200, 1200, 50, 127, 1167, 1167, 896, 1171,
	1176, 1605, 127, 174, 50, 127, 127, 127, 127, 2466,
	127, 772, 425, 2456, 1317, 1014, 1015, 2841, 2388, 1075,
	2167, 2168, 2458, 2339, 2340, 2754, 1720, 127, 3094, 1718,
	1074, 1073, 2546, 901, 1090, 2166, 2242, 127, 2243, 2244,
	2687, 1100, 465, 2445, 2239, 1062, 921, 1595, 1078, 1118,
	1119, 2147, 1121, 1122, 1123, 742, 1286, 793, 798, 799,
	1798, 1240, 1059, 1243, 1218, 1455, 2676, 1456, 1251, 1597,
	2675, 2681, 2682, 1904, 696, 697, 698, 3106, 1906, 1041,
	2400, 2399, 926, 1583, 1797, 1163, 1164, 1454, 1272, 1800,
	1799, 2270, 2272, 2273, 2274, 2271, 2325, 1043, 1257, 2473,
	1057, 1058, 1169, 666, 1169, 874, 655, 924, 694, 1909,
	1305, 1098, 1099, 2829, 1951, 3018, 3019, 2896, 742, 1267,
	1268, 2260, 2261, 667, 2771, 1221, 2829, 1224, 1225, 1137,
	2830, 658, 1907, 435, 435, 1080, 3050, 1482, 744, 443,
	1482, 743, 937, 1981, 1129, 1130, 1762, 1149, 1151, 1761,
	1855, 2191, 2569, 1230, 1231, 1807, 1161, 1162, 1117, 1193,
	3113, 1120, 1925, 902, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 3112, 3068, 1808, 1809,
	1348, 1349, 3103, 1247, 1357, 658, 1152, 1254, 3085, 2051,
	3080, 670, 2565, 1396, 1397, 1398, 2648, 1406, 458, 1638,
	1235, 744, 1788, 1239, 743, 1213, 1412, 441, 1281, 1413,
	1187, 1271, 1177, 1238, 1192, 1302, 1288, 1201, 937, 1270,
	3033, 1420, 1421, 1415, 1191, 2474, 1202, 1287, 3074, 937,
	1199, 1199, 2259, 777, 795, 796, 797, 777, 1093, 1097,
	1097, 1097, 669, 3073, 3054, 937, 672, 671, 2490, 3031,
	2989, 3104, 1320, 1854, 1283, 937, 1982, 1712, 751, 3081,
	2938, 1093, 1093, 1741, 1982, 1438, 436, 2569, 1464, 1169,
	1468, 457, 1470, 1471, 2929, 1299, 1094, 436, 453, 2192,
	702, 1280, 1263, 1480, 1792, 455, 2879, 1169, 1277, 939,
	940, 941, 938, 1138, 1259, 1276, 456, 1712, 452, 454,
	900, 655, 1258, 1441, 2878, 1279, 2874, 1278, 1275, 1037,
	2069, 1405, 1712, 1712, 1296, 899, 1982, 1503, 3032, 2990,
	2192, 1388, 1389, 2873, 1392, 1509, 1509, 1636, 1138, 2845,
	1138, 1138, 1407, 1301, 436, 1740, 1464, 1464, 1507, 2872,
	1169, 1573, 1585, 2845, 902, 1414, 2153, 1416, 1463, 1339,
	2150, 2056, 1469, 2871, 2013, 2880, 425, 1703, 1169, 939,
	940, 941, 938, 939, 940, 941, 938, 1586, 1346, 1347,
	1472, 1473, 1474, 1873, 1892, 2845, 1310, 1311, 1312, 1313,
	1314, 1793, 1095, 436, 1464, 1169, 1766, 1627, 900, 436,
	1630, 1631, 2845, 1694, 2844, 1616, 1634, 2702, 1079, 2555,
	1640, 1391, 2319, 867, 2638, 1791, 2129, 174, 2845, 2419,
	174, 174, 1351, 174, 1488, 1489, 1568, 1569, 1155, 1524,
	1355, 1356, 2845, 1511, 2663, 1496, 1390, 2491, 1417, 2344,
	2194, 1498, 1499, 2072, 1400, 2071, 1599, 2063, 2085, 1889,
	1502, 1757, 1467, 1505, 1506, 2067, 1439, 2060, 2058, 1406,
	1406, 1682, 2053, 2046, 1613, 1614, 1406, 1406, 2044, 1742,
	1485, 1689, 1510, 2845, 1624, 2801, 2013, 1626, 2556, 1606,
	1591, 1982, 1593, 1445, 954, 937, 2042, 1442, 1693, 2040,
	1643, 1446, 1611, 1612, 1449, 1480, 1483, 1484, 1629, 1169,
	1701, 1492, 1649, 1494, 1495, 1652, 1653, 1487, 1655, 1476,
	1477, 1460, 1513, 1514, 1493, 1260, 1500, 937, 1512, 983,
	1501, 887, 1872, 1467, 1873, 2700, 2054, 2059, 866, 1789,
	1770, 2054, 2047, 1769, 1760, 1751, 1750, 2045, 872, 867,
	1749, 1683, 1711, 862, 1695, 1264, 1993, 860, 1615, 1133,
	2495, 1135, 1724, 1139, 1140, 2041, 1574, 1572, 2041, 893,
	1395, 1394, 2382, 2486, 668, 1600, 1728, 1729, 1299, 1590,
	1094, 1592, 2916, 1677, 957, 958, 959, 960, 961, 954,
	1677, 1157, 1182, 1183, 1184, 1185, 1186, 2772, 1188, 1189,
	1190, 1873, 2655, 458, 1195, 1625, 2653, 1084, 1788, 937,
	3063, 1085, 937, 937, 937, 937, 1646, 1442, 1644, 937,
	1159, 1712, 1442, 1442, 1265, 867, 2917, 3051, 1621, 1923,
	2678, 1160, 774, 2677, 1093, 776, 1345, 777, 2487, 774,
	1767, 2773, 776, 2570, 777, 2560, 2656, 1774, 1497, 2557,
	2654, 1663, 1342, 1344, 1341, 2393, 1343, 2291, 2057, 1097,
	2003, 876, 2594, 1686, 1648, 1684, 2032, 1651, 2092, 1426,
	1654, 1692, 2026, 1656, 1647, 1354, 457, 1737, 510, 1156,
	874, 1848, 2488, 453, 1354, 1815, 1095, 1691, 2346, 1462,
	455, 673, 2956, 436, 436, 436, 1696, 1870, 1205, 938,
	1647, 456, 941, 938, 454, 2689, 2688, 1877, 1138, 1687,
	2363, 1688, 2226, 3048, 939, 940, 941, 938, 1882, 2225,
	2101, 1795, 1796, 1732, 774, 2597, 1723, 776, 2220, 777,
	2218, 2667, 1138, 939, 940, 941, 938, 3089, 3077, 874,
	1913, 2751, 2595, 2116, 1898, 1725, 1339, 2294, 859, 855,
	856, 857, 858, 3039, 2106, 1736, 2105, 2104, 2102, 939,
	940, 941, 938, 3047, 1726, 1727, 1418, 1419, 2094, 3034,
	1422, 1423, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 939, 940, 941, 938, 2752, 1924, 2976, 953,
	952, 962, 963, 955, 956, 957, 958, 959, 960, 961,
	954, 1986, 1986, 1585, 1986, 2947, 541, 550, 1764, 2918,
	1734, 2636, 542, 1738, 549, 543, 547, 546, 544, 545,
	2103, 505, 425, 425, 507, 939, 940, 941, 938, 506,
	874, 2281, 2861, 1879, 1880, 1006, 1169, 436, 2813, 2780,
	1849, 2775, 2774, 1883, 1884, 2657, 1885, 2635, 2464, 436,
	1134, 2378, 1748, 874, 431, 1801, 2637, 1200, 1815, 1585,
	1755, 2358, 2021, 2279, 2023, 2007, 2277, 551, 174, 1856,
	1784, 1786, 1787, 1175, 2357, 1990, 2280, 1988, 1768, 1992,
	1878, 1771, 1772, 1773, 1894, 2266, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1891, 939, 940, 941, 938, 548,
	2264, 2263, 1999, 1005, 2000, 2262, 2036, 1410, 2278, 1897,
	1896, 2276, 1890, 2254, 2065, 2248, 1886, 1701, 1411, 1887,
	2247, 2920, 2004, 2005, 1169, 1888, 1169, 2246, 1169, 2245,
	2265, 2020, 2450, 874, 939, 940, 941, 938, 2079, 1666,
	1665, 1874, 1664, 2028, 939, 940, 941, 938, 2015, 1660,
	1659, 2107, 2108, 2027, 1261, 2075, 1739, 1966, 939, 940,
	941, 938, 1169, 2110, 1054, 3005, 774, 1206, 2731, 776,
	3001, 777, 2960, 2883, 1994, 2842, 2814, 2779, 2117, 2778,
	2018, 2761, 2412, 1169, 939, 940, 941, 938, 2729, 2025,
	2727, 1167, 1205, 2109, 2706, 2704, 2119, 2286, 2669, 2008,
	2634, 1628, 962, 963, 955, 956, 957, 958, 959, 960,
	961, 954, 1167, 2633, 2118, 1149, 1151, 2019, 2016, 939,
	940, 941, 938, 2017, 2630, 2623, 2617, 874, 2083, 2121,
	2564, 2562, 2151, 2411, 2553, 1745, 2552, 2442, 2863, 2096,
	955, 956, 957, 958, 959, 960, 961, 954, 2441, 2389,
	1442, 2356, 1442, 2333, 1097, 2076, 939, 940, 941, 938,
	2908, 2090, 939, 940, 941, 938, 2737, 2062, 2275, 2267,
	1442, 1442, 1753, 2140, 2068, 1169, 2066, 2257, 2171, 2255,
	2073, 2251, 1464, 939, 940, 941, 938, 2250, 2190, 939,
	940, 941, 938, 2249, 2196, 1199, 1790, 1299, 600, 599,
	2981, 1668, 2086, 2087, 2125, 1662, 1451, 1262, 1013, 2130,
	2205, 1009, 2826, 1008, 2100, 2154, 874, 939, 940, 941,
	938, 1898, 984, 863, 2217, 157, 2650, 2649, 149, 126,
	2647, 1752, 2222, 2223, 2622, 2224, 2609, 2600, 2599, 2227,
	2228, 2229, 1509, 1225, 945, 946, 947, 948, 949, 950,
	951, 943, 2144, 2089, 939, 940, 941, 938, 2736, 2588,
	2587, 2141, 2181, 1986, 2496, 2180, 2187, 1230, 1231, 1461,
	2417, 2410, 2402, 2397, 2341, 2152, 2149, 2282, 2197, 2043,
	1475, 939, 940, 941, 938, 425, 2039, 2038, 154, 1464,
	874, 1585, 1585, 1585, 1585, 2302, 2093, 1524, 2212, 1775,
	1765, 1763, 874, 1585, 2111, 2112, 1986, 2302, 1235, 1759,
	1758, 1239, 2114, 2115, 1756, 1747, 2215, 2169, 2698, 2216,
	2215, 1238, 1169, 1744, 2198, 2120, 2199, 1743, 1667, 2189,
	2201, 1437, 2202, 2203, 436, 436, 2195, 1515, 8, 1436,
	7, 939, 940, 941, 938, 2620, 1435, 1442, 1467, 174,
	2142, 2143, 1449, 2207, 174, 1409, 1408, 2213, 1399, 2219,
	1181, 2211, 1179, 3102, 3062, 2315, 3056, 3046, 939, 940,
	941, 938, 157, 2415, 3043, 1406, 3041, 1406, 2231, 2946,
	2373, 2881, 1003, 1220, 2377, 2797, 1623, 2785, 2781, 2715,
	1169, 2713, 1623, 2384, 2696, 2256, 939, 940, 941, 938,
	2695, 2692, 2691, 2204, 1929, 2684, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 2287, 2642, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 2292, 1952, 1953, 1954,
	1955, 1956, 2316, 1957, 2347, 154, 2314, 1441, 2318, 2351,
	655, 1229, 2372, 2303, 2304, 2305, 2306, 2334, 2327, 2331,
	1222, 1082, 2283, 2370, 2221, 2184, 2183, 2182, 1234, 2376,
	2414, 1237, 2317, 1226, 2139, 2052, 2002, 2345, 1958, 1871,
	2349, 2405, 2381, 2407, 874, 1340, 2348, 154, 2290, 1815,
	2386, 2453, 1632, 939, 940, 941, 938, 1459, 2364, 2369,
	1458, 2468, 2368, 436, 2371, 2366, 1284, 1250, 1227, 2375,
	1038, 2380, 1035, 874, 874, 874, 1034, 1033, 1898, 1898,
	1898, 2394, 1585, 1870, 1032, 2494, 2395, 1031, 1030, 1029,
	1028, 2498, 1027, 2401, 1026, 1025, 1024, 2403, 2404, 2200,
	690, 874, 2408, 2409, 1023, 2533, 2503, 2536, 1022, 2536,
	2536, 2406, 777, 2472, 1021, 1020, 2541, 1019, 1018, 777,
	1017, 2444, 1016, 1012, 1011, 1010, 2422, 1007, 1169, 1169,
	2423, 2424, 2425, 2426, 1000, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2443, 2438, 2446, 999, 2548, 997, 553,
	111, 996, 995, 2180, 2492, 111, 994, 1167, 1167, 2549,
	2550, 2350, 993, 2352, 2448, 2469, 2979, 2413, 992, 2471,
	991, 990, 2531, 2532, 436, 989, 2489, 988, 2493, 2453,
	987, 1442, 986, 2482, 2483, 2138, 1442, 2526, 1464, 1464,
	939, 940, 941, 938, 982, 2504, 981, 904, 861, 2573,
	2574, 2537, 2538, 442, 2937, 2935, 111, 2539, 939, 940,
	941, 938, 2933, 2497, 777, 2502, 2137, 2499, 2500, 2931,
	2501, 2693, 1876, 2396, 2579, 1859, 692, 2136, 687, 2925,
	677, 892, 3088, 2576, 2172, 2110, 2135, 689, 688, 939,
	940, 941, 938, 2014, 2598, 2416, 1862, 1863, 1864, 1670,
	939, 940, 941, 938, 675, 903, 2578, 2308, 681, 939,
	940, 941, 938, 2311, 2307, 777, 2061, 2559, 2312, 2558,
	96, 1881, 2563, 2554, 2309, 2566, 2567, 52, 51, 2310,
	2055, 436, 2577, 952, 962, 963, 955, 956, 957, 958,
	959, 960, 961, 954, 2581, 2134, 2313, 2160, 1978, 1979,
	2146, 2561, 686, 2133, 775, 2209, 685, 2210, 111, 2584,
	2585, 2586, 674, 2132, 2593, 2568, 680, 1560, 939, 940,
	941, 938, 2131, 111, 438, 111, 939, 940, 941, 938,
	2580, 439, 440, 678, 1927, 2610, 939, 940, 941, 938,
	433, 2447, 2611, 2439, 2440, 939, 940, 941, 938, 2128,
	2540, 2612, 1214, 2127, 676, 2613, 2233, 2050, 2718, 2616,
	2717, 2080, 2126, 2234, 2235, 2236, 2646, 2624, 693, 2237,
	2238, 1040, 939, 940, 941, 938, 939, 940, 941, 938,
	1986, 1585, 2660, 2252, 2253, 939, 940, 941, 938, 1244,
	1175, 437, 1850, 2122, 679, 659, 660, 661, 662, 2113,
	2716, 1633, 1623, 2626, 898, 1169, 2903, 2288, 658, 1795,
	1796, 2629, 2668, 2206, 2155, 2628, 939, 940, 941, 938,
	2091, 436, 939, 940, 941, 938, 1350, 1866, 1478, 1457,
	2533, 2641, 1395, 1394, 2671, 1052, 1053, 1050, 1051, 2662,
	1048, 1049, 1169, 939, 940, 941, 938, 1046, 1047, 939,
	940, 941, 938, 2659, 2992, 2658, 1464, 2783, 1969, 2551,
	874, 1963, 1571, 1180, 1132, 2302, 2531, 2666, 1131, 691,
	930, 1167, 2583, 2701, 2012, 1690, 1086, 1042, 3057, 2968,
	2953, 2526, 2951, 2720, 2911, 2893, 174, 1974, 1977, 1978,
	1979, 1975, 2892, 1976, 1980, 2890, 2882, 2808, 2697, 874,
	2709, 2807, 2728, 2625, 2302, 2607, 2606, 2661, 659, 660,
	661, 662, 2591, 2664, 2703, 2705, 2665, 2745, 1045, 658,
	2343, 658, 2590, 2982, 1482, 2711, 2710, 965, 2379, 969,
	2983, 2982, 2983, 874, 1169, 1169, 2708, 1861, 1746, 874,
	2764, 2619, 2707, 2764, 1898, 966, 968, 964, 2621, 967,
	953, 952, 962, 963, 955, 956, 957, 958, 959, 960,
	961, 954, 2732, 1167, 2671, 2759, 1974, 1977, 1978, 1979,
	1975, 2722, 1976, 1980, 889, 2686, 2608, 2746, 2335, 161,
	3, 1101, 874, 874, 60, 2, 874, 874, 1146, 1995,
	1617, 1173, 1, 1450, 2769, 2768, 663, 2760, 2766, 111,
	111, 775, 2320, 2321, 1480, 2662, 2805, 3078, 2794, 2582,
	2323, 1708, 1961, 1851, 2809, 2810, 2799, 2467, 1077, 2786,
	2787, 695, 1401, 2795, 2796, 1269, 2738, 792, 2802, 2782,
	883, 1266, 882, 880, 1352, 555, 1673, 2284, 2839, 2258,
	2804, 2188, 2991, 3028, 2945, 2994, 1282, 539, 2832, 2884,
	2818, 2949, 2820, 2803, 2734, 1713, 2851, 953, 952, 962,
	963, 955, 956, 957, 958, 959, 960, 961, 954, 935,
	2365, 716, 970, 2776, 2777, 591, 874, 2827, 566, 2831,
	2837, 998, 1252, 1245, 2420, 794, 565, 2640, 874, 2165,
	1442, 1169, 2338, 2855, 2846, 791, 717, 1657, 2852, 1442,
	2854, 2816, 2712, 2853, 1215, 2714, 1379, 1219, 2862, 2770,
	2651, 2865, 2484, 2870, 2185, 3098, 3087, 3069, 3055, 2719,
	1167, 2973, 2876, 3083, 3009, 2875, 3044, 2741, 2739, 2740,
	3037, 2969, 476, 1596, 423, 2898, 874, 758, 2798, 1669,
	477, 1875, 2961, 2912, 2784, 2889, 2887, 682, 1858, 683,
	2178, 2177, 1321, 944, 1338, 2435, 2436, 2921, 979, 515,
	3060, 1735, 2907, 2162, 2521, 2332, 59, 58, 1169, 2906,
	57, 2940, 2943, 56, 1639, 182, 2930, 2932, 2934, 2936,
	2914, 2919, 704, 557, 181, 2942, 2996, 2336, 2337, 537,
	536, 535, 534, 533, 1973, 2944, 1971, 1167, 1970, 2939,
	1580, 1579, 1637, 2952, 1169, 2954, 2955, 1044, 2950, 2948,
	953, 952, 962, 963, 955, 956, 957, 958, 959, 960,
	961, 954, 2542, 2230, 2967, 1917, 1910, 1516, 2922, 2867,
	2868, 2683, 2268, 1167, 1530, 2975, 2240, 2998, 2977, 2980,
	2978, 1527, 1526, 2232, 2679, 2984, 2673, 2985, 2988, 2986,
	742, 2987, 2997, 1557, 2763, 2505, 2506, 2512, 1865, 874,
	817, 1375, 813, 2898, 3007, 1372, 3002, 815, 3003, 1374,
	1371, 1373, 1377, 1378, 816, 814, 2099, 1376, 3012, 3014,
	2095, 3027, 1893, 2477, 1806, 1805, 1803, 2847, 1802, 3023,
	3024, 3025, 3026, 3030, 3022, 1060, 2838, 3035, 2627, 874,
	1813, 1811, 2575, 2571, 1305, 1681, 1447, 3036, 2145, 1581,
	2864, 1577, 1860, 3040, 87, 3042, 86, 2643, 2644, 2645,
	94, 138, 1178, 2998, 3053, 46, 166, 442, 165, 168,
	167, 164, 874, 744, 874, 2029, 743, 1305, 2997, 1305,
	3059, 3052, 3061, 2030, 163, 1203, 2470, 162, 3064, 2767,
	652, 3030, 111, 874, 3065, 37, 33, 12, 1305, 3079,
	3072, 3076, 3082, 11, 34, 985, 21, 22, 20, 1273,
	729, 19, 25, 31, 30, 104, 103, 29, 705, 102,
	3093, 3086, 101, 100, 3097, 3096, 99, 98, 28, 18,
	3058, 3105, 41, 40, 3108, 39, 9, 93, 3093, 3111,
	3110, 91, 3109, 3097, 27, 707, 92, 89, 90, 88,
	71, 70, 69, 84, 111, 83, 82, 81, 111, 1382,
	1383, 1384, 1385, 1386, 1387, 1380, 1381, 80, 79, 111,
	77, 78, 715, 68, 157, 67, 49, 149, 126, 111,
	953, 952, 962, 963, 955, 956, 957, 958, 959, 960,
	961, 954, 66, 65, 150, 64, 75, 1623, 2418, 85,
	76, 142, 74, 73, 72, 151, 63, 62, 728, 727,
	61, 123, 124, 122, 121, 120, 109, 119, 118, 117,
	42, 43, 44, 45, 134, 726, 133, 135, 137, 139,
	136, 97, 131, 129, 703, 132, 130, 154, 128, 54,
	17, 24, 4, 0, 0, 706, 737, 0, 953, 952,
	962, 963, 955, 956, 957, 958, 959, 960, 961, 954,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 0, 0, 0, 0, 487, 0, 486,
	493, 483, 0, 0, 0, 2800, 0, 0, 0, 0,
	0, 490, 491, 0, 492, 496, 0, 0, 478, 0,
	0, 0, 0, 0, 2615, 734, 738, 0, 501, 0,
	113, 114, 0, 115, 116, 0, 0, 0, 0, 0,
	3067, 0, 0, 723, 0, 721, 725, 741, 0, 0,
	0, 722, 719, 718, 0, 724, 709, 710, 708, 711,
	712, 713, 714, 0, 739, 0, 740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 735, 736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 148,
	155, 0, 95, 0, 2088, 0, 2877, 0, 0, 0,
	0, 0, 0, 0, 731, 0, 0, 0, 0, 0,
	147, 141, 140, 0, 0, 0, 0, 55, 953, 952,
	962, 963, 955, 956, 957, 958, 959, 960, 961, 954,
	0, 1733, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1584, 0, 0, 0, 0, 0, 2913, 0, 0,
	0, 0, 0, 0, 2690, 953, 952, 962, 963, 955,
	956, 957, 958, 959, 960, 961, 954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 143, 144,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 481, 480, 0, 0, 0, 0, 0, 0,
	0, 485, 0, 0, 152, 0, 111, 0, 0, 111,
	111, 0, 111, 489, 0, 0, 0, 0, 0, 0,
	504, 0, 105, 0, 0, 0, 146, 482, 106, 0,
	0, 0, 358, 573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 775, 0,
	0, 0, 0, 0, 0, 775, 529, 3004, 0, 0,
	266, 0, 0, 291, 111, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 0, 0, 350, 305, 0, 0,
	0, 0, 623, 631, 0, 107, 0, 0, 0, 0,
	0, 0, 0, 0, 522, 0, 48, 554, 600, 599,
	541, 550, 0, 0, 244, 180, 542, 0, 549, 543,
	547, 546, 544, 545, 0, 615, 0, 0, 0, 0,
	0, 0, 513, 526, 0, 530, 0, 0, 0, 484,
	488, 494, 0, 495, 497, 0, 0, 498, 499, 500,
	970, 0, 502, 503, 0, 50, 0, 0, 0, 523,
	524, 0, 0, 0, 0, 574, 0, 525, 0, 0,
	569, 551, 552, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 127, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 548, 572, 576, 260, 637, 570, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 638, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 108, 38, 0, 0,
	0, 0, 567, 47, 5, 0, 381, 112, 0, 621,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	571, 0, 341, 323, 634, 514, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 1403, 1402, 1404, 393, 273, 227,
	228, 429, 619, 319, 0, 0, 633, 614, 616, 617,
	620, 624, 625, 626, 627, 628, 630, 632, 636, 428,
	0, 0, 0, 0, 0, 427, 325, 0, 344, 0,
	0, 0, 1989, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	635, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	575, 0, 0, 309, 310, 311, 312, 622, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 1584, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 833, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 644, 618, 643, 645, 646, 642,
	647, 648, 629, 532, 0, 579, 640, 639, 641, 953,
	952, 962, 963, 955, 956, 957, 958, 959, 960, 961,
	954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	607, 584, 585, 586, 531, 587, 582, 583, 608, 577,
	604, 605, 556, 580, 588, 603, 589, 606, 609, 610,
	649, 650, 595, 651, 592, 611, 602, 601, 590, 578,
	612, 613, 563, 558, 593, 594, 581, 596, 597, 598,
	559, 560, 561, 562, 0, 821, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 0, 0, 0, 0, 833,
	0, 0, 0, 0, 0, 841, 845, 847, 849, 851,
	852, 854, 0, 859, 855, 856, 857, 858, 0, 836,
	837, 838, 839, 819, 820, 842, 0, 822, 0, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 834,
	840, 0, 0, 0, 0, 0, 0, 0, 844, 846,
	848, 850, 853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 111, 0, 0, 0, 835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 821, 0,
	0, 0, 811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 841, 845,
	847, 849, 851, 852, 854, 0, 859, 855, 856, 857,
	858, 0, 836, 837, 838, 839, 819, 820, 842, 833,
	822, 0, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 834, 840, 0, 0, 0, 0, 0, 0,
	0, 844, 846, 848, 850, 853, 0, 0, 0, 0,
	1584, 1584, 1584, 1584, 0, 0, 0, 0, 0, 0,
	0, 0, 1584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 835, 0,
	0, 0, 0, 0, 0, 0, 2097, 2098, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 0,
	0, 0, 0, 111, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 821, 0,
	0, 0, 0, 111, 0, 0, 0, 0, 0, 0,
	111, 0, 0, 0, 0, 0, 0, 0, 841, 845,
	847, 849, 851, 852, 854, 0, 859, 855, 856, 857,
	858, 0, 836, 837, 838, 839, 819, 820, 842, 0,
	822, 0, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 834, 840, 0, 0, 358, 573, 0, 0,
	0, 844, 846, 848, 850, 853, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 266, 1443, 0, 291, 843, 0,
	0, 0, 0, 0, 0, 0, 0, 564, 835, 0,
	350, 305, 0, 0, 0, 111, 623, 631, 0, 0,
	0, 0, 0, 0, 0, 1608, 0, 0, 522, 0,
	0, 554, 600, 599, 541, 550, 0, 0, 244, 180,
	542, 0, 549, 543, 547, 546, 544, 545, 0, 615,
	0, 1584, 0, 0, 0, 0, 513, 526, 0, 530,
	0, 0, 0, 0, 0, 0, 111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 523, 524, 0, 0, 0, 0, 574,
	0, 525, 0, 0, 1609, 551, 552, 0, 0, 0,
	0, 235, 355, 371, 245, 346, 384, 250, 353, 240,
	320, 343, 0, 0, 237, 369, 352, 302, 285, 286,
	236, 843, 338, 264, 277, 261, 318, 548, 572, 576,
	260, 637, 570, 379, 239, 0, 378, 317, 365, 370,
	303, 297, 238, 367, 301, 296, 289, 268, 638, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 567, 0, 0, 0,
	381, 0, 0, 621, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 571, 0, 341, 323, 634, 514,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	230, 357, 263, 304, 241, 243, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 251,
	340, 252, 279, 253, 231, 255, 254, 256, 347, 257,
	233, 327, 364, 0, 275, 336, 300, 234, 299, 328,
	363, 362, 242, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 843, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 227, 228, 429, 619, 319, 0, 0,
	633, 614, 616, 617, 620, 624, 625, 626, 627, 628,
	630, 632, 636, 428, 0, 0, 0, 0, 0, 427,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 0, 232, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 0, 0, 0, 385, 0,
	1584, 0, 0, 0, 575, 0, 0, 309, 310, 311,
	312, 622, 0, 249, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 644, 618,
	643, 645, 646, 642, 647, 648, 629, 532, 0, 579,
	640, 639, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 111, 229, 0, 292, 0,
	333, 271, 0, 0, 607, 584, 585, 586, 531, 587,
	582, 583, 608, 577, 604, 605, 556, 580, 588, 603,
	589, 606, 609, 610, 649, 650, 595, 651, 592, 611,
	602, 601, 590, 578, 612, 613, 563, 558, 593, 594,
	581, 596, 597, 598, 559, 560, 561, 562, 157, 358,
	573, 389, 390, 391, 413, 375, 0, 426, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 266, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	973, 0, 0, 350, 305, 0, 0, 0, 0, 623,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 522, 0, 0, 554, 600, 599, 541, 550, 0,
	0, 244, 180, 542, 0, 549, 543, 547, 546, 544,
	545, 0, 615, 0, 0, 0, 0, 0, 0, 513,
	526, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 0, 0,
	0, 0, 574, 0, 525, 0, 0, 569, 551, 552,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	548, 572, 576, 260, 637, 570, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 638, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 567,
	0, 0, 0, 381, 0, 0, 621, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 571, 0, 341,
	323, 634, 514, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 429, 619,
	319, 0, 0, 633, 614, 616, 617, 620, 624, 625,
	626, 627, 628, 630, 632, 636, 428, 0, 0, 0,
	0, 0, 427, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 635, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 575, 0, 0,
	309, 310, 311, 312, 622, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 644, 618, 643, 645, 646, 642, 647, 648, 629,
	532, 0, 579, 640, 639, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 127, 333, 271, 0, 0, 607, 584, 585,
	586, 531, 587, 582, 583, 608, 577, 604, 605, 556,
	580, 588, 603, 589, 606, 609, 610, 649, 650, 595,
	651, 592, 611, 602, 601, 590, 578, 612, 613, 563,
	558, 593, 594, 581, 596, 597, 598, 559, 560, 561,
	562, 358, 573, 0, 389, 390, 391, 413, 375, 0,
	426, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 266,
	3066, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 564, 0, 0, 350, 305, 0, 0, 0,
	0, 623, 631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 0, 0, 554, 600, 599, 541,
	550, 0, 0, 244, 180, 542, 0, 549, 543, 547,
	546, 544, 545, 0, 615, 0, 0, 0, 0, 0,
	0, 513, 526, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	0, 0, 0, 0, 574, 0, 525, 0, 0, 569,
	551, 552, 0, 0, 0, 0, 235, 355, 371, 245,
	346, 384, 250, 353, 240, 320, 343, 0, 0, 237,
	369, 352, 302, 285, 286, 236, 0, 338, 264, 277,
	261, 318, 548, 572, 576, 260, 637, 570, 379, 239,
	0, 378, 317, 365, 370, 303, 297, 238, 367, 301,
	296, 289, 268, 638, 281, 329, 295, 330, 282, 307,
	306, 308, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 0, 0, 0, 381, 0, 0, 621, 0,
	0, 0, 354, 0, 0, 290, 0, 0, 0, 571,
	0, 341, 323, 634, 514, 0, 339, 293, 366, 331,
	372, 356, 380, 335, 332, 230, 357, 263, 304, 241,
	243, 258, 265, 267, 269, 270, 313, 314, 326, 345,
	359, 360, 361, 262, 251, 340, 252, 279, 253, 231,
	255, 254, 256, 347, 257, 233, 327, 364, 0, 275,
	336, 300, 234, 299, 328, 363, 362, 242, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 227, 228,
	429, 619, 319, 0, 0, 633, 614, 616, 617, 620,
	624, 625, 626, 627, 628, 630, 632, 636, 428, 0,
	0, 0, 0, 0, 427, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 0, 232,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 635,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 575,
	0, 0, 309, 310, 311, 312, 622, 0, 249, 405,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 399,
	272, 278, 417, 280, 248, 324, 274, 383, 287, 0,
	410, 0, 411, 0, 0, 0, 0, 316, 283, 284,
	348, 288, 294, 337, 382, 322, 342, 246, 373, 349,
	298, 0, 0, 644, 618, 643, 645, 646, 642, 647,
	648, 629, 532, 0, 579, 640, 639, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 292, 0, 333, 271, 0, 0, 607,
	584, 585, 586, 531, 587, 582, 583, 608, 577, 604,
	605, 556, 580, 588, 603, 589, 606, 609, 610, 649,
	650, 595, 651, 592, 611, 602, 601, 590, 578, 612,
	613, 563, 558, 593, 594, 581, 596, 597, 598, 559,
	560, 561, 562, 358, 573, 0, 389, 390, 391, 413,
	375, 0, 426, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 266, 1443, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 0, 0, 350, 305, 0,
	0, 0, 0, 623, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 522, 0, 0, 554, 600,
	599, 541, 550, 0, 0, 244, 180, 542, 0, 549,
	543, 547, 546, 544, 545, 0, 615, 0, 0, 0,
	0, 0, 0, 513, 526, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 0, 0, 0, 0, 574, 0, 525, 0,
	0, 569, 551, 552, 0, 0, 0, 0, 235, 355,
	371, 245, 346, 384, 250, 353, 240, 320, 343, 0,
	0, 237, 369, 352, 302, 285, 286, 236, 0, 338,
	264, 277, 261, 318, 548, 572, 576, 260, 637, 570,
	379, 239, 0, 378, 317, 365, 370, 303, 297, 238,
	367, 301, 296, 289, 268, 638, 281, 329, 295, 330,
	282, 307, 306, 308, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 567, 0, 0, 0, 381, 0, 0,
	621, 0, 0, 0, 354, 0, 0, 290, 0, 0,
	0, 571, 0, 341, 323, 634, 514, 0, 339, 293,
	366, 331, 372, 356, 380, 335, 332, 230, 357, 263,
	304, 241, 243, 258, 265, 267, 269, 270, 313, 314,
	326, 345, 359, 360, 361, 262, 251, 340, 252, 279,
	253, 231, 255, 254, 256, 347, 257, 233, 327, 364,
	0, 275, 336, 300, 234, 299, 328, 363, 362, 242,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	227, 228, 429, 619, 319, 0, 0, 633, 614, 616,
	617, 620, 624, 625, 626, 627, 628, 630, 632, 636,
	428, 0, 0, 0, 0, 0, 427, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	0, 232, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 635, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 575, 0, 0, 309, 310, 311, 312, 622, 0,
	249, 405, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 399, 272, 278, 417, 280, 248, 324, 274, 383,
	287, 0, 410, 0, 411, 0, 0, 0, 0, 316,
	283, 284, 348, 288, 294, 337, 382, 322, 342, 246,
	373, 349, 298, 0, 0, 644, 618, 643, 645, 646,
	642, 647, 648, 629, 532, 0, 579, 640, 639, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 292, 0, 333, 271, 0,
	0, 607, 584, 585, 586, 531, 587, 582, 583, 608,
	577, 604, 605, 556, 580, 588, 603, 589, 606, 609,
	610, 649, 650, 595, 651, 592, 611, 602, 601, 590,
	578, 612, 613, 563, 558, 593, 594, 581, 596, 597,
	598, 559, 560, 561, 562, 358, 573, 0, 389, 390,
	391, 413, 375, 0, 426, 0, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 266, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 0, 0, 350,
	305, 0, 0, 0, 0, 623, 631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 522, 0, 0,
	554, 600, 599, 541, 550, 0, 0, 244, 180, 542,
	0, 549, 543, 547, 546, 544, 545, 0, 615, 0,
	0, 0, 0, 0, 0, 513, 526, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 1198, 0, 0, 0, 574, 0,
	525, 0, 0, 569, 551, 552, 0, 0, 0, 0,
	235, 355, 371, 245, 346, 384, 250, 353, 240, 320,
	343, 0, 0, 237, 369, 352, 302, 285, 286, 236,
	0, 338, 264, 277, 261, 318, 548, 572, 576, 260,
	637, 570, 379, 239, 0, 378, 317, 365, 370, 303,
	297, 238, 367, 301, 296, 289, 268, 638, 281, 329,
	295, 330, 282, 307, 306, 308, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 567, 0, 0, 0, 381,
	0, 0, 621, 0, 0, 0, 354, 0, 0, 290,
	0, 0, 0, 571, 0, 341, 323, 634, 514, 0,
	339, 293, 366, 331, 372, 356, 380, 335, 332, 230,
	357, 263, 304, 241, 243, 258, 265, 267, 269, 270,
	313, 314, 326, 345, 359, 360, 361, 262, 251, 340,
	252, 279, 253, 231, 255, 254, 256, 347, 257, 233,
	327, 364, 0, 275, 336, 300, 234, 299, 328, 363,
	362, 242, 388, 394, 395, 400, 0, 401, 0, 0,
	0, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 227, 228, 429, 619, 319, 0, 0, 633,
	614, 616, 617, 620, 624, 625, 626, 627, 628, 630,
	632, 636, 428, 0, 0, 0, 0, 0, 427, 325,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 0, 232, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 635, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 575, 0, 0, 309, 310, 311, 312,
	622, 0, 249, 405, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 399, 272, 278, 417, 280, 248, 324,
	274, 383, 287, 0, 410, 0, 411, 0, 0, 0,
	0, 316, 283, 284, 348, 288, 294, 337, 382, 322,
	342, 246, 373, 349, 298, 0, 0, 644, 618, 643,
	645, 646, 642, 647, 648, 629, 532, 0, 579, 640,
	639, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 292, 0, 333,
	271, 0, 0, 607, 584, 585, 586, 531, 587, 582,
	583, 608, 577, 604, 605, 556, 580, 588, 603, 589,
	606, 609, 610, 649, 650, 595, 651, 592, 611, 602,
	601, 590, 578, 612, 613, 563, 558, 593, 594, 581,
	596, 597, 598, 559, 560, 561, 562, 0, 0, 0,
	389, 390, 391, 413, 375, 0, 426, 358, 573, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 266, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 0,
	0, 350, 305, 0, 0, 0, 0, 623, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 522,
	0, 0, 554, 600, 599, 541, 550, 0, 0, 244,
	180, 542, 0, 549, 543, 547, 546, 544, 545, 0,
	615, 0, 0, 0, 0, 0, 0, 513, 526, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 0, 0, 0, 0,
	574, 0, 525, 0, 0, 569, 551, 552, 0, 0,
	0, 0, 235, 355, 371, 245, 346, 384, 250, 353,
	240, 320, 343, 0, 0, 237, 369, 352, 302, 285,
	286, 236, 0, 338, 264, 277, 261, 318, 548, 572,
	576, 260, 637, 570, 379, 239, 0, 378, 317, 365,
	370, 303, 297, 238, 367, 301, 296, 289, 268, 638,
	281, 329, 295, 330, 282, 307, 306, 308, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 567, 0, 0,
	0, 381, 0, 0, 621, 0, 0, 0, 354, 0,
	0, 290, 0, 0, 0, 571, 0, 341, 323, 634,
	514, 0, 339, 293, 366, 331, 372, 356, 380, 335,
	332, 230, 357, 263, 304, 241, 243, 258, 265, 267,
	269, 270, 313, 314, 326, 345, 359, 360, 361, 262,
	251, 340, 252, 279, 253, 231, 255, 254, 256, 347,
	257, 233, 327, 364, 0, 275, 336, 300, 234, 299,
	328, 363, 362, 242, 388, 394, 395, 400, 0, 401,
	0, 0, 0, 409, 414, 415, 416, 418, 419, 420,
	421, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 393, 273, 227, 228, 429, 619, 319, 0,
	0, 633, 614, 616, 617, 620, 624, 625, 626, 627,
	628, 630, 632, 636, 428, 0, 0, 0, 0, 0,
	427, 325, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 374, 386, 404,
	407, 0, 0, 0, 0, 232, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 635, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 575, 0, 0, 309, 310,
	311, 312, 622, 0, 249, 405, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 399, 272, 278, 417, 280,
	248, 324, 274, 383, 287, 0, 410, 0, 411, 0,
	0, 0, 0, 316, 283, 284, 348, 288, 294, 337,
	382, 322, 342, 246, 373, 349, 298, 0, 0, 644,
	618, 643, 645, 646, 642, 647, 648, 629, 532, 0,
	579, 640, 639, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 292,
	0, 333, 271, 0, 0, 607, 584, 585, 586, 531,
	587, 582, 583, 608, 577, 604, 605, 556, 580, 588,
	603, 589, 606, 609, 610, 649, 650, 595, 651, 592,
	611, 602, 601, 590, 578, 612, 613, 563, 558, 593,
	594, 581, 596, 597, 598, 559, 560, 561, 562, 358,
	573, 0, 389, 390, 391, 413, 375, 0, 426, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 266, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	564, 0, 0, 350, 305, 0, 0, 0, 0, 623,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 522, 0, 0, 554, 600, 599, 541, 550, 0,
	0, 244, 180, 542, 0, 549, 543, 547, 546, 544,
	545, 0, 615, 0, 0, 0, 0, 0, 0, 513,
	526, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 0, 0,
	0, 0, 574, 0, 525, 0, 0, 569, 551, 552,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	548, 572, 576, 260, 637, 570, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 638, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 567,
	0, 0, 0, 381, 0, 0, 621, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 571, 0, 341,
	323, 634, 514, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 429, 619,
	319, 0, 0, 633, 614, 616, 617, 620, 624, 625,
	626, 627, 628, 630, 632, 636, 428, 0, 0, 0,
	0, 0, 427, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 635, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 575, 0, 0,
	309, 310, 311, 312, 622, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 644, 618, 643, 645, 646, 642, 647, 648, 629,
	532, 0, 579, 640, 639, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 0, 333, 271, 0, 0, 607, 584, 585,
	586, 531, 587, 582, 583, 608, 577, 604, 605, 556,
	580, 588, 603, 589, 606, 609, 610, 649, 650, 595,
	651, 592, 611, 602, 601, 590, 578, 612, 613, 563,
	558, 593, 594, 581, 596, 597, 598, 559, 560, 561,
	562, 358, 573, 0, 389, 390, 391, 413, 375, 0,
	426, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 1322, 0, 0, 0, 529, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 564, 0, 0, 350, 305, 0, 0, 0,
	0, 623, 631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 0, 0, 554, 600, 599, 541,
	550, 0, 0, 244, 180, 542, 0, 549, 543, 547,
	546, 544, 545, 0, 615, 0, 0, 0, 0, 0,
	0, 0, 526, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	0, 0, 0, 0, 574, 0, 525, 0, 0, 569,
	551, 552, 0, 0, 0, 0, 235, 355, 371, 245,
	346, 384, 250, 353, 240, 320, 343, 0, 0, 237,
	369, 352, 302, 285, 286, 236, 0, 338, 264, 277,
	261, 318, 548, 572, 576, 260, 637, 570, 379, 239,
	0, 378, 317, 365, 370, 303, 297, 238, 367, 301,
	296, 289, 268, 638, 281, 329, 295, 330, 282, 307,
	306, 308, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 0, 0, 0, 381, 0, 0, 621, 0,
	0, 0, 354, 0, 0, 290, 0, 0, 0, 571,
	0, 341, 323, 634, 0, 0, 339, 293, 366, 331,
	372, 356, 380, 335, 332, 230, 357, 263, 304, 241,
	243, 258, 265, 267, 269, 270, 313, 314, 326, 345,
	359, 360, 361, 262, 251, 340, 252, 279, 253, 231,
	255, 254, 256, 347, 257, 233, 327, 364, 0, 275,
	336, 300, 234, 299, 328, 363, 362, 242, 388, 1323,
	1324, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 227, 228,
	429, 619, 319, 0, 0, 633, 614, 616, 617, 620,
	624, 625, 626, 627, 628, 630, 632, 636, 428, 0,
	0, 0, 0, 0, 427, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 0, 232,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 635,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 575,
	0, 0, 309, 310, 311, 312, 622, 0, 249, 405,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 399,
	272, 278, 417, 280, 248, 324, 274, 383, 287, 0,
	410, 0, 411, 0, 0, 0, 0, 316, 283, 284,
	348, 288, 294, 337, 382, 322, 342, 246, 373, 349,
	298, 0, 0, 644, 618, 643, 645, 646, 642, 647,
	648, 629, 532, 0, 579, 640, 639, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 292, 0, 333, 271, 0, 0, 607,
	584, 585, 586, 531, 587, 582, 583, 608, 577, 604,
	605, 556, 580, 588, 603, 589, 606, 609, 610, 649,
	650, 595, 651, 592, 611, 602, 601, 590, 578, 612,
	613, 563, 558, 593, 594, 581, 596, 597, 598, 559,
	560, 561, 562, 358, 573, 0, 389, 390, 391, 413,
	375, 0, 426, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 266, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 0, 0, 350, 305, 0,
	0, 0, 0, 623, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 554, 600,
	599, 541, 550, 0, 0, 244, 180, 542, 0, 549,
	543, 547, 546, 544, 545, 0, 615, 0, 0, 0,
	0, 0, 0, 513, 526, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 0, 0, 0, 0, 574, 0, 525, 0,
	0, 569, 551, 552, 0, 0, 0, 0, 235, 355,
	371, 245, 346, 384, 250, 353, 240, 320, 343, 0,
	0, 237, 369, 352, 302, 285, 286, 236, 0, 338,
	264, 277, 261, 318, 548, 572, 576, 260, 637, 570,
	379, 239, 0, 378, 317, 365, 370, 303, 297, 238,
	367, 301, 296, 289, 268, 638, 281, 329, 295, 330,
	282, 307, 306, 308, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 567, 0, 0, 0, 381, 0, 0,
	621, 0, 0, 0, 354, 0, 0, 290, 0, 0,
	0, 571, 0, 341, 323, 634, 514, 0, 339, 293,
	366, 331, 372, 356, 380, 335, 332, 230, 357, 263,
	304, 241, 243, 258, 265, 267, 269, 270, 313, 314,
	326, 345, 359, 360, 361, 262, 251, 340, 252, 279,
	253, 231, 255, 254, 256, 347, 257, 233, 327, 364,
	0, 275, 336, 300, 234, 299, 328, 363, 362, 242,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	227, 228, 429, 619, 319, 0, 0, 633, 614, 616,
	617, 620, 624, 625, 626, 627, 628, 630, 632, 636,
	428, 0, 0, 0, 0, 0, 427, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	0, 232, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 635, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 575, 0, 0, 309, 310, 311, 312, 622, 0,
	249, 405, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 399, 272, 278, 417, 280, 248, 324, 274, 383,
	287, 0, 410, 0, 411, 0, 0, 0, 0, 316,
	283, 284, 348, 288, 294, 337, 382, 322, 342, 246,
	373, 349, 298, 0, 0, 644, 618, 643, 645, 646,
	642, 647, 648, 629, 532, 0, 579, 640, 639, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 292, 0, 333, 271, 0,
	0, 607, 584, 585, 586, 531, 587, 582, 583, 608,
	577, 604, 605, 556, 580, 588, 603, 589, 606, 609,
	610, 649, 650, 595, 651, 592, 611, 602, 601, 590,
	578, 612, 613, 563, 558, 593, 594, 581, 596, 597,
	598, 559, 560, 561, 562, 358, 573, 0, 389, 390,
	391, 413, 375, 0, 426, 0, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 266, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 0, 0, 350,
	305, 0, 0, 0, 0, 623, 631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 522, 0, 0,
	554, 600, 599, 541, 550, 0, 0, 244, 180, 542,
	0, 549, 543, 547, 546, 544, 545, 0, 615, 0,
	0, 0, 0, 0, 0, 0, 526, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 0, 0, 0, 0, 574, 0,
	525, 0, 0, 569, 551, 552, 0, 0, 0, 0,
	235, 355, 371, 245, 346, 384, 250, 353, 240, 320,
	343, 0, 0, 237, 369, 352, 302, 285, 286, 236,
	0, 338, 264, 277, 261, 318, 548, 572, 576, 260,
	637, 570, 379, 239, 0, 378, 317, 365, 370, 303,
	297, 238, 367, 301, 296, 289, 268, 638, 281, 329,
	295, 330, 282, 307, 306, 308, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 567, 0, 0, 0, 381,
	0, 0, 621, 0, 0, 0, 354, 0, 0, 290,
	0, 0, 0, 571, 0, 341, 323, 634, 0, 0,
	339, 293, 366, 331, 372, 356, 380, 335, 332, 230,
	357, 263, 304, 241, 243, 258, 265, 267, 269, 270,
	313, 314, 326, 345, 359, 360, 361, 262, 251, 340,
	252, 279, 253, 231, 255, 254, 256, 347, 257, 233,
	327, 364, 0, 275, 336, 300, 234, 299, 328, 363,
	362, 242, 388, 394, 395, 400, 0, 401, 0, 0,
	0, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 227, 228, 429, 619, 319, 0, 0, 633,
	614, 616, 617, 620, 624, 625, 626, 627, 628, 630,
	632, 636, 428, 0, 0, 0, 0, 0, 427, 325,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 0, 232, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 635, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 575, 0, 0, 309, 310, 311, 312,
	622, 0, 249, 405, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 399, 272, 278, 417, 280, 248, 324,
	274, 383, 287, 0, 410, 0, 411, 0, 0, 0,
	0, 316, 283, 284, 348, 288, 294, 337, 382, 322,
	342, 246, 373, 349, 298, 0, 0, 644, 618, 643,
	645, 646, 642, 647, 648, 629, 532, 0, 579, 640,
	639, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 292, 0, 333,
	271, 0, 0, 607, 584, 585, 586, 531, 587, 582,
	583, 608, 577, 604, 605, 556, 580, 588, 603, 589,
	606, 609, 610, 649, 650, 595, 651, 592, 611, 602,
	601, 590, 578, 612, 613, 563, 558, 593, 594, 581,
	596, 597, 598, 559, 560, 561, 562, 0, 0, 0,
	389, 390, 391, 413, 375, 0, 426, 157, 358, 49,
	149, 126, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 150, 0, 0,
	0, 0, 0, 0, 142, 0, 266, 0, 151, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	154, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	244, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 125, 148, 155, 0, 95, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 172, 0, 0, 0, 354,
	0, 0, 290, 147, 141, 140, 397, 0, 341, 323,
	55, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 143, 144, 145, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 376, 259, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	392, 175, 0, 0, 422, 183, 0, 0, 0, 146,
	0, 184, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 0, 0, 309,
	310, 311, 312, 276, 0, 249, 405, 334, 107, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 48,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 50, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 127, 333, 271, 0, 0, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	0, 0, 0, 389, 390, 391, 413, 375, 358, 185,
	38, 173, 176, 178, 177, 0, 47, 5, 0, 321,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1004, 0, 0, 179, 0, 0, 541, 550, 0, 0,
	244, 180, 542, 0, 549, 543, 547, 546, 544, 545,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 551, 0, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 548,
	368, 396, 260, 387, 0, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 429, 259, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	392, 0, 0, 0, 422, 428, 0, 0, 0, 0,
	0, 427, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 2510, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 2522, 0, 0, 0, 0, 402, 0, 0, 309,
	310, 311, 312, 276, 2513, 249, 405, 334, 0, 0,
	0, 2508, 0, 0, 0, 0, 2528, 2529, 0, 0,
	0, 0, 2509, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 2514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 0, 0, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	2527, 0, 1903, 389, 390, 391, 413, 375, 0, 426,
	157, 358, 49, 149, 126, 0, 0, 0, 0, 0,
	0, 0, 321, 446, 0, 0, 0, 2518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 2515,
	2519, 2517, 2516, 0, 0, 350, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 451, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 244, 180, 0, 0, 2524, 2525, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2511,
	0, 0, 0, 0, 0, 2523, 235, 355, 371, 245,
	346, 384, 250, 353, 240, 320, 343, 0, 0, 237,
	369, 352, 302, 285, 286, 236, 0, 338, 264, 277,
	261, 318, 0, 368, 396, 260, 387, 0, 379, 239,
	0, 378, 317, 365, 370, 303, 297, 238, 367, 301,
	296, 289, 268, 412, 281, 329, 295, 330, 282, 307,
	306, 308, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 450, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 354, 0, 0, 290, 0, 0, 0, 397,
	0, 341, 323, 0, 0, 0, 339, 293, 366, 331,
	372, 356, 380, 335, 332, 230, 357, 263, 304, 241,
	243, 258, 265, 267, 269, 270, 313, 314, 326, 345,
	359, 360, 361, 262, 251, 340, 252, 279, 253, 231,
	255, 254, 256, 347, 257, 233, 327, 364, 0, 275,
	336, 300, 234, 299, 328, 363, 362, 242, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 227, 228,
	429, 259, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 392, 0, 0, 0, 422, 428, 0,
	0, 0, 0, 0, 427, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 0, 232,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 402,
	0, 0, 309, 310, 311, 312, 447, 449, 249, 405,
	334, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 399,
	272, 278, 417, 280, 248, 324, 274, 383, 287, 0,
	410, 0, 411, 0, 0, 0, 0, 316, 283, 284,
	348, 288, 294, 337, 382, 322, 342, 246, 373, 349,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 50, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 292, 127, 333, 271, 0, 0, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 0, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 0, 0, 223,
	224, 225, 226, 358, 0, 0, 389, 390, 391, 413,
	375, 0, 426, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 833, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 350, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 244, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 821, 0, 0, 0, 0, 0, 0, 235, 355,
	371, 245, 346, 384, 250, 353, 240, 320, 343, 0,
	0, 1835, 1837, 1838, 1839, 1840, 1841, 1842, 0, 1847,
	1843, 1844, 1845, 1846, 0, 1830, 1831, 1832, 1833, 819,
	1816, 1836, 0, 1817, 317, 1818, 1819, 1820, 1821, 1822,
	1823, 1824, 1825, 1826, 1827, 1828, 1834, 329, 295, 330,
	282, 307, 306, 308, 844, 846, 848, 850, 853, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 0,
	0, 0, 0, 0, 354, 0, 0, 290, 0, 0,
	0, 1829, 0, 341, 323, 0, 0, 0, 339, 293,
	366, 331, 372, 356, 380, 335, 332, 230, 357, 263,
	304, 241, 243, 258, 265, 267, 269, 270, 313, 314,
	326, 345, 359, 360, 361, 262, 251, 340, 252, 279,
	253, 231, 255, 254, 256, 347, 257, 233, 327, 364,
	0, 275, 336, 300, 234, 299, 328, 363, 362, 242,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	227, 228, 429, 259, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 392, 0, 0, 0, 422,
	428, 0, 0, 0, 0, 0, 427, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	0, 232, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 402, 0, 0, 309, 310, 311, 312, 276, 0,
	249, 405, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 399, 272, 278, 417, 280, 248, 324, 274, 383,
	287, 0, 410, 0, 411, 0, 0, 0, 0, 316,
	283, 284, 348, 288, 294, 337, 382, 322, 342, 246,
	373, 349, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 843, 292, 0, 333, 271, 0,
	0, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 0, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 0,
	0, 223, 224, 225, 226, 358, 0, 0, 389, 390,
	391, 413, 375, 0, 426, 0, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 350,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 244, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 1905,
	1908, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 355, 371, 245, 346, 384, 250, 353, 240, 320,
	343, 0, 0, 237, 369, 352, 302, 285, 286, 236,
	0, 338, 264, 277, 261, 318, 0, 368, 396, 260,
	387, 0, 379, 239, 0, 378, 317, 365, 370, 303,
	297, 238, 367, 301, 296, 289, 268, 412, 281, 329,
	295, 330, 282, 307, 306, 308, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1909, 381,
	0, 0, 0, 1904, 1895, 1903, 354, 1901, 1906, 290,
	0, 0, 0, 397, 0, 341, 323, 0, 0, 0,
	339, 293, 366, 331, 372, 356, 380, 335, 332, 230,
	357, 263, 304, 241, 243, 258, 265, 267, 269, 270,
	313, 314, 326, 345, 359, 360, 361, 262, 251, 340,
	252, 279, 253, 231, 255, 254, 256, 347, 257, 233,
	327, 364, 1907, 275, 336, 300, 234, 299, 328, 363,
	362, 242, 388, 394, 395, 400, 0, 401, 0, 0,
	0, 409, 414, 415, 416, 418, 419, 420, 421, 0,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	393, 273, 227, 228, 429, 259, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 392, 0, 0,
	0, 422, 428, 0, 0, 0, 0, 0, 427, 325,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 374, 386, 404, 407, 0,
	0, 0, 0, 232, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 385, 0, 0,
	0, 0, 0, 402, 0, 0, 309, 310, 311, 312,
	276, 0, 249, 405, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 399, 272, 278, 417, 280, 248, 324,
	274, 383, 287, 0, 410, 0, 411, 0, 0, 0,
	0, 316, 283, 284, 348, 288, 294, 337, 382, 322,
	342, 246, 373, 349, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 292, 0, 333,
	271, 0, 0, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 0, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 0, 0, 223, 224, 225, 226, 358, 0, 0,
	389, 390, 391, 413, 375, 0, 426, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 350, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 244,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 1905, 1908, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 355, 371, 245, 346, 384, 250, 353,
	240, 320, 343, 0, 0, 237, 369, 352, 302, 285,
	286, 236, 0, 338, 264, 277, 261, 318, 0, 368,
	396, 260, 387, 0, 379, 239, 0, 378, 317, 365,
	370, 303, 297, 238, 367, 301, 296, 289, 268, 412,
	281, 329, 295, 330, 282, 307, 306, 308, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1909, 381, 0, 0, 0, 1904, 0, 1903, 354, 1901,
	1906, 290, 0, 0, 0, 397, 0, 341, 323, 0,
	0, 0, 339, 293, 366, 331, 372, 356, 380, 335,
	332, 230, 357, 263, 304, 241, 243, 258, 265, 267,
	269, 270, 313, 314, 326, 345, 359, 360, 361, 262,
	251, 340, 252, 279, 253, 231, 255, 254, 256, 347,
	257, 233, 327, 364, 1907, 275, 336, 300, 234, 299,
	328, 363, 362, 242, 388, 394, 395, 400, 0, 401,
	0, 0, 0, 409, 414, 415, 416, 418, 419, 420,
	421, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 393, 273, 227, 228, 429, 259, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 392,
	0, 0, 0, 422, 428, 0, 0, 0, 0, 0,
	427, 325, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 374, 386, 404,
	407, 0, 0, 0, 0, 232, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 402, 0, 0, 309, 310,
	311, 312, 276, 0, 249, 405, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 399, 272, 278, 417, 280,
	248, 324, 274, 383, 287, 0, 410, 0, 411, 0,
	0, 0, 0, 316, 283, 284, 348, 288, 294, 337,
	382, 322, 342, 246, 373, 349, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 292,
	0, 333, 271, 0, 0, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 0, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 0, 0, 223, 224, 225, 226, 358,
	0, 0, 389, 390, 391, 413, 375, 0, 426, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1641, 0, 0, 0, 0, 266, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 1642, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 939, 940, 941, 938, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	0, 368, 396, 260, 387, 0, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 412, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 397, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 429, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 428, 0, 0, 0,
	0, 0, 427, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 402, 0, 0,
	309, 310, 311, 312, 276, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 0, 333, 271, 0, 0, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 0,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 0, 0, 223, 224, 225,
	226, 358, 0, 0, 389, 390, 391, 413, 375, 0,
	426, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	757, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 350, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 764, 765, 0,
	0, 0, 0, 244, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 355, 752, 245,
	346, 384, 250, 353, 240, 320, 343, 0, 0, 237,
	369, 352, 302, 285, 286, 236, 0, 338, 264, 277,
	261, 318, 0, 368, 396, 260, 387, 744, 379, 239,
	743, 378, 317, 365, 370, 303, 297, 238, 367, 301,
	296, 289, 268, 412, 281, 329, 295, 330, 282, 307,
	306, 308, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 0, 0, 0,
	0, 0, 354, 0, 0, 290, 0, 0, 0, 397,
	0, 341, 323, 0, 0, 0, 339, 293, 366, 331,
	372, 356, 380, 755, 332, 230, 357, 263, 304, 241,
	243, 258, 265, 267, 269, 270, 313, 314, 326, 345,
	359, 360, 361, 262, 251, 340, 252, 279, 253, 231,
	255, 254, 256, 347, 257, 233, 327, 364, 0, 275,
	336, 300, 234, 299, 328, 363, 362, 242, 388, 394,
	395, 400, 0, 401, 0, 0, 0, 409, 414, 415,
	416, 418, 419, 420, 421, 0, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 393, 273, 227, 228,
	429, 259, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 392, 0, 0, 0, 422, 428, 0,
	0, 0, 0, 0, 427, 325, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 374, 386, 404, 407, 0, 0, 0, 0, 232,
	406, 0, 0, 0, 0, 0, 0, 756, 0, 377,
	0, 0, 0, 385, 0, 0, 0, 0, 0, 759,
	0, 0, 309, 310, 311, 312, 276, 0, 249, 405,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 399,
	272, 278, 417, 280, 248, 324, 274, 383, 287, 0,
	410, 0, 411, 0, 0, 0, 0, 766, 753, 762,
	754, 288, 294, 337, 382, 322, 342, 246, 373, 349,
	763, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 292, 0, 333, 271, 0, 0, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 0, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 0, 0, 223,
	224, 225, 226, 358, 0, 0, 389, 390, 391, 413,
	375, 0, 426, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 350, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 244, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 1912, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 355,
	371, 245, 346, 384, 250, 353, 240, 320, 343, 0,
	0, 237, 369, 352, 302, 285, 286, 236, 0, 338,
	264, 277, 261, 318, 0, 368, 396, 260, 387, 0,
	379, 239, 0, 378, 317, 365, 370, 303, 297, 238,
	367, 301, 296, 289, 268, 412, 281, 329, 295, 330,
	282, 307, 306, 308, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1911, 381, 0, 0,
	0, 1916, 1914, 0, 354, 0, 1915, 290, 0, 0,
	0, 397, 0, 341, 323, 0, 0, 0, 339, 293,
	366, 331, 372, 356, 380, 335, 332, 230, 357, 263,
	304, 241, 243, 258, 265, 267, 269, 270, 313, 314,
	326, 345, 359, 360, 361, 262, 251, 340, 252, 279,
	253, 231, 255, 254, 256, 347, 257, 233, 327, 364,
	0, 275, 336, 300, 234, 299, 328, 363, 362, 242,
	388, 394, 395, 400, 0, 401, 0, 0, 0, 409,
	414, 415, 416, 418, 419, 420, 421, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 393, 273,
	227, 228, 429, 259, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 392, 0, 0, 0, 422,
	428, 0, 0, 0, 0, 0, 427, 325, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 374, 386, 404, 407, 0, 0, 0,
	0, 232, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 385, 0, 0, 0, 0,
	0, 402, 0, 0, 309, 310, 311, 312, 276, 0,
	249, 405, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 399, 272, 278, 417, 280, 248, 324, 274, 383,
	287, 0, 410, 0, 411, 0, 0, 0, 0, 316,
	283, 284, 348, 288, 294, 337, 382, 322, 342, 246,
	373, 349, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 292, 0, 333, 271, 0,
	0, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 0, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 0,
	0, 223, 224, 225, 226, 157, 358, 0, 389, 390,
	391, 413, 375, 0, 426, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 1685,
	0, 179, 0, 0, 0, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 355, 371, 245, 346, 384, 250, 353, 240,
	320, 343, 0, 0, 237, 369, 352, 302, 285, 286,
	236, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 239, 0, 378, 317, 365, 370,
	303, 297, 238, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	230, 357, 263, 304, 241, 243, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 251,
	340, 252, 279, 253, 231, 255, 254, 256, 347, 257,
	233, 327, 364, 0, 275, 336, 300, 234, 299, 328,
	363, 362, 242, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 227, 228, 429, 259, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 392, 0,
	0, 0, 422, 428, 0, 0, 0, 0, 0, 427,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 0, 232, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 0, 0, 309, 310, 311,
	312, 276, 0, 249, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 127,
	333, 271, 0, 0, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 157, 358,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 350, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 1676, 0, 179, 0, 0, 0, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 355, 371, 245, 346, 384,
	250, 353, 240, 320, 343, 0, 0, 237, 369, 352,
	302, 285, 286, 236, 0, 338, 264, 277, 261, 318,
	0, 368, 396, 260, 387, 0, 379, 239, 0, 378,
	317, 365, 370, 303, 297, 238, 367, 301, 296, 289,
	268, 412, 281, 329, 295, 330, 282, 307, 306, 308,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	354, 0, 0, 290, 0, 0, 0, 397, 0, 341,
	323, 0, 0, 0, 339, 293, 366, 331, 372, 356,
	380, 335, 332, 230, 357, 263, 304, 241, 243, 258,
	265, 267, 269, 270, 313, 314, 326, 345, 359, 360,
	361, 262, 251, 340, 252, 279, 253, 231, 255, 254,
	256, 347, 257, 233, 327, 364, 0, 275, 336, 300,
	234, 299, 328, 363, 362, 242, 388, 394, 395, 400,
	0, 401, 0, 0, 0, 409, 414, 415, 416, 418,
	419, 420, 421, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 393, 273, 227, 228, 429, 259,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 392, 0, 0, 0, 422, 428, 0, 0, 0,
	0, 0, 427, 325, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 374,
	386, 404, 407, 0, 0, 0, 0, 232, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 385, 0, 0, 0, 0, 0, 402, 0, 0,
	309, 310, 311, 312, 276, 0, 249, 405, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 272, 278,
	417, 280, 248, 324, 274, 383, 287, 0, 410, 0,
	411, 0, 0, 0, 0, 316, 283, 284, 348, 288,
	294, 337, 382, 322, 342, 246, 373, 349, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 292, 127, 333, 271, 0, 0, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 0,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 0, 0, 223, 224, 225,
	226, 157, 358, 0, 389, 390, 391, 413, 375, 0,
	426, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1582, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 429, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 428,
	0, 0, 0, 0, 0, 427, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 127, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	764, 765, 0, 0, 0, 0, 244, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	355, 371, 245, 346, 384, 250, 353, 240, 320, 343,
	0, 0, 237, 369, 352, 302, 285, 286, 236, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	744, 379, 239, 743, 378, 317, 365, 370, 303, 297,
	238, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 230, 357,
	263, 304, 241, 243, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 251, 340, 252,
	279, 253, 231, 255, 254, 256, 347, 257, 233, 327,
	364, 0, 275, 336, 300, 234, 299, 328, 363, 362,
	242, 388, 394, 395, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 393,
	273, 227, 228, 429, 259, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 392, 0, 0, 0,
	422, 428, 0, 0, 0, 0, 0, 427, 325, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 0, 232, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 0, 0, 309, 310, 311, 312, 276,
	0, 249, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	766, 1601, 762, 1602, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 292, 0, 333, 271,
	0, 0, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 2295, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 355, 371, 245, 346, 384, 250, 353, 240,
	320, 343, 0, 0, 237, 369, 352, 302, 285, 286,
	236, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 239, 0, 378, 317, 365, 370,
	303, 297, 238, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 2298, 0, 0, 2297, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	230, 357, 263, 304, 241, 243, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 251,
	340, 252, 279, 253, 231, 255, 254, 256, 347, 257,
	233, 327, 364, 0, 275, 336, 300, 234, 299, 328,
	363, 362, 242, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 227, 228, 429, 259, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 392, 0,
	0, 0, 422, 428, 0, 0, 0, 0, 0, 427,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 0, 232, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 0, 0, 309, 310, 311,
	312, 276, 0, 249, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 0,
	333, 271, 0, 0, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 358, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 1172, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 1170, 0, 0, 0,
	244, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1168, 0, 0, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 429, 259, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	392, 0, 0, 0, 422, 428, 0, 0, 0, 0,
	0, 427, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 0, 0, 309,
	310, 311, 312, 276, 0, 249, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 0, 0, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 1166,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 1170, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1168, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 429,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 428, 0, 0,
	0, 0, 0, 427, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 0,
	0, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 0, 0, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 426, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2993, 0, 179, 600, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 429, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 428,
	0, 0, 0, 0, 0, 427, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 1170, 0, 0, 0, 244, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1168, 0, 0, 0, 0, 0, 0, 235,
	355, 371, 245, 346, 384, 250, 353, 240, 320, 343,
	0, 0, 237, 369, 352, 302, 285, 286, 236, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	0, 379, 239, 0, 378, 317, 365, 370, 303, 297,
	238, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 230, 357,
	263, 304, 241, 243, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 251, 340, 252,
	279, 253, 231, 255, 254, 256, 347, 257, 233, 327,
	364, 0, 275, 336, 300, 234, 299, 328, 363, 362,
	242, 388, 394, 395, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 393,
	273, 227, 228, 429, 259, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 392, 0, 0, 0,
	422, 428, 0, 0, 0, 0, 0, 427, 325, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 0, 232, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 0, 0, 309, 310, 311, 312, 276,
	0, 249, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 292, 0, 333, 271,
	0, 0, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 1170, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2672, 0, 0, 0, 0, 0,
	0, 235, 355, 371, 245, 346, 384, 250, 353, 240,
	320, 343, 0, 0, 237, 369, 352, 302, 285, 286,
	236, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 239, 0, 378, 317, 365, 370,
	303, 297, 238, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	230, 357, 263, 304, 241, 243, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 251,
	340, 252, 279, 253, 231, 255, 254, 256, 347, 257,
	233, 327, 364, 0, 275, 336, 300, 234, 299, 328,
	363, 362, 242, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 227, 228, 429, 259, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 392, 0,
	0, 0, 422, 428, 0, 0, 0, 0, 0, 427,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 0, 232, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 0, 0, 309, 310, 311,
	312, 276, 0, 249, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 0,
	333, 271, 0, 0, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 358, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1985, 0, 0, 0, 0, 266, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 1987, 0, 0, 0,
	244, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 429, 259, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	392, 0, 0, 0, 422, 428, 0, 0, 0, 0,
	0, 427, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 0, 0, 309,
	310, 311, 312, 276, 0, 249, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 0, 0, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 2006,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 1170, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 429,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 428, 0, 0,
	0, 0, 0, 427, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 0,
	0, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 0, 0, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 426, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3075, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 429, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 428,
	0, 0, 0, 0, 0, 427, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	600, 0, 0, 0, 0, 0, 244, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	355, 371, 245, 346, 384, 250, 353, 240, 320, 343,
	0, 0, 237, 369, 352, 302, 285, 286, 236, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	0, 379, 239, 0, 378, 317, 365, 370, 303, 297,
	238, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 230, 357,
	263, 304, 241, 243, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 251, 340, 252,
	279, 253, 231, 255, 254, 256, 347, 257, 233, 327,
	364, 0, 275, 336, 300, 234, 299, 328, 363, 362,
	242, 388, 394, 395, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 393,
	273, 227, 228, 429, 259, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 392, 0, 0, 0,
	422, 428, 0, 0, 0, 0, 0, 427, 325, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 0, 232, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 0, 0, 309, 310, 311, 312, 276,
	0, 249, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 292, 0, 333, 271,
	0, 0, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3008, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 355, 371, 245, 346, 384, 250, 353, 240,
	320, 343, 0, 0, 237, 369, 352, 302, 285, 286,
	236, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 239, 0, 378, 317, 365, 370,
	303, 297, 238, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	230, 357, 263, 304, 241, 243, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 251,
	340, 252, 279, 253, 231, 255, 254, 256, 347, 257,
	233, 327, 364, 0, 275, 336, 300, 234, 299, 328,
	363, 362, 242, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 227, 228, 429, 259, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 392, 0,
	0, 0, 422, 428, 0, 0, 0, 0, 0, 427,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 0, 232, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 0, 0, 309, 310, 311,
	312, 276, 0, 249, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 0,
	333, 271, 0, 0, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 358, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	244, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 2941, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 429, 259, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	392, 0, 0, 0, 422, 428, 0, 0, 0, 0,
	0, 427, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 0, 0, 309,
	310, 311, 312, 276, 0, 249, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 0, 0, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2758, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 429,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 428, 0, 0,
	0, 0, 0, 427, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 0,
	0, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 0, 0, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 426, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	2806, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 429, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 428,
	0, 0, 0, 0, 0, 427, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 244, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	355, 371, 245, 346, 384, 250, 353, 240, 320, 343,
	0, 0, 237, 369, 352, 302, 285, 286, 236, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	0, 379, 239, 0, 378, 317, 365, 370, 303, 297,
	238, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 230, 357,
	263, 304, 241, 243, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 251, 340, 252,
	279, 253, 231, 255, 254, 256, 347, 257, 233, 327,
	364, 0, 275, 336, 300, 234, 299, 328, 363, 362,
	242, 388, 394, 395, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 393,
	273, 227, 228, 429, 259, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 392, 0, 0, 0,
	422, 428, 0, 0, 0, 0, 0, 427, 325, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 0, 232, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 0, 0, 309, 310, 311, 312, 276,
	0, 249, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 292, 0, 333, 271,
	0, 0, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1582, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 355, 371, 245, 346, 384, 250, 353, 240,
	320, 343, 0, 0, 237, 369, 352, 302, 285, 286,
	236, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 239, 0, 378, 317, 365, 370,
	303, 297, 238, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	230, 357, 263, 304, 241, 243, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 251,
	340, 252, 279, 253, 231, 255, 254, 256, 347, 257,
	233, 327, 364, 0, 275, 336, 300, 234, 299, 328,
	363, 362, 242, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 227, 228, 429, 259, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 392, 0,
	0, 0, 422, 428, 0, 0, 0, 0, 0, 427,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 0, 232, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 0, 0, 309, 310, 311,
	312, 276, 0, 249, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 0,
	333, 271, 0, 0, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 358, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	244, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2592, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 429, 259, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	392, 0, 0, 0, 422, 428, 0, 0, 0, 0,
	0, 427, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 0, 0, 309,
	310, 311, 312, 276, 0, 249, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 0, 0, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 2452, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 429,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 428, 0, 0,
	0, 0, 0, 427, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 0,
	0, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 0, 0, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 426, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2383, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 429, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 428,
	0, 0, 0, 0, 0, 427, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 1170, 0, 0, 0, 244, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	355, 371, 245, 346, 384, 250, 353, 240, 320, 343,
	0, 0, 237, 369, 352, 302, 285, 286, 236, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	0, 379, 239, 0, 378, 317, 365, 370, 303, 297,
	238, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 230, 357,
	263, 304, 241, 243, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 251, 340, 252,
	279, 253, 231, 255, 254, 256, 347, 257, 233, 327,
	364, 0, 275, 336, 300, 234, 299, 328, 363, 362,
	242, 388, 394, 395, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 393,
	273, 227, 228, 429, 259, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 392, 0, 0, 0,
	422, 428, 0, 0, 0, 0, 0, 427, 325, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 0, 232, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 0, 0, 309, 310, 311, 312, 276,
	0, 249, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 292, 0, 333, 271,
	0, 0, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 1987, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 355, 371, 245, 346, 384, 250, 353, 240,
	320, 343, 0, 0, 237, 369, 352, 302, 285, 286,
	236, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 239, 0, 378, 317, 365, 370,
	303, 297, 238, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	230, 357, 263, 304, 241, 243, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 251,
	340, 252, 279, 253, 231, 255, 254, 256, 347, 257,
	233, 327, 364, 0, 275, 336, 300, 234, 299, 328,
	363, 362, 242, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 227, 228, 429, 259, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 392, 0,
	0, 0, 422, 428, 0, 0, 0, 0, 0, 427,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 0, 232, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 0, 0, 309, 310, 311,
	312, 276, 0, 249, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 0,
	333, 271, 0, 0, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 358, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	244, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 429, 259, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	392, 0, 0, 0, 422, 428, 0, 0, 0, 0,
	0, 427, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 0, 0, 309,
	310, 311, 312, 276, 0, 249, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 0, 0, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2024,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 429,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 428, 0, 0,
	0, 0, 0, 427, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 0,
	0, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 0, 0, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 426, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	2022, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 429, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 428,
	0, 0, 0, 0, 0, 427, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 0, 0, 0, 389, 390, 391,
	413, 375, 358, 426, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 429, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 428,
	0, 0, 0, 0, 0, 427, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 1570, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 244, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	355, 371, 245, 346, 384, 250, 353, 240, 320, 343,
	0, 0, 237, 369, 352, 302, 285, 286, 236, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	0, 379, 239, 0, 378, 317, 365, 370, 303, 297,
	238, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 230, 357,
	263, 304, 241, 243, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 251, 340, 252,
	279, 253, 231, 255, 254, 256, 347, 257, 233, 327,
	364, 0, 275, 336, 300, 234, 299, 328, 363, 362,
	242, 388, 394, 395, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 393,
	273, 227, 228, 429, 259, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 392, 0, 0, 0,
	422, 428, 0, 0, 0, 0, 0, 427, 325, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 0, 232, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 0, 0, 309, 310, 311, 312, 276,
	0, 249, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 292, 0, 333, 271,
	0, 0, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 1170, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 355, 371, 245, 346, 384, 250, 353, 240,
	320, 343, 0, 0, 237, 369, 352, 302, 285, 286,
	236, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 239, 0, 378, 317, 365, 370,
	303, 297, 238, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 1486, 332,
	230, 357, 263, 304, 241, 243, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 251,
	340, 252, 279, 253, 231, 255, 254, 256, 347, 257,
	233, 327, 364, 0, 275, 336, 300, 234, 299, 328,
	363, 362, 242, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 227, 228, 429, 259, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 392, 0,
	0, 0, 422, 428, 0, 0, 0, 0, 0, 427,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 0, 232, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 0, 0, 309, 310, 311,
	312, 276, 0, 249, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 0,
	333, 271, 0, 0, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 358, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	244, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 1194, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 429, 259, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	392, 0, 0, 0, 422, 428, 0, 0, 0, 0,
	0, 427, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 0, 0, 309,
	310, 311, 312, 276, 0, 249, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 0, 0, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 371, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 429,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 428, 0, 0,
	0, 0, 0, 427, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 0,
	0, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 700, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 0, 0, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 426, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 371,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 467, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 429, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 428,
	0, 0, 0, 0, 0, 427, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 468, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 244, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	355, 371, 245, 346, 384, 250, 353, 240, 320, 343,
	0, 0, 237, 369, 352, 302, 285, 286, 236, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	0, 379, 239, 0, 378, 317, 365, 370, 303, 297,
	238, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 444, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 230, 357,
	263, 304, 241, 243, 258, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 251, 340, 252,
	279, 253, 231, 255, 254, 256, 347, 257, 233, 327,
	364, 0, 275, 336, 300, 234, 299, 328, 363, 362,
	242, 388, 394, 395, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 393,
	273, 227, 228, 429, 259, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 392, 0, 0, 0,
	422, 428, 0, 0, 0, 0, 0, 427, 325, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 0, 232, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 0, 0, 309, 310, 311, 312, 276,
	0, 249, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 0, 411, 0, 0, 0, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 292, 0, 333, 271,
	0, 0, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 358, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 434, 266, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 355, 371, 245, 346, 384, 250, 353, 240,
	320, 343, 0, 0, 237, 369, 352, 302, 285, 286,
	236, 0, 338, 264, 277, 261, 318, 0, 368, 396,
	260, 387, 0, 379, 239, 0, 378, 317, 365, 370,
	303, 297, 238, 367, 301, 296, 289, 268, 412, 281,
	329, 295, 330, 282, 307, 306, 308, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	290, 0, 0, 0, 397, 0, 341, 323, 0, 0,
	0, 339, 293, 366, 331, 372, 356, 380, 335, 332,
	230, 357, 263, 304, 241, 243, 258, 265, 267, 269,
	270, 313, 314, 326, 345, 359, 360, 361, 262, 251,
	340, 252, 279, 253, 231, 255, 254, 256, 347, 257,
	233, 327, 364, 0, 275, 336, 300, 234, 299, 328,
	363, 362, 242, 388, 394, 395, 400, 0, 401, 0,
	0, 0, 409, 414, 415, 416, 418, 419, 420, 421,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 393, 273, 227, 228, 429, 259, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 392, 0,
	0, 0, 422, 428, 0, 0, 0, 0, 0, 427,
	325, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 374, 386, 404, 407,
	0, 0, 0, 0, 232, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 385, 0,
	0, 0, 0, 0, 402, 0, 0, 309, 310, 311,
	312, 276, 0, 249, 405, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 399, 272, 278, 417, 280, 248,
	324, 274, 383, 287, 0, 410, 0, 411, 0, 0,
	0, 0, 316, 283, 284, 348, 288, 294, 337, 382,
	322, 342, 246, 373, 349, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 292, 0,
	333, 271, 0, 0, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 358, 0,
	0, 389, 390, 391, 413, 375, 0, 426, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	244, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 355, 371, 245, 346, 384, 250,
	353, 240, 320, 343, 0, 0, 237, 369, 352, 302,
	285, 286, 236, 0, 338, 264, 277, 261, 318, 0,
	368, 396, 260, 387, 0, 379, 239, 0, 378, 317,
	365, 370, 303, 297, 238, 367, 301, 296, 289, 268,
	412, 281, 329, 295, 330, 282, 307, 306, 308, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 381, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 290, 0, 0, 0, 397, 0, 341, 323,
	0, 0, 0, 339, 293, 366, 331, 372, 356, 380,
	335, 332, 230, 357, 263, 304, 241, 243, 258, 265,
	267, 269, 270, 313, 314, 326, 345, 359, 360, 361,
	262, 251, 340, 252, 279, 253, 231, 255, 254, 256,
	347, 257, 233, 327, 364, 0, 275, 336, 300, 234,
	299, 328, 363, 362, 242, 388, 394, 395, 400, 0,
	401, 0, 0, 0, 409, 414, 415, 416, 418, 419,
	420, 421, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 393, 273, 227, 228, 429, 259, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	392, 0, 0, 0, 422, 428, 0, 0, 0, 0,
	0, 427, 325, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 374, 386,
	404, 407, 0, 0, 0, 0, 232, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	385, 0, 0, 0, 0, 0, 402, 0, 0, 309,
	310, 311, 312, 276, 0, 249, 405, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 399, 272, 278, 417,
	280, 248, 324, 274, 383, 287, 0, 410, 0, 411,
	0, 0, 0, 0, 316, 283, 284, 348, 288, 294,
	337, 382, 322, 342, 246, 373, 349, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	292, 0, 333, 271, 0, 0, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	358, 0, 0, 389, 390, 391, 413, 375, 0, 426,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 355, 1150, 245, 346,
	384, 250, 353, 240, 320, 343, 0, 0, 237, 369,
	352, 302, 285, 286, 236, 0, 338, 264, 277, 261,
	318, 0, 368, 396, 260, 387, 0, 379, 239, 0,
	378, 317, 365, 370, 303, 297, 238, 367, 301, 296,
	289, 268, 412, 281, 329, 295, 330, 282, 307, 306,
	308, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 290, 0, 0, 0, 397, 0,
	341, 323, 0, 0, 0, 339, 293, 366, 331, 372,
	356, 380, 335, 332, 230, 357, 263, 304, 241, 243,
	258, 265, 267, 269, 270, 313, 314, 326, 345, 359,
	360, 361, 262, 251, 340, 252, 279, 253, 231, 255,
	254, 256, 347, 257, 233, 327, 364, 0, 275, 336,
	300, 234, 299, 328, 363, 362, 242, 388, 394, 395,
	400, 0, 401, 0, 0, 0, 409, 414, 415, 416,
	418, 419, 420, 421, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 393, 273, 227, 228, 429,
	259, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 392, 0, 0, 0, 422, 428, 0, 0,
	0, 0, 0, 427, 325, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	374, 386, 404, 407, 0, 0, 0, 0, 232, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 385, 0, 0, 0, 0, 0, 402, 0,
	0, 309, 310, 311, 312, 276, 0, 249, 405, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 272,
	278, 417, 280, 248, 324, 274, 383, 287, 0, 410,
	0, 411, 0, 0, 0, 0, 316, 283, 284, 348,
	288, 294, 337, 382, 322, 342, 246, 373, 349, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 292, 0, 333, 271, 0, 0, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 358, 0, 0, 389, 390, 391, 413, 375,
	0, 426, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 355, 1148,
	245, 346, 384, 250, 353, 240, 320, 343, 0, 0,
	237, 369, 352, 302, 285, 286, 236, 0, 338, 264,
	277, 261, 318, 0, 368, 396, 260, 387, 0, 379,
	239, 0, 378, 317, 365, 370, 303, 297, 238, 367,
	301, 296, 289, 268, 412, 281, 329, 295, 330, 282,
	307, 306, 308, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 290, 0, 0, 0,
	397, 0, 341, 323, 0, 0, 0, 339, 293, 366,
	331, 372, 356, 380, 335, 332, 230, 357, 263, 304,
	241, 243, 258, 265, 267, 269, 270, 313, 314, 326,
	345, 359, 360, 361, 262, 251, 340, 252, 279, 253,
	231, 255, 254, 256, 347, 257, 233, 327, 364, 0,
	275, 336, 300, 234, 299, 328, 363, 362, 242, 388,
	394, 395, 400, 0, 401, 0, 0, 0, 409, 414,
	415, 416, 418, 419, 420, 421, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 393, 273, 227,
	228, 429, 259, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 392, 0, 0, 0, 422, 428,
	0, 0, 0, 0, 0, 427, 325, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 374, 386, 404, 407, 0, 0, 0, 0,
	232, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 385, 0, 0, 0, 0, 0,
	402, 0, 0, 309, 310, 311, 312, 276, 0, 249,
	405, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 272, 278, 417, 280, 248, 324, 274, 383, 287,
	0, 410, 0, 411, 0, 0, 0, 0, 316, 283,
	284, 348, 288, 294, 337, 382, 322, 342, 246, 373,
	349, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 292, 0, 333, 271, 0, 0,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 358, 0, 0, 389, 390, 391,
	413, 375, 0, 426, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 244, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	355, 371, 245, 346, 384, 250, 353, 240, 320, 343,
	0, 0, 237, 369, 352, 302, 285, 286, 236, 0,
	338, 264, 277, 261, 318, 0, 368, 396, 260, 387,
	0, 379, 239, 0, 378, 317, 365, 370, 303, 297,
	238, 367, 301, 296, 289, 268, 412, 281, 329, 295,
	330, 282, 307, 306, 308, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 290, 0,
	0, 0, 397, 0, 341, 323, 0, 0, 0, 339,
	293, 366, 331, 372, 356, 380, 335, 332, 230, 357,
	263, 304, 241, 243, 508, 265, 267, 269, 270, 313,
	314, 326, 345, 359, 360, 361, 262, 251, 340, 252,
	279, 253, 231, 255, 254, 256, 347, 257, 233, 327,
	364, 0, 275, 336, 300, 234, 299, 328, 363, 362,
	242, 388, 394, 395, 400, 0, 401, 0, 0, 0,
	409, 414, 415, 416, 418, 419, 420, 421, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 393,
	273, 227, 228, 429, 259, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 392, 0, 0, 0,
	422, 428, 0, 0, 0, 0, 0, 427, 325, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 374, 386, 404, 407, 0, 0,
	0, 0, 232, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 385, 0, 0, 0,
	0, 0, 402, 0, 0, 309, 310, 311, 312, 276,
	0, 249, 405, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 399, 272, 278, 417, 280, 248, 324, 274,
	383, 287, 0, 410, 157, 411, 49, 149, 126, 0,
	316, 283, 284, 348, 288, 294, 337, 382, 322, 342,
	246, 373, 349, 298, 150, 0, 0, 0, 0, 0,
	0, 142, 0, 0, 0, 151, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 939, 940, 941,
	938, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 229, 0, 292, 154, 333, 271,
	0, 0, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 1558, 0, 0, 389,
	390, 391, 413, 375, 0, 426, 1379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 114, 0, 115, 116, 0, 0, 0, 0, 0,
	1560, 1529, 0, 0, 0, 0, 0, 0, 0, 0,
	1561, 1562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 148,
	155, 0, 95, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 141, 140, 0, 0, 0, 0, 55, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1375, 0, 0, 1558, 1372, 0, 0, 0, 1374,
	1371, 1373, 1377, 1378, 0, 0, 0, 1376, 143, 144,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1560, 0,
	0, 0, 0, 0, 152, 1520, 1519, 1522, 0, 1518,
	0, 0, 0, 0, 1539, 0, 0, 0, 0, 0,
	0, 0, 105, 0, 0, 1545, 146, 0, 106, 0,
	0, 3092, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1535, 0, 0, 0, 1533, 1567, 0, 0, 1534,
	1536, 1538, 0, 1540, 1541, 1542, 1546, 1547, 1548, 1550,
	1553, 1554, 1555, 0, 0, 0, 0, 0, 0, 0,
	1543, 1552, 1544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1523, 0, 0, 107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 48, 0, 0, 0,
	0, 0, 0, 0, 1559, 1551, 0, 0, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1382,
	1383, 1384, 1385, 1386, 1387, 1380, 1381, 1558, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1556, 0, 0, 0, 50, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1532, 0,
	0, 1560, 0, 0, 0, 1531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 1539, 0, 0, 0, 0, 0, 0, 1549,
	0, 0, 0, 1545, 0, 0, 0, 0, 1537, 1558,
	0, 0, 0, 0, 1535, 0, 0, 0, 0, 0,
	1564, 1563, 0, 1533, 1567, 0, 0, 1534, 1536, 1538,
	0, 1540, 1541, 1542, 1546, 1547, 1548, 1550, 1553, 1554,
	1555, 0, 0, 1560, 0, 0, 108, 38, 1543, 1552,
	1544, 0, 0, 47, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1525, 0, 2850, 0, 0, 0, 1551, 0,
	0, 0, 1559, 0, 0, 0, 1535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 487, 0, 486, 493,
	483, 0, 0, 0, 1566, 0, 0, 1565, 0, 0,
	490, 491, 0, 492, 496, 0, 0, 478, 0, 1556,
	0, 0, 0, 0, 0, 0, 0, 501, 0, 0,
	0, 0, 0, 0, 0, 0, 1532, 0, 0, 0,
	0, 0, 0, 1531, 0, 0, 0, 0, 0, 0,
	1551, 0, 0, 0, 487, 1539, 486, 493, 483, 0,
	0, 0, 505, 0, 0, 507, 1545, 1549, 490, 491,
	506, 492, 496, 0, 0, 478, 1537, 0, 0, 0,
	0, 0, 0, 0, 0, 501, 1533, 1567, 0, 0,
	1534, 1536, 1538, 0, 1540, 1541, 1542, 1546, 1547, 1548,
	1550, 1553, 1554, 1555, 0, 0, 0, 0, 0, 0,
	0, 1543, 1552, 1544, 0, 0, 0, 0, 0, 0,
	505, 0, 0, 507, 0, 0, 0, 1539, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1545, 0,
	0, 0, 0, 0, 0, 1559, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1533, 1567,
	0, 0, 1534, 1536, 1538, 0, 1540, 1541, 1542, 1546,
	1547, 1548, 1550, 1553, 1554, 1555, 0, 0, 0, 0,
	0, 0, 1556, 1543, 1552, 1544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1532,
	479, 481, 480, 0, 0, 0, 1531, 0, 0, 0,
	485, 0, 0, 0, 0, 0, 0, 1559, 0, 0,
	0, 0, 489, 0, 0, 0, 0, 0, 0, 504,
	1549, 0, 0, 0, 0, 0, 482, 0, 0, 1537,
	473, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1556, 0, 0, 0, 479, 481,
	480, 0, 0, 0, 0, 0, 0, 0, 485, 0,
	0, 1532, 0, 0, 0, 0, 0, 0, 1531, 0,
	489, 0, 0, 0, 0, 0, 0, 504, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 1549, 0, 0, 0, 0, 0, 0, 0,
	0, 1537, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 484, 488,
	494, 0, 495, 497, 0, 0, 498, 499, 500, 0,
	0, 502, 503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 484, 488, 494, 0,
	495, 497, 0, 0, 498, 499, 500, 0, 0, 502,
	503,
}

var yyPact = [...]int{
	3134, -1000, -1000, -1000, -318, 9797, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34217, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 34217, -316, 33675,
	33675, -1000, -1000, 1895, -1000, 33133, 10900, 34217, 268, 263,
	34217, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 620, -1000, 32591, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 505, 36876, 35843, 7618, -267,
	-1000, 2612, -115, 752, 775, 891, 891, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2115, 663, 32049, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2866, 182, 663,
	13610, -6, -11, 2612, 306, 163, -1000, 826, 36274, 144,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 7618, 7618, 9797, -325, 9797, 7618, 34217, 34217, -1000,
	-1000, -1000, -1000, 505, 36876, 7618, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -11, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 4019, -1000, 1195, -1000, -1000, -1000, -1000,
	2235, 1191, 1824, 463, 34217, -1000, 1187, 463, -1000, -1000,
	-1000, 2612, 2612, -1000, 34217, 34217, 65, 1330, -1000, 333,
	323, 298, 1169, -1000, -1000, -1000, -1000, -1000, -1000, 390,
	2669, -1000, 34217, 34217, 2270, 34217, -1000, 1525, 431, 36934,
	2479, 1045, 607, 2295, -1000, -1000, 2234, -1000, 159, 176,
	170, 518, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 196,
	-1000, 2554, -1000, -1000, 158, -1000, -1000, 173, -1000, -1000,
	-1000, -23, -1000, -1000, -1000, -1000, -1000, -1000, -135, -1000,
	-1000, 799, 1745, 7618, -1000, 1813, -1000, 2536, -1000, -1000,
	-1000, -1000, 4898, 9244, 9244, 9244, 9244, -1000, -1000, 2084,
	7618, 2233, 2231, -1000, -1000, -1000, -1000, -1000, 1167, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1823, 8702, -1000, 2219, 2217, 2214, 2212, 2208, 2207,
	2205, 2199, 2193, 2189, 2188, 2185, 2183, 2171, 1989, 10347,
	2164, 1814, 1812, 2162, 2161, 2160, 1809, 1989, 1989, 2159,
	2157, 2155, 2154, 2152, 2151, 2145, 2141, 2133, 2132, 2131,
	2129, 2127, 2126, 2125, 2124, 2121, 2114, 2113, 2109, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 966, -1000, 2107, 2443, 2566, 2042, 2608, 2526,
	2519, 2516, 2514, 1659, -1000, -1000, -1000, -144, -1000, -1000,
	746, -1000, 706, -1000, 34217, 34217, 34217, 496, 496, 496,
	496, 496, 521, 496, 609, 608, 597, 496, -1000, -1000,
	-1000, -1000, -1000, -1000, 690, -1000, -1000, -1000, -1000, 1055,
	34217, -1000, 2058, 1268, 2563, 446, 439, 437, 1268, 331,
	-1000, 1345, 1345, 1345, 1345, 1268, 336, 444, 2566, 2566,
	-14, 1345, -59, 1268, 1268, -59, 1268, 1268, 1268, 102,
	-312, -1000, -1000, -1000, 1345, 1345, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2548, 2544, 505, 34217, 87, 34217, 505,
	505, 519, -62, 35301, 34759, 1525, 429, 415, 1075, 1348,
	-1000, 1289, 34217, 34217, 1289, 1289, 17949, 17407, -1000, 34217,
	-1000, 2566, 2042, -1000, 1968, 2499, 1966, 2042, 505, 505,
	505, 505, 505, 143, 505, 505, 505, 34217, 34217, 31507,
	505, 6524, 6524, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 9797, 1667, 1641, 142, -79, -319, 180, -1000,
	-1000, 34217, 2422, 130, -1000, -1000, -1000, 1990, -1000, 2057,
	2057, 2057, 2057, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2070, 2105, -1000, -1000, 2048, 2048, 2048, 1990,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2065, 2065, 2068, 2068, 2065,
	34217, 7618, 34217, 2461, 302, 2104, -1000, 34217, 301, 2566,
	2443, 2566, -1000, -1000, 1163, 1649, 1808, -1000, -1000, 333,
	1261, -1000, 828, -1000, -1000, -1000, -1000, 34217, -135, 278,
	-1000, -1000, 1801, 2103, -1000, 458, 957, 1001, -1000, 119,
	3237, 27163, 1525, 27163, 34217, -1000, -1000, -1000, -1000, -1000,
	-1000, -34, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 172, -1000, 7618, 7618, 7618,
	7618, 7618, -1000, 488, 8160, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 9244, 9244, 9244, 9244, 9244, 9244, 9244, 9244,
	9244, 9244, 9244, 9244, 2082, 1313, 9244, 9244, 9244, 9244,
	2499, 2462, 1069, 211, -1000, -1000, -1000, -1000, -1000, 1359,
	1745, 7618, 7618, 34217, -1000, 36230, 7618, 7618, 118, 7618,
	2511, 7618, 7618, 7618, 1964, 3481, 34217, 7618, -1000, 1962,
	1961, -1000, -1000, 1613, 7618, -1000, -1000, 7618, -1000, -1000,
	7618, 9244, 7618, -1000, -1000, -1000, 2640, 2511, 2511, 7618,
	7618, 2511, 2511, 2511, 1319, 2511, 2511, 2511, 2511, 2511,
	2511, 2511, 2511, 1952, 1945, 1937, 2566, -267, 5982, -1000,
	-273, 2443, 7618, -1000, -1000, 7618, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1807, -74, 735, 710, 713, -1000,
	2505, -1000, 2097, 2094, 1159, 34217, 1368, 34217, 27163, 34217,
	1525, 34217, 34217, 496, 496, 496, 34217, 519, -1000, 34217,
	1055, 2504, 34217, 2618, 9244, 9244, 30965, 1345, 1268, 1268,
	-1000, -1000, 34217, -1000, -1000, -1000, 1345, 34217, 1345, 1345,
	2618, 1345, -1000, -1000, -1000, 1268, 1268, -1000, -1000, -1000,
	-1000, 1345, 1345, -1000, -1000, 2618, 34217, -46, 2618, 2618,
	-31, -1000, -1000, -1000, 34217, 34217, 496, 34217, -1000, 34217,
	34217, -1000, -1000, 34217, 36390, 34217, 30423, 2542, -1000, 27163,
	34217, 24995, -1000, 1024, -1000, -103, -1000, -116, -62, 1289,
	-62, 1289, -1000, 449, 471, 16323, 402, 27163, 4355, -1000,
	-1000, 1289, 1289, 4355, 4355, 1200, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1052, -1000, 123, 2443, -1000, -1000, -1000,
	-1000, -1000, 34217, 34217, 27163, 1525, 34217, 505, 34217, 34217,
	34217, -1000, 2089, -1000, 2476, 34217, 984, -1000, -1000, 13068,
	1138, 984, -1000, 1373, -1000, 7618, 9797, -293, 7618, 9797,
	9797, 7618, 9797, -1000, 7618, 127, -1000, -1000, -1000, -1000,
	1645, -1000, 1644, -1000, -1000, -1000, 1806, 1806, -1000, 1637,
	-1000, -1000, -1000, -1000, 1635, -1000, -1000, 1634, -1000, -1000,
	-1000, 1934, 799, -1000, 1802, 2289, -268, -1000, 15238, 34217,
	34217, -1000, -1000, -268, -1000, 14695, 34217, 2443, -1000, 2443,
	34217, -1000, 2562, -1000, 333, 254, -1000, -1000, -1000, -1000,
	-1000, -1000, 1136, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1050, -1000, 34217, -1000, -1000, 119, 27163, 28247,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 167, -1000, -1000,
	164, -1000, 547, 100, 1258, -1000, -1000, 92, 154, 622,
	1745, -1000, 1383, 1383, 1379, -1000, 500, -1000, -1000, -1000,
	-1000, 2084, -1000, -1000, -1000, 1656, 2268, -1000, 1234, 1234,
	1139, 1139, 1139, 1139, 1139, 1692, 1692, -1000, -1000, -1000,
	4898, 2082, 9244, 9244, 9244, 9244, 478, 478, 3835, 3291,
	-1000, 7618, 1350, -1000, 7618, 1702, 992, 1117, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1933, 1929,
	1800, 2633, 1921, 7618, -1000, -1000, 1256, 1252, 1251, -1000,
	1837, 7076, -1000, -1000, -1000, 1920, 1099, 1916, -1000, -1000,
	-1000, 1915, 1250, 875, 1907, 1445, 1906, 1043, 7618, 7618,
	1249, 1246, 7618, 7618, 7618, 7618, 1905, 7618, 7618, 7618,
	7618, 7618, 7618, 7618, 7618, 11, 11, 11, -1000, -1000,
	1245, -1000, 1745, -1000, 1797, -1000, 1062, 1038, -1000, 1465,
	-1000, -1000, -1000, -1000, 731, 704, 734, 34217, 834, 11442,
	34217, 2058, 2467, 121, -1000, 910, -1000, 100, -142, 820,
	2264, 2632, 34217, 34217, 34217, 2503, 29881, -1000, 2076, 1238,
	-1000, -1000, 7618, -1000, -1000, 2261, 34217, 34217, 2618, 2618,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 34217, 2618, 2618,
	1268, 1345, -1000, -1000, 1345, -1000, -1000, 1345, -1000, 1097,
	-1000, 34217, -1000, -1000, -1000, 2058, 1031, -1000, 11984, 14152,
	498, -1000, 536, 1298, 824, 530, 2402, 174, -1000, 1298,
	-219, 1298, 1298, 1298, 1298, 1298, 1298, 1298, 388, 383,
	1298, 1298, 1298, 1298, 1298, 1298, 1298, 1298, 1298, 1298,
	1298, 766, 1298, 1298, 1298, 1298, 1298, -1000, 1298, 2075,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 416, 120, 2541,
	203, 192, 910, 216, 2538, 913, -1000, -1000, -1000, -1000,
	20117, 20117, 15781, 20117, -1000, 1263, -62, -86, -1000, -1000,
	1024, 4355, 1024, 4355, -1000, -1000, 527, -1000, -1000, 820,
	-1000, 34217, 34217, -1000, -1000, 2073, 1329, -1000, -1000, 10347,
	-1000, 4355, 4355, -1000, -1000, 20659, 34217, -1000, -140, -1000,
	-114, 2561, 1011, -1000, -1000, 1014, 820, 2283, 34217, 1011,
	-1000, -1000, 11442, 34217, -1000, 2618, 6524, -1000, 24995, -1000,
	-1000, 29331, -1000, 28789, 2618, 1344, -1000, 9797, 1617, 138,
	-1000, 169, -322, 137, 1578, 136, 1745, -1000, -1000, 1893,
	1892, 1205, -1000, 1202, 1885, 1184, 1179, -1000, -81, -1000,
	2428, 846, -1000, 2072, -1000, 1178, 2338, -1000, 1008, -1000,
	1327, 1174, -1000, 846, 1173, 2324, 1008, 2561, -1000, 1095,
	62, -1000, -1000, 34217, 1801, 1171, 28247, 967, -1000, 525,
	1093, 1091, -1000, 27163, 168, 27163, -1000, 27163, -1000, -1000,
	279, -1000, 34217, 2433, -1000, -1000, -1000, 1729, -338, -1000,
	-1000, -1000, -1000, -1000, 1164, -1000, 478, 478, 3835, 3254,
	-1000, 9244, -1000, 9244, 2456, 1340, -1000, 7618, 1442, 3896,
	1361, 19033, 34217, -1000, -1000, 7618, 7618, -1000, 2435, -1000,
	-1000, -1000, -1000, 7618, 7618, 1508, -1000, 34217, -1000, -1000,
	-1000, -1000, 19033, -1000, 9244, -1000, 7618, 912, 2429, 11,
	11, 2398, 2389, 2385, 1132, 11, 2358, 2349, 2339, 2331,
	2272, 2263, 2252, 2221, -1000, 2071, -1000, -1000, 5982, -1000,
	-81, 7618, 7618, 7618, 2367, -1000, -1000, -1000, -1000, -1000,
	695, 145, 1882, 1007, -1000, -1000, 34217, -1000, -1000, -1000,
	1881, 1003, -1000, -1000, -1000, 4169, 2057, 2057, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2070, -1000, -1000,
	2048, 2048, 2048, 1990, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2065, 2065, 2068, 2068, 2065, -1000, 2490,
	-1000, 5, 1298, 436, 27163, 412, -1000, 34217, 2274, 360,
	2387, 34217, 2064, 2063, 2062, 256, 4169, 34217, 936, -1000,
	1088, 36274, -1000, 34217, 1745, -1000, 1525, -1000, 1268, -1000,
	-1000, 2618, 1061, -1000, -1000, 2618, 1268, 1268, 1345, 34217,
	-1000, 2489, 36390, -1000, 2371, 34217, -1000, -1000, 4169, 644,
	-1000, 685, 496, 34217, 1414, 685, 1412, 2061, -1000, -1000,
	-1000, 34217, 34217, -1000, 34217, 1403, 1396, -1000, 34217, 34217,
	34217, 34217, 2426, -1000, 1298, 1298, 664, -1000, -1000, 438,
	-1000, 1624, 1622, 1615, 1610, 1794, 1788, 1782, 1298, 1298,
	1608, 1780, 27705, 1778, 877, 1600, 1596, 1595, 1625, 1770,
	618, -1000, 1769, 1606, 1603, 1571, 34217, 2059, 1698, -1000,
	-1000, 5, 1298, 184, 34217, 1326, 436, 1444, 16865, 34217,
	24995, 24995, 24995, 24995, -1000, 2315, 2308, -1000, 2325, 2314,
	2347, 34217, 24995, 2058, -1000, 27705, -1000, -1000, -1000, 2499,
	1128, 2617, 669, 7618, -1000, -1000, -111, -128, -1000, -1000,
	-1000, 27163, 1754, 402, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2675, 34217, 34217, 540, 1880, -1000, 2613, -1000,
	973, -1000, -1000, 1087, -1000, 2613, 1364, -321, 9797, 1347,
	1337, -1000, 7618, 9797, 7618, -294, 177, -301, -1000, -1000,
	-1000, 1752, -1000, -1000, -1000, 1569, -1000, 1556, 21, 56,
	1394, -268, 5982, 304, 34217, -268, 34217, 5982, -1000, 34217,
	303, -268, -1000, 34217, 1546, -1000, -1000, -1000, 2623, 27163,
	1525, 1222, 26621, -1000, 156, -1000, 155, 441, 1750, -1000,
	563, 85, -1000, 1324, 1729, -1000, -1000, -1000, 9244, -1000,
	-1000, -1000, -1000, 1745, 7618, 1879, -1000, 717, 717, 1878,
	-1000, 2057, 2057, -1000, 1990, 2048, 1990, 717, 717, 1877,
	-1000, 1739, 2203, -1000, 2066, 1979, 7618, -1000, 1876, 3094,
	1066, -156, 11, -1000, -1000, -1000, 11, 11, 11, 11,
	-1000, 11, 11, 11, 11, 11, 11, 11, 11, 464,
	-1000, 21, 1745, 1745, -1000, -1000, 2409, -1000, 1749, 1738,
	834, 4169, 623, 11442, 2411, 291, 1629, -1000, -1000, -1000,
	26079, 434, -1000, -1000, -1000, 490, 161, 1543, 423, -1000,
	34217, 216, 34217, -1000, -1000, -1000, -1000, -1000, 2387, -1000,
	761, 245, 12526, 12526, 12526, 248, 1333, -1000, 463, 977,
	1085, 24995, 34217, -1000, 24453, 1870, -1000, 820, 2618, -1000,
	34217, -1000, 2618, 2618, 1268, -1000, 291, -1000, -1000, -1000,
	34217, 2371, 10671, -1000, 34217, -1000, 34217, -1000, 34217, 34217,
	496, 7618, -1000, -1000, -1000, 34217, -1000, 229, 543, 543,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 19033, 19033, 2539,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1737, 1735, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 34217, 1125, -1000, 1318, 1629, 26079, 1314,
	1289, 1732, 434, -1000, 1731, -1000, 849, 34217, 34217, -1000,
	924, -1000, 1312, 2239, 2273, 2239, -1000, -1000, -1000, -1000,
	2307, -1000, 2275, -1000, -1000, 924, -1000, -1000, -1000, -1000,
	-1000, 669, -1000, 2559, 685, 685, 685, 1866, -1000, -1000,
	-1000, 967, 1865, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2614, 2602, 25537, 2614, -1000, -321, 1334, -1000,
	1416, 135, 1397, 34217, -1000, -1000, -1000, 1844, 1843, -275,
	49, 2596, 2595, 2673, -1000, 1842, 859, -268, -1000, -1000,
	846, -1000, -1000, -1000, -268, -1000, 846, -1000, -1000, 1525,
	-1000, 153, -1000, -1000, -1000, -1000, -1000, -1000, 80, -1000,
	34217, -1000, 1729, 1727, 84, -1000, 1745, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 7618, -1000, -1000, -1000, 1951, -1000, -1000, 7618,
	1840, 1726, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2610, -1000, 2593, -275, -1000,
	-1000, -1000, -1000, -1000, -1000, 4169, -1000, 1507, -1000, -1000,
	1725, 97, -1000, -1000, -1000, 1714, 1701, 1542, -1000, -1000,
	1551, 1063, 113, -1000, -1000, -1000, -1000, -1000, -1000, 1444,
	2021, -1000, 1298, 1298, 1298, 34217, 1836, 853, -1000, -1000,
	-1000, -1000, 1833, 1832, 443, 1301, 1297, -1000, 1540, 20117,
	24995, 24453, 921, -1000, 1082, -1000, -1000, -1000, 2618, -1000,
	-1000, 2618, -1000, -1000, -1000, -1000, 10671, -1000, -1000, 1421,
	9244, -1000, -1000, 1699, 19575, 593, 1302, 1299, 614, 2012,
	-1000, 307, 2672, -1000, -1000, -1000, 660, 1390, 1389, -1000,
	34217, -1000, 2009, -1000, 2008, 2260, 276, 2007, 2001, 34217,
	1924, -1000, -1000, -1000, -1000, -1000, -1000, 341, -1000, 1177,
	-1000, 19033, -1000, -1000, 1123, -1000, 1698, 1696, -1000, 97,
	1695, 4355, -1000, -1000, -1000, 34217, 849, 849, 2610, 34217,
	5982, -1000, -1000, 7618, 1998, -1000, 7618, -1000, -1000, -1000,
	-1000, -1000, 1996, 2451, -1000, -1000, -1000, -1000, -1000, -1000,
	7618, 7618, -1000, -1000, 492, 9797, -302, 171, -1000, -1000,
	-1000, -282, 1691, -1000, -1000, 2592, 1689, 1669, 34217, -1000,
	846, 846, 820, -1000, -1000, -31, -1000, -1000, -1000, 1864,
	-1000, 1772, 11, -1000, 110, 7618, -282, -201, -1000, -1000,
	-1000, -1000, 275, -1000, -1000, 212, -1000, -1000, 1481, 442,
	-1000, -1000, 23369, 19033, 19575, 1682, -1000, 36793, 12526, 172,
	36793, 777, 1292, -1000, 1537, -1000, 1536, -1000, 2618, 921,
	1082, -1000, -1000, 1210, -1000, -1000, -1000, -1000, 3835, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1680, 1678, -1000,
	-1000, -1000, -1000, -1000, 1534, 1995, -104, 2537, -1000, -1000,
	1994, 23369, 23369, 317, 317, 23369, 23369, 1992, 543, -1000,
	1298, 1127, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2566,
	-1000, -1000, 1745, 34217, 1745, 23911, -1000, 2591, 2587, 1745,
	799, -1000, -321, 34217, 34217, -284, 1533, -1000, 1677, 41,
	-1000, -1000, 809, -287, 20, 28, -1000, -1000, -1000, 1818,
	-1000, 544, -1000, -1000, -1000, 799, -284, 34217, 440, 1676,
	-1000, -1000, 207, -1000, -1000, 1120, -1000, 1990, 7618, -1000,
	-1000, -1000, 462, 36721, -1000, 824, -1000, -1000, -31, 462,
	406, 219, -1000, 1527, -1000, -1000, 2610, -1000, -1000, -1000,
	1744, 7618, 1989, 1298, -194, 23369, 1079, 1065, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1049, 1032, 23369, -1000, -1000,
	19033, 1298, -1000, 1030, 1012, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1988, -1000, -1000, 2586, -1000, 1674, 508, 37,
	28, -1000, 2585, 40, 2582, 2575, -1000, -1000, 531, -269,
	9, 8, 4, -1000, -1000, -1000, 7618, -1000, 2482, -1000,
	-1000, 77, -1000, -1000, -1000, 23369, 2483, 1766, 284, 2574,
	36793, -1000, 1298, -1000, 284, -1000, 253, -1000, 1277, -1000,
	1504, -1000, 2566, -1000, 1627, -1000, 34217, 2269, -1000, 122,
	1000, 2258, 2251, 2244, 2243, 986, -1000, 19033, -1000, -1000,
	22827, 34217, 1669, -1000, 1986, 1500, 49, 31, 2572, -1000,
	1669, 2570, 1669, 1669, 1372, -1000, 6, 2, 0, -1000,
	-1000, -1000, -1000, 1673, -1000, 217, -1000, -1000, 2483, -1000,
	2569, 335, -1000, 19033, -1000, -1000, -1000, 1483, -1000, -1000,
	543, -1000, -1000, 2206, 1810, 2627, -1000, -1000, -1000, -1000,
	217, 317, 217, 317, 217, 317, 217, 317, 149, -1000,
	-1000, -1000, 976, -1000, -1000, 2534, 18491, 18, -1000, -1000,
	-1000, 1671, -1000, 1669, -1000, -1000, 531, -1000, -1000, -1000,
	-1000, -1000, 1298, 1666, 233, -1000, -1000, -1000, 22285, 300,
	326, 324, -1000, 453, -1000, -1000, -1000, -1000, -1000, 2629,
	-1000, 2619, 632, 632, -1000, -1000, -1000, -1000, -1000, -1000,
	34217, -1000, 34217, -1000, 975, -1000, -1000, -1000, 878, -1000,
	-1000, -1000, -1000, -1000, 1464, -1000, 34217, -1000, 34217, 293,
	1448, 9244, 1983, 9244, 1981, 294, 1974, -1000, -1000, -1000,
	1453, 332, -1000, 217, 217, 217, 217, -1000, 793, -1000,
	1296, -1000, 21743, 34217, -1000, -1000, 970, 1973, 2568, -1000,
	3026, 34217, 2796, 34217, 1971, 1279, 9244, -1000, -1000, -1000,
	34217, 5440, -1000, 835, -1000, -1000, 447, 328, -1000, 969,
	-1000, 954, 21201, 1433, 2643, -1000, -1000, 1745, 34217, 916,
	-1000, 34217, 286, -1000, -1000, -1000, 914, -1000, -1000, -1000,
	-1000, 447, 2290, -1000, 1432, -1000, -1000, 36558, 581, -1000,
	-1000, 36558, 292, -1000, 445, 1970, -1000, -1000, 908, -1000,
	34217, 633, 7618, -1000, 292, 36793, -1000, 7618, 902, -1000,
	36793, 886, -1000, -1000,
}

var yyPgo = [...]int{
	0, 144, 2689, 223, 148, 3212, 85, 218, 205, 198,
	217, 3211, 3210, 2388, 2387, 3209, 3208, 3206, 3205, 3203,
	3202, 3200, 3199, 3198, 3197, 3196, 3194, 3193, 3192, 3191,
	3190, 3189, 3188, 3187, 3185, 3184, 3183, 3182, 3181, 215,
	3180, 3177, 3176, 3174, 3173, 3172, 3170, 3169, 3166, 3165,
	3163, 3162, 3145, 3143, 3142, 3141, 3140, 3138, 3137, 3127,
	3126, 3125, 3123, 3122, 3121, 3120, 3119, 3118, 3117, 3116,
	191, 3114, 2380, 3111, 3107, 3106, 3105, 3103, 3102, 3099,
	202, 3098, 3097, 3096, 3093, 3092, 3089, 3087, 3086, 3085,
	3084, 3083, 219, 3082, 3081, 3079, 3078, 3077, 3076, 216,
	3074, 146, 166, 3073, 3067, 3066, 3065, 3060, 208, 231,
	55, 3059, 44, 3057, 192, 3055, 126, 3054, 119, 3053,
	3045, 3041, 3040, 3039, 3038, 3036, 3035, 3031, 3030, 3026,
	3024, 71, 3022, 103, 118, 163, 229, 2259, 239, 224,
	160, 141, 72, 3021, 2450, 3019, 152, 204, 129, 25,
	3018, 138, 3016, 130, 41, 28, 222, 114, 49, 158,
	97, 3015, 189, 87, 86, 3013, 3012, 159, 225, 165,
	3011, 101, 3010, 3008, 3006, 3005, 177, 169, 2998, 2996,
	102, 2995, 2994, 109, 2993, 59, 171, 137, 170, 2992,
	883, 95, 99, 145, 2990, 2986, 79, 2985, 2984, 2977,
	2972, 153, 2970, 2968, 104, 70, 2967, 2966, 2965, 53,
	2964, 31, 2963, 62, 2956, 2954, 2953, 2952, 2951, 2946,
	2944, 2942, 2941, 60, 2940, 2939, 20, 24, 26, 2938,
	19, 2937, 140, 2936, 2935, 2933, 93, 2932, 2, 2912,
	196, 124, 78, 121, 2911, 369, 2910, 2908, 2906, 135,
	2904, 528, 2903, 2902, 2901, 2900, 2899, 5, 2896, 203,
	43, 2895, 76, 106, 42, 180, 172, 2894, 2893, 2885,
	554, 75, 29, 0, 2884, 132, 2883, 2880, 2877, 236,
	2876, 206, 197, 136, 125, 235, 194, 2875, 2874, 69,
	2873, 139, 73, 47, 107, 11, 16, 201, 2871, 238,
	155, 2869, 183, 2868, 134, 1, 116, 2866, 2865, 38,
	237, 2864, 2863, 2862, 100, 2861, 2860, 96, 84, 2859,
	2858, 2857, 37, 2854, 33, 14, 2852, 81, 2851, 230,
	2850, 173, 111, 156, 142, 127, 200, 207, 66, 63,
	2849, 1354, 123, 83, 27, 2848, 199, 2847, 193, 120,
	2844, 90, 2843, 213, 328, 188, 2842, 157, 8, 40,
	35, 2841, 12, 2840, 113, 214, 2839, 2838, 21, 45,
	2837, 17, 2836, 2834, 2833, 2831, 9, 2828, 2827, 2826,
	4, 7, 2825, 3, 184, 2824, 2822, 2820, 2819, 46,
	105, 2817, 115, 143, 154, 2814, 74, 2811, 2807, 2806,
	593, 2805, 226, 2803, 2802, 2799, 2797, 2796, 2795, 2794,
	2793, 2792, 77, 52, 2791, 2788, 2785, 2781, 64, 122,
	2780, 2779, 2765, 2764, 34, 150, 2762, 22, 2761, 32,
	30, 36, 2760, 112, 2759, 15, 161, 2757, 2756, 18,
	2755, 2754, 10, 13, 2753, 2752, 92, 2750, 68, 23,
	133, 94, 2749, 2747, 67, 186, 117, 2746, 2745, 212,
	211, 182, 2744, 168, 220, 234, 2743, 185, 2742, 2741,
	2740, 2737, 2735, 2732, 908, 2731, 2728, 221, 54, 80,
	88, 2727, 2723, 2722, 65, 131, 91, 89, 181, 2721,
	164, 2720, 2719, 82, 2713, 2712, 2706, 2703, 2702, 162,
	2701, 2700, 167, 210, 2699, 2698, 2695, 2694, 209, 326,
	2691,
}

//line mysql_sql.y:9864
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColposUnion() *tree.AlterColPos {
	v, _ := st.union.(*tree.AlterColPos)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 498, 506, 506, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 106, 496, 496, 496, 497, 497, 103, 123,
	122, 125, 125, 124, 124, 121, 121, 117, 120, 120,
	119, 119, 118, 113, 115, 115, 114, 116, 116, 104,
	92, 105, 445, 445, 444, 444, 443, 443, 397, 397,
	442, 442, 442, 441, 441, 441, 440, 440, 439, 439,
	438, 438, 436, 436, 437, 435, 434, 434, 434, 432,
	432, 432, 428, 428, 430, 429, 429, 431, 423, 423,
	426, 426, 424, 424, 424, 424, 427, 422, 422, 422,
	421, 421, 91, 91, 91, 343, 343, 90, 90, 357,
	357, 357, 357, 357, 355, 355, 355, 355, 355, 355,
	354, 354, 353, 353, 358, 358, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 81, 81, 81, 81,
	81, 86, 86, 86, 503, 503, 502, 502, 504, 504,
	504, 504, 505, 505, 84, 84, 84, 85, 352, 352,
	352, 82, 83, 83, 342, 342, 347, 347, 346, 346,
	346, 346, 346, 346, 346, 346, 346, 346, 346, 346,
	346, 351, 351, 351, 349, 349, 348, 348, 350, 350,
	75, 75, 75, 78, 77, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 76, 76, 76, 76, 76, 76,
	71, 71, 71, 71, 71, 70, 70, 72, 72, 339,
	339, 338, 87, 87, 88, 500, 500, 499, 501, 501,
	501, 501, 89, 95, 95, 95, 95, 95, 95, 95,
	94, 94, 97, 97, 96, 98, 80, 80, 80, 80,
	80, 80, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 470, 470, 470, 472, 472, 277, 278, 507, 280,
	276, 276, 276, 466, 466, 467, 468, 469, 469, 469,
	93, 11, 11, 11, 11, 11, 11, 69, 74, 231,
	231, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 216, 216, 216,
	216, 217, 217, 218, 218, 219, 219, 219, 219, 220,
	220, 236, 236, 236, 235, 233, 233, 233, 233, 233,
	233, 234, 234, 234, 237, 237, 67, 73, 73, 73,
	483, 483, 68, 490, 490, 400, 400, 291, 291, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 405, 406, 287, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 46, 45, 45, 45,
	328, 328, 44, 508, 508, 266, 266, 56, 55, 48,
	57, 58, 59, 60, 61, 62, 43, 54, 54, 54,
	54, 54, 54, 54, 54, 65, 65, 417, 417, 510,
	510, 510, 63, 64, 399, 399, 399, 53, 52, 51,
	50, 49, 49, 42, 42, 41, 41, 47, 129, 130,
	284, 284, 284, 286, 286, 282, 509, 509, 371, 371,
	285, 285, 40, 40, 40, 40, 66, 283, 283, 265,
	281, 281, 281, 12, 12, 10, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 23, 24,
	26, 336, 336, 333, 25, 18, 17, 20, 16, 16,
	19, 21, 22, 22, 9, 9, 9, 9, 13, 13,
	14, 141, 141, 191, 191, 478, 478, 474, 474, 475,
	475, 475, 476, 476, 477, 477, 99, 411, 411, 411,
	411, 411, 411, 8, 163, 163, 410, 410, 410, 410,
	410, 410, 340, 340, 455, 455, 455, 456, 162, 162,
	157, 157, 412, 412, 306, 457, 457, 420, 420, 419,
	419, 418, 418, 160, 160, 161, 161, 144, 144, 109,
	109, 425, 425, 425, 425, 433, 433, 396, 396, 223,
	223, 260, 260, 261, 261, 134, 134, 135, 135, 135,
	135, 135, 135, 463, 463, 465, 465, 464, 159, 159,
	155, 155, 156, 156, 156, 154, 154, 153, 152, 152,
	151, 149, 149, 149, 150, 150, 150, 167, 167, 137,
	137, 137, 136, 136, 136, 136, 136, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 138,
	138, 471, 471, 471, 401, 401, 401, 408, 408, 242,
	242, 243, 243, 241, 241, 139, 139, 140, 140, 140,
	140, 240, 240, 239, 142, 142, 148, 147, 147, 143,
	143, 143, 143, 250, 250, 249, 249, 249, 249, 102,
	107, 107, 108, 166, 166, 248, 247, 247, 247, 165,
	165, 164, 164, 158, 158, 146, 146, 146, 146, 246,
	145, 244, 495, 495, 494, 494, 493, 491, 491, 491,
	492, 492, 492, 492, 447, 447, 447, 447, 447, 271,
	271, 271, 275, 275, 274, 274, 274, 274, 274, 279,
	7, 7, 7, 7, 7, 30, 30, 30, 30, 30,
	30, 30, 30, 36, 175, 176, 37, 177, 177, 178,
	178, 179, 179, 180, 181, 182, 182, 182, 182, 35,
	168, 168, 169, 169, 170, 170, 171, 172, 172, 172,
	174, 173, 34, 27, 479, 482, 480, 480, 484, 484,
	484, 485, 485, 485, 485, 486, 486, 28, 126, 131,
	131, 128, 133, 133, 133, 133, 133, 127, 481, 487,
	487, 487, 337, 337, 334, 335, 335, 332, 331, 331,
	331, 489, 489, 488, 488, 488, 272, 272, 29, 327,
	327, 329, 330, 330, 330, 321, 321, 321, 321, 33,
	325, 325, 326, 326, 326, 326, 326, 322, 322, 324,
	324, 320, 320, 320, 320, 320, 32, 132, 132, 319,
	319, 317, 317, 315, 315, 316, 316, 314, 314, 314,
	318, 318, 31, 31, 31, 111, 110, 110, 110, 263,
	263, 262, 262, 112, 38, 203, 203, 385, 385, 385,
	385, 385, 403, 403, 403, 386, 386, 386, 387, 387,
	387, 388, 388, 388, 388, 388, 402, 402, 404, 404,
	404, 359, 359, 360, 360, 360, 363, 363, 377, 377,
	378, 378, 376, 376, 383, 383, 382, 382, 381, 381,
	380, 380, 379, 379, 379, 379, 374, 374, 373, 373,
	361, 361, 361, 361, 361, 362, 362, 362, 372, 372,
	375, 375, 209, 209, 210, 210, 210, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 453, 453, 454, 212, 212, 221, 221, 221,
	221, 221, 221, 211, 211, 213, 213, 192, 192, 190,
	190, 183, 183, 184, 184, 185, 185, 185, 189, 189,
	188, 188, 188, 188, 186, 186, 187, 187, 187, 187,
	187, 187, 345, 345, 450, 450, 451, 451, 446, 446,
	446, 449, 449, 449, 449, 449, 452, 452, 452, 448,
	448, 193, 258, 258, 258, 273, 273, 273, 273, 257,
	257, 257, 208, 208, 207, 207, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 344, 344, 288, 288,
	289, 289, 230, 229, 229, 229, 229, 229, 227, 228,
	226, 226, 226, 226, 226, 225, 225, 224, 224, 224,
	323, 323, 222, 222, 215, 215, 215, 214, 214, 214,
	384, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 256, 256, 256, 298, 298,
	303, 303, 462, 462, 461, 194, 194, 194, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 204, 204, 204,
	368, 368, 368, 368, 369, 369, 369, 369, 370, 370,
	370, 366, 366, 367, 367, 307, 308, 308, 409, 409,
	364, 364, 365, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	416, 416, 416, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 473,
	473, 473, 458, 458, 458, 459, 459, 459, 459, 459,
	459, 459, 459, 459, 459, 459, 459, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 460, 460, 460,
	460, 460, 460, 460, 254, 254, 254, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 309, 309, 310, 310, 413, 413, 413, 413,
	413, 413, 414, 414, 415, 415, 415, 415, 407, 407,
	407, 407, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 407, 407, 296, 251, 251,
	251, 311, 304, 304, 305, 305, 299, 299, 299, 299,
	299, 299, 299, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 300, 300, 302, 302, 313,
	313, 313, 312, 312, 312, 312, 312, 312, 312, 206,
	206, 206, 206, 293, 293, 293, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 196, 196, 196,
	196, 200, 200, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 201, 201, 201,
	201, 201, 199, 199, 199, 199, 199, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 100, 101, 101, 198, 259, 259, 389,
	389, 392, 392, 390, 390, 391, 393, 393, 393, 394,
	394, 394, 395, 395, 395, 398, 398, 264, 264, 264,
	270, 270, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 1, 3, 3, 1, 2, 2,
	2, 1, 2, 2, 3, 4, 4, 6, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 7, 4, 1,
	3, 2, 2, 2, 1, 3, 3, 4, 3, 7,
	5, 8, 2, 2, 1, 3, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 2, 1, 2, 2, 1, 2, 3,
	2, 3, 3, 3, 1, 1, 7, 7, 8, 8,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 2, 5, 5,
	0, 2, 7, 0, 1, 0, 1, 5, 5, 3,
	3, 2, 4, 4, 4, 4, 4, 1, 1, 1,
	3, 3, 1, 1, 1, 6, 8, 0, 1, 1,
	1, 1, 5, 5, 0, 1, 1, 3, 3, 3,
	4, 6, 7, 4, 4, 7, 8, 3, 3, 3,
	0, 2, 2, 0, 2, 2, 1, 1, 1, 1,
	0, 1, 4, 4, 5, 4, 3, 1, 3, 1,
	1, 3, 5, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	4, 1, 3, 1, 4, 6, 6, 4, 4, 4,
	3, 6, 3, 5, 1, 1, 2, 2, 11, 8,
	9, 1, 3, 2, 4, 0, 2, 0, 1, 1,
	1, 1, 0, 1, 0, 1, 4, 2, 1, 5,
	4, 4, 2, 5, 1, 3, 2, 1, 5, 4,
	4, 2, 0, 5, 0, 1, 3, 3, 1, 3,
	1, 3, 1, 3, 4, 0, 1, 0, 1, 1,
	3, 1, 1, 0, 4, 1, 3, 2, 1, 0,
	8, 0, 4, 7, 4, 0, 2, 0, 2, 0,
	2, 0, 4, 1, 3, 1, 1, 5, 3, 4,
	6, 4, 5, 2, 3, 1, 3, 6, 0, 3,
	0, 1, 2, 4, 4, 0, 1, 3, 1, 3,
	3, 0, 1, 1, 0, 2, 2, 0, 2, 3,
	3, 3, 1, 3, 3, 3, 3, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 7,
	7, 1, 1, 1, 0, 1, 1, 1, 1, 0,
	2, 0, 3, 0, 2, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	4, 4, 3, 2, 2, 2, 3, 2, 3, 4,
	1, 3, 4, 0, 2, 1, 1, 2, 2, 0,
	1, 2, 4, 1, 3, 1, 3, 2, 3, 1,
	4, 3, 0, 1, 1, 2, 5, 2, 2, 2,
	0, 2, 3, 3, 0, 1, 3, 1, 3, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 7, 1, 1, 7, 1, 3, 0,
	1, 1, 3, 1, 3, 0, 1, 1, 1, 12,
	1, 3, 0, 1, 1, 3, 1, 1, 2, 4,
	1, 1, 7, 7, 1, 4, 1, 1, 3, 4,
	3, 0, 1, 1, 1, 0, 2, 7, 8, 0,
	2, 6, 0, 2, 2, 3, 3, 4, 1, 0,
	2, 2, 1, 3, 2, 1, 3, 2, 1, 3,
	2, 0, 1, 3, 4, 3, 1, 1, 4, 1,
	3, 1, 1, 1, 1, 0, 1, 1, 1, 11,
	0, 2, 3, 2, 3, 1, 1, 1, 3, 3,
	4, 0, 2, 2, 2, 2, 6, 0, 4, 1,
	1, 0, 3, 0, 1, 1, 2, 4, 4, 4,
	0, 1, 11, 9, 11, 2, 2, 4, 5, 1,
	3, 0, 3, 5, 10, 0, 2, 0, 3, 2,
	4, 3, 0, 2, 1, 0, 2, 3, 0, 2,
	3, 0, 3, 2, 4, 3, 0, 1, 0, 1,
	1, 0, 6, 0, 3, 5, 0, 4, 0, 3,
	1, 3, 4, 5, 0, 3, 1, 3, 2, 3,
	1, 2, 0, 4, 6, 5, 0, 2, 0, 2,
	4, 5, 4, 5, 1, 5, 6, 5, 0, 3,
	0, 1, 0, 1, 1, 3, 2, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	5, 4, 1, 3, 3, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 1, 1, 1, 1,
	7, 9, 7, 9, 2, 1, 7, 9, 7, 9,
	8, 5, 0, 1, 0, 1, 1, 1, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 3, 1, 3, 5, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 2, 1, 2, 2, 1,
	1, 2, 2, 2, 3, 3, 2, 2, 1, 5,
	6, 4, 1, 1, 1, 5, 1, 2, 0, 1,
	1, 2, 5, 0, 1, 1, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 2, 2,
	0, 3, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 3, 5, 2,
	2, 2, 2, 1, 1, 2, 5, 6, 6, 6,
	1, 1, 1, 1, 1, 4, 4, 4, 0, 2,
	0, 1, 1, 2, 4, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 2, 2, 2, 0, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 5, 0, 1, 3, 0, 1, 0, 2,
	0, 1, 6, 8, 6, 5, 5, 6, 6, 6,
	6, 5, 6, 6, 6, 6, 6, 6, 6, 6,
	1, 1, 1, 4, 4, 6, 8, 6, 4, 5,
	4, 4, 4, 3, 4, 6, 6, 7, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 8, 4, 2, 3,
	2, 4, 2, 2, 4, 6, 2, 2, 4, 6,
	4, 2, 0, 1, 2, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 3, 0, 1, 1, 3, 3, 3, 3, 3,
	2, 1, 1, 3, 4, 3, 4, 3, 4, 3,
	4, 3, 4, 1, 3, 4, 4, 5, 4, 5,
	3, 4, 5, 6, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 1, 2, 3, 5, 1, 1, 3, 0,
	1, 0, 3, 0, 3, 3, 0, 3, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -498, -506, -2, -5, 570, -1, -4, -101, -75,
	-7, -103, -104, -8, -99, -9, -10, -12, -79, -94,
	-96, -98, -97, -39, -11, -93, -70, -71, -81, -87,
	-90, -91, -92, -105, -100, -102, -134, -106, 563, -76,
	-77, -78, -30, -29, -28, -27, -126, 569, 422, 12,
	471, -13, -14, -463, -15, 243, -276, -277, -278, -280,
	-507, -40, -41, -42, -49, -50, -51, -52, -53, -63,
	-64, -65, -43, -44, -45, -48, -46, -56, -55, -57,
	-58, -59, -60, -61, -62, -47, -129, -130, -66, -68,
	-67, -73, -69, -74, -128, 218, -72, 67, -82, -83,
	-84, -85, -86, -88, -89, 348, 354, 411, 562, 52,
	-135, -137, 573, 146, 147, 149, 150, -31, -32, -33,
	-34, -35, -36, -38, -37, 214, 14, 504, -16, -19,
	-17, -20, -18, -25, -26, -24, -21, -23, -127, -22,
	238, 237, 37, 304, 305, 306, 352, 236, 215, 13,
	30, 41, 330, -136, 73, 216, -138, 10, 575, -6,
	-3, -2, -113, -117, -121, -124, -125, -122, -123, -4,
	-101, 104, 228, 564, -273, 344, 565, 567, 566, 76,
	84, -267, -269, 348, 354, 562, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 474, 549, 550, 551, 552, 328, 329, 501,
	255, 279, 379, 285, 292, 146, 165, 159, 187, 179,
	154, 259, 297, 260, 83, 149, 457, 94, 434, 408,
	152, 274, 276, 278, 281, 280, 282, 284, 261, 331,
	175, 170, 273, 257, 168, 262, 39, 263, 192, 264,
	265, 506, 430, 327, 436, 289, 406, 169, 431, 277,
	433, 194, 198, 448, 449, 163, 164, 438, 451, 191,
	235, 42, 503, 247, 452, 196, 190, 186, 460, 293,
	291, 189, 162, 185, 258, 56, 200, 199, 201, 402,
	403, 404, 405, 266, 267, 342, 447, 182, 171, 332,
	155, 22, 455, 242, 435, 355, 268, 286, 294, 195,
	197, 249, 254, 505, 410, 253, 290, 453, 167, 246,
	275, 241, 456, 156, 357, 269, 150, 283, 450, 459,
	55, 370, 161, 153, 232, 147, 251, 256, 11, 270,
	271, 272, 296, 295, 287, 183, 248, 188, 173, 160,
	184, 148, 250, 458, 371, 560, 330, 389, 181, 178,
	252, 225, 454, 437, 151, 393, 372, 176, 298, 556,
	557, 558, 343, 326, 299, 300, 174, 239, 428, 429,
	301, 303, 399, 319, 373, 409, 380, 374, 207, 307,
	440, 442, 193, 559, 308, 309, 310, 432, 311, 312,
	313, 314, 347, -350, -348, -273, 562, 354, 348, 330,
	-177, -273, 574, -144, 38, -190, -273, -144, -72, -14,
	-13, -136, -137, -190, 222, -281, 23, 406, -80, 407,
	218, 73, -273, -9, -92, -8, -99, -70, -134, 411,
	-279, -273, 304, 304, -279, 222, -273, 253, 387, -400,
	228, -354, -327, 254, -353, -329, -356, -330, 31, 214,
	216, 215, 250, 14, 352, 224, 12, 10, 353, 236,
	24, 25, 27, 13, 354, 356, 28, 357, 360, 361,
	362, 41, 365, 366, 243, 76, 84, 79, 261, -176,
	-273, -305, -299, 101, 244, -301, -294, -295, -297, -442,
	-436, -292, 73, 128, 129, 136, 102, -296, -384, 35,
	104, 513, 472, -252, -253, -254, -255, -256, -273, -437,
	-435, 79, 85, 88, 91, 92, 90, 89, 172, 87,
	80, 140, 141, -137, 76, -458, 521, -268, 542, 549,
	550, 551, 552, 541, 52, -407, -415, 221, -413, 139,
	177, 239, 173, 12, 134, 399, 174, 518, 538, 474,
	522, 545, 515, 516, 510, 511, 512, 514, 523, 525,
	537, -416, 533, 543, 544, 531, 546, 547, 548, 78,
	77, 536, 535, 524, 519, 520, 526, 509, 517, 527,
	528, 534, 539, 540, 336, 94, 337, 338, 464, 331,
	339, 228, 406, 61, 340, 341, 342, 343, 344, 471,
	345, 62, 346, 335, 243, 389, 347, 176, 193, 476,
	475, 477, 468, 465, 463, 466, 467, 469, 470, 529,
	530, 532, -107, -108, 554, -153, -154, -245, 19, 6,
	7, 8, 9, -496, 408, 505, 151, 148, -341, 151,
	100, 156, 155, -341, 307, 249, 349, 225, 328, 389,
	311, 253, -321, -319, -402, 301, 297, 223, 233, 232,
	95, 464, 221, 363, -474, -475, 211, 212, 213, -465,
	497, -464, -273, 338, 26, 222, 349, 249, 442, 440,
	441, 443, 444, 445, 446, -54, -417, -399, 437, 436,
	-285, 429, 435, 427, 439, 430, 329, 313, 312, 214,
	571, 498, -264, 373, 409, 461, 462, 350, 410, 448,
	450, 431, 94, 180, 177, 225, 222, 328, 464, 389,
	311, -474, 148, 448, 450, 253, 387, 40, -347, 399,
	-346, -348, 449, 460, 77, 78, 447, -264, 94, 428,
	428, -154, -245, -153, -135, -137, -102, -463, 223, 328,
	389, 253, 224, 222, 225, 464, 221, 304, 349, 249,
	311, -401, -471, 31, -408, 208, 209, 210, 32, 33,
	-1, 108, 575, -299, -299, -6, 576, -6, -299, -273,
	-273, 143, -196, -200, -197, -199, -198, -202, -201, 177,
	178, 139, 181, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 30, 193, 239, 173, 174, 175, 176,
	194, 159, 179, 502, 202, 160, 203, 161, 204, 162,
	205, 163, 164, 206, 165, 168, 169, 170, 171, 167,
	142, 73, 142, 79, -160, 245, -190, 142, -160, -154,
	-153, -154, -190, -257, -273, 408, 111, -80, -80, 407,
	-466, -467, -468, -470, 218, 407, 406, 142, 261, 15,
	-279, -279, 71, -190, -329, 253, -354, -327, 35, 70,
	143, 226, 143, 70, 73, 350, 328, 389, 351, 464,
	222, 363, 225, 253, 364, 328, 389, 222, 225, 464,
	253, 328, 222, 225, 389, 253, 364, 427, 428, 225,
	26, 355, 358, 359, 428, -421, 460, 143, 100, 97,
	98, 99, -299, 118, -312, 111, 112, 113, 114, 115,
	116, 117, 125, 124, 135, 128, 129, 130, 131, 132,
	133, 134, 126, 127, 121, 101, 119, 123, 120, 103,
	-137, -299, -305, 52, -297, -297, -297, -297, -384, -303,
	-299, 73, 73, 142, 79, -299, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, -414, 73,
	73, -309, -310, 73, 73, -292, -257, 73, 79, 79,
	73, 73, 73, 79, -310, -310, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, -154, 143, 73, -109,
	38, -156, 21, -138, -137, 20, 31, 32, 31, 32,
	31, 32, 31, 32, 85, 453, 504, 154, 155, 156,
	-175, -273, -177, -168, -273, -317, 228, -317, -317, -317,
	-317, 224, -317, 222, 222, 222, -317, -476, 158, 143,
	-465, -159, 73, -284, 119, 123, 23, 251, 251, 251,
	-284, 291, -508, -509, 15, 121, -282, -509, -282, -282,
	-284, -510, 224, 438, 42, 252, 251, -155, -156, -155,
	432, 428, -371, 433, 434, -286, -509, -285, -284, -284,
	-285, -284, -284, -284, 222, 225, 464, 311, 572, -508,
	-508, 30, 30, -400, -190, -400, 498, -265, -273, -400,
	-400, -477, 227, -503, -502, 451, -505, 453, 148, -348,
	148, -348, -329, 253, 253, 143, 111, 23, -349, 111,
	122, -348, -348, -349, -349, -211, 40, -272, 139, -273,
	79, -211, 40, -500, -499, -190, -155, -138, -137, 74,
	74, 74, -400, -400, -400, -400, -400, -402, -400, -400,
	-400, -279, -168, -177, 228, -400, -139, -140, 130, -299,
	-273, -139, -3, -115, -114, 105, 106, 108, 565, 344,
	564, 568, 562, -348, 40, -395, 371, 370, -389, -391,
	73, -390, 73, -390, -390, -390, 73, 73, -392, 73,
	-392, -392, -389, -393, 73, -393, -394, 73, -394, -393,
	-273, -304, -305, -273, 38, -410, 52, -134, 73, 30,
	73, -273, -411, 52, -134, 73, 30, -155, -109, -156,
	142, 85, 79, -80, 74, 143, -469, 91, 92, -472,
	191, 183, -273, -95, 79, -7, -8, -9, -10, -39,
	-70, -134, -438, -436, 73, 31, 398, 70, 15, -355,
	222, 464, 349, 249, 225, 328, -353, -336, -333, -331,
	-272, -329, -332, -331, -358, -257, 428, -110, 412, 303,
	-299, -299, -299, -299, -299, 90, 101, 326, 91, 92,
	-294, -313, 31, 299, 300, -295, -295, -295, -295, -295,
	-295, -295, -295, -295, -295, -295, -295, -302, -311, -384,
	73, 121, 119, 123, 120, 103, -297, -297, -295, -295,
	74, 143, -462, -461, 105, -299, -299, -273, -459, -460,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 340, 335, 341, 339, 331, 347, 342, 343, 176,
	495, 496, 489, 490, 491, 492, 493, 494, -304, -304,
	-299, -459, -304, -251, 32, 31, -305, -305, -305, 74,
	-299, -473, 324, 323, 325, -157, -273, -304, 74, 74,
	74, 85, -305, -305, -304, -295, -304, -460, -251, -251,
	-305, -305, -251, -251, -251, -251, 130, -251, -251, -251,
	-251, -251, -251, -251, -251, 74, 74, 74, -155, -108,
	-419, -418, -299, 40, 555, -109, -299, -152, -151, -299,
	-497, 79, 454, 455, 152, 155, 154, 34, 73, 73,
	142, -190, 101, -479, -273, -337, -334, -331, -273, -327,
	-273, -273, -317, -317, -317, -190, -477, -464, 34, -158,
	-273, -241, 16, -297, -297, -331, 253, -508, -284, -284,
	-266, -265, -286, -281, -286, -286, -241, -509, -284, -284,
	-286, -282, -241, -273, 428, -241, -241, -371, -283, -273,
	-283, -317, -265, -266, -266, -190, -231, -232, 219, 216,
	215, -238, 217, 292, -318, 472, -217, -218, 68, 41,
	-220, 375, 368, 255, 259, 83, 260, 408, 261, 224,
	263, 264, 265, 280, 282, 235, 266, 267, 268, 399,
	269, 147, 281, 270, 271, 272, 351, -212, 6, 314,
	40, 50, 51, 421, 420, 507, 504, 256, -479, -479,
	30, 30, -337, -273, -147, -142, -146, -143, -148, -244,
	-246, -145, 73, -190, -137, -273, 143, 452, 454, 455,
	-503, -349, -503, -349, 31, 398, -352, 398, 31, -327,
	-346, 448, 450, -342, 79, 399, -332, -351, 70, 139,
	-418, -349, -349, -351, -351, 138, 143, -501, 453, 454,
	211, -109, -192, -190, -479, -336, -327, -273, -400, -192,
	-273, -273, 73, 35, -273, -240, 143, -239, 15, -274,
	-273, 34, 79, 142, -240, -116, -114, 107, -299, -6,
	564, -299, -6, -6, -299, -6, -299, -398, 372, 85,
	85, -259, 79, -259, 85, 85, 85, 74, 79, -340,
	70, -412, -306, -457, 554, -162, 74, -157, -455, -456,
	-157, -161, -273, -412, -162, 74, -455, -109, -109, -273,
	23, -80, -467, 142, 143, -158, -355, -335, -332, -357,
	130, -273, -343, 143, 504, 577, 77, 226, -489, -488,
	390, 74, 143, -422, 227, 471, 79, 578, 207, 90,
	326, 91, 92, -384, -305, -302, -297, -297, -295, -295,
	-300, 240, -300, 100, -299, -298, -461, 107, -299, 34,
	143, 71, 142, 74, 74, 15, 15, 74, -299, 74,
	74, 74, 74, 15, 15, -299, 74, 142, 74, 74,
	74, 74, 71, 74, 143, 74, 143, -305, -299, 74,
	74, -299, -299, -299, -305, 74, -299, -299, -299, -299,
	-299, -299, -299, -299, -365, 423, -365, -365, 143, 74,
	79, 143, 22, 143, -149, 36, 37, 153, 156, 156,
	155, -176, -178, -179, -180, -181, -182, 121, 144, 145,
	-169, -170, -171, -172, -196, -257, 178, 181, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 239,
	173, 174, 175, 176, 194, 159, 179, 160, 161, 162,
	163, 164, 165, 168, 169, 170, 171, 167, -273, -159,
	35, -482, 376, -490, 143, 40, -488, 464, -320, 71,
	-132, 15, -190, -190, -190, -203, 34, 15, -141, -191,
	-273, 73, 74, 143, -299, -328, 71, -273, -266, -241,
	-241, -190, -273, -241, -241, -284, -286, -286, -282, 142,
	-265, -159, 143, -189, -193, 230, -186, -188, -257, -289,
	-187, 233, -451, 231, 229, 95, 234, 288, 96, 224,
	-233, 224, 96, -273, 230, 234, 229, -234, 224, 288,
	231, 226, -270, 111, -264, 138, 226, 42, 351, -270,
	508, -270, -270, -270, -270, -270, -270, -270, 262, 262,
	-270, -270, -270, -270, -270, -270, -270, -270, -270, -270,
	-270, 148, -270, -270, -270, -270, -270, -270, 73, 257,
	258, -483, 376, 30, 334, 334, -490, -133, 328, 30,
	-247, -248, -249, -250, 59, 63, 65, 60, 61, 62,
	66, 30, 143, -271, -275, 34, -273, 79, -271, -137,
	-142, -147, -271, 73, -502, -504, 456, 453, 459, -351,
	-351, 226, 73, 111, -351, -351, 40, -272, -499, 460,
	454, -167, 23, 143, 70, -192, -169, -177, -241, -140,
	-142, -273, 79, -273, 130, -241, 108, -6, 106, -120,
	-119, -118, 109, 562, 568, 108, 108, 108, 74, 74,
	74, 143, 74, 74, 74, 143, 74, 143, -425, 433,
	39, 143, 73, 74, 143, 52, 143, 111, 74, 143,
	74, 52, -167, 142, 408, -273, -436, 74, -357, 143,
	226, 142, 142, -333, 354, -272, -335, 20, 504, -257,
	38, -263, -262, 79, 578, 74, -300, -300, 100, -297,
	-294, 74, 108, -299, 106, -194, -196, 370, 371, -195,
	-201, 139, 177, 239, 176, 175, 173, 370, 371, -211,
	-273, -299, -299, 74, -299, -299, 15, -273, -211, -295,
	-299, -154, 74, -364, -365, -364, 74, 74, 74, 74,
	-364, 74, 74, 74, 74, 74, 74, 74, 74, 73,
	-418, -425, -299, -299, -151, -150, 43, 156, 362, 74,
	143, -257, 74, 143, -196, 34, -485, 435, 378, 388,
	-270, -291, -290, 330, 41, -405, 399, 384, 385, -334,
	253, -273, 70, 318, 319, 320, 321, -315, -316, -314,
	-318, -479, 73, 73, 73, -385, 308, -196, -190, -141,
	-273, 15, 143, -478, 142, -1, -273, -327, -284, -241,
	-509, -241, -284, -284, -286, -273, 34, -232, -236, 44,
	46, -193, -196, -187, -450, -451, -317, -273, 96, -450,
	96, 73, -273, -273, -273, 96, 96, -273, -273, -273,
	-235, -283, -216, 40, 47, 48, 49, -270, -270, 180,
	-219, 40, 398, 400, 401, 85, 85, 85, 85, 79,
	79, 79, -270, -270, 85, 79, -275, 79, -452, 155,
	44, 45, 85, 85, 85, 85, 40, 79, -221, 40,
	273, 277, 274, 275, 276, 79, 85, 40, 85, 40,
	85, 40, -273, 73, -453, -454, 79, -485, -270, 334,
	-348, 111, -291, -131, 83, 31, -163, 219, 216, -479,
	-339, -338, -257, -146, -146, -146, -146, 59, 59, 59,
	64, 59, 64, 59, -249, -339, -148, -159, -275, 74,
	-495, -494, -493, -491, 67, 227, 68, -304, 453, 457,
	458, -335, -287, 79, -342, 13, -190, -190, -404, 283,
	284, 74, -243, 17, 142, -243, 104, -6, -116, -118,
	-299, -6, -299, 564, 344, 565, 79, 85, 85, -433,
	418, 413, 415, 96, -306, -420, -419, 52, -134, -157,
	-412, -456, -418, -273, 52, -134, -412, -273, 85, 15,
	-332, -327, 130, 130, -273, 355, -343, 79, 377, 79,
	222, 579, 143, 111, -263, -294, -299, 74, -204, 164,
	163, -204, 74, -390, -390, -389, -392, -389, -204, -204,
	74, 74, 23, 74, 74, 74, -299, 74, 74, 143,
	-409, 473, -364, -364, -364, -364, -364, -364, -364, -364,
	-364, -364, -364, -364, -364, -308, -307, 245, -433, 44,
	45, 79, 79, -180, -196, 220, -171, 40, -134, -486,
	83, -480, 79, -273, -487, 83, 379, 141, 332, 40,
	380, 381, 396, 327, 85, 85, 386, -481, -273, -133,
	-190, -314, -264, 138, 264, 311, -183, -184, -185, -193,
	-186, -188, -183, -183, -386, 310, 20, 85, 129, -160,
	71, 142, -142, -191, -273, 130, 74, -241, -273, -241,
	-241, -284, -134, -257, -236, -208, -207, -205, 90, 101,
	40, 368, -206, 83, 138, 278, 281, 280, 256, 279,
	-230, -288, 70, 374, 316, 317, -318, 229, 95, 96,
	356, -289, -448, -273, -446, -448, -273, -446, -446, -317,
	-299, -273, -237, 316, 317, -344, 289, 101, -344, -211,
	-211, 30, 79, 79, -192, 74, 143, 111, -486, -480,
	111, -349, 79, -487, 79, 143, -163, -163, -241, 143,
	111, -165, -164, 70, 71, -166, 70, -164, 59, 59,
	-241, -493, -492, 23, -451, -451, -451, 74, 74, -242,
	18, 20, 130, -242, 108, 106, 108, 108, -273, 74,
	74, -396, 556, -429, -431, 413, 20, 20, 13, 74,
	-412, -412, -327, -343, 399, -190, -262, 79, 579, -299,
	74, -299, 74, 79, -154, 20, -396, -173, -196, -292,
	79, -484, 390, 79, 79, 85, 40, 85, 141, 382,
	-406, -131, 73, -270, -270, -270, -273, 74, 143, 74,
	74, -387, 244, 85, 129, 85, 129, 85, -271, -142,
	-273, -241, -478, 142, -241, -241, -205, 90, -295, 79,
	-213, -272, 139, -214, 40, 277, 273, 111, 111, -215,
	40, 257, 258, -222, 73, 288, 13, 180, 96, 96,
	-190, 73, 73, 71, 298, 73, 73, -448, 74, 289,
	138, -211, 74, -454, 79, -484, 79, -351, -479, -154,
	-338, -418, -299, 73, -299, 73, 59, 19, 17, -299,
	-305, 228, -6, 565, 344, -223, 557, 79, 20, 79,
	-427, 79, -339, -112, -423, -371, 74, 74, -364, -367,
	-366, -370, 419, 290, 426, -305, -223, 503, 20, 504,
	331, 40, 85, 40, 383, -322, -324, -257, 73, -211,
	-213, 79, -209, -210, -238, -318, -185, -111, -110, -209,
	-388, 147, 85, 129, 85, 85, -241, -241, 79, 79,
	85, 73, -413, 30, -323, 73, -322, -322, -449, 318,
	319, 320, 322, 321, -449, -322, -322, 73, -345, -344,
	-270, 138, -155, -158, -447, -273, 229, 20, 20, -273,
	-273, -260, 558, 85, 79, 415, -397, 559, -432, 418,
	-426, -424, 413, 414, 415, 416, 74, -369, 103, 382,
	386, -293, -296, 85, 88, 172, 141, -260, -174, -273,
	79, 377, 79, 331, 74, 143, -389, -299, -359, 245,
	143, -238, -264, -112, -359, -403, 155, 309, 504, 85,
	129, 85, -154, 74, -299, -309, -270, -225, -224, 500,
	-322, 74, 74, 74, 74, -322, -211, -270, 74, 74,
	143, 73, 20, 79, -434, 227, -430, -431, 417, -424,
	20, 415, 20, 20, -368, -369, 386, -293, -296, 554,
	424, 424, 424, 34, 399, -325, -324, -149, 74, -360,
	297, 20, -238, -270, -360, 309, 85, 129, 85, -155,
	74, -273, -229, -227, -228, 70, 431, 286, 287, 74,
	-325, 71, -325, 71, -325, 71, -325, 71, 74, -211,
	-273, 229, -261, -273, -427, -441, 73, 85, -429, -428,
	-430, 20, -427, 20, -427, -427, 100, 425, 425, 425,
	79, -326, 235, 83, 504, 316, 317, -149, 20, -361,
	290, 291, -362, -375, 293, -211, 85, -344, -228, 70,
	-227, 70, 14, 13, -449, -449, -449, -449, -230, 74,
	143, -445, 30, 74, -440, -439, -258, -435, -273, 418,
	419, 79, -427, -368, -270, 79, 315, -257, 73, -373,
	294, 73, -371, 73, -371, 96, 319, -226, 283, 284,
	30, 155, -226, -325, -325, -325, -325, -273, -444, -443,
	-442, 74, 143, 142, 85, -273, -358, -363, 295, 85,
	-295, 73, -295, 73, -372, 292, 73, 90, 40, 285,
	143, 111, -439, -273, 74, -377, 73, 20, 74, -358,
	74, -358, 73, 111, -295, -443, 40, -299, 142, -378,
	-376, 245, -362, 74, 74, 74, -358, 85, 74, -273,
	74, 143, -273, -374, 296, 74, -376, -379, 52, 85,
	-383, -380, 73, -238, 247, 121, -383, -238, -382, -381,
	295, 248, 73, 74, 143, -273, 244, 73, -305, -381,
	-380, -305, 74, 74,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 260,
	261, 262, 800, 801, 802, 803, 804, 0, 0, 0,
	0, 574, 575, 0, 545, 0, 0, 0, 0, 0,
	0, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 351,
	352, 353, 354, 355, 356, 0, 285, 281, 206, 207,
	208, 209, 210, 292, 293, 415, 0, 0, 0, 0,
	655, -2, 53, 274, 0, 265, 265, 805, 806, 807,
	808, 809, 810, 811, 812, -2, 587, 0, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	340, 341, 342, 336, 337, 339, 338, -2, 0, 587,
	0, 0, 0, 675, 0, 0, 692, 714, 23, 0,
	7, 9, 10, 11, 12, 13, 14, 15, 16, 17,
	18, 0, 0, 19, 0, 19, 0, 0, 0, 1115,
	1116, 1117, 1118, -2, 1601, 1579, 1751, 1752, 1753, 1754,
	1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764,
	1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1662, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 0, 258, 256, 1579, 1601, 1661, 1694,
	0, 817, 0, 633, 0, 638, 1069, 633, 286, 576,
	577, 675, 675, 543, 0, 322, 0, 1592, 326, 0,
	0, 0, 540, 316, 317, 318, 319, 320, 321, 0,
	0, 799, 0, 0, 312, 0, 280, 1652, 0, 0,
	0, 0, 0, 0, 150, 889, 152, 891, 156, 163,
	0, 0, 168, 169, 172, 173, 174, 175, 176, 0,
	180, 0, 182, 185, 0, 187, 188, 0, 191, 192,
	193, 0, 203, 204, 205, 892, 893, 894, -2, 81,
	815, 1513, 1404, 0, 1411, 1412, 1423, 1434, 1193, 1194,
	1195, 1196, 0, 0, 0, 0, 0, 1203, 1204, 0,
	1220, 1755, 0, 1210, 1211, 1212, 1213, 1214, 90, 102,
	103, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 0, 1377, 1180, 1115, 0, 1763, 0, 1783, 1788,
	1789, 1790, 1791, 1782, 0, 0, 1362, 0, 1352, 0,
	0, -2, -2, 0, 0, 1720, -2, 1760, 1779, 1787,
	1764, 1786, 1757, 1758, 1752, 1753, 1754, 1756, 1765, 1767,
	1778, 0, 1774, 1784, 1785, 0, 0, 0, 0, 104,
	105, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1368, -2, 1370, 1371, 1373, -2,
	1375, 1376, -2, 1379, 1380, 1381, -2, -2, 1384, 1385,
	1386, 1387, 1388, 1389, 1392, -2, -2, -2, -2, 1364,
	1365, 1366, 1367, 1356, 1357, 1358, 1359, 1360, 1361, -2,
	-2, -2, 675, 750, 0, -2, 0, 0, 0, 697,
	700, 703, 706, 0, 54, 55, 275, 276, 264, 266,
	0, 270, 0, 263, 0, 0, 0, 921, 921, 921,
	921, 921, 0, 921, 0, 0, 0, 921, 896, 897,
	898, 919, 920, 967, 592, 588, 589, 590, 591, 663,
	0, 665, 668, 520, 467, 0, 0, 0, 520, 0,
	481, 473, 0, 0, 0, 520, 0, 0, 670, 670,
	0, 523, 530, 520, 520, -2, 520, 520, 520, 0,
	0, 487, 488, 489, 473, 473, 492, 493, 494, 505,
	506, 531, 1537, 0, 0, 415, 0, 415, 0, 415,
	415, 594, 1689, 1599, 1666, 1652, 0, 0, 231, 1720,
	236, 0, 1600, 1615, 0, 0, 1633, 0, -2, 0,
	302, 670, 0, 676, 0, 675, 0, 0, 415, 415,
	415, 415, 415, 966, 415, 415, 415, 0, 0, 0,
	415, 0, 0, 715, 716, 711, 712, 713, 717, 718,
	5, 6, 19, 0, 0, 0, 0, 0, 0, 60,
	59, 0, 1514, 1532, 1468, 1469, 1470, 1519, 1472, 1523,
	1523, 1523, 1523, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 0, 0, 1512, 1492, 1521, 1521, 1521, 1519,
	1516, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1526, 1526, 1529, 1529, 1526,
	0, 1402, 0, 0, 0, 0, 637, 0, 0, 670,
	-2, 0, 544, 323, 1119, 0, 0, 327, 328, 0,
	0, 343, 0, 346, 331, 332, 333, 0, 130, 0,
	314, 315, 0, 0, 282, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 160, 157, 164, 167, 177,
	184, 0, 196, 198, 201, 158, 165, 170, 171, 178,
	199, 159, 161, 162, 166, 200, 202, 179, 183, 197,
	181, 186, 189, 190, 195, 0, 131, 0, 0, 0,
	0, 0, 1410, 0, 0, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 1404, 0, 0, 1199, 1200, 1201, 1202, 1205, 0,
	1221, 0, 0, 0, 1466, 0, 1402, 1402, 0, 1402,
	1398, 0, 0, 0, 0, 0, 0, 1402, 1338, 0,
	0, 1340, 1353, 0, 0, 1342, 1343, 0, 1346, 1347,
	1402, 0, 1402, 1351, 1334, 1335, 0, 1398, 1398, 0,
	0, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
	1398, 1398, 1398, 0, 0, 0, 670, 0, 0, 658,
	0, 639, 0, 694, 696, 0, 698, 699, 701, 702,
	704, 705, 707, 708, 56, 0, 0, 268, 0, 273,
	0, 814, 0, 0, 830, 0, 0, 0, 0, 0,
	0, 0, 0, 921, 921, 921, 0, 594, 593, 0,
	664, 0, 0, 723, 0, 0, 0, 473, 520, 520,
	479, 480, 475, 474, 526, 527, 523, 0, 523, 523,
	723, 0, 499, 500, 501, 520, 520, 507, 671, 508,
	509, 523, 0, 528, 529, 723, 0, 0, 723, 723,
	0, 517, 518, 519, 0, 0, 921, 0, 536, 475,
	475, 1538, 1539, 0, 930, 0, 0, 0, 539, 0,
	0, 0, 595, 211, 214, 0, 217, 0, 1689, 0,
	1689, 0, 224, 0, 0, 0, 0, 0, 0, 254,
	255, 0, 0, 0, 0, 245, 248, 1063, 1064, 886,
	887, 249, 250, 294, 295, 0, 639, 693, 695, 689,
	690, 691, 0, 0, 0, 0, 0, 415, 0, 0,
	0, 570, 0, 572, 0, 0, 731, 725, 727, 794,
	90, 731, 8, 77, 74, 0, 19, 0, 0, 19,
	19, 0, 19, 259, 0, 1535, 1533, 1534, 1471, 1520,
	0, 1497, 0, 1498, 1499, 1500, 0, 0, 1493, 0,
	1494, 1495, 1496, 1487, 0, 1488, 1489, 0, 1490, 1491,
	257, 0, 1403, 818, 0, 612, 625, 607, 0, 614,
	0, 1070, 596, 625, 598, 0, 614, 639, 661, 639,
	0, 324, 0, 329, 0, 0, 345, 347, 348, 349,
	334, 335, 541, 310, 311, 303, 304, 305, 306, 307,
	308, 309, 313, 100, 0, 283, 284, 0, 0, 0,
	144, 145, 146, 147, 148, 149, 151, 135, 561, 563,
	878, 890, 0, 881, 0, 154, 194, 127, 0, 0,
	1405, 1406, 1407, 1408, 1409, 1413, 0, 1415, 1417, 1419,
	1421, 0, 1439, -2, -2, 1181, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1424, 1437, 1438,
	0, 0, 0, 0, 0, 0, 1435, 1435, 1430, 0,
	1197, 0, 1218, 1222, 0, 0, 0, 91, 1397, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315,
	1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 0, 0,
	1404, 0, 0, 0, 1399, 1400, 0, 0, 0, 1293,
	0, 0, 1299, 1300, 1301, 0, 620, 0, 1363, 1339,
	1354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 749, 751,
	0, 629, 631, 632, 0, 659, 672, 677, 678, 681,
	52, 57, 277, 278, 0, 0, 272, 0, -2, 832,
	0, 668, 0, 0, 844, 413, 872, 0, 0, 888,
	911, 917, 0, 0, 0, 945, 0, 666, 0, 0,
	763, 466, 0, 521, 522, 470, 1652, 475, 723, 723,
	482, 476, 483, 525, 484, 485, 486, 0, 723, 723,
	520, 523, 510, 524, 523, 513, 514, 0, 532, 537,
	533, 0, 535, 490, 491, 668, 358, 359, 0, 0,
	0, 364, 0, 1540, 0, 0, 0, 0, 374, 1540,
	0, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 0, 0,
	1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540,
	1540, 0, 1540, 1540, 1540, 1540, 1540, 1049, 1540, 0,
	931, 381, 382, 383, 384, 389, 390, 0, 410, 0,
	0, 0, 413, 862, 736, 0, 737, 738, 734, 765,
	789, 789, 0, 789, 769, 1069, 0, 0, 222, 223,
	212, 0, 213, 0, 225, 226, 0, 228, 229, 230,
	237, 1599, 1666, 232, 234, 0, 0, 238, 251, 252,
	253, 0, 0, 243, 244, 0, 0, 297, 298, 300,
	0, 687, 558, 1067, 559, 560, 564, 0, 0, 567,
	568, 569, 832, 0, 867, 723, 0, 732, 0, 728,
	795, 0, 797, 0, 723, 0, 75, 19, 0, 68,
	65, 0, 0, 0, 0, 0, 1515, 1467, 1536, 0,
	0, 0, 1517, 0, 0, 0, 0, 58, 641, 603,
	0, 606, 622, 0, 626, 0, 0, 618, 611, 615,
	0, 0, 635, 597, 0, 0, 602, 687, 662, 1120,
	0, 330, 344, 0, 0, 0, 0, 138, 875, 0,
	139, 143, 133, 0, 0, 0, 880, 0, 877, 882,
	0, 153, 0, 0, 128, 129, 936, 941, 0, 1414,
	1416, 1418, 1420, 1422, 0, 1425, 1435, 1435, 1431, 0,
	1426, 0, 1428, 0, 1405, 0, 1223, 0, 0, 0,
	0, 0, 0, 1283, 1284, 0, 0, 1288, 0, 1290,
	1291, 1292, 1294, 0, 0, 0, 1298, 0, 1337, 1355,
	1341, 1344, 0, 1348, 0, 1350, 0, 675, 0, 1260,
	1260, 0, 0, 0, 0, 1260, 0, 0, 0, 0,
	0, 0, 0, 0, 1215, 0, 1216, 1217, 0, 752,
	641, 0, 0, 0, 684, 682, 683, 279, 267, 269,
	0, 0, 0, 820, 821, 823, 0, 826, 827, 828,
	0, 833, 834, 836, 837, 0, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1584, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 831, 0,
	922, 851, 1540, 417, 0, 0, 874, 0, 0, 0,
	-2, 0, 0, 0, 0, 947, 0, 0, 0, 581,
	585, 23, 669, 0, 724, 468, 0, 469, 520, 477,
	478, 723, 1069, 502, 503, 723, 520, 520, 523, 0,
	534, 0, 930, 361, 391, 0, 1078, 1079, 0, 0,
	1085, 1094, 921, 1150, 0, 1094, 0, 0, 1096, 1097,
	362, 0, 0, 397, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 1541, 1540, 1540, 0, 372, 373, 0,
	376, 0, 0, 0, 0, 0, 0, 0, 1540, 1540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1040, 0, 0, 0, 0, 0, 0, 0, 1055,
	1056, 851, 1540, 0, 0, 0, 417, 859, 0, 0,
	0, 0, 0, 0, 756, 0, 0, 755, 0, 0,
	0, 0, 0, 668, 790, 0, 792, 793, 767, -2,
	0, 736, 772, 1402, 215, 216, 0, 0, 221, 239,
	241, 0, 0, 0, 240, 242, 246, 247, 296, 299,
	301, 657, 0, 0, 0, 968, 0, 573, 721, 726,
	733, 796, 798, 91, 729, 721, 0, 78, 19, 77,
	69, 70, 0, 19, 0, 0, 0, 0, 1525, 1524,
	1510, 0, 1511, 1522, 1527, 0, 1530, 0, 645, 0,
	0, 625, 627, 0, 0, 625, 0, 0, 634, 0,
	0, 625, 660, 0, 0, 542, 101, 350, 0, 0,
	0, 0, 0, 562, 0, 879, 135, 0, 0, 155,
	0, 0, 939, 0, 941, 1401, 1427, 1429, 0, 1436,
	1432, 1198, 1206, 1219, 0, 0, 1225, 1237, 1237, 0,
	1228, 1523, 1523, 1231, 1519, 1521, 1519, 1237, 1237, 0,
	92, 0, 0, 1289, 0, 0, 0, 621, 0, 0,
	0, 1258, 1260, 1265, 1261, 1266, 1260, 1260, 1260, 1260,
	1271, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1256,
	630, 645, 673, 674, 679, 680, 0, 271, 0, 0,
	825, 0, 0, 0, 838, 0, 855, 852, 853, 854,
	0, 869, 418, 419, 420, 421, 0, 0, 0, 873,
	0, 862, 0, 912, 913, 914, 915, 916, -2, 925,
	0, 0, 1071, 1071, 1071, 955, 0, 946, 633, 0,
	-2, 0, 0, 583, 0, 0, 764, 471, 723, 495,
	0, 511, 723, 723, 520, 538, 0, 360, 366, 392,
	0, 391, -2, 1084, 1109, 1095, 1109, 1151, 1109, 1109,
	921, 0, 395, 396, 398, 0, 400, 0, 0, 0,
	365, 394, 368, 377, 378, 379, 380, 0, 0, 0,
	375, 385, 386, 387, 388, 1017, 1018, 1019, 1022, 1023,
	1024, 1025, 0, 0, 1028, 1029, 1030, 1031, 1032, 1106,
	1107, 1108, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1057,
	1058, 1059, 1060, 1061, 1062, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 0, 0, 1052, 0, 855, 0, 0,
	0, 0, 869, 861, 0, 863, 864, 0, 0, 604,
	723, 289, 0, 759, 753, 0, 742, 757, 758, 745,
	0, 747, 0, 743, 744, 723, 735, 766, 791, 768,
	771, 773, 774, 780, 0, 0, 0, 0, 218, 219,
	220, 227, 0, 437, 233, 688, 1068, 565, 566, 969,
	970, 571, 719, 0, 0, 719, 73, 76, 0, 71,
	0, 0, 0, 0, 63, 61, 1518, 0, 0, 647,
	115, 0, 0, 0, 623, 0, 628, 625, 610, 619,
	609, 616, 617, 636, 625, 601, 600, 1121, 325, 0,
	876, 135, 140, 141, 142, 136, 134, 883, 0, 885,
	0, 937, 941, 0, 0, 1433, 1224, 1207, 1226, 1238,
	1239, 1227, 1208, 1229, 1230, 1232, 1233, 1234, 1235, 1236,
	1209, 1285, 0, 1287, 1295, 1296, 0, 1345, 1349, 0,
	0, 0, 1264, 1267, 1268, 1269, 1270, 1272, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 675, 1257, 0, 647, 685,
	686, 813, 816, 822, 824, 0, 835, 0, 842, 843,
	0, 0, 846, 847, 857, 0, 0, 0, 423, 424,
	0, 0, 0, 436, 432, 433, 434, 414, 868, 859,
	0, 926, 1540, 1540, 1540, 0, 0, 1072, 1073, 1075,
	1076, 1077, 0, 0, 958, 0, 0, 949, 0, 789,
	0, 0, 723, 582, 585, 586, 667, 472, 723, 515,
	512, 723, 357, 393, 367, 1111, -2, 1124, 1126, 0,
	931, 1129, 1130, 0, 0, 0, 0, 0, 0, 1172,
	1138, 0, 0, 1142, 1143, 1144, 0, 0, 1451, 1452,
	0, 1149, 0, 1110, 0, 1098, 1110, 0, 0, 1109,
	0, 399, 401, 404, 405, 402, 1146, 0, 403, 1020,
	1021, 0, 1026, 1027, 0, 1051, 0, 0, 406, 0,
	0, 0, 407, 412, 860, 0, 865, 866, 675, 0,
	0, 739, 760, 0, 0, 740, 0, 741, 746, 748,
	288, 775, 0, 0, 777, 778, 779, 770, 235, 709,
	0, 0, 730, 710, 0, 19, 0, 0, 66, 1528,
	1531, 649, 0, 646, 116, 0, 0, 0, 0, 624,
	608, 599, 137, 132, 884, 118, 940, 942, 938, 0,
	1297, 0, 1260, 1259, 1253, 0, 649, 0, 841, 839,
	856, 845, 0, 870, 871, 0, 425, 426, 0, 429,
	435, 858, 0, 0, 0, 0, 918, -2, 0, 0,
	-2, 961, 0, 956, 0, 948, 0, 951, 723, 723,
	-2, 579, 584, 0, 496, 516, 1125, 1127, 1128, 1131,
	1132, 1065, 1066, 1133, 1177, 1178, 1179, 0, 0, 1136,
	1174, 1175, 1176, 1137, 0, 0, 0, 0, 1449, 1450,
	1170, 0, 0, 0, 0, 0, 0, 0, 1092, 1147,
	1540, 370, 1050, 1053, 1054, 411, 408, 409, 605, 670,
	290, 291, 761, 0, 754, 784, 781, 0, 0, 720,
	722, 67, 72, 0, 0, 651, 0, 648, 0, 642,
	644, 126, 613, 88, 109, 0, 1286, 1336, 1263, 0,
	1254, 0, 1248, 1249, 1250, 1255, 651, 0, 0, 0,
	422, 427, 0, 430, 431, 0, 907, 1519, 0, 927,
	928, 929, 971, -2, 1014, 0, 1074, 933, 118, 971,
	952, 0, 959, 0, 957, 950, 675, 580, 1134, 1135,
	0, 0, 1352, 1540, 1165, 0, 0, 0, 1099, 1101,
	1102, 1103, 1104, 1105, 1100, 0, 0, 0, 1091, 1093,
	0, 1540, 287, 0, 0, 785, 787, 782, 783, 62,
	64, 79, 0, 650, 117, 0, 80, 0, 106, 0,
	119, 120, 0, 0, 0, 0, 1262, 1251, 0, 0,
	0, 0, 0, 1453, 1454, 1455, 0, 640, 0, 840,
	848, 0, 850, 428, 900, 0, 681, 0, 973, 0,
	930, 1016, 1540, 935, 973, 944, 0, 954, 0, 963,
	0, 960, 670, 1173, 0, 1141, 0, 1153, 1166, 0,
	0, 900, 900, 900, 900, 0, 369, 0, 762, 776,
	0, 0, 0, 89, 93, 0, 115, 112, 0, 121,
	0, 0, 0, 0, 0, 1240, 0, 0, 0, 1244,
	1245, 1246, 1247, 0, 849, 899, 908, 909, 681, 932,
	0, 1010, 1015, 0, 934, 953, 962, 0, 965, 578,
	1139, 1145, 1152, 1154, 1155, 0, 1167, 1168, 1169, 1171,
	1080, 0, 1082, 0, 1086, 0, 1088, 0, 0, 371,
	786, 788, 0, 653, 643, 82, 0, 0, 110, 111,
	113, 0, 122, 0, 124, 125, 0, 1241, 1242, 1243,
	829, 901, 1540, 0, 0, 905, 906, 910, 0, 998,
	0, 0, 1004, 0, 1011, 1020, 964, 1140, 1156, 0,
	1157, 0, 0, 0, 900, 900, 900, 900, 1090, 652,
	0, 943, 0, 94, 0, 96, 98, 99, 1112, 107,
	108, 114, 123, 1252, 0, 903, 0, 974, 0, 976,
	0, 0, 0, 0, 0, 1008, 0, 1158, 1160, 1161,
	0, 0, 1159, 1081, 1083, 1087, 1089, 654, 83, 84,
	0, 95, 0, 0, 902, 904, 0, 978, 0, 999,
	0, 0, 0, 0, 0, 0, 0, 1162, 1164, 1163,
	0, 0, 97, 1113, 975, 972, 0, 1010, 1000, 0,
	1002, 0, 0, 0, 0, 85, 86, 87, 0, 0,
	980, 0, 996, 1001, 1003, 1005, 0, 1009, 1007, 1114,
	979, 0, 992, 977, 0, 1006, 981, -2, 0, 997,
	982, -2, 0, 990, 0, 0, 983, 991, 0, 986,
	0, 0, 0, 985, 0, -2, 993, 0, 0, 987,
	-2, 0, 995, 994,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 102, 3, 3, 3, 133, 125, 3,
	73, 74, 130, 128, 143, 129, 142, 131, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 576, 575,
	112, 111, 113, 3, 577, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 135, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 578, 124, 579, 136,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 103, 104,
	105, 106, 107, 108, 109, 110, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 126, 127, 132, 134,
	137, 138, 139, 140, 141, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:724
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:731
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:737
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:745
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:751
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:755
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:770
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:774
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:780
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:785
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:789
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:821
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:828
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:848
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:854
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:861
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:869
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:875
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:884
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:894
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:902
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:910
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:918
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:928
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:936
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:946
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:953
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:962
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:972
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:976
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:982
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:986
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:992
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1001
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1011
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1015
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1021
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1030
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1034
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1040
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1061
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1074
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1085
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1091
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1095
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1101
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1108
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1116
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1120
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1134
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1138
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1142
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1147
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1151
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1155
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1161
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1170
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1181
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1185
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1191
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1195
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1201
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1205
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1211
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1235
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1254
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1258
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1262
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1267
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1271
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1278
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1286
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1293
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1298
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1305
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1310
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1314
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1338
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1342
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1348
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1354
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1372
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1389
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1412
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1416
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1420
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1425
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1429
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1435
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1448
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1459
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1472
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1476
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1486
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1499
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1512
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1518
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1524
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1531
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1539
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1548
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1552
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1556
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1560
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1564
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1568
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1575
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1579
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1585
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1592
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1601
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1605
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1611
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1615
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1619
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1623
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1627
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1631
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1635
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1639
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1643
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1647
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1651
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1655
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1659
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1663
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1667
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1671
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1675
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1679
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1683
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1687
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1691
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1695
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1699
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1703
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1707
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1711
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1715
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1719
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1723
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1727
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1731
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1735
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1739
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1743
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1747
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1751
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1755
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1759
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1763
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1767
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1779
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1783
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1787
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1791
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1795
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1799
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1803
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1807
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1820
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1827
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1834
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1844
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1848
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1854
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1861
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1869
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1873
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1877
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1881
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1887
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1891
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1897
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1904
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1911
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1920
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1950
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1954
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1958
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1964
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1970
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1974
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1981
		{
			yyVAL.str = yyDollar[3].str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1987
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1991
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1997
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2005
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2014
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2023
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2031
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2039
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2062
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2085
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2092
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2099
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2107
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2114
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2121
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2130
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2134
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2138
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2144
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2148
		{
			yyVAL.str = yyDollar[1].str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2154
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2158
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2164
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2168
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2179
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2185
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2190
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2194
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2198
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2202
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2206
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2210
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2214
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2218
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2222
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2228
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2232
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2236
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2240
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2245
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2250
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2256
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2263
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2269
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2276
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2283
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2293
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2300
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2311
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2322
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2326
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2332
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2342
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2348
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2352
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2358
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2364
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2368
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2372
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2376
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2382
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2394
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2400
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2404
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2410
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2414
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2420
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2426
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2437
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2443
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2447
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2451
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2455
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2459
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2463
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2471
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2479
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2489
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2530
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2534
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2540
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2546
		{
			yyVAL.str = yyDollar[1].str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2551
		{
			yyVAL.str = "true"
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2552
		{
			yyVAL.str = "false"
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2553
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2558
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2573
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2584
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2593
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2597
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2603
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2610
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2614
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2618
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2622
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2626
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[2].columnTableDefUnion(),
					Pos:    yyDollar[3].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2635
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[3].columnTableDefUnion(),
					Pos:    yyDollar[4].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2644
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2650
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2654
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2658
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2662
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2666
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2670
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2674
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2678
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2707
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: -1,
			}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2713
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: 0,
			}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2719
		{
			yyLOCAL = &tree.AlterColPos{
				PreColName: yyDollar[2].unresolvedNameUnion(),
				Pos:        -2,
			}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2729
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2737
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2744
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2751
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2758
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2765
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2772
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2780
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2787
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2794
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2803
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2807
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2814
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2826
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2834
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2842
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2855
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2861
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2872
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2883
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2887
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2892
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2896
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2901
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2905
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2921
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2925
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2929
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2933
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2937
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2941
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2945
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2949
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2953
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2957
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2961
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2965
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2969
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2973
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2977
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2981
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2987
		{
			yyVAL.item = nil
		}
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2992
		{
			yyVAL.item = nil
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3031
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3036
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3040
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3044
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3053
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3057
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3063
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3068
		{
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3072
		{
		}
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3077
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3087
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3097
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3105
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3111
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3117
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3123
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3129
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3135
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3141
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3150
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3154
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3158
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3162
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3166
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3170
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3174
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3178
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3184
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3191
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3201
		{
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3203
		{
		}
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3212
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3222
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3231
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3235
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3239
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3245
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3251
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3257
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3263
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3272
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3282
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3294
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3298
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3304
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3316
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3330
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3336
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3343
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3348
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3352
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3356
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3361
		{
			yyVAL.str = ""
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3365
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3371
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3384
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3388
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3394
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3399
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3403
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3407
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3413
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3419
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3423
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3429
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3435
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3439
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3443
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3449
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3453
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3476
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3485
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3494
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3503
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3507
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3513
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3522
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3531
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3541
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3547
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3553
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3557
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3563
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3569
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3578
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3585
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3596
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3601
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3608
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3624
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3637
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3648
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3652
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3658
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3663
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3670
		{
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3672
		{
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3675
		{
		}
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3684
		{
		}
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3688
		{
		}
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3693
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3702
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3709
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3715
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3723
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3730
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3737
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3757
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3767
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3771
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3777
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3784
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3790
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3798
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3805
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3812
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3831
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3835
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3840
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3844
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3848
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3854
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3863
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3867
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3873
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3877
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3883
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3887
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3893
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3898
		{
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3902
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3909
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3913
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3920
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3925
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3929
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3935
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3939
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3945
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3949
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3954
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3958
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3971
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3978
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3985
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4003
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4022
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4028
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4035
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4039
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4052
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4056
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4061
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4065
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4072
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4077
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4084
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4090
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4094
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4098
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4102
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4106
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4110
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4116
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4123
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4132
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4136
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4142
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4150
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4154
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4159
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4163
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4169
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4173
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4177
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4182
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4186
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4192
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4198
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4202
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4208
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4213
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4217
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4221
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4226
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4230
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4234
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4239
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4243
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4251
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4255
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4259
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4273
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4277
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4287
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4297
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4307
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4319
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4327
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4335
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4344
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4352
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4360
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4368
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4376
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4384
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4392
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4400
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4408
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4418
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4429
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4443
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4447
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4451
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4456
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4460
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4464
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4473
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4477
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4482
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4486
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4491
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4495
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4501
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4505
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4511
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4515
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4520
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4524
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4529
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4537
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4543
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4551
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4559
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4569
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4575
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4584
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4593
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4602
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4612
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4616
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4626
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4630
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4634
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4638
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4644
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4654
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4658
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4664
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4670
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4674
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4680
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4686
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4690
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4694
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4700
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4704
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4710
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4714
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4720
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4724
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4730
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4734
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4744
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4757
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4763
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4769
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4782
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4793
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4800
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4804
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4810
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4820
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4824
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4828
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4833
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4837
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4841
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4845
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4850
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4854
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4858
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4862
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4866
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4871
		{
			yyVAL.str = ""
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4875
		{
			yyVAL.str = yyDollar[1].str
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4879
		{
			yyVAL.str = yyDollar[2].str
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4885
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4891
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4895
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4899
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4903
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4907
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4913
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 813:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4946
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4956
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4962
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 816:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4968
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4978
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4983
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4989
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4996
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5000
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5006
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5012
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5017
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5021
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5025
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5029
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5036
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5048
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5053
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5059
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5066
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5070
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5076
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5082
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5086
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5090
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5096
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5102
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5108
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5119
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5131
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5137
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5147
		{
			yyVAL.str = yyDollar[1].str
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5151
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5157
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5164
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5170
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5178
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5184
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5191
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5198
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5206
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5212
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5221
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5233
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5244
		{
			yyVAL.str = ""
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5248
		{
			yyVAL.str = yyDollar[2].str
		}
	case 861:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5254
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5264
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5268
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5274
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5280
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5286
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5295
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5304
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5309
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5315
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5323
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5429
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5433
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5439
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5449
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5453
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5459
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5469
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5473
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5477
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5482
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5486
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5492
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5499
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5505
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5514
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5521
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5530
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5534
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5540
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5554
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5558
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5562
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5567
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5571
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5575
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5579
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5585
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5604
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5608
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5630
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5634
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5638
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5642
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5646
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5652
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5656
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5662
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5667
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5672
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5676
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5680
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5684
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5688
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5694
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5705
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5709
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5719
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5723
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5728
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5732
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5738
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5742
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5748
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5752
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5756
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5761
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5765
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5771
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5783
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5792
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5805
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5812
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5822
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5830
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5841
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5845
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5850
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5854
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5861
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5872
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5885
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5899
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5907
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5914
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5921
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5928
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5935
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5939
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5943
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5947
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5951
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5958
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5965
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5969
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5976
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5983
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5987
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5994
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6001
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6008
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6015
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6019
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6024
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6028
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6032
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6037
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6041
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6051
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6055
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6062
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6069
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6073
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6082
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6086
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6092
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6096
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6102
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6111
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6121
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6125
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6131
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6135
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6141
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6148
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6157
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6161
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6166
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6170
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6175
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6179
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6184
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6188
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6198
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6202
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6213
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6221
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6229
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6237
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6248
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6257
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6267
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6277
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6281
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6286
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6290
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6295
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6299
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6305
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6309
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6313
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6319
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6323
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6327
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6331
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6335
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6339
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6343
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6348
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6352
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6356
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6360
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6364
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6368
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6372
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6376
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6380
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6384
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6388
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6392
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6396
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6400
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6404
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6408
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6412
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6416
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6420
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6424
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6428
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6432
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6436
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6440
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6444
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6448
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6452
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6456
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6462
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6466
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6472
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6478
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6482
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6488
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6492
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6496
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6500
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6504
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6508
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6522
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6526
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6535
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6540
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6546
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6553
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6557
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6563
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6567
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6571
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6577
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6581
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6587
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6596
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6605
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6628
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6653
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6667
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6673
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6682
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6691
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6700
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6709
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6719
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6727
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6733
		{
			yyVAL.str = ""
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6737
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6747
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6753
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6759
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6778
		{
			yyVAL.str = ""
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6782
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6788
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6794
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6798
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6802
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6808
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6812
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6816
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6820
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6826
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6830
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6834
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6839
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6843
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6849
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6853
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6859
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6863
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6867
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6871
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6875
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6879
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6884
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6888
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6892
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6896
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6900
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6904
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6908
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6912
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6916
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6920
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6933
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6937
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6941
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6945
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6951
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6955
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6960
		{
			yyVAL.str = ""
		}
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6964
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6970
		{
			yyVAL.str = ""
		}
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6974
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1152:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6980
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6992
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6999
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7006
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7013
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7020
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7029
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7035
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7041
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7045
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7049
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7053
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7057
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7062
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7069
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7073
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7077
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7082
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7086
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7091
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7095
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7111
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7117
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7121
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7125
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7129
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7133
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7137
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7141
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7145
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7149
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7153
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7157
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7161
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7165
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7171
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7175
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7179
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7183
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7187
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7191
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7195
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7199
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7203
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7207
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7211
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7215
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7220
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7228
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7233
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7237
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7246
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7250
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7254
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7258
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7262
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7268
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7276
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7284
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7297
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7302
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7306
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7312
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7316
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7322
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7331
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7343
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7360
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7377
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7390
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7403
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7415
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7429
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7444
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7459
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7476
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7491
		{
		}
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7498
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7502
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7506
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7512
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7516
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7520
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7524
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7530
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7534
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7538
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7544
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7552
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7562
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7566
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7573
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7578
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7582
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7587
		{
			yyVAL.str = ","
		}
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7591
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1260:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7596
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7603
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7629
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7640
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7650
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7659
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7668
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7678
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7688
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7698
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7708
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7718
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7728
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7738
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7748
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7758
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7768
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7778
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7788
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7805
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7813
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7821
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7829
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7837
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7847
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7855
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7864
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7872
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7880
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7888
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7896
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7907
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7917
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7929
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7940
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7962
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7998
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8010
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8022
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8033
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8041
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8048
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8055
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8067
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8075
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8085
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8095
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8103
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8114
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8123
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8132
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8140
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8150
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8158
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8172
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8178
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8182
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8201
		{
		}
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8203
		{
		}
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8244
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8255
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8259
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8263
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8269
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8274
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8278
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8284
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8288
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8295
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8299
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8303
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8311
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8315
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8319
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8323
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8329
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8333
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8337
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8341
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8345
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8349
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8353
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8357
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8361
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8365
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8373
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8377
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8381
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8385
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8389
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8393
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8397
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8401
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8405
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8409
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8415
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8419
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8425
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8429
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8436
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8440
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8444
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8450
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8454
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8458
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8462
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8466
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8470
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8474
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8480
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8484
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8488
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8492
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8498
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8511
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8516
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8522
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8526
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8539
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8544
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8548
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8552
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8556
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8560
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8564
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8578
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8582
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8589
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8600
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8605
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8611
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8623
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8635
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8647
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8660
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8673
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8686
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8699
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8712
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8725
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8738
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8751
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8764
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8777
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8792
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8819
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8861
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8897
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8933
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8950
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8962
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8982
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9002
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9022
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9038
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9051
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9064
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9077
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9090
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9102
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9114
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9126
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9138
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9150
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9162
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9174
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9186
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9198
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9211
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9224
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9239
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9247
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9256
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9266
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9289
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9294
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9300
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9307
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9311
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9316
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9320
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9326
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9332
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9339
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9346
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9355
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9362
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9369
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9378
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9382
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9386
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9392
		{
		}
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9394
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9404
		{
			yyVAL.str = ""
		}
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9408
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
